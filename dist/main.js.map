{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/standardized-audio-context/build/es2019/globals.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack:///./node_modules/standardized-audio-context/build/es2019/constants.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack:///./node_modules/standardized-audio-context/build/es2019/module.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack:///./node_modules/automation-events/build/es5/bundle.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack:///./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack:///./node_modules/standardized-audio-context/build/es2019/interfaces/index.js","webpack:///./node_modules/standardized-audio-context/build/es2019/types/index.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/tone/build/esm/core/util/Debug.js","webpack:///./node_modules/tone/build/esm/core/util/TypeCheck.js","webpack:///./node_modules/tone/build/esm/core/context/AudioContext.js","webpack:///./node_modules/tone/build/esm/core/clock/Ticker.js","webpack:///./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","webpack:///./node_modules/tone/build/esm/core/util/Defaults.js","webpack:///./node_modules/tone/build/esm/core/Tone.js","webpack:///./node_modules/tone/build/esm/version.js","webpack:///./node_modules/tone/build/esm/core/util/Math.js","webpack:///./node_modules/tone/build/esm/core/util/Timeline.js","webpack:///./node_modules/tone/build/esm/core/context/ContextInitialization.js","webpack:///./node_modules/tone/build/esm/core/util/Emitter.js","webpack:///./node_modules/tone/build/esm/core/context/BaseContext.js","webpack:///./node_modules/tone/build/esm/core/context/Context.js","webpack:///./node_modules/tone/build/esm/core/context/DummyContext.js","webpack:///./node_modules/tone/build/esm/core/util/Interface.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","webpack:///./node_modules/tone/build/esm/core/context/OfflineContext.js","webpack:///./node_modules/tone/build/esm/core/Global.js","webpack:///./node_modules/tone/build/esm/core/type/Conversions.js","webpack:///./node_modules/tone/build/esm/core/type/TimeBase.js","webpack:///./node_modules/tone/build/esm/core/type/Time.js","webpack:///./node_modules/tone/build/esm/core/type/Frequency.js","webpack:///./node_modules/tone/build/esm/core/type/TransportTime.js","webpack:///./node_modules/tone/build/esm/core/context/ToneWithContext.js","webpack:///./node_modules/tone/build/esm/core/util/StateTimeline.js","webpack:///./node_modules/tone/build/esm/core/context/Param.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioNode.js","webpack:///./node_modules/tone/build/esm/core/context/Gain.js","webpack:///./node_modules/tone/build/esm/source/OneShotSource.js","webpack:///./node_modules/tone/build/esm/signal/ToneConstantSource.js","webpack:///./node_modules/tone/build/esm/signal/Signal.js","webpack:///./node_modules/tone/build/esm/core/clock/TickParam.js","webpack:///./node_modules/tone/build/esm/core/clock/TickSignal.js","webpack:///./node_modules/tone/build/esm/core/clock/TickSource.js","webpack:///./node_modules/tone/build/esm/core/clock/Clock.js","webpack:///./node_modules/tone/build/esm/core/util/TimelineValue.js","webpack:///./node_modules/tone/build/esm/core/type/Ticks.js","webpack:///./node_modules/tone/build/esm/core/util/IntervalTimeline.js","webpack:///./node_modules/tone/build/esm/core/clock/TransportEvent.js","webpack:///./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","webpack:///./node_modules/tone/build/esm/core/clock/Transport.js","webpack:///./node_modules/tone/build/esm/core/context/Delay.js","webpack:///./node_modules/tone/build/esm/component/channel/Volume.js","webpack:///./node_modules/tone/build/esm/core/context/Destination.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","webpack:///./node_modules/tone/build/esm/core/type/Midi.js","webpack:///./node_modules/tone/build/esm/core/util/Draw.js","webpack:///./node_modules/tone/build/esm/source/Source.js","webpack:///./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","webpack:///./node_modules/tone/build/esm/source/Noise.js","webpack:///./node_modules/tone/build/esm/source/UserMedia.js","webpack:///./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","webpack:///./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","webpack:///./node_modules/tone/build/esm/source/oscillator/Oscillator.js","webpack:///./node_modules/tone/build/esm/signal/SignalOperator.js","webpack:///./node_modules/tone/build/esm/signal/WaveShaper.js","webpack:///./node_modules/tone/build/esm/signal/AudioToGain.js","webpack:///./node_modules/tone/build/esm/signal/Multiply.js","webpack:///./node_modules/tone/build/esm/source/oscillator/AMOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/FMOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/FatOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","webpack:///./node_modules/tone/build/esm/signal/Add.js","webpack:///./node_modules/tone/build/esm/signal/Scale.js","webpack:///./node_modules/tone/build/esm/signal/Zero.js","webpack:///./node_modules/tone/build/esm/source/oscillator/LFO.js","webpack:///./node_modules/tone/build/esm/core/util/Decorator.js","webpack:///./node_modules/tone/build/esm/source/buffer/Player.js","webpack:///./node_modules/tone/build/esm/signal/Abs.js","webpack:///./node_modules/tone/build/esm/source/buffer/Players.js","webpack:///./node_modules/tone/build/esm/source/buffer/GrainPlayer.js","webpack:///./node_modules/tone/build/esm/signal/GainToAudio.js","webpack:///./node_modules/tone/build/esm/signal/Negate.js","webpack:///./node_modules/tone/build/esm/signal/Subtract.js","webpack:///./node_modules/tone/build/esm/signal/GreaterThanZero.js","webpack:///./node_modules/tone/build/esm/signal/GreaterThan.js","webpack:///./node_modules/tone/build/esm/signal/Pow.js","webpack:///./node_modules/tone/build/esm/signal/ScaleExp.js","webpack:///./node_modules/tone/build/esm/component/envelope/Envelope.js","webpack:///./node_modules/tone/build/esm/signal/SyncedSignal.js","webpack:///./node_modules/tone/build/esm/instrument/Instrument.js","webpack:///./node_modules/tone/build/esm/instrument/Monophonic.js","webpack:///./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","webpack:///./node_modules/tone/build/esm/instrument/Synth.js","webpack:///./node_modules/tone/build/esm/instrument/ModulationSynth.js","webpack:///./node_modules/tone/build/esm/component/filter/Filter.js","webpack:///./node_modules/tone/build/esm/instrument/AMSynth.js","webpack:///./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js","webpack:///./node_modules/tone/build/esm/instrument/MonoSynth.js","webpack:///./node_modules/tone/build/esm/instrument/MetalSynth.js","webpack:///./node_modules/tone/build/esm/instrument/DuoSynth.js","webpack:///./node_modules/tone/build/esm/instrument/FMSynth.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioWorklet.js","webpack:///./node_modules/tone/build/esm/instrument/MembraneSynth.js","webpack:///./node_modules/tone/build/esm/instrument/NoiseSynth.js","webpack:///./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js","webpack:///./node_modules/tone/build/esm/component/filter/OnePoleFilter.js","webpack:///./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js","webpack:///./node_modules/tone/build/esm/event/ToneEvent.js","webpack:///./node_modules/tone/build/esm/instrument/PluckSynth.js","webpack:///./node_modules/tone/build/esm/instrument/PolySynth.js","webpack:///./node_modules/tone/build/esm/instrument/Sampler.js","webpack:///./node_modules/tone/build/esm/event/Loop.js","webpack:///./node_modules/tone/build/esm/event/Part.js","webpack:///./node_modules/tone/build/esm/event/PatternGenerator.js","webpack:///./node_modules/tone/build/esm/event/Pattern.js","webpack:///./node_modules/tone/build/esm/event/Sequence.js","webpack:///./node_modules/tone/build/esm/component/channel/CrossFade.js","webpack:///./node_modules/tone/build/esm/effect/Effect.js","webpack:///./node_modules/tone/build/esm/effect/LFOEffect.js","webpack:///./node_modules/tone/build/esm/component/channel/Panner.js","webpack:///./node_modules/tone/build/esm/effect/AutoFilter.js","webpack:///./node_modules/tone/build/esm/component/analysis/Follower.js","webpack:///./node_modules/tone/build/esm/effect/AutoPanner.js","webpack:///./node_modules/tone/build/esm/effect/BitCrusher.js","webpack:///./node_modules/tone/build/esm/effect/AutoWah.js","webpack:///./node_modules/tone/build/esm/component/channel/Split.js","webpack:///./node_modules/tone/build/esm/effect/Chebyshev.js","webpack:///./node_modules/tone/build/esm/component/channel/Merge.js","webpack:///./node_modules/tone/build/esm/effect/StereoEffect.js","webpack:///./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js","webpack:///./node_modules/tone/build/esm/effect/FeedbackEffect.js","webpack:///./node_modules/tone/build/esm/effect/Chorus.js","webpack:///./node_modules/tone/build/esm/effect/Distortion.js","webpack:///./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js","webpack:///./node_modules/tone/build/esm/effect/FeedbackDelay.js","webpack:///./node_modules/tone/build/esm/effect/Freeverb.js","webpack:///./node_modules/tone/build/esm/effect/FrequencyShifter.js","webpack:///./node_modules/tone/build/esm/effect/JCReverb.js","webpack:///./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js","webpack:///./node_modules/tone/build/esm/component/channel/MidSideSplit.js","webpack:///./node_modules/tone/build/esm/effect/PingPongDelay.js","webpack:///./node_modules/tone/build/esm/effect/PitchShift.js","webpack:///./node_modules/tone/build/esm/effect/Phaser.js","webpack:///./node_modules/tone/build/esm/effect/Reverb.js","webpack:///./node_modules/tone/build/esm/component/channel/MidSideMerge.js","webpack:///./node_modules/tone/build/esm/effect/MidSideEffect.js","webpack:///./node_modules/tone/build/esm/component/analysis/Analyser.js","webpack:///./node_modules/tone/build/esm/effect/StereoWidener.js","webpack:///./node_modules/tone/build/esm/effect/Tremolo.js","webpack:///./node_modules/tone/build/esm/effect/Vibrato.js","webpack:///./node_modules/tone/build/esm/component/analysis/MeterBase.js","webpack:///./node_modules/tone/build/esm/component/channel/Solo.js","webpack:///./node_modules/tone/build/esm/component/analysis/Meter.js","webpack:///./node_modules/tone/build/esm/component/analysis/FFT.js","webpack:///./node_modules/tone/build/esm/component/analysis/DCMeter.js","webpack:///./node_modules/tone/build/esm/component/analysis/Waveform.js","webpack:///./node_modules/tone/build/esm/component/channel/PanVol.js","webpack:///./node_modules/tone/build/esm/component/channel/MultibandSplit.js","webpack:///./node_modules/tone/build/esm/component/channel/Channel.js","webpack:///./node_modules/tone/build/esm/core/context/Listener.js","webpack:///./node_modules/tone/build/esm/component/channel/Panner3D.js","webpack:///./node_modules/tone/build/esm/component/channel/Recorder.js","webpack:///./node_modules/tone/build/esm/component/dynamics/Compressor.js","webpack:///./node_modules/tone/build/esm/index.js","webpack:///./node_modules/tone/build/esm/component/dynamics/Gate.js","webpack:///./node_modules/tone/build/esm/component/dynamics/Limiter.js","webpack:///./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js","webpack:///./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js","webpack:///./node_modules/tone/build/esm/component/filter/EQ3.js","webpack:///./node_modules/tone/build/esm/component/filter/Convolver.js","webpack:///./src/scripts/looper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","WeakMap","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","BACKUP_NATIVE_CONTEXT_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","assignNativeAudioNodeOptions","nativeAudioNode","options","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isOwnedByContext","nativeContext","context","assignNativeAudioNodeOption","option","undefined","assignNativeAudioNodeAudioParamValue","audioParam","getNativeAudioNode","audioNode","createInvalidStateError","DOMException","err","code","getAudioNodeConnections","getValueForKey","map","Error","createNotSupportedError","interceptConnections","original","interceptor","connect","disconnect","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","cacheTestResult","Map","window","nativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","nativeAudioContextConstructor","getBackupNativeContext","createNativeAudioNode","createNativeAnalyserNode","getAudioNodeRenderer","renderInputsOfAudioNode","createAnalyserNodeRenderer","auxiliaryGainNodeStore","getNativeContext","audioParamAudioNodeStore","eventTargetConstructor","isNativeAudioContext","isNativeAudioNode","isNativeAudioParam","audioNodeConstructor","analyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","convertNumberToUnsignedLong","Uint32Array","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","createNativeGainNode","addSilentConnection","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","renderInputsOfAudioParam","connectAudioParam","createNativeAudioBufferSourceNode","renderAutomation","createAudioBufferSourceNodeRenderer","createAudioParam","audioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createNativeBiquadFilterNode","createBiquadFilterNodeRenderer","biquadFilterNodeConstructor","monitorConnections","wrapChannelMergerNode","createNativeChannelMergerNode","createChannelMergerNodeRenderer","channelMergerNodeConstructor","createNativeChannelSplitterNode","createChannelSplitterNodeRenderer","channelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","createNativeConstantSourceNode","createConstantSourceNodeRenderer","constantSourceNodeConstructor","createNativeConvolverNodeFaker","createNativeConvolverNode","createConvolverNodeRenderer","convolverNodeConstructor","createNativeDelayNode","createDelayNodeRenderer","delayNodeConstructor","createNativeDynamicsCompressorNode","createDynamicsCompressorNodeRenderer","dynamicsCompressorNodeConstructor","createGainNodeRenderer","gainNodeConstructor","createNativeScriptProcessorNode","createNativeIIRFilterNodeFaker","renderNativeOfflineAudioContext","createIIRFilterNodeRenderer","createNativeIIRFilterNode","iIRFilterNodeConstructor","createAudioListener","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","createNativeWaveShaperNode","createNativePannerNodeFaker","createNativePannerNode","createPannerNodeRenderer","pannerNodeConstructor","createNativePeriodicWave","periodicWaveConstructor","nativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createStereoPannerNodeRenderer","stereoPannerNodeConstructor","createWaveShaperNodeRenderer","waveShaperNodeConstructor","isSecureContext","exposeCurrentFrameAndCurrentTime","addAudioWorkletModule","isNativeContext","decodeAudioData","baseAudioContextConstructor","createNativeMediaElementAudioSourceNode","mediaElementAudioSourceNodeConstructor","createNativeMediaStreamAudioDestinationNode","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioSourceNode","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrackAudioSourceNodeConstructor","audioContextConstructor","getUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","connectMultipleOutputs","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createNativeAudioWorkletNodeFaker","createNativeAudioWorkletNode","nativeAudioWorkletNodeConstructor","createAudioWorkletNodeRenderer","audioWorkletNodeConstructor","createNativeOfflineAudioContext","startRendering","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","testPromiseSupport","uint32Array","promise","buffer","catch","createIndexSizeError","insertElementInSet","set","element","predicate","ignoreDuplicates","lmnt","add","setInternalStateToActive","has","forEach","eventListener","_slicedToArray","_classCallCheck","_createClass","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","floor","upperIndex","ceil","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","this","_automationEvents","_currenTime","_defaultValue","iterator","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","startValue","truncatedAutomationEvent","push","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","factory","isPartOfACycle","getEventListenersOfAudioNode","setInternalStateToPassive","delete","isAudioNodeOutputConnection","outputConnection","isActiveAudioNode","isAudioNode","audioNodeOrAudioParam","nativeAudioNodeOrAudioParam","getAudioParamConnections","getNativeAudioParam","wrapEventListener","event","descriptor","defineProperties","currentTarget","handleEvent","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","start","when","offset","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","stop","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","output","input","fakeNativeDestinationAudioNode","inputs","disconnectNativeAudioNodeFromNativeAudioNode","copyFromChannel","parent","channelNumber","bufferOffset","byteLength","channelData","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","j","createInvalidAccessError","overwriteAccessors","createGetter","createSetter","getPrototypeOf","getOwnPropertyDescriptor","isValidLatencyHint","latencyHint","ReadOnlyMap","parameters","_map","size","entries","callback","thisArg","keys","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","k","computeBufferSize","baseLatency","sampleRate","max","min","round","log2","createUnknownError","isDCCurve","curve","createAbortError","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNodeRenderer","activeInputs","numberOfInputs","Set","outputs","passiveInputs","renderer","createAddAudioParamConnections","audioParamConnectionsStore","audioParamRenderer","createAddSilentConnection","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","destination","removeEventListener","addEventListener","createAddUnrenderedAudioWorkletNode","audioWorkletNode","DEFAULT_OPTIONS","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","createAnalyserNodeConstructor","audionNodeConstructor","mergedOptions","nativeAnalyserNode","super","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getByteTimeDomainData","getFloatFrequencyData","getFloatTimeDomainData","createAnalyserNodeRendererFactory","renderedNativeAnalyserNodes","proxy","nativeOfflineAudioContext","trace","renderedNativeAnalyserNode","Promise","resolve","async","createAnalyserNode","numberOfChannels","createAudioBufferConstructor","testNativeAudioBufferConstructorSupport","AudioBuffer","createBuffer","hasInstance","instance","loop","loopEnd","loopStart","playbackRate","createAudioBufferSourceNodeConstructor","nativeAudioBufferSourceNode","isOffline","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","fill","wrappedListener","onended","nativeOnEnded","resetInternalStateToPassive","setTimeout","createAudioBufferSourceNodeRendererFactory","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioContextConstructor","nativeAudioContext","TypeError","_baseLatency","_nativeAudioContext","_state","state","revokeState","close","then","mediaElement","mediaStream","mediaStreamTrack","reject","resolvePromise","resume","suspend","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","nativeAudioDestinationNodePromise","render","createAudioDestinationNode","createAudioListenerFactory","nativeListener","listener","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","channelMergerNode","scriptProcessorNode","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","onaudioprocess","inputBuffer","orientation","some","setOrientation","positon","setPosition","createFakeAudioParams","createAudioParamFactory","addAudioParamConnections","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","nativeAudioParam","maxValue","minValue","automationEventList","setValueAtTime","currentTime","cancelAndHoldAtTime","flush","previousLastEvent","Array","from","pop","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","setTargetAtTime","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","numberOfOutputs","outputChannelCount","parameterData","processorOptions","createChannelCount","createAudioWorkletNodeConstructor","sanitizedOptions","nodeNameToProcessorConstructorMap","processorConstructor","nativeAudioWorkletNode","nm","_nativeAudioWorkletNode","_onprocessorerror","_parameters","onprocessorerror","nativeOnProcessorError","port","createBaseAudioContextConstructor","_nativeContext","_audioWorklet","addModule","moduleURL","maxDelayTime","real","imag","constraints","disableNormalization","audioData","successCallback","errorCallback","Q","detune","frequency","createBiquadFilterNodeConstructor","nativeBiquadFilterNode","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRendererFactory","renderedNativeAudioNodes","renderedNativeAudioNode","createAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRendererFactory","createConnectAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","nativeConvolverNode","_nativeConvolverNode","normalize","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createCreateNativeOfflineAudioContext","createDataCloneError","createDecrementCycleCounter","cycleCounters","count","cycleCounter","nativeDestinationAudioParam","delayTime","createDelayNodeConstructor","nativeDelayNode","_delayTime","createDelayNodeRendererFactory","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDeleteUnrenderedAudioWorkletNode","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","destinationOrOutput","attack","knee","ratio","release","threshold","createDynamicsCompressorNodeConstructor","nativeDynamicsCompressorNode","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createEncodingError","createEvaluateSource","source","SyntaxError","head","document","script","createElement","blob","Blob","url","URL","createObjectURL","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","revokeObjectURL","message","src","lineno","colno","error","location","href","onload","appendChild","createEventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","dispatchEvent","createExposeCurrentFrameAndCurrentTime","fn","currentFrame","configurable","createFetchSource","response","fetch","ok","text","createGainNodeConstructor","createGainNodeRendererFactory","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGetAudioNodeRenderer","audioNodeConnections","createGetAudioParamRenderer","audioParamConnections","createGetBackupNativeContext","backupNativeContext","bckpNtveCntxt","createGetNativeContext","contextStore","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createIIRFilterNodeRendererFactory","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","ntvCntxt","partialOfflineAudioContext","renderedBuffer","filteredBuffer","filterFullBuffer","createIncrementCycleCounterFactory","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","AudioNode","createIsNativeAudioParam","AudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","createIsSupportedPromise","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","all","every","result","createMediaElementAudioSourceNodeConstructor","nativeMediaElementAudioSourceNode","_mediaElement","_nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioSourceNodeConstructor","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createMinimalAudioContextConstructor","createMinimalBaseAudioContextConstructor","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalOfflineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createMonitorConnections","whenConnected","whenDisconnected","connections","wasDisconnected","connection","wasConnected","apply","clear","isDisconnected","createNativeAudioBufferConstructor","createNativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioDestinationNodeFactory","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioNodeFactory","factoryFunction","createNativeAudioWorkletNodeConstructor","AudioWorkletNode","createNativeBiquadFilterNodeFactory","createBiquadFilter","createNativeChannelMergerNodeFactory","nativeChannelMergerNode","createChannelMerger","createNativeConstantSourceNodeFactory","createConstantSource","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","audioBufferSourceNode","nativeConstantSourceNodeFaker","args","createNativeConvolverNodeFactory","createConvolver","createNativeConvolverNodeFakerFactory","convolverNode","nativeConvolverNodeFaker","createNativeDelayNodeFactory","createDelay","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressor","createNativeGainNodeFactory","createGain","createNativeIIRFilterNodeFactory","divide","a","b","denominator","evaluatePolynomial","coefficient","z","createNativeIIRFilterNodeFakerFactory","bufferSize","bufferIndexes","xBuffers","yBuffers","outputBuffer","nyquist","nativeIIRFilterNodeFaker","omega","PI","cos","sin","sqrt","atan2","createNativeMediaElementAudioSourceNodeFactory","ntvDCntxt","createMediaElementSource","createNativeMediaStreamAudioDestinationNodeFactory","createMediaStreamDestination","createNativeMediaStreamAudioSourceNodeFactory","audioStreamTracks","getAudioTracks","filteredAudioStreamTracks","sort","id","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNodeFactory","createMediaStreamTrackSource","kind","createNativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOscillatorNodeFactory","nativeOscillatorNode","createOscillator","periodicWave","setPeriodicWave","createNativePannerNodeFactory","nativePannerNode","createPanner","orientationX","createNativePannerNodeFakerFactory","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationY","orientationZ","panningModel","refDistance","rolloffFactor","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","oversample","nativePannerNodeFaker","createNativePeriodicWaveFactory","wrappedImag","wrappedReal","createPeriodicWave","createNativeScriptProcessorNodeFactory","numberOfInputChannels","numberOfOutputChannels","createScriptProcessor","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","CURVE_SIZE","channelSplitterNode","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","pan","connectGraph","disconnectGraph","isConnected","createNativeWaveShaperNodeFactory","nativeWaveShaperNode","createWaveShaper","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","outputGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","createOscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createPannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeRendererFactory","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPeriodicWaveConstructor","periodicWaveStore","PeriodicWave","createRenderAutomation","getAudioParamRenderer","replay","createRenderInputsOfAudioNode","nextTrace","filter","includes","reduce","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","createStartRendering","createStereoPannerNodeConstructor","_pan","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioBufferCopyChannelMethodsSubarraySupport","createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","createBufferSource","createTestAudioBufferSourceNodeStartMethodDurationParameterSupport","offlineAudioContext","createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport","createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport","createTestAudioContextCloseMethodSupport","audioContext","isAudioContextClosable","createTestAudioContextDecodeAudioDataMethodTypeErrorSupport","isPending","createTestAudioContextOptionsSupport","createTestAudioNodeConnectMethodSupport","isSupported","createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport","createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport","createTestAudioWorkletProcessorNoOutputsSupport","isCallingProcess","audioWorklet","onmessage","createTestChannelMergerNodeChannelCountSupport","createTestConstantSourceNodeAccurateSchedulingSupport","Number","POSITIVE_INFINITY","createTestConvolverNodeBufferReassignabilitySupport","createTestIsSecureContextSupport","createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","createTestOfflineAudioContextCurrentTimeSupport","createTestStereoPannerNodeDefaultValueSupport","stereoPanner","createWaveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWindow","createWrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","createWrapChannelMergerNode","monitorConnectionsFunction","arrayBuffer","ArrayBuffer","port1","port2","MessageChannel","data","postMessage","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","isAudioWorkletNode","deleteEventListenerOfAudioNode","isPassiveAudioNode","pickElementFromSet","matchingElements","matchingElement","setInternalStateToPassiveWhenNecessary","testAudioNodeDisconnectMethodSupport","analyzer","dummy","ones","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","addActiveInputConnectionToAudioNode","activeInputConnection","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioNode","passiveInputConnections","passiveInputConnection","addPassiveInputConnectionToAudioParam","deletePassiveInputConnectionToAudioNode","matchingConnection","deletePassiveInputConnectionToAudioParam","addConnectionToAudioNodeOfAudioContext","eventListeners","isActive","partialConnection","deleteActiveInputConnectionToAudioNode","addConnectionToAudioParamOfAudioContext","deleteActiveInputConnectionToAudioParam","deleteActiveInputConnection","activeInputConnections","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","createAudioNodeConstructor","addAudioNodeConnections","createIncrementCycleCounter","decrementCycleCounter","detectCycles","_context","_nativeAudioNode","returnValue","connectionsToDestination","filteredConnections","wrapAudioNodeDisconnectMethod","auxiliaryGainNodes","addConnectionToAudioNodeOfOfflineAudioContext","addConnectionToAudioParamOfOfflineAudioContext","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioWorkletProcessorPromise","audioWorkletNodeOptions","onmessageerror","cloneAudioWorkletNodeOptions","createNativeAudioWorkletNodeFakerFactory","sum","numberOfParameters","parameterDescriptors","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","_","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessor","nodeToProcessorMap","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","prmtrs","disconnectOutputsGraph","outputChannelSplitterNodeOutput","outputChannelMergerNode","potentiallyEmptyInputs","activeSourceFlag","process","ErrorEvent","disconnectFakeGraph","connectFakeGraph","createNativeAudioBufferSourceNodeFactory","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodDurationParameterSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","stopTime","actualStartTime","durationInBufferTime","wrapAudioBufferSourceNodeStartMethodDurationParameter","handler","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","replace","match","unresolvedUrl","importStatementWithResolvedUrl","toString","join","verifyParameterDescriptors","isArray","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","createAddAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","credentials","absoluteUrl","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","evaluateAudioWorkletGlobalScope","_AWGS","trim","rslvdRqstsFCntxt","ngngRqstsFCntxt","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","createNativeAnalyserNodeFactory","createAnalyser","byteTimeDomainData","Uint8Array","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createIIRFilterNodeConstructor","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createDetectCycles","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","concat","createDecodeAudioData","detachedArrayBuffers","anyContext","complete","detachArrayBuffer","fail","createNativeAudioWorkletNodeFactory","testClonabilityOfAudioWorkletNodeOptions","processBuffer","processedBuffer","getAudioWorkletProcessor","createAudioWorkletNodeRendererFactory","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","createNativeChannelSplitterNodeFactory","nativeChannelSplitterNode","createChannelSplitter","wrapChannelSplitterNode","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","_arr","_n","_d","_e","_s","_i","next","done","arrayLikeToArray","minLen","constructor","len","arr2","Constructor","_defineProperties","props","writable","protoProps","staticProps","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","reverse","skipTempReset","prev","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","extendStatics","__extends","__","__decorate","decorators","desc","arguments","Reflect","decorate","__awaiter","_arguments","P","fulfilled","step","e","rejected","__generator","body","f","g","label","trys","ops","verb","v","op","__values","__read","ar","__spread","assert","statement","assertRange","gte","lte","Infinity","assertContextRunning","warn","defaultLogger","console","log","isUndef","isDefined","isFunction","isNumber","isObject","isBoolean","isString","isNote","createAudioContext","createOfflineAudioContext","channels","theWindow","hasAudioContext","Ticker","updateInterval","_callback","_type","_updateInterval","_createClock","_createWorker","toFixed","blobUrl","worker","Worker","_worker","_createTimeout","_this","_timeout","_disposeClock","clearTimeout","terminate","interval","dispose","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","deepMerge","_a","_b","sources","shift","assign","optionsFromArguments","defaults","argsArray","objKey","opts","indexOf","defaultArg","given","fallback","omitFromObject","omit","prop","Tone","debug","_wasDisposed","getDefaults","TONE_DEBUG_CLASS","version","GT","GTE","EQ","LT","abs","clamp","_super","Timeline","_timeline","memory","increasing","valueOf","lastValue","_search","diff","remove","param","peek","getAfter","getBefore","cancel","after","cancelBefore","previousEvent","beginning","end","midPoint","event_1","nextEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","forEachFrom","forEachAtTime","notifyNewContext","onContextInit","cb","notifyCloseContext","onContextClose","Emitter","on","split","eventName","_events","once","boundCallback","off","eventList","emit","mixin","constr","BaseContext","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","_latencyHint","lookAhead","_ticker","clockSource","_timeoutLoop","initialize","ctx","feedForward","_transport","_draw","createAudioWorkletNode","rawContext","workletsAreReady","promises","hint","lookAheadValue","now","immediate","getConstant","val","constant","firstEvent","timeout","clearInterval","setInterval","intervalFn","DummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_audioData","_name","_options","_url","_fn","_id","_interval","_val","readOnly","str","noOp","ToneAudioBuffer","load","_buffer","getContext","loaded","_reversed","_reverse","doneLoading","downloads","fromArray","isMultidimensional","multiChannelArray","toMono","chanNum","toArray","outputArray","numChannels_1","channelArray","ret","startSamples","endSamples","retBuffer","subarray","rev","fromUrl","matches","extensions","extension","extensions_1","extensions_1_1","ext","baseUrl","e_1","supportsType","e_1_1","return","endsWith","canPlayType","OfflineContext","_currentTime","_duration","_renderClock","asynchronous","yieldEvery","dummyContext","globalContext","setContext","TONE_SILENCE_LOGGING","prefix","printString","dbToGain","db","gainToDb","LN10","intervalToFrequencyRatio","A4","ftom","ftomf","mtof","midi","TimeClass","_getExpressions","capture","_now","regexp","quantize","quantTo","_secondsToUnits","transport","nextSubdivision","subdiv","percent","subdivision","toNotation","toSeconds","testNotations","power","closest","closestSeconds","notation","notationSeconds","toBarsBeatsSixteenths","quarterTime","_beatsToUnits","quarters","parseFloat","measures","_getTimeSignature","sixteenths","sixteenthString","toTicks","_getPPQ","toMidi","toFrequency","TimeBaseClass","units","defaultUnits","_units","_expressions","hz","_frequencyToUnits","_ticksToUnits","parseInt","dot","numericValue","scalar","number","samples","tr","q","total","fromType","_noArg","typeName","quantity","expr","matching","freq","beats","_getBpm","seconds","ticks","bpm","timeSignature","PPQ","toSamples","toMilliseconds","FrequencyClass","setA4","note","pitch","octave","noteNumber","noteToScaleIndex","toLowerCase","transpose","harmonize","intervals","toNote","scaleIndexToNote","cbb","cx","dbb","dx","ebb","eb","ex","fbb","fb","fx","gbb","gb","gx","abb","ab","ax","bbb","bb","bx","TransportTimeClass","ToneWithContext","defaultContext","_getPartialProperties","attribute","member","StateTimeline","initial","_initial","setStateAtTime","getValueAtTime","getLastState","getNextState","event_2","Param","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","_is","_assertRange","_fromType","computedTime","isFinite","JSON","stringify","before","beforeValue","previous","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","setRampPoint","currentVal","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","scaling","startingValue","segTime","valueAtTime","sampleTime","rampTo","subdivisions","setParam","t0","v0","v1","t1","ToneAudioNode","_internalChannels","_isAudioNode","node","_getInternalNodes","nodeList","_setChannelProperties","_getChannelProperties","outputNum","inputNum","toDestination","toMaster","nodes","connectSeries","fan","first","current","srcNode","dstNode","outputNumber","inputNumber","Gain","_gainNode","OneShotSource","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","_startGain","fadeInTime","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","ToneConstantSource","_source","Signal","override","_constantSource","connectSignal","signal","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","sol1","ticksToTime","timeToTicks","computedDuration","startTicks","TickSignal","TickSource","_tickOffset","setTicksAtTime","pause","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","forEachTickBetween","lastStateEvent","maxStartTime","nextTickTime","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","TimelineValue","initialValue","TicksClass","IntervalTimeline","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","search","results_1","results_1_1","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","temp","getBalance","_rotateLeft","pivotNode","_rotateRight","balance","low","allNodes_1","traverse","searchAfter","high","_left","_right","height","point","TransportEvent","_eventId","_once","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","scheduleOnce","Transport","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","swing","swingSubdivision","tickTime","progress","amount","schedule","_addEvent","scheduleRepeat","eventId","item","timeline","computedAfter","offsetTicks","toggle","timeSig","startPosition","endPosition","setLoopPoints","remainingTicks","syncSignal","computedFreq","ratioSignal","unsyncSignal","syncedSignal","Delay","maxDelayInSeconds","maxDelay","_maxDelay","_delayNode","Volume","volume","_unmutedVolume","mute","Destination","ToneAudioBuffers","_buffers","_loadingCount","urls","_bufferLoaded","MidiClass","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","requestAnimationFrame","cancelAnimationFrame","draw","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","sched","_start","restart","_stop","sync","stateEvent","startOffset","unsync","ToneBufferSource","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","Noise","_noiseBuffers","rate","random","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","UserMedia","open","labelOrId","devices","mediaStreamNode","supported","enumerateDevices","_device","find","device","deviceId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","navigator","mediaDevices","getUserMedia","_mediaStream","track","active","groupId","generateWaveform","ToneOscillatorNode","_oscillator","Oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","oscillator","_wave","syncFrequency","unsyncFrequency","_getCachedPeriodicWave","oscProps","_periodicWaveCache","description","_phase","arrayA","arrayB","isBasicType","cache","wave","_getRealImaginary","partial","exec","fullPartials_1","periodicWaveSize","piFactor","_inverseFFT","getInitialValue","twoPi","asArray","SignalOperator","WaveShaper","_shaper","mapping","setMap","normalized","oversampling","AudioToGain","_norm","Multiply","_mult","factor","AMOscillator","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","FMOscillator","modulationIndex","PulseOscillator","_widthGate","_thresh","width","_triangle","FatOscillator","_oscillators","_spread","spread","_forEach","osc","start_1","step_1","PWMOscillator","sourceType","_scale","_pulse","modulationFrequency","carrierType","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc_1","blockTime","sType","mType","Add","_sum","addend","Scale","_add","_min","_max","_setRange","Zero","LFO","_stoppedValue","_clampValue","_amplitudeGain","amplitude","_stoppedSignal","_zeros","_a2g","_scaler","currentMin","currentMax","range","valueMap","propertyKey","newValue","timeRange","Player","_activeSources","_onload","autostart","_onSourceEnd","origDuration","implicitEnd","seek","Players","_players","player","stopAll","GrainPlayer","_tick","grainSize","_grainSize","_overlap","overlap","_onstop","Abs","_abs","GainToAudio","Negate","_multiply","Subtract","_neg","subtrahend","GreaterThanZero","GreaterThan","_subtract","_gtz","comparator","Pow","_exponentScaler","_expFunc","_exponent","exponent","ScaleExp","_exp","SyncedSignal","_lastVal","_onTick","_syncedCallback","_anchorValue","Envelope","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","_getCurve","direction","curveName","EnvelopeCurves","_setCurve","curveDef","_attackCurve","_releaseCurve","_decayCurve","triggerAttack","velocity","currentValue","decayValue","decayStart","triggerRelease","triggerAttackRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","cosineCurve","rippleCurve","curveLen","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","out","bounce","In","Out","cosine","exponential","linear","ripple","sine","Instrument","_original_triggerAttack","_original_triggerRelease","_syncMethod","timePosition","originalMethod","Monophonic","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","AmplitudeEnvelope","Synth","envelope","computedAttack","computedDecay","ModulationSynth","modulation","modulationEnvelope","AMSynth","Filter","_filters","rolloff","_rolloff","rolloffNum","possibilities","cascadingCount","totalResponse","freqValues","magValues","phaseValues","filterClone","FrequencyEnvelope","_octaves","octaves","_baseFrequency","baseFrequency","MonoSynth","filterEnvelope","inharmRatios","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","MetalSynth","_freqMultipliers","_amplitude","_highpass","mult","_filterFreqScaler","resonance","freqMult","MembraneSynth","pitchDecay","hertz","maxNote","NoiseSynth","noise","ToneAudioWorklet","workletOptions","_audioWorkletName","disposed","_worklet","onReady","FeedbackCombFilter","dummyGain","OnePoleFilter","_createFilter","oldFilter","_filter","a0","fq","LowpassCombFilter","_combFilter","_lowpass","dampening","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","PolySynth","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","_collectGarbage","_makeVoiceAvailable","activeVoiceIndex","activeVoices","firstAvail","_triggerAttack","notes","midiNote","released","_triggerRelease","_scheduleEvent","durationSeconds","releaseAll","Sampler","urlMap","mid","_findClosest","difference","closestNote","ToneEvent","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","prob","variation","reschedulTime","lastEvent","Loop","_event","iterations","iters","Part","events","computedOffset_1","_startNote","at","timeInTicks","_restartEvent","_setAll","attr","_testLoopBoundries","upPatternGen","clampToArraySize","downPatternGen","infiniteGen","gen","alternatingGenerator","directionUp","jumpUp","stepIndex","jumpDown","randomGen","randomIndex","randomOnce","copy","randVal","randomWalk","PatternGenerator","pattern","Pattern","_values","_pattern","Sequence","_part","_seqCallback","_eventsArray","_subdivision","_createSequence","_eventsUpdated","_indexTime","_rescheduleSequence","sequence","eventOffset","CrossFade","_panner","_split","_g2a","fade","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","LFOEffect","_lfo","depth","AutoFilter","oct","Panner","AutoPanner","Follower","smoothing","_smoothing","AutoWah","_follower","follower","_sweepRange","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","BitCrusher","_bitCrusherWorklet","bits","frequencyReduction","BitCrusherWorklet","Chebyshev","_order","order","_getCoefficient","degree","memo","Split","_splitter","Merge","_merger","StereoEffect","_merge","connectEffectLeft","connectEffectRight","StereoFeedbackEffect","_feedbackL","_feedbackR","_feedbackSplit","_feedbackMerge","Chorus","_depth","_lfoL","_lfoR","_delayNodeL","_delayNodeR","deviation","Distortion","_distortion","distortion","deg","FeedbackEffect","_feedbackGain","FeedbackDelay","PhaseShiftAllpass","offset90","_bank0","_createAllPassFilterBank","_bank1","_oneSampleDelay","bankValues","coefficients","combFilterTunings","FrequencyShifter","_sine","_cosine","_sineMultiply","_cosineMultiply","_negate","_phaseShifter","allpassFilterFrequencies","combFilterDelayTimes","Freeverb","_combFilters","_allpassFiltersL","_allpassFiltersR","roomSize","allpassL","allpassR","lfpf","al","cf","combFilterResonances","allpassFilterFreqs","JCReverb","_allpassFilters","_feedbackCombFilters","_scaleRoomSize","allpass","fbcf","apf","StereoXFeedbackEffect","PingPongDelay","_leftDelay","_rightDelay","_rightPreDelay","PitchShift","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","Reverb","_convolver","ready","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","merge","renderPromise","MidSideSplit","_midAdd","SQRT1_2","_sideSubtract","side","MidSideMerge","_leftMult","_rightMult","MidSideEffect","_midSideMerge","_midSideSplit","_midSend","_sideSend","_midReturn","_sideReturn","connectEffectMid","connectEffectSide","StereoWidener","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","_oneMinusWidth","_sideMult","Tremolo","_amplitudeL","_amplitudeR","Vibrato","Analyser","_analysers","analyser","MeterBase","_analyser","Meter","_rms","normalRange","getLevel","aValues","vals","totalSquared","rms","FFT","DCMeter","Waveform","Solo","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","PanVol","Channel","_solo","_panVol","muted","_getBus","buses","send","bus","sendKnob","receive","MultibandSplit","_lowMidFilter","lowFrequency","highFrequency","Listener","Panner3D","Recorder","_recorder","MediaRecorder","mimeType","startPromise","handleStart","dataPromise","handleData","Compressor","_compressor","Gate","_gt","_gate","thresh","smoothingTime","Limiter","MidSideCompressor","MultibandCompressor","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Convolver","buff","norm","documentElement","synths","synth","rows","querySelectorAll","querySelector","checked"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,SAIjBlC,EAAoBA,EAAoBmC,EAAI,K,+BClFrD,sXAAO,MAAMC,EAA0B,IAAIC,QAC9BC,EAA+B,IAAIC,QACnCC,EAAmB,IAAID,QACvBE,EAAgC,IAAIF,QACpCG,EAAoB,IAAIH,QACxBI,EAA8B,IAAIJ,QAClCK,EAAgB,IAAIL,QACpBM,EAAkB,IAAIN,QACtBO,EAAiB,IAAIP,QAErBQ,EAA0C,IAAIR,QAC9CS,EAAyB,IAAIT,S,6BCX1C,6CACO,MAAMU,EAA+B,CAACC,EAAiBC,KAC5D,YAA4BD,EAAiBC,EAAS,gBACtD,YAA4BD,EAAiBC,EAAS,oBACtD,YAA4BD,EAAiBC,EAAS,2B,6BCJxD,oEAAO,MAAMC,GAA8B,qBAC9BC,GAA8BD,G,6BCD3C,kCAAO,MAAME,EAAmB,CAACJ,EAAiBK,IACzCL,EAAgBM,UAAYD,G,6BCDrC,kCAAO,MAAME,EAA8B,CAACP,EAAiBC,EAASO,KACpE,MAAMrC,EAAQ8B,EAAQO,QAERC,IAAVtC,GAAuBA,IAAU6B,EAAgBQ,KACnDR,EAAgBQ,GAAUrC,K,6BCJ9B,kCAAO,MAAMuC,EAAuC,CAACV,EAAiBC,EAASU,KAC7E,MAAMxC,EAAQ8B,EAAQU,QAERF,IAAVtC,GAAuBA,IAAU6B,EAAgBW,GAAYxC,QAC/D6B,EAAgBW,GAAYxC,MAAQA,K,6BCJxC,oDAEO,MAAMyC,EAAqBC,GACzB,YAAe,IAAkBA,I,6BCH1C,kCAAO,MAAMC,EAA0B,KACrC,IACE,OAAO,IAAIC,aAAa,GAAI,qBAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,GACXD,EAAIvD,KAAO,oBACJuD,K,6BCPX,oDAEO,MAAME,EAA0BL,GAC9B,YAAe,IAA8BA,I,6BCHtD,kCAAO,MAAMM,EAAiB,CAACC,EAAK3C,KAClC,MAAMN,EAAQiD,EAAIrD,IAAIU,GAEtB,QAAcgC,IAAVtC,EACF,MAAM,IAAIkD,MAAM,kDAGlB,OAAOlD,I,6BCPT,kCAAO,MAAMmD,EAA0B,KACrC,IACE,OAAO,IAAIP,aAAa,GAAI,qBAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,EACXD,EAAIvD,KAAO,oBACJuD,K,6BCPX,kCAAO,MAAMO,EAAuB,CAACC,EAAUC,KAC7CD,EAASE,QAAUD,EAAYC,QAAQhD,KAAK+C,GAC5CD,EAASG,WAAaF,EAAYE,WAAWjD,KAAK+C,GAC3CD,I,6BCHT,kCAAO,MAAMI,EAAyBC,GAC7B,WAAYA,G,6BCDrB,oiEA6LA,MAAMC,GAAkB,YAAsB,IAAIC,IAAO,IAAI1C,SACvD2C,GAAS,eACTC,GAAuC,aAA2CD,IAClFE,GAA8B,aAAkCD,IAChEE,GAAgC,aAAoCH,IACpEI,GAAyB,aAA6BF,GAA6BC,GAA+BF,IAClHI,GAAwB,aAA6BD,IACrDE,GAA2B,aAAgCR,GAAiB,KAAsBO,IAClGE,GAAuB,aAA2B,MAClDC,GAA0B,aAA8B,KAAyBD,GAAsB,MACvGE,GAA6B,YAAkCH,GAA0B,KAAoBE,IAC7GE,GAAyB,IAAIrD,QAC7BsD,GAAmB,aAAuB,MAC1CC,GAA2B,IAAIvD,QAC/BwD,GAAyB,YAA6B,MACtDC,GAAuB,aAA2BX,IAClDY,GAAoB,aAAwBf,IAC5CgB,GAAqB,aAAyBhB,IAC9CiB,GAAuB,YAA2B,YAA8B,MAA+BP,GAAwBZ,GAAiB,aAAmC,KAAgB,KAA8C,KAAyB,KAAoB,KAAqB,MAAoB,KAAsB,KAA0B,KAAyB,YAA4B,KAAyC,KAAgB,KAAyB,KAAoB,KAAqBa,GAAkB,KAAmBT,IAA8B,YAAmBU,GAA0B,KAAyB,MAAiBC,GAAwBF,GAAkBG,GAAsBC,GAAmBC,GAAoBd,IAChzBgB,GAA0B,YAA8BD,GAAsBR,GAA4B,KAAsBH,GAA0BK,GAAkBT,IAE5KiB,GAAmB,IAAIhE,QACvBiE,GAA+B,aAAmCpB,IAClEqB,GAA8B,YAAkC,IAAIC,YAAY,IAChFC,GAAoC,aAAwCF,GAA6B,MACzGG,GAA+C,aAAmDH,IAClGI,GAAyB,YAA6BN,GAAkBrB,GAAiB,KAAyBsB,GAA8BnB,GAAsC,aAAwCmB,IAA+BG,GAAmCC,IAEhSE,GAAuB,aAA4BrB,IACnDsB,GAAsB,YAA0BD,IAChDE,GAAmE,aAAuEvB,IAC1IwB,GAAgE,aAAoExB,IACpIyB,GAAkE,aAAsEzB,IACxI0B,GAAyD,aAA6D1B,IACtH2B,GAA2B,aAA+BzB,GAAsB,KAA0B,MAC1G0B,GAAoB,YAAwBD,IAC5CE,GAAoC,aAAyCP,GAAqB7B,GAAiBO,GAAuB,aAAkEA,IAAwB,aAAmEJ,IAAuC,aAAgEI,IAAwB,aAAgEA,IAAwBuB,GAAkEC,GAA+DC,GAAiE,KAAoD,aAAyD,MAAqBC,IACl0BI,GAAmB,aAAuB,aAA4B,MAA2BH,IACjGI,GAAsC,YAA2CH,GAAmBC,GAAmC,KAAoBC,GAAkB3B,IAC7K6B,GAAmB,YAAwB,YAA+B,MAAgCzB,GAA0B,KAAmB,IAA0B,qCAAoC,6CAA4C,8CAA6C,yCAAwC,iCAAgC,gCAA+B,qCAAoCT,IACzbmC,GAAmC,YAAuCrB,GAAsBmB,GAAqCC,GAAkB,KAAyBH,GAAmCvB,GAAkBT,GAA6B,MAElQqC,GAAkC,YAAsCtB,GAAsB,IAAoC,KAAsB,KAAyB,aAAwCS,GAAsB,MAAqBf,GAAkBT,GAA6BM,IACnTgC,GAA+B,aAAoCnC,IACnEoC,GAAiC,YAAsCR,GAAmBO,GAA8B,KAAoBL,GAAkB3B,IAC9JkC,GAA8B,YAAkCzB,GAAsBoB,GAAkBI,GAAgC,KAA0BD,GAA8B7B,GAAkBT,IAClNyC,GAAqB,aAAyB,KAAoB5B,IAClE6B,GAAwB,aAA4B,KAAyBvC,GAAuBsC,IACpGE,GAAgC,aAAqCxC,GAAuBuC,IAC5FE,GAAkC,YAAuCD,GAA+B,KAAoBrC,IAC5HuC,GAA+B,YAAmC9B,GAAsB6B,GAAiCD,GAA+BlC,GAAkBT,IAC1K8C,GAAkC,aAAuC3C,IACzE4C,GAAoC,YAAyCD,GAAiC,KAAoBxC,IAClI0C,GAAiC,YAAqCjC,GAAsBgC,GAAmCD,GAAiCrC,GAAkBT,IAClLiD,GAAsC,aAA2CxB,GAAqBO,GAAmCR,GAAsBiB,IAC/JS,GAAiC,aAAsCzB,GAAqB7B,GAAiBO,GAAuB8C,GAAqCvB,GAAkEE,IAC3OuB,GAAmC,YAAwCpB,GAAmBmB,GAAgC,KAAoBjB,GAAkB3B,IACpK8C,GAAgC,YAAoCrC,GAAsBoB,GAAkBgB,GAAkCD,GAAgCzC,GAAkBT,GAA6B,MAC7NqD,GAAiC,aAAsClD,GAAuBqB,GAAsBiB,IACpHa,GAA4B,aAAiCnD,GAAuBkD,GAAgC,KAAyB,MAC7IE,GAA8B,YAAmCD,GAA2B,KAAoBhD,IAChHkD,GAA2B,YAA+BzC,GAAsBwC,GAA6BD,GAA2B7C,GAAkBT,IAC1JyD,GAAwB,aAA6BtD,IACrDuD,GAA0B,YAA+B3B,GAAmB0B,GAAuB,KAAoBxB,GAAkB3B,IACzIqD,GAAuB,YAA2B5C,GAAsBoB,GAAkBuB,GAAyBD,GAAuBhD,GAAkBT,IAC5J4D,GAAqC,aAA0CzD,GAAuB,MACtG0D,GAAuC,YAA4C9B,GAAmB6B,GAAoC,KAAoB3B,GAAkB3B,IAChLwD,GAAoC,YAAwC/C,GAAsBoB,GAAkB0B,GAAsCD,GAAoC,KAAyBnD,GAAkBT,IACzO+D,GAAyB,aAA8BhC,GAAmBP,GAAsB,KAAoBS,GAAkB3B,IACtI0D,GAAsB,aAA0BjD,GAAsBoB,GAAkB4B,GAAwBvC,GAAsBf,GAAkBT,IACxJiE,GAAkC,aAAuC9D,IACzE+D,GAAiC,aAAsC,KAA0B,KAAyBD,GAAiC,MAC3JE,GAAkC,aAAsCvE,GAAiB4B,GAAsByC,GAAiC,aAAgDzC,GAAsBzB,KACtNqE,GAA8B,aAAmCpC,GAAmC7B,GAAuB,KAAoBJ,GAAsCO,GAAyB6D,IAC9ME,GAA4B,aAAiClE,GAAuB+D,IACpFI,GAA2B,aAA+BvD,GAAsBsD,GAA2BD,GAA6B3D,GAAkBT,IAC1JuE,GAAsB,YAA2BpC,GAAkBQ,GAA+BO,GAAgCe,GAAiCjE,IACnKwE,GAAkC,IAAIrH,QACtCsH,GAAqC,aAAyCpC,GAAiCkC,GAAqB5D,GAAwBX,GAA6BwE,GAAiC,MAC1NE,GAA6B,aAAkCjD,GAAqB7B,GAAiBO,GAAuBuB,GAAkEC,GAA+DC,GAAiEC,IAC9T8C,GAA+B,aAAoC5C,GAAmB2C,GAA4B,KAAoBzC,GAAkB3B,IACxJsE,GAA4B,aAAgC7D,GAAsBoB,GAAkB,KAAyBuC,GAA4BC,GAA8BlE,GAAkBT,GAA6B,MACtO6E,GAA6C,YAAkD7C,IAC/F8C,GAAkC,aAAuCD,GAA4C,KAAyB1E,GAAuBqB,GAAsB,KAAWiB,IACtMsC,GAA6B,aAAkCF,GAA4C,KAAyB1E,GAAuB2E,GAAiC,KAAWrC,GAAoB,MAC3NuC,GAA8B,aAAmC,KAAyC,KAAyB7E,GAAuBwC,GAA+BnB,GAAsByC,GAAiCc,GAA4B,KAAyB,KAA8CtC,IACnVwC,GAAyB,aAA8B9E,GAAuB6E,IAC9EE,GAA2B,aAAgCnD,GAAmBY,GAA+BO,GAAgC1B,GAAsByD,GAAwB,KAAoBlF,GAAsCkC,GAAkB3B,GAAyB6D,IAChSgB,GAAwB,aAA4BpE,GAAsBoB,GAAkB8C,GAAwBC,GAA0BzE,GAAkBT,IAChKoF,GAA2B,aAAgClF,IAC3DmF,GAA0B,aAA8BD,GAA0B3E,GAAkB,IAAIxD,SACxGqI,GAAqC,aAAyC3C,GAA+BG,GAAiCtB,GAAsBuD,GAA4B,KAAyBtC,IACzN8C,GAA+B,aAAoCpF,GAAuBmF,GAAoC,MAC9HE,GAAiC,aAAsCzD,GAAmBwD,GAA8B,KAAoBtD,GAAkB3B,IAC9JmF,GAA8B,aAAkC1E,GAAsBoB,GAAkBoD,GAA8BC,GAAgC/E,GAAkBT,IACxL0F,GAA+B,aAAoCX,GAA4B,KAAoBzE,IACnHqF,GAA4B,aAAgC5E,GAAsB,KAAyBgE,GAA4BW,GAA8BjF,GAAkBT,IACvL4F,GAAkB,aAAsB9F,IACxC+F,GAAmC,aAAuC/F,IAEnEgG,GAAwBF,GAAkB,YAA4B,KAAyB,YAAqB9F,IAAS+F,GAAkC,aAAkB,KAAmB3F,GAAwBO,GAAkB,IAAItD,QAAW,IAAIA,QAC9Q2C,SAAUvB,EACJwH,GAAkB,aAAsBnF,GAAsBZ,IACvDgG,GAAkB,YAAsB/E,GAAkBrB,GAAiB,IAAsB,IAAqB,IAAI3C,QAAWwD,GAAkBsF,GAAiB/F,GAA6BD,GAAsC,KAAqD,KAAoBsB,GAAmCC,IAC9V2E,GAA8B,YAAkCH,GAAuB9E,GAAyBO,GAAwBa,GAAkCI,GAA6BK,GAA8BG,GAAgCI,GAA+BI,GAA0BwC,GAAiBrC,GAAsBG,GAAmCE,GAAqBM,GAA0BG,GAAoCG,GAA2BO,GAAuBE,GAAyBI,GAA6BE,IACnkBO,GAA0C,aAA+C/F,IACzFgG,GAAyC,aAA6CpF,GAAsBmF,GAAyCzF,GAAkBT,IACvKoG,GAA8C,aAAmDjG,GAAuB,MACxHkG,GAA6C,aAAiDtF,GAAsBqF,GAA6C3F,GAAkBT,IACnLsG,GAAyC,aAA8CnG,IACvFoG,GAAwC,aAA4CxF,GAAsBuF,GAAwC7F,GAAkBT,IACpKwG,GAA8C,aAAmD,KAAyBrG,GAAuBH,IACjJyG,GAA6C,aAAiD1F,GAAsByF,GAA6C/F,IACjKiG,GAA0B,YAA8BT,GAA6B,KAAyB,KAAyB,KAAoBE,GAAwCE,GAA4CE,GAAuCE,GAA4CxG,IAElU0G,GAAiC,aAAqCnC,IACtEoC,GAAgC,YAAoCD,IACpEE,GAAyB,YAA6B,MACtDC,GAAmC,YAAuCH,IAC1EI,GAA4B,YAAgC,MAC5DC,GAAoC,aAAyCxG,GAAwBqG,GAAwB,KAAsB,KAAyBlE,GAA+BG,GAAiCI,GAAgC1B,GAAsByC,GAAiC,KAAyB8C,GAA2BlB,GAAkCpD,IACzZwE,GAA+B,aAAoC,KAAyB9G,GAAuB6G,GAAmCxF,GAAsB,KAAyBiB,IACrMyE,GAAoC,aAAwCpH,IAC5EqH,GAAiC,YAAsCpF,GAAmB8E,GAAwB7E,GAAmCW,GAA+BG,GAAiCI,GAAgC1B,GAAsBsF,GAAkCC,GAA2BlB,GAAkC,KAAoBqB,GAAmCnH,GAAsCkC,GAAkB3B,GAAyB6D,IAElfiD,GAA8BxB,GAAkB,YAAkCgB,GAA+B7F,GAAsBoB,GAAkBgF,GAAgCF,GAA8BxG,GAAkBT,GAA6BkH,GAAmC,WAAqB3I,EAiB9T8I,IAFiC,aAAqC,KAAyB,KAAyB,KAAoB5C,GAAoCxE,IAE9I,YAAsC,KAAyBF,KACjGuH,GAAiB,aAAqBrG,GAAkBrB,GAAiBS,GAAsBsG,GAAgCxC,GAAiC,KAAqD9C,GAAmCC,IAGxPiG,IAFwC,aAA4C3H,GAAiB,KAAyByH,GAAiC5C,GAAoC6C,IAElK,aAAqCrB,GAA6BrG,GAAiB,KAAyByH,GAAiCC,KAOvKE,GAAoB,aAAwB,KAAe5G,IAC3D6G,GAAiB,aAAqB,KAAkB5G,IACxD6G,GAAkB,aAAsB,KAAmB5G,IAC3D6G,GAA2B,aAA+B,KAAe3H,K,6BCzVtF,kCAAO,MAAM4H,EAAqBzJ,IAEhC,MAAM0J,EAAc,IAAIzG,YAAY,CAAC,WAAY,GAAI,WAAY,UAAW,GAAI,OAAQ,MAAO,OAAQ,QAAS,WAAY,EAAG,IAE/H,IAEE,MAAM0G,EAAU3J,EAAc6H,gBAAgB6B,EAAYE,OAAQ,QAGlE,YAAgBxJ,IAAZuJ,IAIJA,EAAQE,MAAM,SAEP,GACP,OAGF,OAAO,I,6BCnBT,kCAAO,MAAMC,EAAuB,KAClC,IACE,OAAO,IAAIpJ,aAAa,GAAI,kBAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,EACXD,EAAIvD,KAAO,iBACJuD,K,6BCPX,kCAAO,MAAMoJ,EAAqB,CAACC,EAAKC,EAASC,EAAWC,KAC1D,IAAK,MAAMC,KAAQJ,EACjB,GAAIE,EAAUE,GAAO,CACnB,GAAID,EACF,OAAO,EAGT,MAAMnJ,MAAM,kDAKhB,OADAgJ,EAAIK,IAAIJ,IACD,I,6BCZT,qDAEO,MAAMK,EAA2B9J,IACtC,GAAI,IAAwB+J,IAAI/J,GAC9B,MAAM,IAAIQ,MAAM,oCAGlB,IAAwBqJ,IAAI7J,GAC5B,YAA6BA,GAAWgK,QAAQC,GAAiBA,GAAc,M,iBCNxE,SAAU9N,EAAS+N,EAAgBC,EAAiBC,GAC3D,aAEAF,EAAiBA,GAAkBnN,OAAOkB,UAAUC,eAAe1B,KAAK0N,EAAgB,WAAaA,EAAwB,QAAIA,EACjIC,EAAkBA,GAAmBpN,OAAOkB,UAAUC,eAAe1B,KAAK2N,EAAiB,WAAaA,EAAyB,QAAIA,EACrIC,EAAeA,GAAgBrN,OAAOkB,UAAUC,eAAe1B,KAAK4N,EAAc,WAAaA,EAAsB,QAAIA,EAEzH,IAAIC,EAAsD,SAA6D/M,EAAOgN,EAASC,GACrI,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZC,KAAM,yBACNlN,MAAOA,IAIPmN,EAAiD,SAAwDnN,EAAOgN,EAASC,GAC3H,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZC,KAAM,oBACNlN,MAAOA,IAIPoN,EAAgC,SAAuCpN,EAAOqN,GAChF,MAAO,CACLA,UAAWA,EACXH,KAAM,WACNlN,MAAOA,IAIPsN,EAAqC,SAA4CC,EAAQF,EAAWG,GACtG,MAAO,CACLA,SAAUA,EACVH,UAAWA,EACXH,KAAM,gBACNK,OAAQA,IAIRE,EAAuB,SAA8BC,EAAMC,EAAkBC,GAC/E,IAAIP,EAAYO,EAAKP,UACjBQ,EAASD,EAAKC,OACdC,EAAeF,EAAKE,aACxB,OAAOD,GAAUF,EAAmBE,GAAUE,KAAKC,KAAKX,EAAYK,GAAQI,IAG1EG,EAA0C,SAAiDC,GAC7F,MAAgC,2BAAzBA,EAAgBhB,MAGrBiB,EAAqC,SAA4CD,GACnF,MAAgC,sBAAzBA,EAAgBhB,MAGrBkB,EAAkC,SAAyCF,GAC7E,OAAOD,EAAwCC,IAAoBC,EAAmCD,IAGpGG,EAA4B,SAAmCH,GACjE,MAAgC,aAAzBA,EAAgBhB,MAGrBoB,EAAiC,SAAwCJ,GAC3E,MAAgC,kBAAzBA,EAAgBhB,MAGrBqB,EAAyC,SAASA,EAAuCC,EAAkBC,EAAOf,EAAMgB,GAC1H,IAAIR,EAAkBM,EAAiBC,GACvC,YAA2BnM,IAApB4L,EAAgCQ,EAAeN,EAAgCF,IAAoBG,EAA0BH,GAAmBA,EAAgBlO,MAAQsO,EAA+BJ,GAAmBA,EAAgBX,OAAOW,EAAgBX,OAAOoB,OAAS,GAAKlB,EAAqBC,EAAMa,EAAuCC,EAAkBC,EAAQ,EAAGP,EAAgBb,UAAWqB,GAAeR,IAGpaU,EAA8C,SAAqDJ,EAAkBC,EAAOI,EAAwBC,EAAqBJ,GAC3K,YAAkCpM,IAA3BuM,EAAuC,CAACC,EAAoB7B,WAAYyB,GAAgBN,EAAgCS,GAA0B,CAACA,EAAuB7B,QAAS6B,EAAuB7O,OAASqO,EAA0BQ,GAA0B,CAACA,EAAuBxB,UAAWwB,EAAuB7O,OAASsO,EAA+BO,GAA0B,CAACA,EAAuBxB,UAAYwB,EAAuBrB,SAAUqB,EAAuBtB,OAAOsB,EAAuBtB,OAAOoB,OAAS,IAAM,CAACE,EAAuBxB,UAAWkB,EAAuCC,EAAkBC,EAAQ,EAAGI,EAAuBxB,UAAWqB,KAGjqBK,EAAiC,SAAwCb,GAC3E,MAAgC,kBAAzBA,EAAgBhB,MAGrB8B,EAAyC,SAAgDd,GAC3F,MAAgC,0BAAzBA,EAAgBhB,MAGrB+B,EAAe,SAAsBf,GACvC,OAAIa,EAA+Bb,IAAoBc,EAAuCd,GACrFA,EAAgBgB,WAGrBjB,EAAwCC,IAAoBC,EAAmCD,GAC1FA,EAAgBlB,QAGlBkB,EAAgBb,WAGrB8B,EAAgC,SAAuCzB,EAAML,EAAWM,EAAkBC,GAC5G,IAAIZ,EAAUY,EAAKZ,QACfhN,EAAQ4N,EAAK5N,MAEjB,OAAI2N,IAAqB3N,EAChBA,EAGL,EAAI2N,GAAoB,EAAI3N,GAAS2N,EAAmB,GAAK3N,EAAQ,EAChE2N,EAAmBI,KAAKqB,IAAIpP,EAAQ2N,GAAmBD,EAAOL,IAAcL,EAAUK,IAGxF,GAGLgC,EAA2B,SAAkC3B,EAAML,EAAWM,EAAkBC,GAGlG,OAAOD,GAAoBD,EAAOL,IAFpBO,EAAKZ,QAEuCK,IAD9CO,EAAK5N,MAC+D2N,IAc9E2B,EAA2B,SAAkC5B,EAAME,GACrE,IAAIJ,EAAWI,EAAKJ,SAChBH,EAAYO,EAAKP,UACjBE,EAASK,EAAKL,OAElB,OAhBqB,SAA0BA,EAAQgC,GACvD,IAAIC,EAAazB,KAAK0B,MAAMF,GACxBG,EAAa3B,KAAK4B,KAAKJ,GAE3B,OAAIC,IAAeE,EACVnC,EAAOiC,IAGR,GAAKD,EAAiBC,IAAejC,EAAOiC,IAAe,GAAKE,EAAaH,IAAmBhC,EAAOmC,GAQxGE,CAAiBrC,GADFG,EAAOL,GAAaG,GAAYD,EAAOoB,OAAS,KAIpEkB,EAA6B,SAAoC3B,GACnE,MAAgC,cAAzBA,EAAgBhB,MAGrB4C,EAAmC,WACrC,SAASA,EAAoBpB,GAC3B7B,EAAgBkD,KAAMD,GAEtBC,KAAKC,kBAAoB,GACzBD,KAAKE,YAAc,EACnBF,KAAKG,cAAgBxB,EAuJvB,OApJA5B,EAAagD,EAAqB,CAAC,CACjCxP,IAAKR,OAAOqQ,SACZnQ,MAAO,WACL,OAAO+P,KAAKC,kBAAkBlQ,OAAOqQ,cAEtC,CACD7P,IAAK,MACLN,MAAO,SAAakO,GAClB,IAAIkC,EAAYnB,EAAaf,GAE7B,GAAIa,EAA+Bb,IAAoBc,EAAuCd,GAAkB,CAC9G,IAAIO,EAAQsB,KAAKC,kBAAkBK,WAAU,SAAUxB,GACrD,OAAOI,EAAaJ,IAA2BuB,KAG7CE,EAAyBP,KAAKC,kBAAkBvB,GAMpD,IAJe,IAAXA,IACFsB,KAAKC,kBAAoBD,KAAKC,kBAAkBO,MAAM,EAAG9B,IAGvDM,EAA+Bb,GAAkB,CACnD,IAAIsC,EAAsBT,KAAKC,kBAAkBD,KAAKC,kBAAkBrB,OAAS,GAEjF,QAA+BrM,IAA3BgO,GAAwClC,EAAgCkC,GAAyB,CACnG,GAAIT,EAA2BW,GAC7B,MAAM,IAAItN,MAAM,mCAGlB,IAAImK,EAAYiB,EAA+BkC,GAAuBA,EAAoBnD,UAAYmD,EAAoBhD,SAAWyB,EAAauB,GAC9IC,EAAanC,EAA+BkC,GAAuBA,EAAoBjD,OAAOiD,EAAoBjD,OAAOoB,OAAS,GAAK6B,EAAoBxQ,MAC3JA,EAAQiO,EAAwCqC,GAA0BnB,EAA8BiB,EAAW/C,EAAWoD,EAAYH,GAA0BjB,EAAyBe,EAAW/C,EAAWoD,EAAYH,GAC/NI,EAA2BzC,EAAwCqC,GAA0BvD,EAAoD/M,EAAOoQ,EAAWL,KAAKE,aAAe9C,EAA+CnN,EAAOoQ,EAAWL,KAAKE,aAEjQF,KAAKC,kBAAkBW,KAAKD,QAGFpO,IAAxBkO,GAAqCX,EAA2BW,IAClET,KAAKC,kBAAkBW,KAAKvD,EAA8B2C,KAAKa,SAASR,GAAYA,SAG1D9N,IAAxBkO,GAAqClC,EAA+BkC,IAAwBA,EAAoBnD,UAAYmD,EAAoBhD,SAAW4C,IAC7JL,KAAKC,kBAAkBD,KAAKC,kBAAkBrB,OAAS,GAAKrB,EAAmC,IAAIuD,aAAa,CAAC,EAAG,IAAKL,EAAoBnD,UAAW+C,EAAYI,EAAoBnD,iBAGvL,CACL,IAAIyD,EAASf,KAAKC,kBAAkBK,WAAU,SAAUxB,GACtD,OAAOI,EAAaJ,GAA0BuB,KAG5CW,GAAsC,IAAZD,EAAgBf,KAAKC,kBAAkBD,KAAKC,kBAAkBrB,OAAS,GAAKoB,KAAKC,kBAAkBc,EAAS,GAE1I,QAAgCxO,IAA5ByO,GAAyCzC,EAA+ByC,IAA4B9B,EAAa8B,GAA2BA,EAAwBvD,SAAW4C,EACjL,OAAO,EAGT,IAAIY,EAA4B/C,EAAwCC,GAAmBnB,EAAoDmB,EAAgBlO,MAAOkO,EAAgBlB,QAAS+C,KAAKE,aAAe9B,EAAmCD,GAAmBf,EAA+Ce,EAAgBlO,MAAOoQ,EAAWL,KAAKE,aAAe/B,EAE9W,IAAgB,IAAZ4C,EACFf,KAAKC,kBAAkBW,KAAKK,OACvB,CACL,GAAI1C,EAA+BJ,IAAoBkC,EAAYlC,EAAgBV,SAAWyB,EAAac,KAAKC,kBAAkBc,IAChI,OAAO,EAGTf,KAAKC,kBAAkBiB,OAAOH,EAAQ,EAAGE,IAI7C,OAAO,IAER,CACD1Q,IAAK,QACLN,MAAO,SAAe0N,GACpB,IAAIe,EAAQsB,KAAKC,kBAAkBK,WAAU,SAAUxB,GACrD,OAAOI,EAAaJ,GAA0BnB,KAGhD,GAAIe,EAAQ,EAAG,CACb,IAAIyC,EAA4BnB,KAAKC,kBAAkBO,MAAM9B,EAAQ,GAEjE0C,EAAgCD,EAA0B,GAE1DrB,EAA2BsB,IAC7BD,EAA0BE,QAAQhE,EAA8BmB,EAAuCwB,KAAKC,kBAAmBvB,EAAQ,EAAG0C,EAA8B9D,UAAW0C,KAAKG,eAAgBiB,EAA8B9D,YAGxO0C,KAAKC,kBAAoBkB,KAG5B,CACD5Q,IAAK,WACLN,MAAO,SAAkB0N,GACvB,GAAsC,IAAlCqC,KAAKC,kBAAkBrB,OACzB,OAAOoB,KAAKG,cAGd,IAAIM,EAAsBT,KAAKC,kBAAkBD,KAAKC,kBAAkBrB,OAAS,GAE7EF,EAAQsB,KAAKC,kBAAkBK,WAAU,SAAUnC,GACrD,OAAOe,EAAaf,GAAmBR,KAGrCoB,EAAsBiB,KAAKC,kBAAkBvB,GAC7CI,EAAyBI,EAAauB,IAAwB9C,EAAO8C,EAAsBT,KAAKC,kBAAkBvB,EAAQ,GAE9H,QAA+BnM,IAA3BuM,GAAwCgB,EAA2BhB,UAAoDvM,IAAxBwM,IAAsCV,EAAgCU,IAAwBA,EAAoB7B,WAAaS,GAChO,OAAOD,EAAqBC,EAAMa,EAAuCwB,KAAKC,kBAAmBvB,EAAQ,EAAGI,EAAuBxB,UAAW0C,KAAKG,eAAgBrB,GAGrK,QAA+BvM,IAA3BuM,GAAwCR,EAA0BQ,UAAoDvM,IAAxBwM,IAAsCV,EAAgCU,IACtK,OAAOD,EAAuB7O,MAGhC,QAA+BsC,IAA3BuM,GAAwCP,EAA+BO,UAAoDvM,IAAxBwM,IAAsCV,EAAgCU,IAAwBD,EAAuBxB,UAAYwB,EAAuBrB,SAAWE,GACxQ,OAAIA,EAAOmB,EAAuBxB,UAAYwB,EAAuBrB,SAC5D8B,EAAyB5B,EAAMmB,GAGjCA,EAAuBtB,OAAOsB,EAAuBtB,OAAOoB,OAAS,GAG9E,QAA+BrM,IAA3BuM,GAAwCT,EAAgCS,UAAoDvM,IAAxBwM,IAAsCV,EAAgCU,IAC5K,OAAOD,EAAuB7O,MAGhC,QAA4BsC,IAAxBwM,GAAqCb,EAAwCa,GAAsB,CACrG,IAAIuC,EAAwBzC,EAA4CmB,KAAKC,kBAAmBvB,EAAQ,EAAGI,EAAwBC,EAAqBiB,KAAKG,eACzJoB,EAAyB1E,EAAeyE,EAAuB,GAC/DhE,EAAYiE,EAAuB,GACnCtR,EAAQsR,EAAuB,GAEnC,OAAOnC,EAA8BzB,EAAML,EAAWrN,EAAO8O,GAG/D,QAA4BxM,IAAxBwM,GAAqCX,EAAmCW,GAAsB,CAChG,IAAIyC,EAAyB3C,EAA4CmB,KAAKC,kBAAmBvB,EAAQ,EAAGI,EAAwBC,EAAqBiB,KAAKG,eAC1JsB,EAAyB5E,EAAe2E,EAAwB,GAChEE,EAAaD,EAAuB,GACpCE,EAASF,EAAuB,GAEpC,OAAOnC,EAAyB3B,EAAM+D,EAAYC,EAAQ5C,GAG5D,OAAOiB,KAAKG,kBAITJ,EA7J8B,GAuMvCjR,EAAQiR,oBAAsBA,EAC9BjR,EAAQ8S,mCAxCiC,SAA4CzC,GACnF,MAAO,CACLA,WAAYA,EACZhC,KAAM,kBAsCVrO,EAAQ+S,2CAlCyC,SAAoD1C,GACnG,MAAO,CACLA,WAAYA,EACZhC,KAAM,0BAgCVrO,EAAQgT,4CA5B0C,SAAqD7R,EAAOgN,GAC5G,MAAO,CACLA,QAASA,EACTE,KAAM,yBACNlN,MAAOA,IAyBXnB,EAAQiT,uCArBqC,SAAgD9R,EAAOgN,GAClG,MAAO,CACLA,QAASA,EACTE,KAAM,oBACNlN,MAAOA,IAkBXnB,EAAQkT,+BAd6B,SAAwClE,EAAQR,EAAWS,GAC9F,MAAO,CACLT,UAAWA,EACXQ,OAAQA,EACRC,aAAcA,EACdZ,KAAM,cAUVrO,EAAQuO,8BAAgCA,EACxCvO,EAAQyO,mCAAqCA,EAC7C7N,OAAOC,eAAeb,EAAS,aAAc,CAC3CmB,OAAO,IA/VsDgS,CAAQnT,EAAS,EAAQ,KAAyC,EAAQ,KAA0C,EAAQ,O,6BCD7L,6CACO,MAAMoT,EAAiBvP,GACrB,IAAe+J,IAAI/J,I,6BCF5B,oDAEO,MAAMwP,EAA+BxP,GACnC,YAAe,IAAiBA,I,6BCHzC,qDAEO,MAAMyP,EAA4BzP,IACvC,IAAK,IAAwB+J,IAAI/J,GAC/B,MAAM,IAAIQ,MAAM,gCAGlB,IAAwBkP,OAAO1P,GAC/B,YAA6BA,GAAWgK,QAAQC,GAAiBA,GAAc,M,6BCRjF,8CACO,MAAM0F,EAA8BC,GAClC,YAAYA,EAAiB,K,6BCFtC,6CACO,MAAMC,EAAoB7P,GAAa,IAAwB+J,IAAI/J,I,6BCD1E,kCAAO,MAAM8P,EAAcC,GAClB,YAAaA,G,6BCDtB,kCAAO,MAAM7N,EAAoB8N,GACxB,YAAaA,G,6BCDtB,oDAEO,MAAMC,EAA2BnQ,GAC/B,YAAe,IAA+BA,I,6BCHvD,oDAEO,MAAMoQ,EAAsBpQ,GAC1B,YAAe,IAAmBA,I,6BCH3C,kCAAO,MAAMqQ,EAAoB,CAAChF,EAAQlB,IACjCmG,IACL,MAAMC,EAAa,CACjB/S,MAAO6N,GAOT,OALApO,OAAOuT,iBAAiBF,EAAO,CAC7BG,cAAeF,EACflF,OAAQkF,IAGmB,mBAAlBpG,EACFA,EAAczN,KAAK2O,EAAQiF,GAG7BnG,EAAcuG,YAAYhU,KAAK2O,EAAQiF,K,6BCdlD,8CACO,MAAMK,EAAsCC,IACpB,IAACC,EAA9BD,EAAYC,gBAAkBA,EAY3BD,EAAYC,eAXNC,IACL,IACE,OAAOD,EAAenU,KAAKkU,EAAaE,GACxC,MAAOzQ,GACP,GAAiB,KAAbA,EAAIC,KACN,MAAM,cAGR,MAAMD,O,6BCXd,kCAAO,MAAM0Q,EAA4DC,IAChC,IAACC,EAAxCD,EAA+BC,OAASA,EASrCD,EAA+BC,MARzB,CAACC,EAAO,EAAGC,EAAS,EAAGnG,KAC5B,GAAwB,iBAAbA,GAAyBA,EAAW,GAAKmG,EAAS,GAAKD,EAAO,EACvE,MAAM,IAAIE,WAAW,qCAIvBH,EAAMvU,KAAKsU,EAAgCE,EAAMC,EAAQnG,O,6BCR/D,kCAAO,MAAMqG,EAA2DL,IAChC,IAACM,EAAvCN,EAA+BM,MAAQA,EAQpCN,EAA+BM,KAPzB,CAACJ,EAAO,KACb,GAAIA,EAAO,EACT,MAAM,IAAIE,WAAW,oCAGvBE,EAAK5U,KAAKsU,EAAgCE,O,6BCPhD,kCAAO,MAAMK,EAAsDC,IACjE,IACEA,EAAkBC,cAAc,IAAIpD,aAAa,GAAI,GAAI,GACzD,MACA,OAAO,EAGT,OAAO,I,6BCPT,8CACO,MAAMqD,EAA0C,CAACC,EAAuBC,EAA4BC,EAAQC,KACjH,GAAI,YAAuBF,GAA6B,CACtD,MAAMG,EAAiCH,EAA2BI,OAAOF,GAEzE,OADAH,EAAsB5Q,QAAQgR,EAAgCF,EAAQ,GAC/D,CAACE,EAAgCF,EAAQ,GAIlD,OADAF,EAAsB5Q,QAAQ6Q,EAA4BC,EAAQC,GAC3D,CAACF,EAA4BC,EAAQC,K,6BCT9C,8CACO,MAAMG,EAA+C,CAACN,EAAuBC,EAA4BC,EAAQC,KAClH,YAAuBF,GACzBD,EAAsB3Q,WAAW4Q,EAA2BI,OAAOF,GAAQD,EAAQ,GAEnFF,EAAsB3Q,WAAW4Q,EAA4BC,EAAQC,K,6BCLlE,SAASI,EAAgBtB,EAChCuB,EAAQrU,EAAKsU,EAAeC,GAC1B,GAA2C,mBAAhCzB,EAAYsB,gBAEU,IAA3BC,EAAOrU,GAAKwU,aACdH,EAAOrU,GAAO,IAAIuQ,aAAa,MAGjCuC,EAAYsB,gBAAgBC,EAAOrU,GAAMsU,EAAeC,OACnD,CACL,MAAME,EAAc3B,EAAYC,eAAeuB,GAE/C,GAA+B,IAA3BD,EAAOrU,GAAKwU,WACdH,EAAOrU,GAAOyU,EAAYxE,MAAMsE,EAAcA,EAAe,SACxD,CACL,MAAMG,EAAc,IAAInE,aAAakE,EAAYjJ,OAAQ+I,EAAehE,aAAaoE,kBAAmB,KACxGN,EAAOrU,GAAK4L,IAAI8I,KAhBtB,mC,6BCAA,kCAAO,MAAME,EAAqB,CAACC,EAAGC,KACpC,MAAMC,EAAS,GAEf,IAAK,IAAItW,EAAI,EAAGA,EAAIoW,EAAGpW,GAAK,EAAG,CAC7B,MAAMuW,EAAQ,GACR3G,EAAsB,iBAANyG,EAAiBA,EAAIA,EAAErW,GAE7C,IAAK,IAAIwW,EAAI,EAAGA,EAAI5G,EAAQ4G,GAAK,EAC/BD,EAAM3E,KAAK,IAAIE,aAAa,MAG9BwE,EAAO1E,KAAK2E,GAGd,OAAOD,I,6BCdT,kCAAO,MAAMG,EAA2B,KACtC,IACE,OAAO,IAAI5S,aAAa,GAAI,sBAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,GACXD,EAAIvD,KAAO,qBACJuD,K,6BCPX,kCAAO,MAAM4S,EAAqB,CAAChV,EAAQC,EAAUgV,EAAcC,KACjE,IAAIhV,EAAYlB,OAAOmW,eAAenV,GAEtC,MAAQE,EAAUC,eAAeF,IAC/BC,EAAYlB,OAAOmW,eAAejV,GAGpC,MAAM,IACJf,EAAG,IACHsM,GACEzM,OAAOoW,yBAAyBlV,EAAWD,GAC/CjB,OAAOC,eAAee,EAAQC,EAAU,CACtCd,IAAK8V,EAAa9V,GAClBsM,IAAKyJ,EAAazJ,O,6BCbtB,kCAAO,MAAM4J,EAAqBC,QACTzT,IAAhByT,GAAoD,iBAAhBA,GAAmD,iBAAhBA,IAA6C,aAAhBA,GAA8C,gBAAhBA,GAAiD,aAAhBA,I,6BCD5K,kCAAO,MAAMC,EACX,YAAYC,GACVlG,KAAKmG,KAAO,IAAItS,IAAIqS,GAGtB,WACE,OAAOlG,KAAKmG,KAAKC,KAGnB,UACE,OAAOpG,KAAKmG,KAAKE,UAGnB,QAAQC,EAAUC,EAAU,MAC1B,OAAOvG,KAAKmG,KAAKxJ,QAAQ,CAAC1M,EAAOM,IAAQ+V,EAASnX,KAAKoX,EAAStW,EAAOM,EAAKyP,OAG9E,IAAIzQ,GACF,OAAOyQ,KAAKmG,KAAKtW,IAAIN,GAGvB,IAAIA,GACF,OAAOyQ,KAAKmG,KAAKzJ,IAAInN,GAGvB,OACE,OAAOyQ,KAAKmG,KAAKK,OAGnB,SACE,OAAOxG,KAAKmG,KAAK3I,Y,6BC9BrB,kCAAO,MAAM0G,EAAgB,CAACb,EAAauB,EAAQrU,EAAKsU,EAAeC,KAC5B,mBAA9BzB,EAAYa,cAEU,IAA3BU,EAAOrU,GAAKwU,YACd1B,EAAYa,cAAcU,EAAOrU,GAAMsU,EAAeC,GAKzB,IAA3BF,EAAOrU,GAAKwU,YACd1B,EAAYC,eAAeuB,GAAe1I,IAAIyI,EAAOrU,GAAMuU,K,6BCVjE,kCAGO,MAAM2B,EAAe,CAACC,EAAUC,EAAgBC,EAAaC,EAAmBC,EAAWC,EAASC,EAASC,EAAaC,EAAc3C,EAAOD,KACpJ,MAAM6C,EAAc5C,EAAM3F,OAC1B,IAAI5P,EAAIiY,EAER,IAAK,IAAIzB,EAAI,EAAGA,EAAI2B,EAAa3B,GAAK,EAAG,CACvC,IAAIH,EAAIuB,EAAY,GAAKrC,EAAMiB,GAE/B,IAAK,IAAI4B,EAAI,EAAGA,EAAIN,EAAWM,GAAK,EAAG,CACrC,MAAMhC,EAAIpW,EAAIoY,EAAIF,EAAe,EAEjC7B,GAAKuB,EAAYQ,GAAKL,EAAQ3B,GAC9BC,GAAKqB,EAASU,GAAKJ,EAAQ5B,GAG7B,IAAK,IAAIgC,EAAIN,EAAWM,EAAIP,EAAmBO,GAAK,EAClD/B,GAAKuB,EAAYQ,GAAKL,EAAQ/X,EAAIoY,EAAIF,EAAe,GAGvD,IAAK,IAAIE,EAAIN,EAAWM,EAAIT,EAAgBS,GAAK,EAC/C/B,GAAKqB,EAASU,GAAKJ,EAAQhY,EAAIoY,EAAIF,EAAe,GAGpDH,EAAQ/X,GAAKuV,EAAMiB,GACnBwB,EAAQhY,GAAKqW,EACbrW,EAAIA,EAAI,EAAIkY,EAAe,EAE3B5C,EAAOkB,GAAKH,EAGd,OAAOrW,I,6BChCT,kCAAO,MAAMqY,EAAoB,CAACC,EAAaC,IACzB,OAAhBD,EACK,IAGFtJ,KAAKwJ,IAAI,IAAKxJ,KAAKyJ,IAAI,MAAOzJ,KAAKqB,IAAI,EAAGrB,KAAK0J,MAAM1J,KAAK2J,KAAKL,EAAcC,Q,6BCLtF,kCAAO,MAAMK,EAAqB,KAChC,IACE,OAAO,IAAI/U,aAAa,GAAI,gBAC5B,MAAOC,GAGP,OADAA,EAAIvD,KAAO,eACJuD,K,6BCNX,kCAAO,MAAM+U,EAAYC,IACvB,GAAc,OAAVA,EACF,OAAO,EAGT,MAAMlJ,EAASkJ,EAAMlJ,OAErB,OAAIA,EAAS,GAAM,EACwB,IAAlCkJ,EAAM9J,KAAK0B,MAAMd,EAAS,IAG5BkJ,EAAMlJ,EAAS,EAAI,GAAKkJ,EAAMlJ,EAAS,KAAO,I,6BCXvD,ihB,60CCAA,ioF,6iMCAA,kCAAO,MAAMmJ,EAAmB,KAC9B,IACE,OAAO,IAAIlV,aAAa,GAAI,cAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,GACXD,EAAIvD,KAAO,aACJuD,K,6BCPX,kCAAO,MAAMkV,EAAgCC,GACpC,CAACtV,EAAWuV,EAAmBpW,KACpC,MAAMqW,EAAe,GAErB,IAAK,IAAInZ,EAAI,EAAGA,EAAI8C,EAAgBsW,eAAgBpZ,GAAK,EACvDmZ,EAAavH,KAAK,IAAIyH,KAGxBJ,EAA0B9L,IAAIxJ,EAAW,CACvCwV,eACAG,QAAS,IAAID,IACbE,cAAe,IAAIpX,QACnBqX,SAAUN,M,6BCZhB,kCAAO,MAAMO,EAAiCC,GACrC,CAACjW,EAAYkW,KAClBD,EAA2BvM,IAAI1J,EAAY,CACzC0V,aAAc,IAAIE,IAClBE,cAAe,IAAIpX,QACnBqX,SAAUG,M,6BCLhB,kCAAO,MAAMC,EAA4BpT,GAChC,CAACrD,EAAesR,KACrB,MAAMoF,EAAiBrT,EAAqBrD,EAAe,CACzD2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBC,KAAM,IAERxF,EAA+BjQ,QAAQqV,GAKtCrV,QAAQqV,EAAezW,QAAQ8W,aAEhC,MAAMzV,EAAa,KACjBgQ,EAA+B0F,oBAAoB,QAAS1V,GAC5DgQ,EAA+BhQ,WAAWoV,GAC1CA,EAAepV,cAGjBgQ,EAA+B2F,iBAAiB,QAAS3V,K,6BCrB7D,kCAAO,MAAM4V,EAAsC1O,GAC1C,CAACxI,EAAemX,KACrB3O,EAA+BxI,GAAeqK,IAAI8M,K,6BCFtD,wCAAMC,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBQ,QAAS,KACTC,aAAc,GACdC,aAAc,IACdC,sBAAuB,IAEZC,EAAgC,CAACC,EAAuBtV,EAA4B0H,EAAsB7H,EAA0BK,EAAkBT,IAC1J,cAA2B6V,EAChC,YAAYzX,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECgY,EAAqB3V,EAAyBjC,EAAe2X,GAEnEE,MAAM5X,GAAS,EAAO2X,EADO/V,EAA4B7B,GAAiBoC,IAA+B,MAEzGyL,KAAKiK,oBAAsBF,EAG7B,cACE,OAAO/J,KAAKiK,oBAAoBT,QAGlC,YAAYvZ,GACV+P,KAAKiK,oBAAoBT,QAAUvZ,EAGrC,wBACE,OAAO+P,KAAKiK,oBAAoBC,kBAGlC,kBACE,OAAOlK,KAAKiK,oBAAoBR,YAGlC,gBAAgBxZ,GAEd,MAAMwZ,EAAczJ,KAAKiK,oBAAoBR,YAG7C,GAFAzJ,KAAKiK,oBAAoBR,YAAcxZ,IAEjCA,EAAQ+P,KAAKiK,oBAAoBP,aAErC,MADA1J,KAAKiK,oBAAoBR,YAAcA,EACjCxN,IAIV,kBACE,OAAO+D,KAAKiK,oBAAoBP,YAGlC,gBAAgBzZ,GAEd,MAAMyZ,EAAc1J,KAAKiK,oBAAoBP,YAG7C,GAFA1J,KAAKiK,oBAAoBP,YAAczZ,IAEjC+P,KAAKiK,oBAAoBR,YAAcxZ,GAE3C,MADA+P,KAAKiK,oBAAoBP,YAAcA,EACjCzN,IAIV,4BACE,OAAO+D,KAAKiK,oBAAoBN,sBAGlC,0BAA0B1Z,GACxB+P,KAAKiK,oBAAoBN,sBAAwB1Z,EAGnD,qBAAqBsV,GACnBvF,KAAKiK,oBAAoBE,qBAAqB5E,GAGhD,sBAAsBA,GACpBvF,KAAKiK,oBAAoBG,sBAAsB7E,GAGjD,sBAAsBA,GACpBvF,KAAKiK,oBAAoBI,sBAAsB9E,GAGjD,uBAAuBA,GACrBvF,KAAKiK,oBAAoBK,uBAAuB/E,M,6BCrFtD,6CACO,MAAMgF,EAAoC,CAACnW,EAA0B1B,EAAoB4B,IACvF,KACL,MAAMkW,EAA8B,IAAIrZ,QAyBxC,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMC,EAA6BJ,EAA4B3a,IAAI6a,GAEnE,YAAmCnY,IAA/BqY,EACKC,QAAQC,QAAQF,GA5BFG,OAAON,EAAOC,EAA2BC,KAClE,IAAIZ,EAAqBrX,EAAmB+X,GAI5C,IAF2C,YAAiBV,EAAoBW,GAEvC,CACvC,MAAM3Y,EAAU,CACd+W,aAAciB,EAAmBjB,aACjCC,iBAAkBgB,EAAmBhB,iBACrCC,sBAAuBe,EAAmBf,sBAC1CQ,QAASO,EAAmBP,QAC5BC,YAAaM,EAAmBN,YAChCC,YAAaK,EAAmBL,YAChCC,sBAAuBI,EAAmBJ,uBAE5CI,EAAqB3V,EAAyBsW,EAA2B3Y,GAK3E,OAFAyY,EAA4BrO,IAAIuO,EAA2BX,SACrDzV,EAAwBmW,EAAOC,EAA2BX,EAAoBY,GAC7EZ,GAWEiB,CAAmBP,EAAOC,EAA2BC,O,6BCpCpE,sDAEA,MAAMpB,EAAkB,CACtB0B,iBAAkB,GAEPC,EAA+B,CAACjW,EAAkBrB,EAAiBR,EAAyB8B,EAA8BnB,EAAsCoX,EAAyC9V,EAAmCC,KACvP,IAAIoV,EAA4B,KAChC,OAAO,MAAMU,EACX,YAAYrZ,GACV,GAA6C,OAAzCgC,EACF,MAAM,IAAIZ,MAAM,uDAGlB,MAAM,OACJyL,EAAM,iBACNqM,EAAgB,WAChB1D,GACE,IAAKgC,KACJxX,GAG6B,OAA9B2Y,IACFA,EAA4B,IAAI3W,EAAqC,EAAG,EAAG,QAQ7E,MAAMsP,EAA+C,OAAjCnO,GAAyCtB,EAAgBuX,EAAyCA,GAA2C,IAAIjW,EAA6B,CAChM0J,SACAqM,mBACA1D,eACGmD,EAA0BW,aAAaJ,EAAkBrM,EAAQ2I,GAEtE,GAAqC,IAAjClE,EAAY4H,iBACd,MAAM7X,IAkBR,MAb2C,mBAAhCiQ,EAAYsB,iBACrBtP,EAAkCgO,GAClC,YAAoCA,IAC1BzP,EAAgB,IAAqD,IAAM,YAAoDyP,KACzI/N,EAA6C+N,GAG/CpO,EAAiBuH,IAAI6G,GAMdA,EAGT,OAAQtT,OAAOub,aAAaC,GAC1B,OAAoB,OAAbA,GAAyC,iBAAbA,GAAyB7b,OAAOmW,eAAe0F,KAAcH,EAAYxa,WAAaqE,EAAiByH,IAAI6O,O,6BC3DpJ,6DAGA,MAAMhC,EAAkB,CACtBxN,OAAQ,KACR+M,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WAEvBwC,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,GAEHC,EAAyC,CAAC7W,EAAsBmB,EAAqCC,EAAkBvD,EAAyBoD,EAAmCvB,EAAkBT,EAA6B8O,IACtO,cAAoC/N,EACzC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAEC8Z,EAA8B7V,EAAkC7D,EAAe2X,GAC/EgC,EAAY9X,EAA4B7B,GACxC4Z,EAAgCD,EAAY5V,IAAwC,KAC1F8T,MAAM5X,GAAS,EAAOyZ,EAA6BE,GACnD/L,KAAKgM,+BAAiCD,EACtC/L,KAAKiM,oBAAqB,EAC1BjM,KAAKkM,aAAkC,OAAnBna,EAAQgK,aAAsCxJ,IAAnBR,EAAQgK,OACvDiE,KAAKmM,6BAA+BN,EACpC7L,KAAKoM,SAAW,KAEhBpM,KAAKqM,cAAgBlW,EAAiB6J,KAAM8L,EAAWD,EAA4BF,aAAc,IAA4B,KAG/H,aACE,OAAI3L,KAAKiM,mBACA,KAGFjM,KAAKmM,6BAA6BpQ,OAG3C,WAAW9L,GAET,IACE+P,KAAKmM,6BAA6BpQ,OAAS9L,EAC3C,MAAO6C,GACP,GAAc,OAAV7C,GAA+B,KAAb6C,EAAIC,KACxB,MAAMD,EAIR,GAAiD,OAA7CkN,KAAKmM,6BAA6BpQ,OAAiB,CACrD,MAAMA,EAASiE,KAAKmM,6BAA6BpQ,OAC3CkP,EAAmBlP,EAAOkP,iBAEhC,IAAK,IAAIjc,EAAI,EAAGA,EAAIic,EAAkBjc,GAAK,EACzC+M,EAAOuH,eAAetU,GAAGsd,KAAK,GAGhCtM,KAAKiM,oBAAqB,GAK9B,GAAc,OAAVhc,EAAgB,CAClB,GAAI+P,KAAKkM,aACP,MAAMtZ,IAGRoN,KAAKkM,cAAe,GAIxB,WACE,OAAOlM,KAAKmM,6BAA6BX,KAG3C,SAASvb,GACP+P,KAAKmM,6BAA6BX,KAAOvb,EAG3C,cACE,OAAO+P,KAAKmM,6BAA6BV,QAG3C,YAAYxb,GACV+P,KAAKmM,6BAA6BV,QAAUxb,EAG9C,gBACE,OAAO+P,KAAKmM,6BAA6BT,UAG3C,cAAczb,GACZ+P,KAAKmM,6BAA6BT,UAAYzb,EAGhD,cACE,OAAO+P,KAAKoM,SAGd,YAAYnc,GACV,MAAMsc,EAAmC,mBAAVtc,EAAuB6S,EAAkB9C,KAAM/P,GAAS,KACvF+P,KAAKmM,6BAA6BK,QAAUD,EAC5C,MAAME,EAAgBzM,KAAKmM,6BAA6BK,QACxDxM,KAAKoM,SAA6B,OAAlBK,GAA0BA,IAAkBF,EAAkBtc,EAAQwc,EAGxF,mBACE,OAAOzM,KAAKqM,cAGd,MAAM1I,EAAO,EAAGC,EAAS,EAAGnG,GAG1B,GAFAuC,KAAKmM,6BAA6BzI,MAAMC,EAAMC,EAAQnG,GAEV,OAAxCuC,KAAKgM,+BACPhM,KAAKgM,+BAA+BtI,WAAqBnR,IAAbkL,EAAyB,CAACkG,EAAMC,GAAU,CAACD,EAAMC,EAAQnG,OAChG,CACL,YAAyBuC,MAEzB,MAAM0M,EAA8B,KAClC1M,KAAKmM,6BAA6BhD,oBAAoB,QAASuD,GAG/DC,WAAW,IAAM,YAA0B3M,MAAO,MAGpDA,KAAKmM,6BAA6B/C,iBAAiB,QAASsD,IAIhE,KAAK/I,EAAO,GACV3D,KAAKmM,6BAA6BpI,KAAKJ,GAEK,OAAxC3D,KAAKgM,iCACPhM,KAAKgM,+BAA+BjI,KAAOJ,M,6BCxInD,6CACO,MAAMiJ,EAA6C,CAAC7W,EAAmBC,EAAmCtD,EAAoBuD,EAAkB3B,IAC9I,KACL,MAAMuY,EAAuC,IAAI1b,QACjD,IAAIuS,EAAQ,KACRK,EAAO,KAgDX,MAAO,CACL,UAAU9T,GACRyT,EAAQzT,GAGV,SAASA,GACP8T,EAAO9T,GAGT,OAAOwa,EAAOC,EAA2BC,GACvC,MAAMmC,EAAsCD,EAAqChd,IAAI6a,GAErF,YAA4CnY,IAAxCua,EACKjC,QAAQC,QAAQgC,GA3DO/B,OAAON,EAAOC,EAA2BC,KAC3E,IAAIkB,EAA8BnZ,EAAmB+X,GAMrD,MAAMsC,EAA8C,YAAiBlB,EAA6BnB,GAElG,IAAKqC,EAA6C,CAChD,MAAMhb,EAAU,CACdgK,OAAQ8P,EAA4B9P,OACpC+M,aAAc+C,EAA4B/C,aAC1CC,iBAAkB8C,EAA4B9C,iBAC9CC,sBAAuB6C,EAA4B7C,sBAEnDwC,KAAMK,EAA4BL,KAClCC,QAASI,EAA4BJ,QACrCC,UAAWG,EAA4BH,UACvCC,aAAcE,EAA4BF,aAAa1b,OAEzD4b,EAA8B7V,EAAkC0U,EAA2B3Y,GAE7E,OAAV2R,GACFmI,EAA4BnI,SAASA,GAG1B,OAATK,GACF8H,EAA4B9H,KAAKA,GAerC,OAXA8I,EAAqC1Q,IAAIuO,EAA2BmB,GAE/DkB,QAKGhX,EAAkB2U,EAA2BD,EAAMkB,aAAcE,EAA4BF,aAAchB,SAH3G1U,EAAiByU,EAA2BD,EAAMkB,aAAcE,EAA4BF,aAAchB,SAM5GrW,EAAwBmW,EAAOC,EAA2BmB,EAA6BlB,GACtFkB,GAmBEmB,CAA4BvC,EAAOC,EAA2BC,O,6BCrE7E,8CACO,MAAMsC,EAAgC,CAAChT,EAA6BrH,EAAyBQ,EAAyBwU,EAAoBzN,EAAwCE,EAA4CE,EAAuCE,EAA4CxG,IAC/S,cAA2BgG,EAChC,YAAYlI,EAAU,IACpB,GAAsC,OAAlCkC,EACF,MAAM,IAAId,MAAM,gDAGlB,MAAM+Z,EAAqB,IAAIjZ,EAA8BlC,GAE7D,GAA2B,OAAvBmb,EACF,MAAMtF,IAIR,IAAK,YAAmB7V,EAAQiU,aAC9B,MAAM,IAAImH,UAAU,uBAAuBpb,EAAQiU,+EAIrD,QAA2BzT,IAAvBR,EAAQwV,YAA4B2F,EAAmB3F,aAAexV,EAAQwV,WAChF,MAAMnU,IAGR4W,MAAMkD,EAAoB,GAC1B,MAAM,YACJlH,GACEjU,GACE,WACJwV,GACE2F,EAeJ,GAbAlN,KAAKoN,aAAyD,iBAAnCF,EAAmB5F,YAA2B4F,EAAmB5F,YAA8B,aAAhBtB,EAA6B,IAAMuB,EAA6B,gBAAhBvB,QAAiDzT,IAAhByT,EAA4B,IAAMuB,EAA6B,aAAhBvB,EAA6B,KAAOuB,EAKrM,IAAzEvJ,KAAKwJ,IAAI,EAAGxJ,KAAKyJ,IAAI,IAAKzJ,KAAK0J,MAAM1B,EAAcuB,EAAa,OAAeA,EAC/EvH,KAAKqN,oBAAsBH,EAC3BlN,KAAKsN,OAAS,KAMmB,YAA7BJ,EAAmBK,MAAqB,CAC1CvN,KAAKsN,OAAS,YAEd,MAAME,EAAc,KACE,cAAhBxN,KAAKsN,SACPtN,KAAKsN,OAAS,MAGhBJ,EAAmB/D,oBAAoB,cAAeqE,IAGxDN,EAAmB9D,iBAAiB,cAAeoE,IAIvD,kBACE,OAAOxN,KAAKoN,aAGd,YACE,OAAuB,OAAhBpN,KAAKsN,OAAkBtN,KAAKsN,OAAStN,KAAKqN,oBAAoBE,MAGvE,QAEE,MAAmB,WAAfvN,KAAKuN,MACAvN,KAAKqN,oBAAoBI,QAAQC,KAAK,KAC3C,MAAM9a,OAKU,cAAhBoN,KAAKsN,SACPtN,KAAKsN,OAAS,MAGTtN,KAAKqN,oBAAoBI,SAOlC,yBAAyBE,GACvB,OAAO,IAAIxT,EAAuC6F,KAAM,CACtD2N,iBAIJ,+BACE,OAAO,IAAItT,EAA2C2F,MAGxD,wBAAwB4N,GACtB,OAAO,IAAIrT,EAAsCyF,KAAM,CACrD4N,gBAIJ,6BAA6BC,GAC3B,OAAO,IAAIpT,EAA2CuF,KAAM,CAC1D6N,qBAIJ,SACE,MAAoB,cAAhB7N,KAAKsN,OACA,IAAIzC,QAAQ,CAACC,EAASgD,KAC3B,MAAMC,EAAiB,KACrB/N,KAAKqN,oBAAoBlE,oBAAoB,cAAe4E,GAErB,YAAnC/N,KAAKqN,oBAAoBE,MAC3BzC,IAEA9K,KAAKgO,SAASN,KAAK5C,EAASgD,IAIhC9N,KAAKqN,oBAAoBjE,iBAAiB,cAAe2E,KAItD/N,KAAKqN,oBAAoBW,SAAShS,MAAMlJ,IAG7C,QAAYP,IAARO,GAAkC,KAAbA,EAAIC,KAC3B,MAAMH,IAGR,MAAME,IAIV,UACE,OAAOkN,KAAKqN,oBAAoBY,UAAUjS,MAAMlJ,IAE9C,QAAYP,IAARO,EACF,MAAMF,IAGR,MAAME,O,6BCjJd,kCAAO,MAAMob,EAAwC,CAACnZ,EAAsBoZ,EAAoClS,EAAsBrJ,EAAyBwb,EAAkC3Z,EAAkBT,EAA6BM,IACvO,cAAmCS,EACxC,YAAY3C,EAAS0W,GACnB,MAAM3W,EAAgBsC,EAAiBrC,GACjC0Z,EAAY9X,EAA4B7B,GACxCkc,EAA6BD,EAAiCjc,EAAe2W,EAAcgD,GAEjG9B,MAAM5X,GAAS,EAAOic,EADevC,EAAYqC,EAAmC7Z,GAA2B,MAE/G0L,KAAKsO,mCAAqCxC,EAC1C9L,KAAKuO,4BAA8BF,EAGrC,mBACE,OAAOrO,KAAKuO,4BAA4BzF,aAG1C,iBAAiB7Y,GAGf,GAAI+P,KAAKsO,mCACP,MAAM1b,IAIR,GAAI3C,EAAQ+P,KAAKuO,4BAA4BC,gBAC3C,MAAMvS,IAGR+D,KAAKuO,4BAA4BzF,aAAe7Y,EAGlD,uBACE,OAAO+P,KAAKuO,4BAA4BxF,iBAG1C,qBAAqB9Y,GAEnB,GAAI+P,KAAKsO,mCACP,MAAM1b,IAGRoN,KAAKuO,4BAA4BxF,iBAAmB9Y,EAGtD,sBACE,OAAO+P,KAAKuO,4BAA4BC,mB,6BC7C9C,kCAAO,MAAML,EAAqC7Z,IAChD,IAAIma,EAAoC,KAQxC,MAAO,CACLC,OAAM,CAACjE,EAAOC,EAA2BC,KACG,OAAtC8D,IACFA,EAT6B1D,OAAON,EAAOC,EAA2BC,KAC1E,MAAM0D,EAA6B3D,EAA0BxB,YAE7D,aADM5U,EAAwBmW,EAAOC,EAA2B2D,EAA4B1D,GACrF0D,GAMiCM,CAA2BlE,EAAOC,EAA2BC,IAG5F8D,M,6BCfb,6CACO,MAAMG,EAA6B,CAACzY,EAAkBQ,EAA+BO,EAAgCe,EAAiCjE,IACpJ,CAAC5B,EAASD,KACf,MAAM0c,EAAiB1c,EAAc2c,UA2E/B,SACJC,EAAQ,SACRC,EAAQ,SACRC,EAAQ,UACRC,EAAS,UACTC,EAAS,UACTC,EAAS,IACTC,EAAG,IACHC,EAAG,IACHC,QAC8Bhd,IAA5Bsc,EAAeE,SAnFW,MAC5B,MAAMS,EAAoB7Y,EAA8BxE,EAAe,CACrE2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgB,IAEZ0D,EAAY9X,EAA4B7B,GACxCsd,EAAsBxX,EAAgC9F,EAAe,IAAK,EAAG,GAE7Eud,EAAuB,CAACnL,EAAOtU,KACnC,MAAM0f,EAAqBzY,EAA+B/E,EAAe,CACvE2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBpF,OAAQ3T,IAgBV,OAdA0f,EAAmBnc,QAAQgc,EAAmB,EAAGjL,GAEjDoL,EAAmBjM,QACnBhU,OAAOC,eAAeggB,EAAmB/L,OAAQ,eAAgB,CAC/D/T,IAAG,IACMI,IASJkG,EAAiB,CACtB/D,WACC0Z,EAAW6D,EAAmB/L,OAAQ,IAA4B,MAGvE,IAAIgM,EAAkB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACnCC,EAAe,CAAC,EAAG,EAAG,GAuB1B,OArBAJ,EAAoBK,eAAiB,EACnCC,kBAEA,MAAMC,EAAc,CAACD,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,IAEzN0M,EAAYC,KAAK,CAAChgB,EAAOyO,IAAUzO,IAAU2f,EAAgBlR,MAC/DmQ,EAAeqB,kBAAkBF,GAEjCJ,EAAkBI,GAGpB,MAAMG,EAAU,CAACJ,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,IAE/G6M,EAAQF,KAAK,CAAChgB,EAAOyO,IAAUzO,IAAU4f,EAAanR,MACxDmQ,EAAeuB,eAAeD,GAE9BN,EAAeM,IAInBX,EAAkBhc,QAAQic,GACnB,CACLV,SAAUW,EAAqB,EAAG,GAClCV,SAAUU,EAAqB,EAAG,GAClCT,SAAUS,EAAqB,GAAI,GACnCR,UAAWQ,EAAqB,EAAG,GACnCP,UAAWO,EAAqB,EAAG,GACnCN,UAAWM,EAAqB,EAAG,GACnCL,IAAKK,EAAqB,EAAG,GAC7BJ,IAAKI,EAAqB,EAAG,GAC7BH,IAAKG,EAAqB,EAAG,KAcWW,GAA0BxB,EACtE,MAAO,CACL,eACE,OAAOE,GAGT,eACE,OAAOC,GAGT,eACE,OAAOC,GAGT,gBACE,OAAOC,GAGT,gBACE,OAAOC,GAGT,gBACE,OAAOC,GAGT,UACE,OAAOC,GAGT,UACE,OAAOC,GAGT,UACE,OAAOC,M,6BC3Hf,8CACO,MAAMe,EAA0B,CAACC,EAA0B7b,EAA0B8b,EAAiBC,EAA0B7O,EAAoCC,EAA4CC,EAA6CC,EAAwCC,EAAgC3E,EAA+BE,EAAoCtJ,IACtY,CAACtB,EAAW+d,EAAmCC,EAAkBC,EAAW,KAAMC,EAAW,QAClG,MAAMC,EAAsB,IAAI,sBAAoBH,EAAiBhS,cAC/DgK,EAAqB+H,EAAoCD,EAAyBK,GAAuB,KACzGre,EAAa,CACjB,mBACE,OAAOke,EAAiBhS,cAG1B,eACE,OAAoB,OAAbiS,EAAoBD,EAAiBC,SAAWA,GAGzD,eACE,OAAoB,OAAbC,EAAoBF,EAAiBE,SAAWA,GAGzD,YACE,OAAOF,EAAiB1gB,OAG1B,UAAUA,GACR0gB,EAAiB1gB,MAAQA,EAEzBwC,EAAWse,eAAe9gB,EAAO0C,EAAUP,QAAQ4e,cAGrD,oBAAoB7R,GAElB,GAAoD,mBAAzCwR,EAAiBM,oBACC,OAAvBtI,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIoF,EAAmCzC,IAC3DwR,EAAiBM,oBAAoB9R,OAChC,CACL,MAAMgS,EAAoBC,MAAMC,KAAKP,GAAqBQ,MAE/B,OAAvB3I,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIoF,EAAmCzC,IAC3D,MAAMoS,EAAmBH,MAAMC,KAAKP,GAAqBQ,MACzDX,EAAiBa,sBAAsBrS,GAEnCgS,IAAsBI,QAAyChf,IAArBgf,IACd,2BAA1BA,EAAiBpU,KACnBwT,EAAiBc,6BAA6BF,EAAiBthB,MAAOshB,EAAiBtU,SACpD,sBAA1BsU,EAAiBpU,KAC1BwT,EAAiBe,wBAAwBH,EAAiBthB,MAAOshB,EAAiBtU,SAC/C,aAA1BsU,EAAiBpU,KAC1BwT,EAAiBI,eAAeQ,EAAiBthB,MAAOshB,EAAiBjU,WACtC,kBAA1BiU,EAAiBpU,MAC1BwT,EAAiBgB,oBAAoBJ,EAAiB/T,OAAQ+T,EAAiBjU,UAAWiU,EAAiB9T,WAKjH,OAAOhL,GAGT+e,sBAAsBrS,IACO,OAAvBwJ,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIqF,EAA2C1C,IACnEwR,EAAiBa,sBAAsBrS,GAChC1M,GAGTgf,6BAA4B,CAACxhB,EAAOgN,KACP,OAAvB0L,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIsF,EAA4C7R,EAAOgN,IAC3E0T,EAAiBc,6BAA6BxhB,EAAOgN,GAC9CxK,GAGTif,wBAAuB,CAACzhB,EAAOgN,KACF,OAAvB0L,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIuF,EAAuC9R,EAAOgN,IACtE0T,EAAiBe,wBAAwBzhB,EAAOgN,GACzCxK,GAGTmf,gBAAe,CAAC9T,EAAQR,EAAWS,KACN,OAAvB4K,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIwF,EAA+BlE,EAAQR,EAAWS,IAC1E4S,EAAiBiB,gBAAgB9T,EAAQR,EAAWS,GAC7CtL,GAGTse,eAAc,CAAC9gB,EAAOqN,KACO,OAAvBqL,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIa,EAA8BpN,EAAOqN,IAC7DqT,EAAiBI,eAAe9gB,EAAOqN,GAChC7K,GAGT,oBAAoB+K,EAAQF,EAAWG,GAMrC,GAAsC,OAAlCxJ,GAAiF,uBAAvCA,EAA8B1E,KAA+B,CACzG,MAAM0N,EAAUK,EAAYG,EACtB8J,EAAa5U,EAAUP,QAAQmV,WAC/BsK,EAAc7T,KAAK4B,KAAKtC,EAAYiK,GACpCuK,EAAa9T,KAAK0B,MAAMzC,EAAUsK,GAClCwK,EAA6BD,EAAaD,EAC1CG,EAAqB,IAAIlR,aAAaiR,GAE5C,IAAK,IAAI/iB,EAAI,EAAGA,EAAI+iB,EAA4B/iB,GAAK,EAAG,CACtD,MAAMwQ,GAAkBhC,EAAOoB,OAAS,GAAKnB,IAAaoU,EAAc7iB,GAAKuY,EAAajK,GACpFmC,EAAazB,KAAK0B,MAAMF,GACxBG,EAAa3B,KAAK4B,KAAKJ,GAC7BwS,EAAmBhjB,GAAKyQ,IAAeE,EAAanC,EAAOiC,IAAe,GAAKD,EAAiBC,IAAejC,EAAOiC,IAAe,GAAKE,EAAaH,IAAmBhC,EAAOmC,GAGxJ,OAAvBgJ,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIe,EAAmCyU,EAAoB1U,EAAWG,IAC1FkT,EAAiBgB,oBAAoBK,EAAoB1U,EAAWG,GACpE,MAAMwU,EAAmBH,EAAavK,EAElC0K,EAAmBhV,GACrBxK,EAAWse,eAAeiB,EAAmBA,EAAmBpT,OAAS,GAAIqT,GAG/Exf,EAAWse,eAAevT,EAAOA,EAAOoB,OAAS,GAAI3B,QAE1B,OAAvB0L,GACFmI,EAAoBI,MAAMve,EAAUP,QAAQ4e,aAG9CF,EAAoBtU,IAAIe,EAAmCC,EAAQF,EAAWG,IAC9EkT,EAAiBgB,oBAAoBnU,EAAQF,EAAWG,GAG1D,OAAOhL,IAOX,OAHA+d,EAAgBrU,IAAI1J,EAAYke,GAChCjc,EAAyByH,IAAI1J,EAAYE,GACzC4d,EAAyB9d,EAAYkW,GAC9BlW,I,6BCpKX,kCAAO,MAAMge,EAA2BK,IAC/B,CACL,OAAOre,GACL,IAAK,MAAM0L,KAAmB2S,EAC5B,GAA6B,2BAAzB3S,EAAgBhB,KAAmC,CACrD,MAAM,QACJF,EAAO,MACPhN,GACEkO,EACJ1L,EAAWgf,6BAA6BxhB,EAAOgN,QAC1C,GAA6B,sBAAzBkB,EAAgBhB,KAA8B,CACvD,MAAM,QACJF,EAAO,MACPhN,GACEkO,EACJ1L,EAAWif,wBAAwBzhB,EAAOgN,QACrC,GAA6B,cAAzBkB,EAAgBhB,KAAsB,CAC/C,MAAM,UACJG,EAAS,OACTQ,EAAM,aACNC,GACEI,EACJ1L,EAAWmf,gBAAgB9T,EAAQR,EAAWS,QACzC,GAA6B,aAAzBI,EAAgBhB,KAAqB,CAC9C,MAAM,UACJG,EAAS,MACTrN,GACEkO,EACJ1L,EAAWse,eAAe9gB,EAAOqN,OAC5B,IAA6B,kBAAzBa,EAAgBhB,KAQzB,MAAM,IAAIhK,MAAM,sCARmC,CACnD,MAAM,SACJsK,EAAQ,UACRH,EAAS,OACTE,GACEW,EACJ1L,EAAWkf,oBAAoBnU,EAAQF,EAAWG,S,6BCnC5D,qDAEA,MAAM8L,EAAkB,CACtBT,aAAc,EAEdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgB,EAChB8J,gBAAiB,EACjBC,wBAAoB5f,EACpB6f,cAAe,GACfC,iBAAkB,IAGdC,EAAqB1T,IACzB,MAAMkK,EAAe,GAErB,IAAK,IAAI9Z,EAAI,EAAGA,EAAI4P,EAAQ5P,GAAK,EAC/B8Z,EAAalI,KAAK,GAGpB,OAAOkI,GAeIyJ,EAAoC,CAAC3X,EAA+B7F,EAAsBoB,EAAkBgF,EAAgCF,EAA8BxG,EAAkBT,EAA6BkH,EAAmC4H,IAChQ,cAA+B/N,EACpC,YAAY3C,EAAS7C,EAAMwC,EAAUwX,GACnC,MAAMpX,EAAgBsC,EAAiBrC,GACjC0Z,EAAY9X,EAA4B7B,GACxC2X,EAjBa/X,KAChB,IAAKA,EACVogB,wBAAmD5f,IAA/BR,EAAQogB,mBAAmCpgB,EAAQogB,mBAAgD,IAA3BpgB,EAAQqW,gBAAoD,IAA5BrW,EAAQmgB,gBAMpI,CAACngB,EAAQ+W,cAAgBwJ,EAAmBvgB,EAAQmgB,mBAS5BM,CAAiB,IAAKjJ,KACvCxX,IAEC0gB,EAAoC,IAAwC5iB,IAAIsC,GAChFugB,OAA6DngB,IAAtCkgB,OAAkDlgB,EAAYkgB,EAAkC5iB,IAAIN,GAC3HojB,EAAyB1X,EAA6B9I,EAAe2Z,EAAY,KAAO1Z,EAAQkV,YAAapM,EAAmC3L,EAAMmjB,EAAsB5I,GAOlLE,MAAM5X,GAAS,EAAMugB,EANY7G,EAAY3Q,EAA+B5L,EAAMua,EAAe4I,GAAwB,MAOzH,MAAMxM,EAAa,GACnByM,EAAuBzM,WAAWvJ,QAAQ,CAACgU,EAAkBiC,KAC3D,MAAMngB,EAAa0D,EAAiB6J,KAAM8L,EAAW6E,GACrDzK,EAAWtF,KAAK,CAACgS,EAAIngB,MAEvBuN,KAAK6S,wBAA0BF,EAC/B3S,KAAK8S,kBAAoB,KACzB9S,KAAK+S,YAAc,IAAI,IAAY7M,GAM/B4F,GACFlR,EAA8BzI,EAAe6N,MAIjD,uBACE,OAAOA,KAAK8S,kBAGd,qBAAqB7iB,GACnB,MAAMsc,EAAmC,mBAAVtc,EAAuB6S,EAAkB9C,KAAM/P,GAAS,KACvF+P,KAAK6S,wBAAwBG,iBAAmBzG,EAChD,MAAM0G,EAAyBjT,KAAK6S,wBAAwBG,iBAC5DhT,KAAK8S,kBAA+C,OAA3BG,GAAmCA,IAA2B1G,EAAkBtc,EAAQgjB,EAGnH,iBACE,OAAyB,OAArBjT,KAAK+S,YAEA/S,KAAK6S,wBAAwB3M,WAG/BlG,KAAK+S,YAGd,WACE,OAAO/S,KAAK6S,wBAAwBK,Q,6BC7F1C,kCAAO,MAAMC,EAAoC,CAACrZ,EAAuB9E,EAAyBO,EAAwBa,EAAkCI,EAA6BK,EAA8BG,EAAgCI,EAA+BI,EAA0BwC,EAAiBrC,EAAsBG,EAAmCE,EAAqBM,EAA0BG,EAAoCG,EAA2BO,EAAuBE,EAAyBI,EAA6BE,IAC5iB,cAA+BlB,EACpC,YAAY2a,EAAgBnI,GAC1BjB,MAAMoJ,EAAgBnI,GACtBjL,KAAKoT,eAAiBA,EACtBpT,KAAKqT,mBAA0C9gB,IAA1BuH,OAAsCvH,EAAY,CACrE+gB,UAAW,CAACC,EAAWxhB,IACd+H,EAAsBkG,KAAMuT,EAAWxhB,IAKpD,mBACE,OAAOiO,KAAKqT,cAGd,iBACE,OAAO,IAAIre,EAAwBgL,MAGrC,qBACE,OAAO,IAAIxJ,EAA4BwJ,MAGzC,aAAaiL,EAAkBrM,EAAQ2I,GACrC,OAAO,IAAIhS,EAAuB,CAChCqJ,SACAqM,mBACA1D,eAIJ,qBACE,OAAO,IAAInR,EAAiC4J,MAG9C,oBAAoBoI,EAAiB,GACnC,OAAO,IAAIvR,EAA6BmJ,KAAM,CAC5CoI,mBAIJ,sBAAsB8J,EAAkB,GACtC,OAAO,IAAIlb,EAA+BgJ,KAAM,CAC9CkS,oBAIJ,uBACE,OAAO,IAAI9a,EAA8B4I,MAG3C,kBACE,OAAO,IAAIxI,EAAyBwI,MAGtC,YAAYwT,EAAe,GACzB,OAAO,IAAI7b,EAAqBqI,KAAM,CACpCwT,iBAIJ,2BACE,OAAO,IAAI1b,EAAkCkI,MAG/C,aACE,OAAO,IAAIhI,EAAoBgI,MAGjC,gBAAgB4G,EAAaF,GAC3B,OAAO,IAAIpO,EAAyB0H,KAAM,CACxC0G,WACAE,gBAIJ,mBACE,OAAO,IAAIhO,EAA0BoH,MAGvC,eACE,OAAO,IAAI7G,EAAsB6G,MAGnC,mBAAmByT,EAAMC,EAAMC,EAAc,CAC3CC,sBAAsB,IAEtB,OAAO,IAAIva,EAAwB2G,KAAM,IAAK2T,EAC5CD,OACAD,SAIJ,qBACE,OAAO,IAAIha,EAA4BuG,MAGzC,mBACE,OAAO,IAAIrG,EAA0BqG,MAGvC,gBAAgB6T,EAAWC,EAAiBC,GAC1C,OAAO/Z,EAAgBgG,KAAKoT,eAAgBS,GAAWnG,KAAKrK,IAC3B,mBAApByQ,GACTA,EAAgBzQ,GAGXA,IACNrH,MAAMlJ,IAKP,KAJ6B,mBAAlBihB,GACTA,EAAcjhB,GAGVA,O,6BClHd,6CACA,MAAMyW,EAAkB,CACtByK,EAAG,EACHlL,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBiL,OAAQ,EACRC,UAAW,IACXjL,KAAM,EACN9L,KAAM,WAEKgX,EAAoC,CAACpf,EAAsBoB,EAAkBI,EAAgCkP,EAA0BnP,EAA8B7B,EAAkBT,IAC3L,cAA+Be,EACpC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECqiB,EAAyB9d,EAA6BnE,EAAe2X,GACrEgC,EAAY9X,EAA4B7B,GAE9C6X,MAAM5X,GAAS,EAAOgiB,EADWtI,EAAYvV,IAAmC,MAGhFyJ,KAAKqU,GAAKle,EAAiB6J,KAAM8L,EAAWsI,EAAuBJ,EAAG,IAA4B,KAElGhU,KAAKsU,QAAUne,EAAiB6J,KAAM8L,EAAWsI,EAAuBH,OAAQ,KAAOjW,KAAK2J,KAAK,MAA8B,KAAO3J,KAAK2J,KAAK,MAMhJ3H,KAAKuU,WAAape,EAAiB6J,KAAM8L,EAAWsI,EAAuBF,UAAW9hB,EAAQmV,WAAa,EAAG,GAE9GvH,KAAKwU,MAAQre,EAAiB6J,KAAM8L,EAAWsI,EAAuBnL,KAAM,GAAKjL,KAAKyW,MAAM,KAA6B,KACzHzU,KAAK0U,wBAA0BN,EAGjC,aACE,OAAOpU,KAAKsU,QAGd,gBACE,OAAOtU,KAAKuU,WAGd,WACE,OAAOvU,KAAKwU,MAGd,QACE,OAAOxU,KAAKqU,GAGd,WACE,OAAOrU,KAAK0U,wBAAwBvX,KAGtC,SAASlN,GACP+P,KAAK0U,wBAAwBvX,KAAOlN,EAGtC,qBAAqB0kB,EAAaC,EAAaC,GAI7C,GAHA7U,KAAK0U,wBAAwBI,qBAAqBH,EAAaC,EAAaC,GAGxEF,EAAY/V,SAAWgW,EAAYhW,QAAUgW,EAAYhW,SAAWiW,EAAcjW,OACpF,MAAM6G,O,6BClEd,6CACO,MAAMsP,EAAwC,CAAChf,EAAmBO,EAA8B5D,EAAoBuD,EAAkB3B,IACpI,KACL,MAAM0gB,EAAkC,IAAI7jB,QA2C5C,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMsK,EAAiCD,EAAgCnlB,IAAI6a,GAE3E,YAAuCnY,IAAnC0iB,EACKpK,QAAQC,QAAQmK,GA9CElK,OAAON,EAAOC,EAA2BC,KACtE,IAAIyJ,EAAyB1hB,EAAmB+X,GAMhD,MAAMyK,EAAyC,YAAiBd,EAAwB1J,GAExF,IAAKwK,EAAwC,CAC3C,MAAMnjB,EAAU,CACdiiB,EAAGI,EAAuBJ,EAAE/jB,MAC5B6Y,aAAcsL,EAAuBtL,aACrCC,iBAAkBqL,EAAuBrL,iBACzCC,sBAAuBoL,EAAuBpL,sBAC9CiL,OAAQG,EAAuBH,OAAOhkB,MACtCikB,UAAWE,EAAuBF,UAAUjkB,MAC5CgZ,KAAMmL,EAAuBnL,KAAKhZ,MAClCkN,KAAMiX,EAAuBjX,MAE/BiX,EAAyB9d,EAA6BoU,EAA2B3Y,GAkBnF,OAfAijB,EAAgC7Y,IAAIuO,EAA2B0J,GAE1Dc,SAMGnf,EAAkB2U,EAA2BD,EAAMuJ,EAAGI,EAAuBJ,EAAGrJ,SAChF5U,EAAkB2U,EAA2BD,EAAMwJ,OAAQG,EAAuBH,OAAQtJ,SAC1F5U,EAAkB2U,EAA2BD,EAAMyJ,UAAWE,EAAuBF,UAAWvJ,SAChG5U,EAAkB2U,EAA2BD,EAAMxB,KAAMmL,EAAuBnL,KAAM0B,WARtF1U,EAAiByU,EAA2BD,EAAMuJ,EAAGI,EAAuBJ,EAAGrJ,SAC/E1U,EAAiByU,EAA2BD,EAAMwJ,OAAQG,EAAuBH,OAAQtJ,SACzF1U,EAAiByU,EAA2BD,EAAMyJ,UAAWE,EAAuBF,UAAWvJ,SAC/F1U,EAAiByU,EAA2BD,EAAMxB,KAAMmL,EAAuBnL,KAAM0B,UAQvFrW,EAAwBmW,EAAOC,EAA2B0J,EAAwBzJ,GACjFyJ,GAWEe,CAAuB1K,EAAOC,EAA2BC,O,6BCtDxE,kCAAO,MAAMyK,EAAwB,CAACC,EAAcC,IAC3C,CAACC,EAAQC,KACd,MAAMC,EAAmBH,EAAYzlB,IAAI0lB,GAEzC,QAAyBhjB,IAArBkjB,EACF,OAAOA,EAGT,MAAMC,EAAcL,EAAaxlB,IAAI0lB,GAErC,QAAoBhjB,IAAhBmjB,EACF,OAAOA,EAGT,IACE,MAAMC,EAAwBH,IAE9B,OAAIG,aAAiC9K,SACnCwK,EAAalZ,IAAIoZ,EAAQI,GAClBA,EAAsB3Z,MAAM,KAAM,GAAO0R,KAAKkI,IACnDP,EAAahT,OAAOkT,GACpBD,EAAYnZ,IAAIoZ,EAAQK,GACjBA,MAIXN,EAAYnZ,IAAIoZ,EAAQI,GACjBA,GACP,MAEA,OADAL,EAAYnZ,IAAIoZ,GAAQ,IACjB,K,6BC9Bb,wCAAMhM,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgB,GAELyN,EAAqC,CAAC9gB,EAAsB6B,EAAiCD,EAA+BlC,EAAkBT,IAClJ,cAAgCe,EACrC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAILiY,MAAM5X,GAAS,EAFiBuE,EAA8BxE,EAAe2X,GAC3C9V,EAA4B7B,GAAiByE,IAAoC,S,6BCdzH,6CACO,MAAMkf,EAAyC,CAACnf,EAA+BjE,EAAoB4B,IACjG,KACL,MAAMyhB,EAA2B,IAAI5kB,QAsBrC,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMqL,EAA0BD,EAAyBlmB,IAAI6a,GAE7D,YAAgCnY,IAA5ByjB,EACKnL,QAAQC,QAAQkL,GAzBLjL,OAAON,EAAOC,EAA2BC,KAC/D,IAAI7Y,EAAkBY,EAAmB+X,GAIzC,IAFwC,YAAiB3Y,EAAiB4Y,GAEpC,CACpC,MAAM3Y,EAAU,CACd+W,aAAchX,EAAgBgX,aAC9BC,iBAAkBjX,EAAgBiX,iBAClCC,sBAAuBlX,EAAgBkX,sBACvCZ,eAAgBtW,EAAgBsW,gBAElCtW,EAAkB6E,EAA8B+T,EAA2B3Y,GAK7E,OAFAgkB,EAAyB5Z,IAAIuO,EAA2B5Y,SAClDwC,EAAwBmW,EAAOC,EAA2B5Y,EAAiB6Y,GAC1E7Y,GAWEmkB,CAAgBxL,EAAOC,EAA2BC,O,6BCjCjE,wCAAMpB,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBkJ,gBAAiB,GASNgE,EAAuC,CAACnhB,EAAsBgC,EAAmCD,EAAiCrC,EAAkBT,IACxJ,cAAkCe,EACvC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAVa/X,KAChB,IAAKA,EACV+W,aAAc/W,EAAQmgB,kBAQEM,CAAiB,IAAKjJ,KACvCxX,IAILiY,MAAM5X,GAAS,EAFmB0E,EAAgC3E,EAAe2X,GAC7C9V,EAA4B7B,GAAiB4E,IAAsC,S,6BCrB7H,6CACO,MAAMof,EAA2C,CAACrf,EAAiCpE,EAAoB4B,IACrG,KACL,MAAMyhB,EAA2B,IAAI5kB,QAsBrC,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMqL,EAA0BD,EAAyBlmB,IAAI6a,GAE7D,YAAgCnY,IAA5ByjB,EACKnL,QAAQC,QAAQkL,GAzBLjL,OAAON,EAAOC,EAA2BC,KAC/D,IAAI7Y,EAAkBY,EAAmB+X,GAIzC,IAFwC,YAAiB3Y,EAAiB4Y,GAEpC,CACpC,MAAM3Y,EAAU,CACd+W,aAAchX,EAAgBgX,aAC9BC,iBAAkBjX,EAAgBiX,iBAClCC,sBAAuBlX,EAAgBkX,sBACvCkJ,gBAAiBpgB,EAAgBogB,iBAEnCpgB,EAAkBgF,EAAgC4T,EAA2B3Y,GAK/E,OAFAgkB,EAAyB5Z,IAAIuO,EAA2B5Y,SAClDwC,EAAwBmW,EAAOC,EAA2B5Y,EAAiB6Y,GAC1E7Y,GAWEmkB,CAAgBxL,EAAOC,EAA2BC,O,6BCjCjE,kCAAO,MAAMyL,EAA0BtgB,GAC9B,CAAC4U,EAA2BjY,EAAYke,EAAkBhG,IACxD7U,EAAyBrD,EAAYiY,EAA2BiG,EAAkBhG,I,6BCF7F,8CACO,MAAM0L,EAA+Bpa,GACnC,CAACqa,EAAkBpN,EAAa5E,EAAS,EAAGC,EAAQ,KACzD,MAAMgS,EAAkBD,EAAiBhS,GAEzC,QAAwB/R,IAApBgkB,EACF,MAAMta,IAGR,OAAI,YAAkBiN,GACbqN,EAAgB/iB,QAAQ0V,EAAa,EAAG3E,GAG1CgS,EAAgB/iB,QAAQ0V,EAAa,K,6BCbhD,kCAAO,MAAMsN,EAAoDxgB,GACxD,CAAC7D,EAAeL,KACrB,MAAM+Z,EAA8B7V,EAAkC7D,GAChE8R,EAAoB9R,EAAckZ,aAAa,EAAG,EAAGlZ,EAAcoV,YAKzE,OAJAsE,EAA4B9P,OAASkI,EACrC4H,EAA4BL,MAAO,EACnCK,EAA4BrY,QAAQ1B,GACpC+Z,EAA4BnI,QACrB,KACLmI,EAA4B9H,OAC5B8H,EAA4BpY,WAAW3B,M,6BCV7C,6DAGA,MAAMyX,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBpF,OAAQ,GAEG6S,EAAsC,CAAC1hB,EAAsBoB,EAAkBugB,EAAyCxf,EAAgCzC,EAAkBT,EAA6B8O,IAC3M,cAAiC/N,EACtC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAEC4kB,EAA2Bzf,EAA+B/E,EAAe2X,GACzEgC,EAAY9X,EAA4B7B,GACxCykB,EAA6B9K,EAAY4K,IAA4C,KAC3F1M,MAAM5X,GAAS,EAAOukB,EAA0BC,GAChD5W,KAAK6W,4BAA8BD,EACnC5W,KAAK8W,0BAA4BH,EAMjC3W,KAAK+W,QAAU5gB,EAAiB6J,KAAM8L,EAAW6K,EAAyB/S,OAAQ,IAA4B,KAC9G5D,KAAKoM,SAAW,KAGlB,aACE,OAAOpM,KAAK+W,QAGd,cACE,OAAO/W,KAAKoM,SAGd,YAAYnc,GACV,MAAMsc,EAAmC,mBAAVtc,EAAuB6S,EAAkB9C,KAAM/P,GAAS,KACvF+P,KAAK8W,0BAA0BtK,QAAUD,EACzC,MAAME,EAAgBzM,KAAK8W,0BAA0BtK,QACrDxM,KAAKoM,SAA6B,OAAlBK,GAA0BA,IAAkBF,EAAkBtc,EAAQwc,EAGxF,MAAM9I,EAAO,GAGX,GAFA3D,KAAK8W,0BAA0BpT,MAAMC,GAEI,OAArC3D,KAAK6W,4BACP7W,KAAK6W,4BAA4BnT,MAAQC,MACpC,CACL,YAAyB3D,MAEzB,MAAM0M,EAA8B,KAClC1M,KAAK8W,0BAA0B3N,oBAAoB,QAASuD,GAG5DC,WAAW,IAAM,YAA0B3M,MAAO,MAGpDA,KAAK8W,0BAA0B1N,iBAAiB,QAASsD,IAI7D,KAAK/I,EAAO,GACV3D,KAAK8W,0BAA0B/S,KAAKJ,GAEK,OAArC3D,KAAK6W,8BACP7W,KAAK6W,4BAA4B9S,KAAOJ,M,6BCrEhD,6CACO,MAAM+S,EAA0C,CAAC3gB,EAAmBmB,EAAgCxE,EAAoBuD,EAAkB3B,IACxI,KACL,MAAM0iB,EAAoC,IAAI7lB,QAC9C,IAAIuS,EAAQ,KACRK,EAAO,KAyCX,MAAO,CACL,UAAU9T,GACRyT,EAAQzT,GAGV,SAASA,GACP8T,EAAO9T,GAGT,OAAOwa,EAAOC,EAA2BC,GACvC,MAAMsM,EAAmCD,EAAkCnnB,IAAI6a,GAE/E,YAAyCnY,IAArC0kB,EACKpM,QAAQC,QAAQmM,GApDIlM,OAAON,EAAOC,EAA2BC,KACxE,IAAIgM,EAA2BjkB,EAAmB+X,GAMlD,MAAMyM,EAA2C,YAAiBP,EAA0BjM,GAE5F,IAAKwM,EAA0C,CAC7C,MAAMnlB,EAAU,CACd+W,aAAc6N,EAAyB7N,aACvCC,iBAAkB4N,EAAyB5N,iBAC3CC,sBAAuB2N,EAAyB3N,sBAChDpF,OAAQ+S,EAAyB/S,OAAO3T,OAE1C0mB,EAA2Bzf,EAA+BwT,EAA2B3Y,GAEvE,OAAV2R,GACFiT,EAAyBjT,MAAMA,GAGpB,OAATK,GACF4S,EAAyB5S,KAAKA,GAalC,OATAiT,EAAkC7a,IAAIuO,EAA2BiM,GAE5DO,QAGGnhB,EAAkB2U,EAA2BD,EAAM7G,OAAQ+S,EAAyB/S,OAAQ+G,SAF5F1U,EAAiByU,EAA2BD,EAAM7G,OAAQ+S,EAAyB/S,OAAQ+G,SAK7FrW,EAAwBmW,EAAOC,EAA2BiM,EAA0BhM,GACnFgM,GAmBEQ,CAAyB1M,EAAOC,EAA2BC,O,6BC9D1E,kCAAO,MAAMyM,EAAoCC,GACxCpnB,IACLonB,EAAY,GAAKpnB,EACVonB,EAAY,K,6BCHvB,wCAAM9N,EAAkB,CACtBxN,OAAQ,KACR+M,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvB4K,sBAAsB,GAEX0D,EAAiC,CAACviB,EAAsBwC,EAA6BD,EAA2B7C,EAAkBT,IACtI,cAA4Be,EACjC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECwlB,EAAsBjgB,EAA0BnF,EAAe2X,GAGrEE,MAAM5X,GAAS,EAAOmlB,EAFJvjB,EAA4B7B,GACJoF,IAAgC,MAE1EyI,KAAKiM,oBAAqB,EAC1BjM,KAAKwX,qBAAuBD,EAG9B,aACE,OAAIvX,KAAKiM,mBACA,KAGFjM,KAAKwX,qBAAqBzb,OAGnC,WAAW9L,GAGT,GAFA+P,KAAKwX,qBAAqBzb,OAAS9L,EAErB,OAAVA,GAAuD,OAArC+P,KAAKwX,qBAAqBzb,OAAiB,CAC/D,MAAM5J,EAAgB6N,KAAKwX,qBAAqBplB,QAChD4N,KAAKwX,qBAAqBzb,OAAS5J,EAAckZ,aAAa,EAAG,EAAGlZ,EAAcoV,YAClFvH,KAAKiM,oBAAqB,OAE1BjM,KAAKiM,oBAAqB,EAI9B,gBACE,OAAOjM,KAAKwX,qBAAqBC,UAGnC,cAAcxnB,GACZ+P,KAAKwX,qBAAqBC,UAAYxnB,K,6BC/C5C,qDAEO,MAAMynB,EAAqC,CAACpgB,EAA2B5E,EAAoB4B,IACzF,KACL,MAAMqjB,EAA+B,IAAIxmB,QA6BzC,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMiN,EAA8BD,EAA6B9nB,IAAI6a,GAErE,YAAoCnY,IAAhCqlB,EACK/M,QAAQC,QAAQ8M,GAhCD7M,OAAON,EAAOC,EAA2BC,KACnE,IAAI4M,EAAsB7kB,EAAmB+X,GAI7C,IAF4C,YAAiB8M,EAAqB7M,GAExC,CACxC,MAAM3Y,EAAU,CACdgK,OAAQwb,EAAoBxb,OAC5B+M,aAAcyO,EAAoBzO,aAClCC,iBAAkBwO,EAAoBxO,iBACtCC,sBAAuBuO,EAAoBvO,sBAC3C4K,sBAAuB2D,EAAoBE,WAE7CF,EAAsBjgB,EAA0BoT,EAA2B3Y,GAW7E,OARA4lB,EAA6Bxb,IAAIuO,EAA2B6M,GAExD,YAAuBA,SACnBjjB,EAAwBmW,EAAOC,EAA2B6M,EAAoB9S,OAAO,GAAIkG,SAEzFrW,EAAwBmW,EAAOC,EAA2B6M,EAAqB5M,GAGhF4M,GAWEM,CAAoBpN,EAAOC,EAA2BC,O,6BCzCrE,kCAAO,MAAMmN,EAAwC,CAAC1kB,EAAyBW,IACtE,CAACkX,EAAkBrM,EAAQ2I,KAChC,GAA6C,OAAzCxT,EACF,MAAM,IAAIZ,MAAM,uDAGlB,IACE,OAAO,IAAIY,EAAqCkX,EAAkBrM,EAAQ2I,GAC1E,MAAOzU,GAIP,GAAiB,mBAAbA,EAAIvD,MAA0C,gBAAbuD,EAAIvD,KACvC,MAAM6D,IAGR,MAAMN,K,6BChBZ,kCAAO,MAAMilB,EAAuB,KAClC,IACE,OAAO,IAAIllB,aAAa,GAAI,kBAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,GACXD,EAAIvD,KAAO,iBACJuD,K,6BCPX,8CACO,MAAMklB,EAA8B,CAAC7T,EAAyC8T,EAAejlB,EAAyBN,EAAoBmQ,EAAqBpO,EAAkB+N,EAAmBxO,IAClM,CAACrB,EAAWulB,KACjB,MAAMC,EAAeF,EAAcpoB,IAAI8C,GAEvC,QAAqBJ,IAAjB4lB,EACF,MAAM,IAAIhlB,MAAM,qCAGlB,MAAMhB,EAAgBsC,EAAiB9B,EAAUP,SAC3C0Z,EAAY9X,EAA4B7B,GAE9C,GAAIgmB,IAAiBD,GAGnB,GAFAD,EAAc5V,OAAO1P,IAEhBmZ,GAAatJ,EAAkB7P,GAAY,CAC9C,MAAMyR,EAAwB1R,EAAmBC,IAC3C,QACJ2V,GACEtV,EAAwBL,GAE5B,IAAK,MAAM2R,KAAUgE,EACnB,GAAI,YAA4BhE,GAAS,CACvC,MAAMD,EAA6B3R,EAAmB4R,EAAO,IAC7DH,EAAwCC,EAAuBC,EAA4BC,EAAO,GAAIA,EAAO,QACxG,CACL,MAAM8T,EAA8BvV,EAAoByB,EAAO,IAC/DF,EAAsB5Q,QAAQ4kB,EAA6B9T,EAAO,WAKxE2T,EAAc9b,IAAIxJ,EAAWwlB,EAAeD,K,6BChClD,wCAAM3O,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBqP,UAAW,EACX7E,aAAc,GAEH8E,EAA6B,CAACvjB,EAAsBoB,EAAkBuB,EAAyBD,EAAuBhD,EAAkBT,IAC5I,cAAwBe,EAC7B,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECwmB,EAAkB9gB,EAAsBtF,EAAe2X,GACvDgC,EAAY9X,EAA4B7B,GAE9C6X,MAAM5X,GAAS,EAAOmmB,EADIzM,EAAYpU,EAAwBoS,EAAc0J,cAAgB,MAG5FxT,KAAKwY,WAAariB,EAAiB6J,KAAM8L,EAAWyM,EAAgBF,UAAWvO,EAAc0J,aAAc,GAG7G,gBACE,OAAOxT,KAAKwY,c,6BCvBlB,6CACO,MAAMC,EAAiC,CAAC1iB,EAAmB0B,EAAuB/E,EAAoBuD,EAAkB3B,IACtHkf,IACL,MAAMkF,EAA2B,IAAIvnB,QA8BrC,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMgO,EAA0BD,EAAyB7oB,IAAI6a,GAE7D,YAAgCnY,IAA5BomB,EACK9N,QAAQC,QAAQ6N,GAjCL5N,OAAON,EAAOC,EAA2BC,KAC/D,IAAI4N,EAAkB7lB,EAAmB+X,GAEzC,MAAMmO,EAAkC,YAAiBL,EAAiB7N,GAE1E,IAAKkO,EAAiC,CACpC,MAAM7mB,EAAU,CACd+W,aAAcyP,EAAgBzP,aAC9BC,iBAAkBwP,EAAgBxP,iBAClCC,sBAAuBuP,EAAgBvP,sBACvCqP,UAAWE,EAAgBF,UAAUpoB,MACrCujB,gBAEF+E,EAAkB9gB,EAAsBiT,EAA2B3Y,GAYrE,OATA2mB,EAAyBvc,IAAIuO,EAA2B6N,GAEnDK,QAGG7iB,EAAkB2U,EAA2BD,EAAM4N,UAAWE,EAAgBF,UAAW1N,SAFzF1U,EAAiByU,EAA2BD,EAAM4N,UAAWE,EAAgBF,UAAW1N,SAK1FrW,EAAwBmW,EAAOC,EAA2B6N,EAAiB5N,GAC1E4N,GAWEM,CAAgBpO,EAAOC,EAA2BC,O,6BCzCjE,kCAAO,MAAMmO,EAAyCne,GAC7C,CAACxI,EAAemX,KACrB3O,EAA+BxI,GAAekQ,OAAOiH,K,6BCFzD,8CAEA,MAAMyP,EAA4B,CAAC9c,EAAsBqa,EAAkBhS,KACzE,MAAMiS,EAAkBD,EAAiBhS,GAEzC,QAAwB/R,IAApBgkB,EACF,MAAMta,IAGR,OAAOsa,GAGIyC,EAAkC/c,GACtC,CAACqa,EAAkB2C,EAAiC3U,EAAoBC,EAAQ,SACzDhS,IAAxB0mB,EACK3C,EAAiB3Z,QAAQ4Z,GAAmBA,EAAgB9iB,cAGlC,iBAAxBwlB,EACFF,EAA0B9c,EAAsBqa,EAAkB2C,GAAqBxlB,aAG5F,YAAkBwlB,QACL1mB,IAAX+R,EACKgS,EAAiB3Z,QAAQ4Z,GAAmBA,EAAgB9iB,WAAWwlB,SAGlE1mB,IAAVgS,EACKwU,EAA0B9c,EAAsBqa,EAAkBhS,GAAQ7Q,WAAWwlB,EAAqB,GAG5GF,EAA0B9c,EAAsBqa,EAAkBhS,GAAQ7Q,WAAWwlB,EAAqB,EAAG1U,QAGvGhS,IAAX+R,EACKgS,EAAiB3Z,QAAQ4Z,GAAmBA,EAAgB9iB,WAAWwlB,IAGzEF,EAA0B9c,EAAsBqa,EAAkBhS,GAAQ7Q,WAAWwlB,EAAqB,I,6BCtCrH,wCAAM1P,EAAkB,CACtB2P,OAAQ,KACRpQ,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvBmQ,KAAM,GACNC,MAAO,GACPC,QAAS,IACTC,WAAY,IAEDC,EAA0C,CAACxkB,EAAsBoB,EAAkB0B,EAAsCD,EAAoCxE,EAAyBqB,EAAkBT,IAC5M,cAAqCe,EAC1C,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECynB,EAA+B5hB,EAAmCzF,EAAe2X,GACjFgC,EAAY9X,EAA4B7B,GAE9C6X,MAAM5X,GAAS,EAAOonB,EADiB1N,EAAYjU,IAAyC,MAG5FmI,KAAKyZ,QAAUtjB,EAAiB6J,KAAM8L,EAAW0N,EAA6BN,OAAQ,EAAG,GACzFlZ,KAAK0Z,MAAQvjB,EAAiB6J,KAAM8L,EAAW0N,EAA6BL,KAAM,GAAI,GACtFnZ,KAAK2Z,8BAAgCH,EACrCxZ,KAAK4Z,OAASzjB,EAAiB6J,KAAM8L,EAAW0N,EAA6BJ,MAAO,GAAI,GACxFpZ,KAAK6Z,SAAW1jB,EAAiB6J,KAAM8L,EAAW0N,EAA6BH,QAAS,EAAG,GAC3FrZ,KAAK8Z,WAAa3jB,EAAiB6J,KAAM8L,EAAW0N,EAA6BF,UAAW,GAAI,KAGlG,aACE,OAAOtZ,KAAKyZ,QAQd,mBACE,OAAOzZ,KAAK2Z,8BAA8B7Q,aAG5C,iBAAiB7Y,GACf,MAAM8pB,EAAuB/Z,KAAK2Z,8BAA8B7Q,aAGhE,GAFA9I,KAAK2Z,8BAA8B7Q,aAAe7Y,EAE9CA,EAAQ,EAEV,MADA+P,KAAK2Z,8BAA8B7Q,aAAeiR,EAC5C3mB,IASV,uBACE,OAAO4M,KAAK2Z,8BAA8B5Q,iBAG5C,qBAAqB9Y,GACnB,MAAM8pB,EAAuB/Z,KAAK2Z,8BAA8B5Q,iBAGhE,GAFA/I,KAAK2Z,8BAA8B5Q,iBAAmB9Y,EAExC,QAAVA,EAEF,MADA+P,KAAK2Z,8BAA8B5Q,iBAAmBgR,EAChD3mB,IAIV,WACE,OAAO4M,KAAK0Z,MAGd,YACE,OAAO1Z,KAAK4Z,OAGd,gBAEE,MAAkE,iBAAvD5Z,KAAK2Z,8BAA8BK,UAAU/pB,MAC/C+P,KAAK2Z,8BAA8BK,UAAU/pB,MAG/C+P,KAAK2Z,8BAA8BK,UAG5C,cACE,OAAOha,KAAK6Z,SAGd,gBACE,OAAO7Z,KAAK8Z,c,6BC9FlB,6CACO,MAAMG,EAA8C,CAAClkB,EAAmB6B,EAAoClF,EAAoBuD,EAAkB3B,IAChJ,KACL,MAAM4lB,EAAwC,IAAI/oB,QA6ClD,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMwP,EAAuCD,EAAsCrqB,IAAI6a,GAEvF,YAA6CnY,IAAzC4nB,EACKtP,QAAQC,QAAQqP,GAhDQpP,OAAON,EAAOC,EAA2BC,KAC5E,IAAI6O,EAA+B9mB,EAAmB+X,GAMtD,MAAM2P,EAA+C,YAAiBZ,EAA8B9O,GAEpG,IAAK0P,EAA8C,CACjD,MAAMroB,EAAU,CACdmnB,OAAQM,EAA6BN,OAAOjpB,MAC5C6Y,aAAc0Q,EAA6B1Q,aAC3CC,iBAAkByQ,EAA6BzQ,iBAC/CC,sBAAuBwQ,EAA6BxQ,sBACpDmQ,KAAMK,EAA6BL,KAAKlpB,MACxCmpB,MAAOI,EAA6BJ,MAAMnpB,MAC1CopB,QAASG,EAA6BH,QAAQppB,MAC9CqpB,UAAWE,EAA6BF,UAAUrpB,OAEpDupB,EAA+B5hB,EAAmC8S,EAA2B3Y,GAoB/F,OAjBAmoB,EAAsC/d,IAAIuO,EAA2B8O,GAEhEY,SAOGrkB,EAAkB2U,EAA2BD,EAAMyO,OAAQM,EAA6BN,OAAQvO,SAChG5U,EAAkB2U,EAA2BD,EAAM0O,KAAMK,EAA6BL,KAAMxO,SAC5F5U,EAAkB2U,EAA2BD,EAAM2O,MAAOI,EAA6BJ,MAAOzO,SAC9F5U,EAAkB2U,EAA2BD,EAAM4O,QAASG,EAA6BH,QAAS1O,SAClG5U,EAAkB2U,EAA2BD,EAAM6O,UAAWE,EAA6BF,UAAW3O,WAVtG1U,EAAiByU,EAA2BD,EAAMyO,OAAQM,EAA6BN,OAAQvO,SAC/F1U,EAAiByU,EAA2BD,EAAM0O,KAAMK,EAA6BL,KAAMxO,SAC3F1U,EAAiByU,EAA2BD,EAAM2O,MAAOI,EAA6BJ,MAAOzO,SAC7F1U,EAAiByU,EAA2BD,EAAM4O,QAASG,EAA6BH,QAAS1O,SACjG1U,EAAiByU,EAA2BD,EAAM6O,UAAWE,EAA6BF,UAAW3O,UASvGrW,EAAwBmW,EAAOC,EAA2B8O,EAA8B7O,GACvF6O,GAWEa,CAA6B5P,EAAOC,EAA2BC,O,6BCxD9E,kCAAO,MAAM2P,EAAsB,KACjC,IACE,OAAO,IAAIznB,aAAa,GAAI,iBAC5B,MAAOC,GAIP,OAFAA,EAAIC,KAAO,EACXD,EAAIvD,KAAO,gBACJuD,K,6BCPX,kCAAO,MAAMynB,EAAuBzmB,GAC3B0mB,GAAU,IAAI3P,QAAQ,CAACC,EAASgD,KACrC,GAAe,OAAXha,EAEF,YADAga,EAAO,IAAI2M,aAIb,MAAMC,EAAO5mB,EAAO6mB,SAASD,KAE7B,GAAa,OAATA,EACF5M,EAAO,IAAI2M,iBACN,CACL,MAAMG,EAAS9mB,EAAO6mB,SAASE,cAAc,UAEvCC,EAAO,IAAIC,KAAK,CAACP,GAAS,CAC9Brd,KAAM,2BAEF6d,EAAMC,IAAIC,gBAAgBJ,GAC1BK,EAAyBrnB,EAAOsnB,QAEhCC,EAAuC,KAC3CvnB,EAAOsnB,QAAUD,EACjBF,IAAIK,gBAAgBN,IAGtBlnB,EAAOsnB,QAAU,CAACG,EAASC,EAAKC,EAAQC,EAAOC,IAEzCH,IAAQR,GAAOQ,IAAQ1nB,EAAO8nB,SAASC,MAAmB,IAAXJ,GAA0B,IAAVC,GACjEL,IACAvN,EAAO6N,IACA,GAGsB,OAA3BR,EACKA,EAAuBI,EAASC,EAAKC,EAAQC,EAAOC,QAD7D,EAKFf,EAAOQ,QAAU,KACfC,IACAvN,EAAO,IAAI2M,cAGbG,EAAOkB,OAAS,KACdT,IACAvQ,KAGF8P,EAAOY,IAAMR,EACbJ,EAAOzd,KAAO,SACdud,EAAKqB,YAAYnB,O,6BClDvB,kCAAO,MAAMoB,EAA+BlZ,GACnC,MACL,YAAYmZ,GACVjc,KAAKic,mBAAqBA,EAC1Bjc,KAAKkc,WAAa,IAAI/qB,QAGxB,iBAAiBgM,EAAM2R,EAAU/c,GAC/B,GAAiB,OAAb+c,EAAmB,CACrB,IAAIqN,EAAuBnc,KAAKkc,WAAWrsB,IAAIif,QAElBvc,IAAzB4pB,IACFA,EAAuBrZ,EAAkB9C,KAAM8O,GAEvB,mBAAbA,GACT9O,KAAKkc,WAAW/f,IAAI2S,EAAUqN,IAIlCnc,KAAKic,mBAAmB7S,iBAAiBjM,EAAMgf,EAAsBpqB,IAIzE,cAAcgR,GACZ,OAAO/C,KAAKic,mBAAmBG,cAAcrZ,GAG/C,oBAAoB5F,EAAM2R,EAAU/c,GAClC,MAAMoqB,EAAoC,OAAbrN,OAAoBvc,EAAYyN,KAAKkc,WAAWrsB,IAAIif,GAEjF9O,KAAKic,mBAAmB9S,oBAAoBhM,OAA+B5K,IAAzB4pB,EAAqC,KAAOA,EAAsBpqB,M,6BC9B1H,kCAAO,MAAMsqB,EAAyCvoB,GAC7C,CAACkd,EAAazJ,EAAY+U,KAC/B5sB,OAAOuT,iBAAiBnP,EAAQ,CAC9ByoB,aAAc,CACZC,cAAc,EAEd3sB,IAAG,IACMmO,KAAK0J,MAAMsJ,EAAczJ,IAIpCyJ,YAAa,CACXwL,cAAc,EAEd3sB,IAAG,IACMmhB,KAMb,IACE,OAAOsL,IACP,QACe,OAAXxoB,WACKA,EAAOyoB,oBACPzoB,EAAOkd,gB,6BC1BtB,kCAAO,MAAMyL,EAAoB1U,GACxBgD,UACL,IACE,MAAM2R,QAAiBC,MAAM3B,GAE7B,GAAI0B,EAASE,GACX,OAAOF,EAASG,OAElB,OAKF,MAAM9U,M,6BCbV,6CACA,MAAMwB,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBC,KAAM,GAEK6T,EAA4B,CAAC/nB,EAAsBoB,EAAkB4B,EAAwBvC,EAAsBf,EAAkBT,IACzI,cAAuBe,EAC5B,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAEC8W,EAAiBrT,EAAqBrD,EAAe2X,GACrDgC,EAAY9X,EAA4B7B,GAE9C6X,MAAM5X,GAAS,EAAOyW,EADGiD,EAAY/T,IAA2B,MAGhEiI,KAAKwU,MAAQre,EAAiB6J,KAAM8L,EAAWjD,EAAeI,KAAM,IAA4B,KAGlG,WACE,OAAOjJ,KAAKwU,S,6BCvBlB,6CACO,MAAMuI,EAAgC,CAAChnB,EAAmBP,EAAsB9C,EAAoBuD,EAAkB3B,IACpH,KACL,MAAM0oB,EAA0B,IAAI7rB,QA6BpC,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMsS,EAAyBD,EAAwBntB,IAAI6a,GAE3D,YAA+BnY,IAA3B0qB,EACKpS,QAAQC,QAAQmS,GAhCNlS,OAAON,EAAOC,EAA2BC,KAC9D,IAAI9B,EAAiBnW,EAAmB+X,GAExC,MAAMyS,EAAiC,YAAiBrU,EAAgB6B,GAExE,IAAKwS,EAAgC,CACnC,MAAMnrB,EAAU,CACd+W,aAAcD,EAAeC,aAC7BC,iBAAkBF,EAAeE,iBACjCC,sBAAuBH,EAAeG,sBACtCC,KAAMJ,EAAeI,KAAKhZ,OAE5B4Y,EAAiBrT,EAAqBkV,EAA2B3Y,GAYnE,OATAirB,EAAwB7gB,IAAIuO,EAA2B7B,GAElDqU,QAGGnnB,EAAkB2U,EAA2BD,EAAMxB,KAAMJ,EAAeI,KAAM0B,SAF9E1U,EAAiByU,EAA2BD,EAAMxB,KAAMJ,EAAeI,KAAM0B,SAK/ErW,EAAwBmW,EAAOC,EAA2B7B,EAAgB8B,GACzE9B,GAWEsU,CAAe1S,EAAOC,EAA2BC,O,6BCxChE,kCAAO,MAAMyS,EAA6BpqB,GACjCL,IACL,MAAM0qB,EAAuBrqB,EAAwBL,GAErD,GAAsC,OAAlC0qB,EAAqB7U,SACvB,MAAM,IAAIrV,MAAM,mEAGlB,OAAOkqB,EAAqB7U,W,6BCRhC,kCAAO,MAAM8U,EAA8B1a,GAClCnQ,IACL,MAAM8qB,EAAwB3a,EAAyBnQ,GAEvD,GAAuC,OAAnC8qB,EAAsB/U,SACxB,MAAM,IAAIrV,MAAM,oEAGlB,OAAOoqB,EAAsB/U,W,6BCRjC,6CACO,MAAMgV,EAA+B,CAACxpB,EAA6BC,EAA+BF,IAChG5B,IAKL,GAA4B,WAAxBA,EAAcob,OAAwD,OAAlCtZ,GAAiF,uBAAvCA,EAA8B1E,KAA+B,CAC7I,IAAIyE,EAA4B7B,GAazB,CACL,MAAMsrB,EAAsB,IAA4B5tB,IAAIsC,GAE5D,QAA4BI,IAAxBkrB,EACF,OAAOA,EAIT,MAAMC,EAAgB,IAAIzpB,EAE1B,OADA,IAA4BkI,IAAIhK,EAAeurB,GACxCA,EAvBuC,CAC9C,MAAMD,EAAsB,IAA4B5tB,IAAIsC,GAE5D,QAA4BI,IAAxBkrB,EACF,OAAOA,EAGT,GAA6C,OAAzC1pB,EAA+C,CAEjD,MAAM2pB,EAAgB,IAAI3pB,EAAqC,EAAG,EAAG,OAErE,OADA,IAA4BoI,IAAIhK,EAAeurB,GACxCA,IAgBb,OAAO,O,6BCnCX,6CACO,MAAMC,EAAyBC,GAC7BxrB,IACL,MAAMD,EAAgByrB,EAAa/tB,IAAIuC,GAEvC,QAAsBG,IAAlBJ,EACF,MAAM,cAGR,OAAOA,I,6BCTX,kCAAO,MAAM0rB,EAAuCrlB,GAC3CrG,IACL,MAAM2rB,EAA8BtlB,EAAgC3I,IAAIsC,GAExE,QAAoCI,IAAhCurB,EACF,MAAM,IAAI3qB,MAAM,gDAGlB,OAAO2qB,I,6BCRX,qDAGA,MAgCaC,EAAqC,CAAC/nB,EAAmC7B,EAAuBzB,EAAoBqB,EAAsCO,EAAyB6D,IACvL,CAACuO,EAAUE,KAChB,MAAMmP,EAA2B,IAAI5kB,QACrC,IAAI6sB,EAAwB,KAE5B,MAAM/H,EAAkBlL,MAAON,EAAOC,EAA2BC,KAC/D,IAAIkB,EAA8B,KAC9BoS,EAAsBvrB,EAAmB+X,GAE7C,MAAMyT,EAAsC,YAAiBD,EAAqBvT,GAYlF,QAVkDnY,IAA9CmY,EAA0ByT,gBAC5BtS,EAA8B7V,EAAkC0U,GACtDwT,IACVD,EAAsB9pB,EAAsBuW,EAA2B0T,GAC9DA,EAASD,gBAAgBvX,EAAaF,KAIjDqP,EAAyB5Z,IAAIuO,EAA2D,OAAhCmB,EAAuCoS,EAAsBpS,GAEjF,OAAhCA,EAAsC,CACxC,GAA8B,OAA1BmS,EAAgC,CAClC,GAA6C,OAAzCjqB,EACF,MAAM,IAAIZ,MAAM,uDAGlB,MAAMkrB,EAA6B,IAAItqB,EACvC0W,EAAMrY,QAAQ8W,YAAYJ,aAC1B2B,EAAMrY,QAAQwM,OAAQ8L,EAA0BnD,YAEhDyW,EAAwB,iBAChB1pB,EAAwBmW,EAAO4T,EAA4BA,EAA2BnV,YAAayB,GAhE5F,EAAC2T,EAAgB5T,EAA2BhE,EAAUE,KAC7E,MAAMD,EAAiBD,EAAS9H,OAC1BiI,EAAoBD,EAAYhI,OAChCkI,EAAY9I,KAAKyJ,IAAId,EAAgBE,GAE3C,GAAoB,IAAhBH,EAAS,GAAU,CACrB,IAAK,IAAI1X,EAAI,EAAGA,EAAI2X,EAAgB3X,GAAK,EACvC4X,EAAY5X,IAAM0X,EAAS,GAG7B,IAAK,IAAI1X,EAAI,EAAGA,EAAI6X,EAAmB7X,GAAK,EAC1C0X,EAAS1X,IAAM0X,EAAS,GAI5B,MACMK,EAAU,IAAIjG,aADC,IAEfkG,EAAU,IAAIlG,aAFC,IAGfyd,EAAiB7T,EAA0BW,aAAaiT,EAAerT,iBAAkBqT,EAAe1f,OAAQ0f,EAAe/W,YAC/H0D,EAAmBqT,EAAerT,iBAExC,IAAK,IAAIjc,EAAI,EAAGA,EAAIic,EAAkBjc,GAAK,EAAG,CAC5C,MAAMuV,EAAQ+Z,EAAehb,eAAetU,GACtCsV,EAASia,EAAejb,eAAetU,GAC7C+X,EAAQuF,KAAK,GACbtF,EAAQsF,KAAK,GACb,YAAa5F,EAAUC,EAAgBC,EAAaC,EAAmBC,EAAWC,EAASC,EAAS,EAXjF,GAWkGzC,EAAOD,GAG9H,OAAOia,GAqCUC,OADsBrmB,EAAgCkmB,GACrB3T,EAA2BhE,EAAUE,IAHvD,GAO1B,MAAM2X,QAAuBP,EAG7B,OAFAnS,EAA4B9P,OAASwiB,EACrC1S,EAA4BnI,MAAM,GAC3BmI,EAIT,aADMvX,EAAwBmW,EAAOC,EAA2BuT,EAAqBtT,GAC9EsT,GAGT,MAAO,CACL,OAAOxT,EAAOC,EAA2BC,GACvC,MAAMqL,EAA0BD,EAAyBlmB,IAAI6a,GAE7D,YAAgCnY,IAA5ByjB,EACKnL,QAAQC,QAAQkL,GAGlBC,EAAgBxL,EAAOC,EAA2BC,O,6BC3FjE,8CACO,MAAM8T,EAAqC,CAACxG,EAAevT,EAA8C1R,EAAyBN,EAAoBmQ,EAAqBL,IACzKsJ,GACE,CAACnZ,EAAWulB,KACjB,MAAMC,EAAeF,EAAcpoB,IAAI8C,GAEvC,QAAqBJ,IAAjB4lB,EAA4B,CAC9B,IAAKrM,GAAatJ,EAAkB7P,GAAY,CAC9C,MAAMyR,EAAwB1R,EAAmBC,IAC3C,QACJ2V,GACEtV,EAAwBL,GAE5B,IAAK,MAAM2R,KAAUgE,EACnB,GAAI,YAA4BhE,GAAS,CACvC,MAAMD,EAA6B3R,EAAmB4R,EAAO,IAC7DI,EAA6CN,EAAuBC,EAA4BC,EAAO,GAAIA,EAAO,QAC7G,CACL,MAAM8T,EAA8BvV,EAAoByB,EAAO,IAC/DF,EAAsB3Q,WAAW2kB,EAA6B9T,EAAO,KAK3E2T,EAAc9b,IAAIxJ,EAAWulB,QAE7BD,EAAc9b,IAAIxJ,EAAWwlB,EAAeD,K,6BC1BpD,kCAAO,MAAMwG,EAA0B,CAACd,EAAchpB,IAC7C+pB,IACL,MAAMxsB,EAAgByrB,EAAa/tB,IAAI8uB,GACvC,OAAO/pB,EAAqBzC,IAAkByC,EAAqB+pB,K,6BCHvE,kCAAO,MAAMC,EAAuB,CAACC,EAAgBhqB,IAC5C8pB,GAAYE,EAAeniB,IAAIiiB,IAAa9pB,EAAkB8pB,I,6BCDvE,kCAAO,MAAMG,EAAwB,CAACtO,EAAiB1b,IAC9C6pB,GAAYnO,EAAgB9T,IAAIiiB,IAAa7pB,EAAmB6pB,I,6BCDzE,kCAAO,MAAMI,EAAiC,CAACnB,EAAc5pB,IACpD2qB,IACL,MAAMxsB,EAAgByrB,EAAa/tB,IAAI8uB,GACvC,OAAO3qB,EAA4B7B,IAAkB6B,EAA4B2qB,K,6BCHrF,kCAAO,MAAMK,EAA6B/qB,GACjC0qB,GACoC,OAAlC1qB,GAA0C0qB,aAAoB1qB,G,6BCFzE,kCAAO,MAAMgrB,EAA0BnrB,GAC9B6qB,GACa,OAAX7qB,GAA+C,mBAArBA,EAAOorB,WAA4BP,aAAoB7qB,EAAOorB,W,6BCFnG,kCAAO,MAAMC,EAA2BrrB,GAC/B6qB,GACa,OAAX7qB,GAAgD,mBAAtBA,EAAOsrB,YAA6BT,aAAoB7qB,EAAOsrB,Y,6BCFpG,kCAAO,MAAMC,EAAwB,CAACzqB,EAAsBZ,IACnD2qB,GACE/pB,EAAqB+pB,IAAa3qB,EAA4B2qB,I,6BCFzE,kCAAO,MAAMW,EAAoCvrB,GACxC4qB,GAC2C,OAAzC5qB,GAAiD4qB,aAAoB5qB,G,6BCFhF,kCAAO,MAAMwrB,EAAwBzrB,GAAqB,OAAXA,GAAmBA,EAAO8F,iB,6BCAzE,kCAAO,MAAM4lB,EAA2BzU,MAAOnX,EAAiB6rB,EAAkDC,EAAoCC,EAAuDC,EAAgCC,EAAmCC,EAA2CC,EAA0CC,EAAiDC,EAA+CC,EAA4BC,EAAmEC,EAAyCC,KAC3kB,GAAIzsB,EAAgB6rB,EAAkDA,IAAqD7rB,EAAgB8rB,EAAoCA,IAAuC9rB,EAAgBgsB,EAAgCA,IAAmChsB,EAAgBisB,EAAmCA,IAAsCjsB,EAAgBmsB,EAA0CA,IAA6CnsB,EAAgBosB,EAAiDA,IAAoDpsB,EAAgBqsB,EAA+CA,IAAkDrsB,EAAgBssB,EAA4BA,IAA+BtsB,EAAgBusB,EAAmEA,GAAoE,CAE/6B,aADsBtV,QAAQyV,IAAI,CAAC1sB,EAAgB+rB,EAAuDA,GAAwD/rB,EAAgBksB,EAA2CA,GAA4ClsB,EAAgBwsB,EAAyCA,GAA0CxsB,EAAgBysB,EAA0BA,MACvYE,MAAMC,GAAUA,GAGjC,OAAO,I,6BCNT,kCAAO,MAAMC,EAA+C,CAAC1rB,EAAsBmF,EAAyCzF,EAAkBT,IACrI,cAA0Ce,EAC/C,YAAY3C,EAASL,GACnB,MAAMI,EAAgBsC,EAAiBrC,GACjCsuB,EAAoCxmB,EAAwC/H,EAAeJ,GAEjG,GAAIiC,EAA4B7B,GAC9B,MAAMgb,YAGRnD,MAAM5X,GAAS,EAAMsuB,EAAmC,MAExD1gB,KAAK2gB,cAAgB5uB,EAAQ4b,aAC7B3N,KAAK4gB,mCAAqCF,EAG5C,mBACE,YAAgEnuB,IAAzDyN,KAAK4gB,mCAAmCjT,aAA6B3N,KAAK2gB,cAAgB3gB,KAAK4gB,mCAAmCjT,gB,6BCjB/I,wCAAMpE,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YAEZ6X,EAAmD,CAAC9rB,EAAsBqF,EAA6C3F,EAAkBT,IAC7I,cAA8Ce,EACnD,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GAEvC,GAAI4B,EAA4B7B,GAC9B,MAAM,IAAIgb,UAGZ,MAAMrD,EAAgB,IAAKP,KACtBxX,GAEC+uB,EAAwC1mB,EAA4CjI,EAAe2X,GACzGE,MAAM5X,GAAS,EAAO0uB,EAAuC,MAC7D9gB,KAAK+gB,uCAAyCD,EAGhD,aACE,OAAO9gB,KAAK+gB,uCAAuCC,U,6BCvBzD,kCAAO,MAAMC,EAA8C,CAAClsB,EAAsBuF,EAAwC7F,EAAkBT,IACnI,cAAyCe,EAC9C,YAAY3C,EAASL,GACnB,MAAMI,EAAgBsC,EAAiBrC,GACjC8uB,EAAmC5mB,EAAuCnI,EAAeJ,GAE/F,GAAIiC,EAA4B7B,GAC9B,MAAM,IAAIgb,UAGZnD,MAAM5X,GAAS,EAAM8uB,EAAkC,MACvDlhB,KAAKmhB,kCAAoCD,EAG3C,kBACE,OAAOlhB,KAAKmhB,kCAAkCvT,e,6BCfpD,kCAAO,MAAMwT,EAAmD,CAACrsB,EAAsByF,EAA6C/F,IAC3H,cAA8CM,EACnD,YAAY3C,EAASL,GACnB,MAAMI,EAAgBsC,EAAiBrC,GAEvC4X,MAAM5X,GAAS,EAD+BoI,EAA4CrI,EAAeJ,GAC7C,S,6BCLlE,8CACO,MAAMsvB,EAAuC,CAACzuB,EAAyBQ,EAAyBwU,EAAoBnP,EAAoCxE,IACtJ,cAAkCwE,EACvC,YAAY1G,EAAU,IACpB,GAAsC,OAAlCkC,EACF,MAAM,IAAId,MAAM,gDAGlB,MAAM+Z,EAAqB,IAAIjZ,EAA8BlC,GAE7D,GAA2B,OAAvBmb,EACF,MAAMtF,IAIR,IAAK,YAAmB7V,EAAQiU,aAC9B,MAAM,IAAImH,UAAU,uBAAuBpb,EAAQiU,+EAIrD,QAA2BzT,IAAvBR,EAAQwV,YAA4B2F,EAAmB3F,aAAexV,EAAQwV,WAChF,MAAMnU,IAGR4W,MAAMkD,EAAoB,GAC1B,MAAM,YACJlH,GACEjU,GACE,WACJwV,GACE2F,EAeJ,GAbAlN,KAAKoN,aAAyD,iBAAnCF,EAAmB5F,YAA2B4F,EAAmB5F,YAA8B,aAAhBtB,EAA6B,IAAMuB,EAA6B,gBAAhBvB,QAAiDzT,IAAhByT,EAA4B,IAAMuB,EAA6B,aAAhBvB,EAA6B,KAAOuB,EAKrM,IAAzEvJ,KAAKwJ,IAAI,EAAGxJ,KAAKyJ,IAAI,IAAKzJ,KAAK0J,MAAM1B,EAAcuB,EAAa,OAAeA,EAC/EvH,KAAKqN,oBAAsBH,EAC3BlN,KAAKsN,OAAS,KAMmB,YAA7BJ,EAAmBK,MAAqB,CAC1CvN,KAAKsN,OAAS,YAEd,MAAME,EAAc,KACE,cAAhBxN,KAAKsN,SACPtN,KAAKsN,OAAS,MAGhBJ,EAAmB/D,oBAAoB,cAAeqE,IAGxDN,EAAmB9D,iBAAiB,cAAeoE,IAIvD,kBACE,OAAOxN,KAAKoN,aAGd,YACE,OAAuB,OAAhBpN,KAAKsN,OAAkBtN,KAAKsN,OAAStN,KAAKqN,oBAAoBE,MAGvE,QAEE,MAAmB,WAAfvN,KAAKuN,MACAvN,KAAKqN,oBAAoBI,QAAQC,KAAK,KAC3C,MAAM9a,OAKU,cAAhBoN,KAAKsN,SACPtN,KAAKsN,OAAS,MAGTtN,KAAKqN,oBAAoBI,SAOlC,SACE,MAAoB,cAAhBzN,KAAKsN,OACA,IAAIzC,QAAQ,CAACC,EAASgD,KAC3B,MAAMC,EAAiB,KACrB/N,KAAKqN,oBAAoBlE,oBAAoB,cAAe4E,GAErB,YAAnC/N,KAAKqN,oBAAoBE,MAC3BzC,IAEA9K,KAAKgO,SAASN,KAAK5C,EAASgD,IAIhC9N,KAAKqN,oBAAoBjE,iBAAiB,cAAe2E,KAItD/N,KAAKqN,oBAAoBW,SAAShS,MAAMlJ,IAG7C,QAAYP,IAARO,GAAkC,KAAbA,EAAIC,KAC3B,MAAMH,IAGR,MAAME,IAIV,UACE,OAAOkN,KAAKqN,oBAAoBY,UAAUjS,MAAMlJ,IAE9C,QAAYP,IAARO,EACF,MAAMF,IAGR,MAAME,O,6BC3Hd,6CACO,MAAMwuB,EAA2C,CAACjrB,EAAiCkC,EAAqB5D,EAAwBX,EAA6BwE,EAAiCsK,IAC5L,cAAsCnO,EAC3C,YAAYye,EAAgBnI,GAC1BjB,MAAMoJ,GACNpT,KAAKoT,eAAiBA,EACtB,IAAcjX,IAAI6D,KAAMoT,GAExB,MAAM7L,EAAa6L,EAAe7L,WAClC7X,OAAOC,eAAeyjB,EAAgB,aAAc,CAClDvjB,IAAK,IAAM0X,IAGTvT,EAA4Bof,IAC9B5a,EAAgC2D,IAAIiX,EAAgB,IAAI/K,KAG1DrI,KAAKuhB,aAAe,IAAIlrB,EAAgC2J,KAAMiL,GAC9DjL,KAAKwhB,UAAYjpB,EAAoByH,KAAMoT,GAC3CpT,KAAKyhB,eAAiB,KAGxB,kBACE,OAAOzhB,KAAKoT,eAAepC,YAG7B,kBACE,OAAOhR,KAAKuhB,aAGd,eACE,OAAOvhB,KAAKwhB,UAGd,oBACE,OAAOxhB,KAAKyhB,eAGd,kBAAkBxxB,GAChB,MAAMsc,EAAmC,mBAAVtc,EAAuB6S,EAAkB9C,KAAM/P,GAAS,KACvF+P,KAAKoT,eAAesO,cAAgBnV,EACpC,MAAMoV,EAAsB3hB,KAAKoT,eAAesO,cAChD1hB,KAAKyhB,eAAyC,OAAxBE,GAAgCA,IAAwBpV,EAAkBtc,EAAQ0xB,EAG1G,iBACE,OAAO3hB,KAAKoT,eAAe7L,WAG7B,YACE,OAAOvH,KAAKoT,eAAe7F,S,6BClDjC,8CACA,MAAMhE,EAAkB,CACtB0B,iBAAkB,GAEP2W,EAA8C,CAAChuB,EAAiBhB,EAAyByI,EAAiC5C,EAAoC6C,IAClK,cAAyC7C,EAC9C,YAAY1G,GACV,MAAM,OACJ6M,EAAM,iBACNqM,EAAgB,WAChB1D,GACE,IAAKgC,KACJxX,GAEC2Y,EAA4BrP,EAAgC4P,EAAkBrM,EAAQ2I,GAEvF3T,EAAgB,IAAoB,IAAM,YAAmB8W,KAChEA,EAA0BtB,iBAAiB,cAAe,MACxD,IAAIpa,EAAI,EAER,MAAM6yB,EAAwB9e,IACR,YAAhB/C,KAAKsN,SACHte,EAAI,GACN0b,EAA0BvB,oBAAoB,cAAe0Y,GAC7D9e,EAAM+e,2BAEN9hB,KAAK+hB,2BAA2Bhf,IAEhC/T,GAAK,IAKX,OAAO6yB,GAhBiD,IAoB5D7X,MAAMU,EAA2BO,GACjCjL,KAAKgiB,QAAUpjB,EACfoB,KAAKiiB,2BAA6BvX,EAClC1K,KAAKsN,OAAS,KAGhB,aAEE,YAA+C/a,IAA3CyN,KAAKiiB,2BAA2BrjB,OAC3BoB,KAAKgiB,QAGPhiB,KAAKiiB,2BAA2BrjB,OAGzC,YACE,OAAuB,OAAhBoB,KAAKsN,OAAkBtN,KAAKiiB,2BAA2B1U,MAAQvN,KAAKsN,OAG7E,iBAKE,MAAoB,YAAhBtN,KAAKsN,OACAzC,QAAQiD,OAAOlb,MAGxBoN,KAAKsN,OAAS,UACPhS,EAAe0E,KAAKkJ,YAAalJ,KAAKiiB,4BAA4BvU,KAAKrK,IAC5ErD,KAAKsN,OAAS,KAMPjK,IAERrH,MAAMlJ,IAOL,MANAkN,KAAKsN,OAAS,KAMRxa,KAIV,2BAA2BiQ,GACL,OAAhB/C,KAAKsN,OACPtN,KAAKiiB,2BAA2B7F,cAAcrZ,GAE9C4J,WAAW,IAAM3M,KAAK+hB,2BAA2Bhf,O,6BC1FzD,kCAAO,MAAMmf,EAA2B,CAAChmB,EAAoBrH,IACpD,CAAC/C,EAAiBqwB,EAAeC,KACtC,MAAMC,EAAc,IAAIha,IAEE,IAAC7U,EA2BGC,EAwC9B,OAnEA3B,EAAgB0B,SAAWA,EAyBxB1B,EAAgB0B,QAxBV,CAAC0V,EAAa5E,EAAS,EAAGC,EAAQ,KACvC,MAAM+d,EAAuC,IAArBD,EAAYjc,KAEpC,GAAIvR,EAAkBqU,GASpB,OAPA1V,EAAQrE,KAAK2C,EAAiBoX,EAAa5E,EAAQC,GACnDrI,EAAmBmmB,EAAa,CAACnZ,EAAa5E,EAAQC,GAAQge,GAAcA,EAAW,KAAOrZ,GAAeqZ,EAAW,KAAOje,GAAUie,EAAW,KAAOhe,GAAO,GAE9J+d,GACFH,IAGKjZ,EAGT1V,EAAQrE,KAAK2C,EAAiBoX,EAAa5E,GAC3CpI,EAAmBmmB,EAAa,CAACnZ,EAAa5E,GAASie,GAAcA,EAAW,KAAOrZ,GAAeqZ,EAAW,KAAOje,GAAQ,GAE5Hge,GACFH,MAONrwB,EAAgB2B,YAAcA,EAsC3B3B,EAAgB2B,WArCV,CAACwlB,EAAqB3U,EAAQC,KACnC,MAAMie,EAAeH,EAAYjc,KAAO,EAExC,QAA4B7T,IAAxB0mB,EACFxlB,EAAWgvB,MAAM3wB,GACjBuwB,EAAYK,aACP,GAAmC,iBAAxBzJ,EAAkC,CAElDxlB,EAAWtE,KAAK2C,EAAiBmnB,GAEjC,IAAK,MAAMsJ,KAAcF,EACnBE,EAAW,KAAOtJ,GACpBoJ,EAAYhgB,OAAOkgB,OAGlB,CACD1tB,EAAkBokB,GAEpBxlB,EAAWtE,KAAK2C,EAAiBmnB,EAAqB3U,EAAQC,GAG9D9Q,EAAWtE,KAAK2C,EAAiBmnB,EAAqB3U,GAGxD,IAAK,MAAMie,KAAcF,EACnBE,EAAW,KAAOtJ,QAAmC1mB,IAAX+R,GAAwBie,EAAW,KAAOje,QAAsB/R,IAAVgS,GAAuBge,EAAW,KAAOhe,GAC3I8d,EAAYhgB,OAAOkgB,GAKzB,MAAMI,EAAsC,IAArBN,EAAYjc,KAE/Boc,GAAgBG,GAClBP,MAKCtwB,I,6BCvEX,kCAAO,MAAM8wB,EAAqC9uB,GACjC,OAAXA,EACK,KAGLA,EAAOjD,eAAe,eACjBiD,EAAOsX,YAGT,M,6BCTT,kCAAO,MAAMyX,EAAsC/uB,GAClC,OAAXA,EACK,KAGLA,EAAOjD,eAAe,gBACjBiD,EAAOgvB,aAGThvB,EAAOjD,eAAe,sBAAwBiD,EAAOivB,mBAAqB,M,6BCTnF,kCAAO,MAAMC,EAA0C,CAACxtB,EAAsBkQ,IACrE,CAACvT,EAAe2W,EAAcma,KACnC,MAAM5U,EAA6Blc,EAAc+W,YAEjD,GAAImF,EAA2BvF,eAAiBA,EAC9C,IACEuF,EAA2BvF,aAAeA,EAC1C,OAKAma,GAAqF,aAAhD5U,EAA2BtF,mBAClEsF,EAA2BtF,iBAAmB,YAIG,IAA/CsF,EAA2BG,iBAC7B9e,OAAOC,eAAe0e,EAA4B,kBAAmB,CACnEpe,MAAO6Y,IAKX,MAAMoa,EAAW1tB,EAAqBrD,EAAe,CACnD2W,eACAC,iBAAkBsF,EAA2BtF,iBAC7CC,sBAAuBqF,EAA2BrF,sBAClDC,KAAM,IA2BR,OAzBAvD,EAAmBwd,EAAU,eAAgBrzB,GAAO,IAAMA,EAAIV,KAAK+zB,GAAW/mB,GAAOlM,IACnFkM,EAAIhN,KAAK+zB,EAAUjzB,GAEnB,IACEoe,EAA2BvF,aAAe7Y,EAC1C,MAAO6C,GAEP,GAAI7C,EAAQoe,EAA2BG,gBACrC,MAAM1b,KAIZ4S,EAAmBwd,EAAU,mBAAoBrzB,GAAO,IAAMA,EAAIV,KAAK+zB,GAAW/mB,GAAOlM,IACvFkM,EAAIhN,KAAK+zB,EAAUjzB,GACnBoe,EAA2BtF,iBAAmB9Y,IAEhDyV,EAAmBwd,EAAU,wBAAyBrzB,GAAO,IAAMA,EAAIV,KAAK+zB,GAAW/mB,GAAOlM,IAC5FkM,EAAIhN,KAAK+zB,EAAUjzB,GACnBoe,EAA2BrF,sBAAwB/Y,IAErDP,OAAOC,eAAeuzB,EAAU,kBAAmB,CACjDrzB,IAAK,IAAMwe,EAA2BG,kBAGxC0U,EAAS1vB,QAAQ6a,GACV6U,I,6BCvDX,kCAAO,MAAMC,EAA+BjvB,GACnC,CAAC/B,EAAeixB,KAErB,MAAM3F,EAAsBvpB,EAAuB/B,GAEnD,OACSixB,EADmB,OAAxB3F,EACqBA,EAGFtrB,K,6BCT3B,kCAAO,MAAMkxB,EAA0CvvB,GACtC,OAAXA,EACK,KAGFA,EAAOjD,eAAe,oBAAsBiD,EAAOwvB,iBAAmB,M,6BCL/E,2DAGO,MAAMC,EAAsCpvB,GAC1C,CAAChC,EAAeJ,KACrB,MAAMqiB,EAAyBjgB,EAAsBhC,EAAeisB,GAAYA,EAASoF,sBAOzF,OANA,YAA6BpP,EAAwBriB,GACrD,YAAqCqiB,EAAwBriB,EAAS,KACtE,YAAqCqiB,EAAwBriB,EAAS,UACtE,YAAqCqiB,EAAwBriB,EAAS,aACtE,YAAqCqiB,EAAwBriB,EAAS,QACtE,YAA4BqiB,EAAwBriB,EAAS,QACtDqiB,I,6BCZX,6CACO,MAAMqP,EAAuC,CAACtvB,EAAuBuC,IACnE,CAACvE,EAAeJ,KACrB,MAAM2xB,EAA0BvvB,EAAsBhC,EAAeisB,GAC5DA,EAASuF,oBAAoB5xB,EAAQqW,iBAQ9C,OAL6C,IAAzCsb,EAAwB5a,cAAmE,aAA7C4a,EAAwB3a,kBACxErS,EAAsBvE,EAAeuxB,GAGvC,YAA6BA,EAAyB3xB,GAC/C2xB,I,6BCZX,oEAIO,MAAME,EAAwC,CAACnuB,EAAqB7B,EAAiBO,EAAuB8C,EAAqCvB,EAAkEE,IACjN,CAACzD,EAAeJ,KAErB,QAA2CQ,IAAvCJ,EAAc0xB,qBAChB,OAAO5sB,EAAoC9E,EAAeJ,GAG5D,MAAM4kB,EAA2BxiB,EAAsBhC,EAAeisB,GAC7DA,EAASyF,wBAgBlB,OAdA,YAA6BlN,EAA0B5kB,GACvD,YAAqC4kB,EAA0B5kB,EAAS,UAEnE6B,EAAgB8B,EAAkE,IAAMA,EAAiEvD,KAC5J,YAA0DwkB,GAIvD/iB,EAAgBgC,EAAiE,IAAMA,EAAgEzD,KAC1J,YAAyDwkB,GAI3DlhB,EAAoBtD,EAAewkB,GAC5BA,I,6BC5BX,8CACO,MAAMmN,EAA6C,CAACruB,EAAqBO,EAAmCR,EAAsBiB,IAChI,CAACtE,GACNyR,YACGmgB,MAEH,MAAM1gB,EAAclR,EAAckZ,aAAa,EAAG,EAAGlZ,EAAcoV,YAC7Dyc,EAAwBhuB,EAAkC7D,GAC1D+wB,EAAW1tB,EAAqBrD,EAAe,IAAK4xB,EACxD9a,KAAMrF,IAGFoB,EAAc3B,EAAYC,eAAe,GAE/C0B,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjBgf,EAAsBjoB,OAASsH,EAC/B2gB,EAAsBxY,MAAO,EAC7B,MAAMyY,EAAgC,CACpC,mBAIA,mBACE,OAAOf,EAASpa,cAGlB,iBAAiB7Y,GACfizB,EAASpa,aAAe7Y,GAG1B,uBACE,OAAOizB,EAASna,kBAGlB,qBAAqB9Y,GACnBizB,EAASna,iBAAmB9Y,GAG9B,4BACE,OAAOizB,EAASla,uBAGlB,0BAA0B/Y,GACxBizB,EAASla,sBAAwB/Y,GAGnC,cACE,OAAOizB,EAAS9wB,SAGlB,aACE,MAAO,IAGT,qBACE,OAAO4xB,EAAsB5b,gBAG/B,sBACE,OAAO8a,EAAShR,iBAGlB,aACE,OAAOgR,EAASja,MAGlB,cACE,OAAO+a,EAAsBxX,SAG/B,YAAYvc,GACV+zB,EAAsBxX,QAAUvc,GAGlCmZ,iBAAgB,IAAI8a,IACXF,EAAsB5a,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvE9H,cAAa,IAAI8H,IACRF,EAAsB5H,cAAc8H,EAAK,IAGlD/a,oBAAmB,IAAI+a,IACdF,EAAsB7a,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG1E,MAAMvgB,EAAO,GACXqgB,EAAsBtgB,MAAMvU,KAAK60B,EAAuBrgB,IAG1D,KAAKA,EAAO,GACVqgB,EAAsBjgB,KAAK5U,KAAK60B,EAAuBrgB,KAW3D,OADAlO,EAAoBtD,EAAe6xB,GAC5BvtB,EAAmB,YAAqBwtB,EAA+Bf,GANxD,IAAMc,EAAsBxwB,QAAQ0vB,GAEjC,IAAMc,EAAsBvwB,WAAWyvB,M,6BCnGpE,oDAEO,MAAMiB,EAAmC,CAAChwB,EAAuBkD,EAAgCjE,EAAyBsS,IACxH,CAACvT,EAAeJ,KACrB,MAAMwlB,EAAsBpjB,EAAsBhC,EAAeisB,GAAYA,EAASgG,mBAEtF,IAEE7M,EAAoBzO,aAAe,EACnC,MAAOhW,GACP,OAAOuE,EAA+BlF,EAAeJ,GAWvD,GARA,YAA6BwlB,EAAqBxlB,GAE9CA,EAAQ6hB,uBAAyB2D,EAAoBE,YACvDF,EAAoBE,WAAa1lB,EAAQ6hB,sBAG3C,YAA4B2D,EAAqBxlB,EAAS,UAEtDA,EAAQ+W,aAAe,EACzB,MAAM1V,IAWR,GARAsS,EAAmB6R,EAAqB,eAAgB1nB,GAAO,IAAMA,EAAIV,KAAKooB,GAAsBpb,GAAOlM,IACzG,GAAIA,EAAQ,EACV,MAAMmD,IAGR,OAAO+I,EAAIhN,KAAKooB,EAAqBtnB,KAGN,QAA7B8B,EAAQgX,iBACV,MAAM3V,IAUR,OAPAsS,EAAmB6R,EAAqB,mBAAoB1nB,GAAO,IAAMA,EAAIV,KAAKooB,GAAsBpb,GAAOlM,IAC7G,GAAc,QAAVA,EACF,MAAMmD,IAGR,OAAO+I,EAAIhN,KAAKooB,EAAqBtnB,KAEhCsnB,I,6BC5CX,qDAEO,MAAM8M,EAAwC,CAAClwB,EAAuBqB,EAAsBiB,IAC1F,CAACtE,GACN4J,SACA+M,eACAC,mBACAC,wBACA4K,2BAEA,MAAM0Q,EAAgBnwB,EAAsBhC,EAAeisB,GAAYA,EAASgG,mBAChF,YAA6BE,EAAe,CAE1Cxb,aAAc9K,KAAKwJ,IAAIsB,EAAc,GAErCC,iBAAuC,QAArBA,EAA6BA,EAAmB,cAClEC,0BAEF,MAAMka,EAAW1tB,EAAqBrD,EAAe,CACnD2W,eACAC,mBACAC,wBACAC,KAAM,IAEFsb,EAA2B,CAC/B,aACE,OAAOD,EAAcvoB,QAGvB,WAAW9L,GACTq0B,EAAcvoB,OAAS9L,GAGzB,mBAIA,mBACE,OAAOizB,EAASpa,cAGlB,iBAAiB7Y,GAEXA,EAAQ,IACVq0B,EAAcxb,aAAe7Y,GAG/BizB,EAASpa,aAAe7Y,GAG1B,uBACE,OAAOizB,EAASna,kBAGlB,qBAAqB9Y,GAEL,QAAVA,IACFq0B,EAAcvb,iBAAmB9Y,GAGnCizB,EAASna,iBAAmB9Y,GAG9B,4BACE,OAAOq0B,EAActb,uBAGvB,0BAA0B/Y,GACxBq0B,EAActb,sBAAwB/Y,EACtCizB,EAASla,sBAAwB/Y,GAGnC,cACE,OAAOq0B,EAAclyB,SAGvB,aACE,MAAO,CAACkyB,IAGV,qBACE,OAAOA,EAAclc,gBAGvB,sBACE,OAAOkc,EAAcpS,iBAGvB,gBACE,OAAOoS,EAAc7M,WAGvB,cAAcxnB,GACZq0B,EAAc7M,UAAYxnB,GAG5BmZ,iBAAgB,IAAI8a,IACXI,EAAclb,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG/D9H,cAAa,IAAI8H,IACRI,EAAclI,cAAc8H,EAAK,IAG1C/a,oBAAmB,IAAI+a,IACdI,EAAcnb,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAKhEtQ,IAAyB2Q,EAAyB9M,YACpD8M,EAAyB9M,WAAa7D,GAGpC7X,IAAWwoB,EAAyBxoB,SACtCwoB,EAAyBxoB,OAASA,GAOpC,OAAOtF,EAAmB,YAAqB8tB,EAA0BrB,GAJnD,IAAMoB,EAAc9wB,QAAQ0vB,GAEzB,IAAMoB,EAAc7wB,WAAWyvB,M,6BCxH5D,oDAEO,MAAMsB,EAA+BrwB,GACnC,CAAChC,EAAeJ,KACrB,MAAMwmB,EAAkBpkB,EAAsBhC,EAAeisB,GAAYA,EAASqG,YAAY1yB,EAAQyhB,eAGtG,OAFA,YAA6B+E,EAAiBxmB,GAC9C,YAAqCwmB,EAAiBxmB,EAAS,aACxDwmB,I,6BCPX,oDAEO,MAAMmM,EAA4C,CAACvwB,EAAuBf,IACxE,CAACjB,EAAeJ,KACrB,MAAMynB,EAA+BrlB,EAAsBhC,EAAeisB,GAAYA,EAASuG,4BAG/F,GAFA,YAA6BnL,EAA8BznB,GAEvDA,EAAQ+W,aAAe,EACzB,MAAM1V,IAIR,GAAiC,QAA7BrB,EAAQgX,iBACV,MAAM3V,IAQR,OALA,YAAqComB,EAA8BznB,EAAS,UAC5E,YAAqCynB,EAA8BznB,EAAS,QAC5E,YAAqCynB,EAA8BznB,EAAS,SAC5E,YAAqCynB,EAA8BznB,EAAS,WAC5E,YAAqCynB,EAA8BznB,EAAS,aACrEynB,I,6BCrBX,oDAEO,MAAMoL,EAA8BzwB,GAClC,CAAChC,EAAeJ,KACrB,MAAM8W,EAAiB1U,EAAsBhC,EAAeisB,GAAYA,EAASyG,cAGjF,OAFA,YAA6Bhc,EAAgB9W,GAC7C,YAAqC8W,EAAgB9W,EAAS,QACvD8W,I,6BCPX,6CACO,MAAMic,EAAmC,CAAC3wB,EAAuB+D,IAC/D,CAAC/F,EAAemV,EAAavV,KAElC,QAAsCQ,IAAlCJ,EAAcgsB,gBAChB,OAAOjmB,EAA+B/F,EAAemV,EAAavV,GAGpE,MAAMksB,EAAsB9pB,EAAsBhC,EAAeisB,GACxDA,EAASD,gBAAgBpsB,EAAQ6U,YAAa7U,EAAQ2U,WAG/D,OADA,YAA6BuX,EAAqBlsB,GAC3CksB,I,6BCZX,8DAIA,SAAS8G,EAAOC,EAAGC,GACjB,MAAMC,EAAcD,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC3C,MAAO,EAAED,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAMC,GAAcF,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAMC,GAOnF,SAASC,EAAmBC,EAAaC,GACvC,IAAI7E,EAAS,CAAC,EAAG,GAEjB,IAAK,IAAIxxB,EAAIo2B,EAAYxmB,OAAS,EAAG5P,GAAK,EAAGA,GAAK,EAP/Bi2B,EAQSI,EAA1B7E,EAPK,EADSwE,EAQIxE,GAPV,GAAKyE,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAQxDzE,EAAO,IAAM4E,EAAYp2B,GAT7B,IAAkBg2B,EAAGC,EAYnB,OAAOzE,EAGF,MAAM8E,EAAwC,CAAC7f,EAA0B7S,EAAyBqF,EAAiC7E,IACjI,CAACjB,EAAemV,GACrBwB,eACAC,mBACAC,wBACAtC,WACAE,kBAEA,MAAM2e,EAAa,YAAkBje,EAAanV,EAAcoV,YAC1DZ,EAAiBD,EAAS9H,OAC1BiI,EAAoBD,EAAYhI,OAChCkI,EAAY9I,KAAKyJ,IAAId,EAAgBE,GAE3C,GAAwB,IAApBH,EAAS9H,QAAgB8H,EAAS9H,OAAS,GAC7C,MAAMxL,IAGR,GAAoB,IAAhBsT,EAAS,GACX,MAAM9T,IAGR,GAA2B,IAAvBgU,EAAYhI,QAAgBgI,EAAYhI,OAAS,GACnD,MAAMxL,IAGR,GAAuB,IAAnBwT,EAAY,GACd,MAAMhU,IAGR,GAAoB,IAAhB8T,EAAS,GAAU,CACrB,IAAK,IAAI1X,EAAI,EAAGA,EAAI6X,EAAmB7X,GAAK,EAC1C4X,EAAY5X,IAAM0X,EAAS,GAG7B,IAAK,IAAI1X,EAAI,EAAGA,EAAI2X,EAAgB3X,GAAK,EACvC0X,EAAS1X,IAAM0X,EAAS,GAI5B,MAAM+I,EAAsBxX,EAAgC9F,EAAeozB,EAAYzc,EAAcA,GACrG2G,EAAoB3G,aAAeA,EACnC2G,EAAoB1G,iBAAmBA,EACvC0G,EAAoBzG,sBAAwBA,EAC5C,MACMwc,EAAgB,GAChBC,EAAW,GACXC,EAAW,GAEjB,IAAK,IAAI12B,EAAI,EAAGA,EAAI8Z,EAAc9Z,GAAK,EAAG,CACxCw2B,EAAc5kB,KAAK,GACnB,MAAMmG,EAAU,IAAIjG,aAPD,IAQbkG,EAAU,IAAIlG,aARD,IASnBiG,EAAQuF,KAAK,GACbtF,EAAQsF,KAAK,GACbmZ,EAAS7kB,KAAKmG,GACd2e,EAAS9kB,KAAKoG,GAGhByI,EAAoBK,eAAiB/M,IACnC,MAAMgN,EAAchN,EAAMgN,YACpB4V,EAAe5iB,EAAM4iB,aACrB1a,EAAmB8E,EAAY9E,iBAErC,IAAK,IAAIjc,EAAI,EAAGA,EAAIic,EAAkBjc,GAAK,EAAG,CAC5C,MAAMuV,EAAQwL,EAAYzM,eAAetU,GACnCsV,EAASqhB,EAAariB,eAAetU,GAC3Cw2B,EAAcx2B,GAAK,YAAa0X,EAAUC,EAAgBC,EAAaC,EAAmBC,EAAW2e,EAASz2B,GAAI02B,EAAS12B,GAAIw2B,EAAcx2B,GAvB5H,GAuB8IuV,EAAOD,KAI1K,MAAMshB,EAAUzzB,EAAcoV,WAAa,EACrCse,EAA2B,CAC/B,iBACE,OAAON,GAGT,mBACE,OAAO9V,EAAoB3G,cAG7B,iBAAiB7Y,GACfwf,EAAoB3G,aAAe7Y,GAGrC,uBACE,OAAOwf,EAAoB1G,kBAG7B,qBAAqB9Y,GACnBwf,EAAoB1G,iBAAmB9Y,GAGzC,4BACE,OAAOwf,EAAoBzG,uBAG7B,0BAA0B/Y,GACxBwf,EAAoBzG,sBAAwB/Y,GAG9C,cACE,OAAOwf,EAAoBrd,SAG7B,aACE,MAAO,CAACqd,IAGV,qBACE,OAAOA,EAAoBrH,gBAG7B,sBACE,OAAOqH,EAAoByC,iBAG7B9I,iBAAgB,IAAI8a,IAEXzU,EAAoBrG,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGrE9H,cAAa,IAAI8H,IACRzU,EAAoB2M,cAAc8H,EAAK,IAGhD,qBAAqBvP,EAAaC,EAAaC,GAC7C,GAAIF,EAAY/V,SAAWgW,EAAYhW,QAAUgW,EAAYhW,SAAWiW,EAAcjW,OACpF,MAAM6G,IAGR,MAAM7G,EAAS+V,EAAY/V,OAE3B,IAAK,IAAI5P,EAAI,EAAGA,EAAI4P,EAAQ5P,GAAK,EAAG,CAClC,MAAM82B,GAAS9nB,KAAK+nB,IAAMpR,EAAY3lB,GAAK42B,GACrCP,EAAI,CAACrnB,KAAKgoB,IAAIF,GAAQ9nB,KAAKioB,IAAIH,IAG/BpJ,EAAWqI,EAFCI,EAAmBve,EAAaye,GAC9BF,EAAmBze,EAAU2e,IAEjDzQ,EAAY5lB,GAAKgP,KAAKkoB,KAAKxJ,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAC9E7H,EAAc7lB,GAAKgP,KAAKmoB,MAAMzJ,EAAS,GAAIA,EAAS,MAIxDvT,oBAAmB,IAAI+a,IACdzU,EAAoBtG,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAI1E,OAAO,YAAqB2B,EAA0BpW,K,6BC5K1D,kCAAO,MAAM2W,EAAiDjyB,GACrD,CAAC+Y,EAAoBnb,IAAYoC,EAAsB+Y,EAAoBmZ,GACzEA,EAAUC,yBAAyBv0B,EAAQ4b,gB,6BCFtD,6CACO,MAAM4Y,EAAqD,CAACpyB,EAAuBf,IACjF,CAAC8Z,EAAoBnb,KAE1B,QAAwDQ,IAApD2a,EAAmBsZ,6BACrB,MAAMpzB,IAGR,MAAM0tB,EAAwC3sB,EAAsB+Y,EAAoBmZ,GAC/EA,EAAUG,gCAUnB,OARA,YAA6B1F,EAAuC/uB,GAEN,IAA1D+uB,EAAsC5O,iBACxCxiB,OAAOC,eAAemxB,EAAuC,kBAAmB,CAC9EjxB,IAAK,IAAM,IAIRixB,I,6BCnBX,kCAAO,MAAM2F,EAAgDtyB,GACpD,CAAC+Y,GACNU,kBAEA,MAAM8Y,EAAoB9Y,EAAY+Y,iBAChCzF,EAAmC/sB,EAAsB+Y,EAAoBmZ,IAKjF,MAAMO,EAA4BF,EAAkBG,KAAK,CAAC7B,EAAGC,IAAMD,EAAE8B,GAAK7B,EAAE6B,IAAM,EAAI9B,EAAE8B,GAAK7B,EAAE6B,GAAK,EAAI,GAAGtmB,MAAM,EAAG,GACpH,OAAO6lB,EAAUU,wBAAwB,IAAIC,YAAYJ,MAM3D,OAHAl3B,OAAOC,eAAeuxB,EAAkC,cAAe,CACrEjxB,MAAO2d,IAEFsT,I,6BCjBX,kCAAO,MAAM+F,EAAqD,CAACr0B,EAAyBuB,EAAuBH,IAC1G,CAACkZ,GACNW,sBAE+D,mBAApDX,EAAmBga,6BACrB/yB,EAAsB+Y,EAAoBmZ,GAAaA,EAAUa,6BAA6BrZ,IAIhG1Z,EAAsB+Y,EAAoBmZ,IAC/C,MAAMzY,EAAc,IAAIoZ,YAAY,CAACnZ,IAC/BqT,EAAmCmF,EAAUU,wBAAwBnZ,GAE3E,GAA8B,UAA1BC,EAAiBsZ,KACnB,MAAMv0B,IAIR,GAAIoB,EAA4BqyB,GAC9B,MAAM,IAAIlZ,UAGZ,OAAO+T,K,6BCtBb,kCAAO,MAAMkG,EAA6CtzB,GACzC,OAAXA,EACK,KAGLA,EAAOjD,eAAe,uBACjBiD,EAAOuzB,oBAGTvzB,EAAOjD,eAAe,6BAA+BiD,EAAOwzB,0BAA4B,M,6BCTjG,2EAKO,MAAMC,EAAoC,CAAC9xB,EAAqB7B,EAAiBO,EAAuBuB,EAAkEC,EAA+DC,EAAiEC,IACxS,CAAC1D,EAAeJ,KACrB,MAAMy1B,EAAuBrzB,EAAsBhC,EAAeisB,GAAYA,EAASqJ,oBA4BvF,OA3BA,YAA6BD,EAAsBz1B,GACnD,YAAqCy1B,EAAsBz1B,EAAS,UACpE,YAAqCy1B,EAAsBz1B,EAAS,kBAEvCQ,IAAzBR,EAAQ21B,aACVF,EAAqBG,gBAAgB51B,EAAQ21B,cAE7C,YAA4BF,EAAsBz1B,EAAS,QAIxD6B,EAAgB8B,EAAkE,IAAMA,EAAiEvD,KAC5J,YAA0Dq1B,GAIvD5zB,EAAgB+B,EAA+D,IAAMA,EAA8DxD,KACtJ0D,EAAuD2xB,EAAsBr1B,GAI1EyB,EAAgBgC,EAAiE,IAAMA,EAAgEzD,KAC1J,YAAyDq1B,GAI3D/xB,EAAoBtD,EAAeq1B,GAC5BA,I,6BCnCX,2DAGO,MAAMI,EAAgC,CAACzzB,EAAuB6E,IAC5D,CAAC7G,EAAeJ,KACrB,MAAM81B,EAAmB1zB,EAAsBhC,EAAeisB,GAAYA,EAAS0J,gBAEnF,YAAsCv1B,IAAlCs1B,EAAiBE,aACZ/uB,EAA4B7G,EAAeJ,IAGpD,YAA6B81B,EAAkB91B,GAC/C,YAAqC81B,EAAkB91B,EAAS,gBAChE,YAAqC81B,EAAkB91B,EAAS,gBAChE,YAAqC81B,EAAkB91B,EAAS,gBAChE,YAAqC81B,EAAkB91B,EAAS,aAChE,YAAqC81B,EAAkB91B,EAAS,aAChE,YAAqC81B,EAAkB91B,EAAS,aAChE,YAA4B81B,EAAkB91B,EAAS,kBACvD,YAA4B81B,EAAkB91B,EAAS,kBACvD,YAA4B81B,EAAkB91B,EAAS,iBACvD,YAA4B81B,EAAkB91B,EAAS,iBACvD,YAA4B81B,EAAkB91B,EAAS,eACvD,YAA4B81B,EAAkB91B,EAAS,gBACvD,YAA4B81B,EAAkB91B,EAAS,eACvD,YAA4B81B,EAAkB91B,EAAS,iBAChD81B,K,6BC1BX,qDAEO,MAAMG,EAAqC,CAAC7jB,EAAyCvR,EAAyBuB,EAAuBwC,EAA+BnB,EAAsByC,EAAiCc,EAA4B3F,EAAyBsR,EAA8CjO,IAC5T,CAACtE,GACN81B,iBACAC,iBACAC,gBACAC,gBACAC,cACAN,eACAO,eACAC,eACAC,eACAtZ,YACAC,YACAC,YACAqZ,cACAC,mBACG3E,MAEH,MAAM4E,EAAax0B,EAAsBhC,EAAeisB,GAAYA,EAAS0J,gBAE7E,GAAI/D,EAAiBjb,aAAe,EAClC,MAAM1V,IAIR,GAA0C,QAAtC2wB,EAAiBhb,iBACnB,MAAM3V,IAGR,YAA6Bu1B,EAAY5E,GACzC,MAAM6E,EAAyB,CAC7B9f,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YAEnBwG,EAAoB7Y,EAA8BxE,EAAe,IAAKy2B,EAC1E5f,sBAAuB,WACvBZ,eAAgB,IAEZygB,EAAgBrzB,EAAqBrD,EAAe,IAAK4xB,EAC7D9a,KAAM,IAEF6f,EAAuBtzB,EAAqBrD,EAAe,IAAKy2B,EACpE3f,KAAM,IAEF8f,EAAuBvzB,EAAqBrD,EAAe,IAAKy2B,EACpE3f,KAAM,IAEF+f,EAAuBxzB,EAAqBrD,EAAe,IAAKy2B,EACpE3f,KAAM,IAEFggB,EAAoBzzB,EAAqBrD,EAAe,IAAKy2B,EACjE3f,KAAM,IAEFigB,EAAoB1zB,EAAqBrD,EAAe,IAAKy2B,EACjE3f,KAAM,IAEFkgB,EAAoB3zB,EAAqBrD,EAAe,IAAKy2B,EACjE3f,KAAM,IAEFwG,EAAsBxX,EAAgC9F,EAAe,IAAK,EAAG,GAC7Ei3B,EAAiBrwB,EAA2B5G,EAAe,IAAKy2B,EACpE9gB,MAAO,IAAIhH,aAAa,CAAC,EAAG,IAC5BuoB,WAAY,SAEd,IAAIzZ,EAAkB,CAACmY,EAAcO,EAAcC,GAC/C1Y,EAAe,CAACX,EAAWC,EAAWC,GAE1CK,EAAoBK,eAAiB,EACnCC,kBAEA,MAAMC,EAAc,CAACD,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,IAEnH0M,EAAYC,KAAK,CAAChgB,EAAOyO,IAAUzO,IAAU2f,EAAgBlR,MAC/DiqB,EAAWzY,kBAAkBF,GAE7BJ,EAAkBI,GAGpB,MAAMG,EAAU,CAACJ,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,GAAIyM,EAAYzM,eAAe,GAAG,IAE/G6M,EAAQF,KAAK,CAAChgB,EAAOyO,IAAUzO,IAAU4f,EAAanR,MACxDiqB,EAAWvY,eAAeD,GAE1BN,EAAeM,IAInBzgB,OAAOC,eAAeo5B,EAAqB9f,KAAM,eAAgB,CAC/DpZ,IAAK,IAAM,IAEbH,OAAOC,eAAeq5B,EAAqB/f,KAAM,eAAgB,CAC/DpZ,IAAK,IAAM,IAEbH,OAAOC,eAAes5B,EAAkBhgB,KAAM,eAAgB,CAC5DpZ,IAAK,IAAM,IAEbH,OAAOC,eAAeu5B,EAAkBjgB,KAAM,eAAgB,CAC5DpZ,IAAK,IAAM,IAEbH,OAAOC,eAAew5B,EAAkBlgB,KAAM,eAAgB,CAC5DpZ,IAAK,IAAM,IAEb,MAAMy5B,EAAwB,CAC5B,mBAIA,mBACE,OAAOX,EAAW7f,cAGpB,iBAAiB7Y,GAEf,GAAIA,EAAQ,EACV,MAAMmD,IAGRy1B,EAAc/f,aAAe7Y,EAC7B04B,EAAW7f,aAAe7Y,GAG5B,uBACE,OAAO04B,EAAW5f,kBAGpB,qBAAqB9Y,GAEnB,GAAc,QAAVA,EACF,MAAMmD,IAGRy1B,EAAc9f,iBAAmB9Y,EACjC04B,EAAW5f,iBAAmB9Y,GAGhC,4BACE,OAAO04B,EAAW3f,uBAGpB,0BAA0B/Y,GACxB44B,EAAc7f,sBAAwB/Y,EACtC04B,EAAW3f,sBAAwB/Y,GAGrC,qBACE,OAAO04B,EAAWV,gBAGpB,mBAAmBh4B,GACjB04B,EAAWV,eAAiBh4B,GAG9B,qBACE,OAAO04B,EAAWT,gBAGpB,mBAAmBj4B,GACjB04B,EAAWT,eAAiBj4B,GAG9B,oBACE,OAAO04B,EAAWR,eAGpB,kBAAkBl4B,GAEhB,GAAIA,EAAQ,GAAKA,EAAQ,EACvB,MAAM2C,IAGR+1B,EAAWR,cAAgBl4B,GAG7B,cACE,OAAO04B,EAAWv2B,SAGpB,oBACE,OAAOu2B,EAAWP,eAGpB,kBAAkBn4B,GAChB04B,EAAWP,cAAgBn4B,GAG7B,aACE,MAAO,CAAC44B,IAGV,kBACE,OAAOF,EAAWN,aAGpB,gBAAgBp4B,GAEd,GAAIA,EAAQ,EACV,MAAM,IAAI4T,WAGZ8kB,EAAWN,YAAcp4B,GAG3B,qBACE,OAAO04B,EAAWvgB,gBAGpB,sBACE,OAAOugB,EAAWzW,iBAGpB,mBACE,OAAO4W,EAAqB7f,MAG9B,mBACE,OAAO8f,EAAqB9f,MAG9B,mBACE,OAAO+f,EAAqB/f,MAG9B,mBACE,OAAO0f,EAAWH,cAGpB,iBAAiBv4B,GAGf,GAFA04B,EAAWH,aAAev4B,EAEtB04B,EAAWH,eAAiBv4B,GAAmB,SAAVA,EACvC,MAAMmD,KAIV,gBACE,OAAO61B,EAAkBhgB,MAG3B,gBACE,OAAOigB,EAAkBjgB,MAG3B,gBACE,OAAOkgB,EAAkBlgB,MAG3B,kBACE,OAAO0f,EAAWF,aAGpB,gBAAgBx4B,GAEd,GAAIA,EAAQ,EACV,MAAM,IAAI4T,WAGZ8kB,EAAWF,YAAcx4B,GAG3B,oBACE,OAAO04B,EAAWD,eAGpB,kBAAkBz4B,GAEhB,GAAIA,EAAQ,EACV,MAAM,IAAI4T,WAGZ8kB,EAAWD,cAAgBz4B,GAG7BmZ,iBAAgB,IAAI8a,IACX2E,EAAczf,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG/D9H,cAAa,IAAI8H,IACR2E,EAAczM,cAAc8H,EAAK,IAG1C/a,oBAAmB,IAAI+a,IACd2E,EAAc1f,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAKhE+D,IAAmBqB,EAAsBrB,iBAC3CqB,EAAsBrB,eAAiBA,GAGrCC,IAAmBoB,EAAsBpB,iBAC3CoB,EAAsBpB,eAAiBA,GAGrCC,IAAkBmB,EAAsBnB,gBAC1CmB,EAAsBnB,cAAgBA,GAGpCC,IAAkBkB,EAAsBlB,gBAC1CkB,EAAsBlB,cAAgBA,GAGpCC,IAAgBiB,EAAsBjB,cACxCiB,EAAsBjB,YAAcA,GAGlCN,IAAiBuB,EAAsBvB,aAAa93B,QACtDq5B,EAAsBvB,aAAa93B,MAAQ83B,GAGzCO,IAAiBgB,EAAsBhB,aAAar4B,QACtDq5B,EAAsBhB,aAAar4B,MAAQq4B,GAGzCC,IAAiBe,EAAsBf,aAAat4B,QACtDq5B,EAAsBf,aAAat4B,MAAQs4B,GAGzCC,IAAiBc,EAAsBd,eACzCc,EAAsBd,aAAeA,GAGnCtZ,IAAcoa,EAAsBpa,UAAUjf,QAChDq5B,EAAsBpa,UAAUjf,MAAQif,GAGtCC,IAAcma,EAAsBna,UAAUlf,QAChDq5B,EAAsBna,UAAUlf,MAAQkf,GAGtCC,IAAcka,EAAsBla,UAAUnf,QAChDq5B,EAAsBla,UAAUnf,MAAQmf,GAGtCqZ,IAAgBa,EAAsBb,cACxCa,EAAsBb,YAAcA,GAGlCC,IAAkBY,EAAsBZ,gBAC1CY,EAAsBZ,cAAgBA,GAGb,IAAvB9Y,EAAgB,IAAmC,IAAvBA,EAAgB,IAAmC,IAAvBA,EAAgB,IAC1E+Y,EAAWzY,kBAAkBN,GAGP,IAApBC,EAAa,IAAgC,IAApBA,EAAa,IAAgC,IAApBA,EAAa,IACjE8Y,EAAWvY,eAAeP,GAoC5B,OAAOpZ,EAAmB,YAAqB6yB,EAAuBX,GAjChD,KACpBE,EAAcr1B,QAAQm1B,GAEtBxkB,EAAwC0kB,EAAeO,EAAgB,EAAG,GAC1EA,EAAe51B,QAAQs1B,GAAsBt1B,QAAQgc,EAAmB,EAAG,GAC3E4Z,EAAe51B,QAAQu1B,GAAsBv1B,QAAQgc,EAAmB,EAAG,GAC3E4Z,EAAe51B,QAAQw1B,GAAsBx1B,QAAQgc,EAAmB,EAAG,GAC3E4Z,EAAe51B,QAAQy1B,GAAmBz1B,QAAQgc,EAAmB,EAAG,GACxE4Z,EAAe51B,QAAQ01B,GAAmB11B,QAAQgc,EAAmB,EAAG,GACxE4Z,EAAe51B,QAAQ21B,GAAmB31B,QAAQgc,EAAmB,EAAG,GACxEA,EAAkBhc,QAAQic,GAAqBjc,QAAQrB,EAAc+W,cAG9C,KACvB2f,EAAcp1B,WAAWk1B,GAEzBjkB,EAA6CmkB,EAAeO,EAAgB,EAAG,GAC/EA,EAAe31B,WAAWq1B,GAC1BA,EAAqBr1B,WAAW+b,GAChC4Z,EAAe31B,WAAWs1B,GAC1BA,EAAqBt1B,WAAW+b,GAChC4Z,EAAe31B,WAAWu1B,GAC1BA,EAAqBv1B,WAAW+b,GAChC4Z,EAAe31B,WAAWw1B,GAC1BA,EAAkBx1B,WAAW+b,GAC7B4Z,EAAe31B,WAAWy1B,GAC1BA,EAAkBz1B,WAAW+b,GAC7B4Z,EAAe31B,WAAW01B,GAC1BA,EAAkB11B,WAAW+b,GAC7BA,EAAkB/b,WAAWgc,GAC7BA,EAAoBhc,WAAWtB,EAAc+W,iB,6BC/XnD,kCAAO,MAAMqgB,EAAkCr1B,GACtC,CAAC/B,GACNyhB,uBACAF,OACAD,WAGA,MAAMgK,EAAsBvpB,EAAuB/B,GAE7Cq3B,EAAc,IAAI1oB,aAAa4S,GAC/B+V,EAAc,IAAI3oB,aAAa2S,GAErC,OAA4B,OAAxBgK,EACKA,EAAoBiM,mBAAmBD,EAAaD,EAAa,CACtE5V,yBAIGzhB,EAAcu3B,mBAAmBD,EAAaD,EAAa,CAChE5V,2B,6BCnBN,kCAAO,MAAM+V,EAAyCx1B,GAC7C,CAAChC,EAAeozB,EAAYqE,EAAuBC,IACjD11B,EAAsBhC,EAAeisB,GACnCA,EAAS0L,sBAAsBvE,EAAYqE,EAAuBC,K,6BCH/E,oDAEO,MAAME,EAAsC,CAAC51B,EAAuB61B,EAAmC52B,IACrG,CAACjB,EAAeJ,IAAYoC,EAAsBhC,EAAeisB,IACtE,MAAMrV,EAAmBhX,EAAQgX,iBAMjC,GAAyB,gBAArBA,EACF,MAAM3V,IAIR,QAAyCb,IAArCJ,EAAc83B,mBAChB,OAAOD,EAAkC73B,EAAeJ,GAG1D,MAAMm4B,EAAyB9L,EAAS6L,qBAgBxC,OAfA,YAA6BC,EAAwBn4B,GACrD,YAAqCm4B,EAAwBn4B,EAAS,OAMtErC,OAAOC,eAAeu6B,EAAwB,mBAAoB,CAChEr6B,IAAK,IAAMkZ,EACX5M,IAAKlM,IACH,GAAIA,IAAU8Y,EACZ,MAAM3V,OAIL82B,K,6BCnCX,8CACO,MAAMC,EAA2C,CAACxzB,EAA+BG,EAAiCtB,EAAsBuD,EAA4B3F,EAAyBqD,KAElM,MACM2zB,EAAW,IAAItpB,aAAa,CAAC,EAAG,IAChCupB,EAAUrsB,KAAK+nB,GAAK,EACpB6C,EAAyB,CAC7B9f,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YAEnBshB,EAAqC,IAAK1B,EAC9CS,WAAY,QA0KRkB,EAAqB,CAACp4B,EAAe2W,EAAc+f,EAAe2B,EAAahb,KACnF,GAAqB,IAAjB1G,EACF,MAzK8B,EAAC3W,EAAe02B,EAAe2B,EAAahb,KAC5E,MAAMib,EAAsB,IAAI3pB,aAbf,OAcX4pB,EAAuB,IAAI5pB,aAdhB,OAgBjB,IAAK,IAAI9R,EAAI,EAAGA,EAhBC,MAgBeA,GAAK,EAAG,CACtC,MAAMoW,EAAIpW,EAAI,MAAmBq7B,EACjCI,EAAoBz7B,GAAKgP,KAAKgoB,IAAI5gB,GAClCslB,EAAqB17B,GAAKgP,KAAKioB,IAAI7gB,GAGrC,MAAMulB,EAAen1B,EAAqBrD,EAAe,IAAKy2B,EAC5D3f,KAAM,IAGF2hB,EAAqB7xB,EAA2B5G,EAAe,IAAKm4B,EACxExiB,MAAO2iB,IAGHI,EAAoB9xB,EAA2B5G,EAAe,IAAKm4B,EACvExiB,MAAOsiB,IAEHU,EAAgBt1B,EAAqBrD,EAAe,IAAKy2B,EAC7D3f,KAAM,IAGF8hB,EAAsBhyB,EAA2B5G,EAAe,IAAKm4B,EACzExiB,MAAO4iB,IAET,MAAO,CACL,eACE7B,EAAcr1B,QAAQm3B,GACtB9B,EAAcr1B,QAAQq3B,EAAkBpmB,OAAO,IAC/CokB,EAAcr1B,QAAQs3B,GACtBD,EAAkBr3B,QAAQg3B,GAC1BA,EAAYh3B,QAAQo3B,EAAmBnmB,OAAO,IAC9C+lB,EAAYh3B,QAAQu3B,EAAoBtmB,OAAO,IAC/CmmB,EAAmBp3B,QAAQm3B,EAAa1hB,MACxC8hB,EAAoBv3B,QAAQs3B,EAAc7hB,MAC1C0hB,EAAan3B,QAAQgc,EAAmB,EAAG,GAC3Csb,EAAct3B,QAAQgc,EAAmB,EAAG,IAG9C,kBACEqZ,EAAcp1B,WAAWk3B,GACzB9B,EAAcp1B,WAAWo3B,EAAkBpmB,OAAO,IAClDokB,EAAcp1B,WAAWq3B,GACzBD,EAAkBp3B,WAAW+2B,GAC7BA,EAAY/2B,WAAWm3B,EAAmBnmB,OAAO,IACjD+lB,EAAY/2B,WAAWs3B,EAAoBtmB,OAAO,IAClDmmB,EAAmBn3B,WAAWk3B,EAAa1hB,MAC3C8hB,EAAoBt3B,WAAWq3B,EAAc7hB,MAC7C0hB,EAAal3B,WAAW+b,EAAmB,EAAG,GAC9Csb,EAAcr3B,WAAW+b,EAAmB,EAAG,MAqH1Cwb,CAA0B74B,EAAe02B,EAAe2B,EAAahb,GAG9E,GAAqB,IAAjB1G,EACF,MAnHgC,EAAC3W,EAAe02B,EAAe2B,EAAahb,KAC9E,MAAMyb,EAAwC,IAAInqB,aAvEjC,OAwEXoqB,EAAyC,IAAIpqB,aAxElC,OAyEXqqB,EAAyC,IAAIrqB,aAzElC,OA0EXsqB,EAA0C,IAAItqB,aA1EnC,OA2EXuqB,EAAcrtB,KAAK0B,MAAM4rB,QAE/B,IAAK,IAAIt8B,EAAI,EAAGA,EA7EC,MA6EeA,GAAK,EACnC,GAAIA,EAAIq8B,EAAa,CACnB,MAAMjmB,GAAKpW,EAAIq8B,IAAgBC,MAAiBD,GAAehB,EAC/DY,EAAsCj8B,GAAKgP,KAAKgoB,IAAI5gB,GACpD8lB,EAAuCl8B,GAAKgP,KAAKioB,IAAI7gB,GACrD+lB,EAAuCn8B,GAAK,EAC5Co8B,EAAwCp8B,GAAK,MACxC,CACL,MAAMoW,EAAIpW,GAAKs8B,MAAiBD,GAAehB,EAC/CY,EAAsCj8B,GAAK,EAC3Ck8B,EAAuCl8B,GAAK,EAC5Cm8B,EAAuCn8B,GAAKgP,KAAKgoB,IAAI5gB,GACrDgmB,EAAwCp8B,GAAKgP,KAAKioB,IAAI7gB,GAI1D,MAAMmmB,EAAsBz0B,EAAgC3E,EAAe,CACzE2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBkJ,gBAAiB,IAEbsZ,EAAiCh2B,EAAqBrD,EAAe,IAAKy2B,EAC9E3f,KAAM,IAGFwiB,EAAuC1yB,EAA2B5G,EAAe,IAAKm4B,EAC1FxiB,MAAOmjB,IAEHS,EAAkCl2B,EAAqBrD,EAAe,IAAKy2B,EAC/E3f,KAAM,IAGF0iB,EAAwC5yB,EAA2B5G,EAAe,IAAKm4B,EAC3FxiB,MAAOojB,IAGHL,EAAoB9xB,EAA2B5G,EAAe,IAAKm4B,EACvExiB,MAAOsiB,IAEHwB,EAAkCp2B,EAAqBrD,EAAe,IAAKy2B,EAC/E3f,KAAM,IAGF4iB,EAAwC9yB,EAA2B5G,EAAe,IAAKm4B,EAC3FxiB,MAAOqjB,IAEHW,EAAmCt2B,EAAqBrD,EAAe,IAAKy2B,EAChF3f,KAAM,IAGF8iB,EAAyChzB,EAA2B5G,EAAe,IAAKm4B,EAC5FxiB,MAAOsjB,IAET,MAAO,CACL,eACEvC,EAAcr1B,QAAQ+3B,GACtB1C,EAAcr1B,QAAQq3B,EAAkBpmB,OAAO,IAC/C8mB,EAAoB/3B,QAAQg4B,EAAgC,GAC5DD,EAAoB/3B,QAAQk4B,EAAiC,GAC7DH,EAAoB/3B,QAAQo4B,EAAiC,GAC7DL,EAAoB/3B,QAAQs4B,EAAkC,GAC9DjB,EAAkBr3B,QAAQg3B,GAC1BA,EAAYh3B,QAAQi4B,EAAqChnB,OAAO,IAChE+lB,EAAYh3B,QAAQm4B,EAAsClnB,OAAO,IACjE+lB,EAAYh3B,QAAQq4B,EAAsCpnB,OAAO,IACjE+lB,EAAYh3B,QAAQu4B,EAAuCtnB,OAAO,IAClEgnB,EAAqCj4B,QAAQg4B,EAA+BviB,MAC5E0iB,EAAsCn4B,QAAQk4B,EAAgCziB,MAC9E4iB,EAAsCr4B,QAAQo4B,EAAgC3iB,MAC9E8iB,EAAuCv4B,QAAQs4B,EAAiC7iB,MAChFuiB,EAA+Bh4B,QAAQgc,EAAmB,EAAG,GAC7Doc,EAAgCp4B,QAAQgc,EAAmB,EAAG,GAC9Dkc,EAAgCl4B,QAAQgc,EAAmB,EAAG,GAC9Dsc,EAAiCt4B,QAAQgc,EAAmB,EAAG,IAGjE,kBACEqZ,EAAcp1B,WAAW83B,GACzB1C,EAAcp1B,WAAWo3B,EAAkBpmB,OAAO,IAClD8mB,EAAoB93B,WAAW+3B,EAAgC,GAC/DD,EAAoB93B,WAAWi4B,EAAiC,GAChEH,EAAoB93B,WAAWm4B,EAAiC,GAChEL,EAAoB93B,WAAWq4B,EAAkC,GACjEjB,EAAkBp3B,WAAW+2B,GAC7BA,EAAY/2B,WAAWg4B,EAAqChnB,OAAO,IACnE+lB,EAAY/2B,WAAWk4B,EAAsClnB,OAAO,IACpE+lB,EAAY/2B,WAAWo4B,EAAsCpnB,OAAO,IACpE+lB,EAAY/2B,WAAWs4B,EAAuCtnB,OAAO,IACrEgnB,EAAqCh4B,WAAW+3B,EAA+BviB,MAC/E0iB,EAAsCl4B,WAAWi4B,EAAgCziB,MACjF4iB,EAAsCp4B,WAAWm4B,EAAgC3iB,MACjF8iB,EAAuCt4B,WAAWq4B,EAAiC7iB,MACnFuiB,EAA+B/3B,WAAW+b,EAAmB,EAAG,GAChEoc,EAAgCn4B,WAAW+b,EAAmB,EAAG,GACjEkc,EAAgCj4B,WAAW+b,EAAmB,EAAG,GACjEsc,EAAiCr4B,WAAW+b,EAAmB,EAAG,MAY7Dwc,CAA4B75B,EAAe02B,EAAe2B,EAAahb,GAGhF,MAAMpc,KAGR,MAAO,CAACjB,GACN2W,eACAC,mBACAkjB,SACGlI,MAEH,GAAyB,QAArBhb,EACF,MAAM3V,IAGR,MAAMoc,EAAoB7Y,EAA8BxE,EAAe,IAAK4xB,EAC1Ejb,aAAc,EACdC,mBACAX,eAAgB,IAEZygB,EAAgBrzB,EAAqBrD,EAAe,IAAK4xB,EAC7Djb,eACAC,mBACAE,KAAM,IAEFuhB,EAAch1B,EAAqBrD,EAAe,CACtD2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBC,KAAMgjB,IAER,IAAI,aACFC,EAAY,gBACZC,GACE5B,EAAmBp4B,EAAe2W,EAAc+f,EAAe2B,EAAahb,GAChF9f,OAAOC,eAAe66B,EAAYvhB,KAAM,eAAgB,CACtDpZ,IAAK,IAAM,IAEb,MAAMyJ,EAAqC,CACzC,mBAIA,mBACE,OAAOuvB,EAAc/f,cAGvB,iBAAiB7Y,GACX44B,EAAc/f,eAAiB7Y,IAC7Bm8B,GACFD,MAIAD,eACAC,mBACE5B,EAAmBp4B,EAAelC,EAAO44B,EAAe2B,EAAahb,IAErE4c,GACFF,KAIJrD,EAAc/f,aAAe7Y,GAG/B,uBACE,OAAO44B,EAAc9f,kBAGvB,qBAAqB9Y,GACnB,GAAc,gBAAVA,GAAqC,QAAVA,EAC7B,MAAMmD,IAGRy1B,EAAc9f,iBAAmB9Y,GAGnC,4BACE,OAAO44B,EAAc7f,uBAGvB,0BAA0B/Y,GACxB44B,EAAc7f,sBAAwB/Y,GAGxC,cACE,OAAO44B,EAAcz2B,SAGvB,aACE,MAAO,CAACy2B,IAGV,qBACE,OAAOA,EAAczgB,gBAGvB,sBACE,OAAOygB,EAAc3W,iBAGvB,UACE,OAAOsY,EAAYvhB,MAGrBG,iBAAgB,IAAI8a,IACX2E,EAAczf,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG/D9H,cAAa,IAAI8H,IACR2E,EAAczM,cAAc8H,EAAK,IAG1C/a,oBAAmB,IAAI+a,IACd2E,EAAc1f,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAIpE,IAAIkI,GAAc,EAYlB,OAAO31B,EAAmB,YAAqB6C,EAAoCkW,GAV7D,KACpB0c,IACAE,GAAc,GAGS,KACvBD,IACAC,GAAc,O,6BC7TpB,oDAEO,MAAMC,EAAoC,CAACxzB,EAA4CjG,EAAyBuB,EAAuB2E,EAAiC+O,EAAWpR,EAAoBiP,IACrM,CAACvT,EAAeJ,KACrB,MAAMu6B,EAAuBn4B,EAAsBhC,EAAeisB,GAAYA,EAASmO,oBAEvF,IAIE,OADAD,EAAqBxkB,MAAQ,IAAIhH,aAAa,CAAC,IACxChI,EAAgC3G,EAAeJ,GACtD,OAIF,YAA6Bu6B,EAAsBv6B,GACnD,MAAM+V,EAAQ/V,EAAQ+V,MAEtB,GAAc,OAAVA,GAAkBA,EAAMlJ,OAAS,EACnC,MAAMhM,IAGR,YAA4B05B,EAAsBv6B,EAAS,SAC3D,YAA4Bu6B,EAAsBv6B,EAAS,cAC3D,IAAIy6B,EAAwC,KACxCJ,GAAc,EAClB1mB,EAAmB4mB,EAAsB,QAASz8B,GAAO,IAAMA,EAAIV,KAAKm9B,GAAuBnwB,GAAOlM,IACpGkM,EAAIhN,KAAKm9B,EAAsBr8B,GAE3Bm8B,IACEvkB,EAAU5X,IAAoD,OAA1Cu8B,EACtBA,EAAwC3zB,EAA2C1G,EAAem6B,GACxFzkB,EAAU5X,IAAoD,OAA1Cu8B,IAC9BA,IACAA,EAAwC,OAIrCv8B,IAoBT,OAAOwG,EAAmB61B,EAjBJ,KACpBF,GAAc,EAEVvkB,EAAUykB,EAAqBxkB,SACjC0kB,EAAwC3zB,EAA2C1G,EAAem6B,KAI7E,KACvBF,GAAc,EAEgC,OAA1CI,IACFA,IACAA,EAAwC,U,6BCtDhD,qDAEO,MAAMC,EAAyC,CAAC5zB,EAA4CjG,EAAyBuB,EAAuBqB,EAAsBqS,EAAWpR,IAC3K,CAACtE,GACN2V,QACAuhB,gBACGtF,MAEH,MAAM2I,EAAyBv4B,EAAsBhC,EAAeisB,GAAYA,EAASmO,oBACnFI,EAAyBx4B,EAAsBhC,EAAeisB,GAAYA,EAASmO,oBACzF,YAA6BG,EAAwB3I,GACrD,YAA6B4I,EAAwB5I,GACrD,MAAM8E,EAAgBrzB,EAAqBrD,EAAe,IAAK4xB,EAC7D9a,KAAM,IAEF2jB,EAAiBp3B,EAAqBrD,EAAe,IAAK4xB,EAC9D9a,MAAO,IAEH4jB,EAAiBr3B,EAAqBrD,EAAe,IAAK4xB,EAC9D9a,KAAM,IAEF6jB,EAAiBt3B,EAAqBrD,EAAe,IAAK4xB,EAC9D9a,MAAO,IAET,IAAIujB,EAAwC,KACxCJ,GAAc,EACdW,EAAkB,KACtB,MAAMC,EAA4B,CAChC,mBAIA,mBACE,OAAON,EAAuB5jB,cAGhC,iBAAiB7Y,GACf44B,EAAc/f,aAAe7Y,EAC7B28B,EAAe9jB,aAAe7Y,EAC9By8B,EAAuB5jB,aAAe7Y,EACtC48B,EAAe/jB,aAAe7Y,EAC9B08B,EAAuB7jB,aAAe7Y,EACtC68B,EAAehkB,aAAe7Y,GAGhC,uBACE,OAAOy8B,EAAuB3jB,kBAGhC,qBAAqB9Y,GACnB44B,EAAc9f,iBAAmB9Y,EACjC28B,EAAe7jB,iBAAmB9Y,EAClCy8B,EAAuB3jB,iBAAmB9Y,EAC1C48B,EAAe9jB,iBAAmB9Y,EAClC08B,EAAuB5jB,iBAAmB9Y,EAC1C68B,EAAe/jB,iBAAmB9Y,GAGpC,4BACE,OAAOy8B,EAAuB1jB,uBAGhC,0BAA0B/Y,GACxB44B,EAAc7f,sBAAwB/Y,EACtC28B,EAAe5jB,sBAAwB/Y,EACvCy8B,EAAuB1jB,sBAAwB/Y,EAC/C48B,EAAe7jB,sBAAwB/Y,EACvC08B,EAAuB3jB,sBAAwB/Y,EAC/C68B,EAAe9jB,sBAAwB/Y,GAGzC,cACE,OAAOy8B,EAAuBt6B,SAGhC,YACE,OAAO26B,GAGT,UAAU98B,GAER,GAAc,OAAV6X,GAAkBA,EAAMlJ,OAAS,EACnC,MAAMhM,IAGR,GAAc,OAAV3C,EACFy8B,EAAuB5kB,MAAQ7X,EAC/B08B,EAAuB7kB,MAAQ7X,MAC1B,CACL,MAAMg9B,EAAch9B,EAAM2O,OACpBsuB,EAAgB,IAAIpsB,aAAamsB,EAAc,EAAIA,EAAc,GACjEE,EAAgB,IAAIrsB,aAAamsB,EAAc,EAAIA,EAAc,GACvEC,EAAc,GAAKj9B,EAAM,GACzBk9B,EAAc,IAAMl9B,EAAMg9B,EAAc,GACxC,MAAMruB,EAASZ,KAAK4B,MAAMqtB,EAAc,GAAK,GACvC5B,GAAe4B,EAAc,GAAK,EAAI,EAE5C,IAAK,IAAIj+B,EAAI,EAAGA,EAAI4P,EAAQ5P,GAAK,EAAG,CAClC,MAAMwQ,EAAiBxQ,EAAI4P,EAASysB,EAC9B5rB,EAAazB,KAAK0B,MAAMF,GACxBG,EAAa3B,KAAK4B,KAAKJ,GAC7B0tB,EAAcl+B,GAAKyQ,IAAeE,EAAa1P,EAAMwP,IAAe,GAAKD,EAAiBC,IAAexP,EAAMwP,IAAe,GAAKE,EAAaH,IAAmBvP,EAAM0P,GACzKwtB,EAAcn+B,GAAKyQ,IAAeE,GAAc1P,EAAMg9B,EAAc,EAAIxtB,KAAiB,GAAKD,EAAiBC,IAAexP,EAAMg9B,EAAc,EAAIxtB,IAAgB,GAAKE,EAAaH,IAAmBvP,EAAMg9B,EAAc,EAAIttB,GAGrOutB,EAActuB,GAAUquB,EAAc,GAAM,EAAIh9B,EAAM2O,EAAS,IAAM3O,EAAM2O,EAAS,GAAK3O,EAAM2O,EAAS,IAAM,EAC9G8tB,EAAuB5kB,MAAQolB,EAC/BP,EAAuB7kB,MAAQqlB,EAGjCJ,EAAkB98B,EAEdm8B,IACEvkB,EAAUklB,IAA8D,OAA1CP,EAChCA,EAAwC3zB,EAA2C1G,EAAe02B,GAC/C,OAA1C2D,IACTA,IACAA,EAAwC,QAK9C,aACE,MAAO,CAAC3D,IAGV,qBACE,OAAO6D,EAAuBtkB,gBAGhC,sBACE,OAAOskB,EAAuBxa,iBAGhC,iBACE,OAAOwa,EAAuBrD,YAGhC,eAAep5B,GACby8B,EAAuBrD,WAAap5B,EACpC08B,EAAuBtD,WAAap5B,GAGtCmZ,iBAAgB,IAAI8a,IACX2E,EAAczf,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG/D9H,cAAa,IAAI8H,IACR2E,EAAczM,cAAc8H,EAAK,IAG1C/a,oBAAmB,IAAI+a,IACd2E,EAAc1f,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAKhEpc,IAAUklB,EAA0BllB,QACtCklB,EAA0BllB,MAAQA,GAGhCuhB,IAAe2D,EAA0B3D,aAC3C2D,EAA0B3D,WAAaA,GA4BzC,OAAO5yB,EAAmB,YAAqBu2B,EAA2BH,GAzBpD,KACpBhE,EAAcr1B,QAAQk5B,GAAwBl5B,QAAQq5B,GACtDhE,EAAcr1B,QAAQo5B,GAAgBp5B,QAAQm5B,GAAwBn5B,QAAQs5B,GAAgBt5B,QAAQq5B,GACtGT,GAAc,EAEVvkB,EAAUklB,KACZP,EAAwC3zB,EAA2C1G,EAAe02B,KAI7E,KACvBA,EAAcp1B,WAAWi5B,GACzBA,EAAuBj5B,WAAWo5B,GAClChE,EAAcp1B,WAAWm5B,GACzBA,EAAen5B,WAAWk5B,GAC1BA,EAAuBl5B,WAAWq5B,GAClCA,EAAer5B,WAAWo5B,GAC1BT,GAAc,EAEgC,OAA1CI,IACFA,IACAA,EAAwC,U,6BC1LhD,8CACA,MAAMjjB,EAAkB,CACtB0B,iBAAkB,GAEPmiB,EAAuC,CAACnzB,EAA6BrG,EAAiBhB,EAAyByI,EAAiCC,IACpJ,cAAkCrB,EACvC,YAAY+qB,EAAGC,EAAG51B,GAChB,IAAI0C,EAEJ,GAAiB,iBAANizB,QAAwBzyB,IAAN0yB,QAAyB1yB,IAANlD,EAC9C0C,EAAU,CACR6M,OAAQqmB,EACRha,iBAAkB+Z,EAClBzd,WAAYlY,OAET,IAAiB,iBAAN21B,EAGhB,MAAM,IAAI7xB,MAAM,uCAFhBpB,EAAUizB,EAKZ,MAAM,OACJpmB,EAAM,iBACNqM,EAAgB,WAChB1D,GACE,IAAKgC,KACJxX,GAEC2Y,EAA4BrP,EAAgC4P,EAAkBrM,EAAQ2I,GAEvF3T,EAAgB,IAAoB,IAAM,YAAmB8W,KAChEA,EAA0BtB,iBAAiB,cAAe,MACxD,IAAIpa,EAAI,EAER,MAAM6yB,EAAwB9e,IACR,YAAhB/C,KAAKsN,SACHte,EAAI,GACN0b,EAA0BvB,oBAAoB,cAAe0Y,GAC7D9e,EAAM+e,2BAEN9hB,KAAK+hB,2BAA2Bhf,IAEhC/T,GAAK,IAKX,OAAO6yB,GAhBiD,IAoB5D7X,MAAMU,EAA2BO,GACjCjL,KAAKgiB,QAAUpjB,EACfoB,KAAKiiB,2BAA6BvX,EAClC1K,KAAKsN,OAAS,KAGhB,aAEE,YAA+C/a,IAA3CyN,KAAKiiB,2BAA2BrjB,OAC3BoB,KAAKgiB,QAGPhiB,KAAKiiB,2BAA2BrjB,OAGzC,YACE,OAAuB,OAAhBoB,KAAKsN,OAAkBtN,KAAKiiB,2BAA2B1U,MAAQvN,KAAKsN,OAG7E,iBAKE,MAAoB,YAAhBtN,KAAKsN,OACAzC,QAAQiD,OAAOlb,MAGxBoN,KAAKsN,OAAS,UACPhS,EAAe0E,KAAKkJ,YAAalJ,KAAKiiB,4BAA4BvU,KAAKrK,IAC5ErD,KAAKsN,OAAS,KAMPjK,IAERrH,MAAMlJ,IAOL,MANAkN,KAAKsN,OAAS,KAMRxa,KAIV,2BAA2BiQ,GACL,OAAhB/C,KAAKsN,OACPtN,KAAKiiB,2BAA2B7F,cAAcrZ,GAE9C4J,WAAW,IAAM3M,KAAK+hB,2BAA2Bhf,O,6BCxGzD,sDAEA,MAAMwG,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBiL,OAAQ,EACRC,UAAW,IACX/W,KAAM,QAEKkwB,EAAkC,CAACt4B,EAAsBoB,EAAkBvD,EAAyB8F,EAA4BC,EAA8BlE,EAAkBT,EAA6B8O,IACjN,cAA6B/N,EAClC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECy1B,EAAuB9uB,EAA2BvG,EAAe2X,GACjEgC,EAAY9X,EAA4B7B,GACxCm7B,EAAyBxhB,EAAYnT,IAAiC,KACtEitB,EAAUxzB,EAAQmV,WAAa,EACrCyC,MAAM5X,GAAS,EAAOo1B,EAAsB8F,GAE5CttB,KAAKsU,QAAUne,EAAiB6J,KAAM8L,EAAW0b,EAAqBvT,OAAQ,QAAS,QAEvFjU,KAAKuU,WAAape,EAAiB6J,KAAM8L,EAAW0b,EAAqBtT,UAAW0R,GAAUA,GAC9F5lB,KAAKutB,sBAAwB/F,EAC7BxnB,KAAKoM,SAAW,KAChBpM,KAAKwtB,wBAA0BF,EAEM,OAAjCttB,KAAKwtB,8BAAmEj7B,IAA/BuX,EAAc4d,eACzD1nB,KAAKwtB,wBAAwB9F,aAAe5d,EAAc4d,cAI9D,aACE,OAAO1nB,KAAKsU,QAGd,gBACE,OAAOtU,KAAKuU,WAGd,cACE,OAAOvU,KAAKoM,SAGd,YAAYnc,GACV,MAAMsc,EAAmC,mBAAVtc,EAAuB6S,EAAkB9C,KAAM/P,GAAS,KACvF+P,KAAKutB,sBAAsB/gB,QAAUD,EACrC,MAAME,EAAgBzM,KAAKutB,sBAAsB/gB,QACjDxM,KAAKoM,SAA6B,OAAlBK,GAA0BA,IAAkBF,EAAkBtc,EAAQwc,EAGxF,WACE,OAAOzM,KAAKutB,sBAAsBpwB,KAGpC,SAASlN,GAGP,GAFA+P,KAAKutB,sBAAsBpwB,KAAOlN,EAEpB,WAAVA,EACF,MAAM2C,IAG6B,OAAjCoN,KAAKwtB,0BACPxtB,KAAKwtB,wBAAwB9F,aAAe,MAIhD,gBAAgBA,GACd1nB,KAAKutB,sBAAsB5F,gBAAgBD,GAEN,OAAjC1nB,KAAKwtB,0BACPxtB,KAAKwtB,wBAAwB9F,aAAeA,GAIhD,MAAM/jB,EAAO,GAGX,GAFA3D,KAAKutB,sBAAsB7pB,MAAMC,GAEI,OAAjC3D,KAAKwtB,wBACPxtB,KAAKwtB,wBAAwB9pB,MAAQC,MAChC,CACL,YAAyB3D,MAEzB,MAAM0M,EAA8B,KAClC1M,KAAKutB,sBAAsBpkB,oBAAoB,QAASuD,GAGxDC,WAAW,IAAM,YAA0B3M,MAAO,MAGpDA,KAAKutB,sBAAsBnkB,iBAAiB,QAASsD,IAIzD,KAAK/I,EAAO,GACV3D,KAAKutB,sBAAsBxpB,KAAKJ,GAEK,OAAjC3D,KAAKwtB,0BACPxtB,KAAKwtB,wBAAwBzpB,KAAOJ,M,6BCrG5C,6CACO,MAAM8pB,EAAsC,CAAC13B,EAAmB2C,EAA4BhG,EAAoBuD,EAAkB3B,IAChI,KACL,MAAMo5B,EAAgC,IAAIv8B,QAC1C,IAAIu2B,EAAe,KACfhkB,EAAQ,KACRK,EAAO,KA0CX,MAAO,CACL,iBAAiB9T,GACfy3B,EAAez3B,GAGjB,UAAUA,GACRyT,EAAQzT,GAGV,SAASA,GACP8T,EAAO9T,GAGT,OAAOwa,EAAOC,EAA2BC,GACvC,MAAMgjB,EAA+BD,EAA8B79B,IAAI6a,GAEvE,YAAqCnY,IAAjCo7B,EACK9iB,QAAQC,QAAQ6iB,GAzDA5iB,OAAON,EAAOC,EAA2BC,KACpE,IAAI6c,EAAuB90B,EAAmB+X,GAE9C,MAAMmjB,EAAuC,YAAiBpG,EAAsB9c,GAEpF,IAAKkjB,EAAsC,CACzC,MAAM77B,EAAU,CACd+W,aAAc0e,EAAqB1e,aACnCC,iBAAkBye,EAAqBze,iBACvCC,sBAAuBwe,EAAqBxe,sBAC5CiL,OAAQuT,EAAqBvT,OAAOhkB,MACpCikB,UAAWsT,EAAqBtT,UAAUjkB,MAC1Cy3B,aAA+B,OAAjBA,OAAwBn1B,EAAYm1B,EAClDvqB,KAAMqqB,EAAqBrqB,MAE7BqqB,EAAuB9uB,EAA2BgS,EAA2B3Y,GAE/D,OAAV2R,GACF8jB,EAAqB9jB,MAAMA,GAGhB,OAATK,GACFyjB,EAAqBzjB,KAAKA,GAe9B,OAXA2pB,EAA8BvxB,IAAIuO,EAA2B8c,GAExDoG,SAIG73B,EAAkB2U,EAA2BD,EAAMwJ,OAAQuT,EAAqBvT,OAAQtJ,SACxF5U,EAAkB2U,EAA2BD,EAAMyJ,UAAWsT,EAAqBtT,UAAWvJ,WAJ9F1U,EAAiByU,EAA2BD,EAAMwJ,OAAQuT,EAAqBvT,OAAQtJ,SACvF1U,EAAiByU,EAA2BD,EAAMyJ,UAAWsT,EAAqBtT,UAAWvJ,UAM/FrW,EAAwBmW,EAAOC,EAA2B8c,EAAsB7c,GAC/E6c,GAuBEqG,CAAqBpjB,EAAOC,EAA2BC,O,6BCpEtE,6CACA,MAAMpB,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvBif,eAAgB,IAChBC,eAAgB,IAChBC,cAAe,EACfC,cAAe,UACfC,YAAa,IACbN,aAAc,EACdO,aAAc,EACdC,aAAc,EACdC,aAAc,aACdtZ,UAAW,EACXC,UAAW,EACXC,UAAW,EACXqZ,YAAa,EACbC,cAAe,GAEJoF,EAA8B,CAAC/4B,EAAsBoB,EAAkB8C,EAAwBC,EAA0BzE,EAAkBT,IAC/I,cAAyBe,EAC9B,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAEC81B,EAAmB5uB,EAAuB9G,EAAe2X,GACzDgC,EAAY9X,EAA4B7B,GAE9C6X,MAAM5X,GAAS,EAAOy1B,EADK/b,EAAY5S,IAA6B,MAEpE8G,KAAK+tB,kBAAoBlG,EAEzB7nB,KAAKguB,cAAgB73B,EAAiB6J,KAAM8L,EAAW+b,EAAiBE,aAAc,IAA4B,KAClH/nB,KAAKiuB,cAAgB93B,EAAiB6J,KAAM8L,EAAW+b,EAAiBS,aAAc,IAA4B,KAClHtoB,KAAKkuB,cAAgB/3B,EAAiB6J,KAAM8L,EAAW+b,EAAiBU,aAAc,IAA4B,KAClHvoB,KAAKmuB,WAAah4B,EAAiB6J,KAAM8L,EAAW+b,EAAiB3Y,UAAW,IAA4B,KAC5GlP,KAAKouB,WAAaj4B,EAAiB6J,KAAM8L,EAAW+b,EAAiB1Y,UAAW,IAA4B,KAC5GnP,KAAKquB,WAAal4B,EAAiB6J,KAAM8L,EAAW+b,EAAiBzY,UAAW,IAA4B,KAG9G,qBACE,OAAOpP,KAAK+tB,kBAAkB9F,eAGhC,mBAAmBh4B,GACjB+P,KAAK+tB,kBAAkB9F,eAAiBh4B,EAG1C,qBACE,OAAO+P,KAAK+tB,kBAAkB7F,eAGhC,mBAAmBj4B,GACjB+P,KAAK+tB,kBAAkB7F,eAAiBj4B,EAG1C,oBACE,OAAO+P,KAAK+tB,kBAAkB5F,cAGhC,kBAAkBl4B,GAChB+P,KAAK+tB,kBAAkB5F,cAAgBl4B,EAGzC,oBACE,OAAO+P,KAAK+tB,kBAAkB3F,cAGhC,kBAAkBn4B,GAChB+P,KAAK+tB,kBAAkB3F,cAAgBn4B,EAGzC,kBACE,OAAO+P,KAAK+tB,kBAAkB1F,YAGhC,gBAAgBp4B,GACd+P,KAAK+tB,kBAAkB1F,YAAcp4B,EAGvC,mBACE,OAAO+P,KAAKguB,cAGd,mBACE,OAAOhuB,KAAKiuB,cAGd,mBACE,OAAOjuB,KAAKkuB,cAGd,mBACE,OAAOluB,KAAK+tB,kBAAkBvF,aAGhC,iBAAiBv4B,GACf+P,KAAK+tB,kBAAkBvF,aAAev4B,EAGxC,gBACE,OAAO+P,KAAKmuB,WAGd,gBACE,OAAOnuB,KAAKouB,WAGd,gBACE,OAAOpuB,KAAKquB,WAGd,kBACE,OAAOruB,KAAK+tB,kBAAkBtF,YAGhC,gBAAgBx4B,GACd+P,KAAK+tB,kBAAkBtF,YAAcx4B,EAGvC,oBACE,OAAO+P,KAAK+tB,kBAAkBrF,cAGhC,kBAAkBz4B,GAChB+P,KAAK+tB,kBAAkBrF,cAAgBz4B,K,6BC9H7C,qDAEO,MAAMq+B,EAAkC,CAACv4B,EAAmBY,EAA+BO,EAAgC1B,EAAsByD,EAAwBvG,EAAoBqB,EAAsCkC,EAAkB3B,EAAyB6D,IAC5Q,KACL,MAAM4d,EAA2B,IAAI5kB,QACrC,IAAIo9B,EAAwB,KA+J5B,MAAO,CACL,OAAO9jB,EAAOC,EAA2BC,GACvC,MAAM6jB,EAA2CzY,EAAyBlmB,IAAI6a,GAE9E,YAAiDnY,IAA7Ci8B,EACK3jB,QAAQC,QAAQ0jB,GAlKLzjB,OAAON,EAAOC,EAA2BC,KAC/D,IAAI9B,EAAiB,KACjBgf,EAAmBn1B,EAAmB+X,GAC1C,MAAMgkB,EAAyB,CAC7B3lB,aAAc+e,EAAiB/e,aAC/BC,iBAAkB8e,EAAiB9e,iBACnCC,sBAAuB6e,EAAiB7e,uBAEpC0lB,EAAgC,IAAKD,EACzCxG,eAAgBJ,EAAiBI,eACjCC,eAAgBL,EAAiBK,eACjCC,cAAeN,EAAiBM,cAChCC,cAAeP,EAAiBO,cAChCC,YAAaR,EAAiBQ,YAC9BG,aAAcX,EAAiBW,aAC/BC,YAAaZ,EAAiBY,YAC9BC,cAAeb,EAAiBa,eAG5BiG,EAAmC,YAAiB9G,EAAkBnd,GAE5E,GAAI,eAAgBmd,EAClBhf,EAAiBrT,EAAqBkV,EAA2B,IAAK+jB,EACpExlB,KAAM,SAEH,IAAK0lB,EAAkC,CAC5C,MAAM58B,EAAU,IAAK28B,EACnB3G,aAAcF,EAAiBE,aAAa93B,MAC5Cq4B,aAAcT,EAAiBS,aAAar4B,MAC5Cs4B,aAAcV,EAAiBU,aAAat4B,MAC5Cif,UAAW2Y,EAAiB3Y,UAAUjf,MACtCkf,UAAW0Y,EAAiB1Y,UAAUlf,MACtCmf,UAAWyY,EAAiBzY,UAAUnf,OAExC43B,EAAmB5uB,EAAuByR,EAA2B3Y,GAKvE,GAFAgkB,EAAyB5Z,IAAIuO,EAA8C,OAAnB7B,EAA0Bgf,EAAmBhf,GAE9E,OAAnBA,EAAyB,CAC3B,GAA8B,OAA1B0lB,EAAgC,CAClC,GAA6C,OAAzCx6B,EACF,MAAM,IAAIZ,MAAM,uDAGlB,MAAMkrB,EAA6B,IAAItqB,EAAqC,EAC5E0W,EAAMrY,QAAQwM,OAAQ8L,EAA0BnD,YAC1Cmc,EAA0B/sB,EAA8B0nB,EAA4B,CACxFvV,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgB,IAElBsb,EAAwBlwB,QAAQ6qB,EAA2BnV,aAE3DqlB,EAAwB,WACtB,MAAMK,QAAkC/jB,QAAQyV,IAAI,CAAC7V,EAAMsd,aAActd,EAAM6d,aAAc7d,EAAM8d,aAAc9d,EAAMyE,UAAWzE,EAAM0E,UAAW1E,EAAM2E,WAAWlc,IAAI6X,MAAOtY,EAAYiM,KACzL,MAAMiY,EAA2Bzf,EAA+BmnB,EAA4B,CAC1FvV,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBpF,OAAkB,IAAVlF,EAAc,EAAI,IAG5B,aADMzI,EAAiBooB,EAA4B5rB,EAAYkkB,EAAyB/S,OAAQ+G,GACzFgM,KAGT,IAAK,IAAI3nB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B4/B,EAA0B5/B,GAAGwE,QAAQkwB,EAAyB,EAAG10B,GACjE4/B,EAA0B5/B,GAAG0U,MAAM,GAGrC,OAAOvL,EAAgCkmB,IAjBjB,GAqB1B,MAAMC,QAAuBiQ,EACvB1F,EAAgBrzB,EAAqBkV,EAA2B,IAAK+jB,EACzExlB,KAAM,UAEF3U,EAAwBmW,EAAOC,EAA2Bme,EAAele,GAC/E,MAAMkkB,EAAe,GAErB,IAAK,IAAI7/B,EAAI,EAAGA,EAAIsvB,EAAerT,iBAAkBjc,GAAK,EACxD6/B,EAAajuB,KAAK0d,EAAehb,eAAetU,IAGlD,IAAI4gB,EAAkB,CAACif,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IAC3Ehf,EAAe,CAACgf,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IACxEC,EAAet5B,EAAqBkV,EAA2B,IAAK+jB,EACtExlB,KAAM,IAEJ8lB,EAAoB91B,EAAuByR,EAA2B,IAAKgkB,EAC7E3G,aAAcnY,EAAgB,GAC9B0Y,aAAc1Y,EAAgB,GAC9B2Y,aAAc3Y,EAAgB,GAC9BV,UAAWW,EAAa,GACxBV,UAAWU,EAAa,GACxBT,UAAWS,EAAa,KAE1BgZ,EAAcr1B,QAAQs7B,GAAct7B,QAAQu7B,EAAkBtqB,OAAO,IACrEsqB,EAAkBv7B,QAAQqV,GAE1B,IAAK,IAAI7Z,EAAI,IAAKA,EAAIsvB,EAAe1f,OAAQ5P,GAAK,IAAK,CACrD,MAAMghB,EAAc,CAAC6e,EAAa,GAAG7/B,GAAI6/B,EAAa,GAAG7/B,GAAI6/B,EAAa,GAAG7/B,IACvEmhB,EAAU,CAAC0e,EAAa,GAAG7/B,GAAI6/B,EAAa,GAAG7/B,GAAI6/B,EAAa,GAAG7/B,IAEzE,GAAIghB,EAAYC,KAAK,CAAChgB,EAAOyO,IAAUzO,IAAU2f,EAAgBlR,KAAWyR,EAAQF,KAAK,CAAChgB,EAAOyO,IAAUzO,IAAU4f,EAAanR,IAAS,CACzIkR,EAAkBI,EAClBH,EAAeM,EACf,MAAMa,EAAchiB,EAAI0b,EAA0BnD,WAClDunB,EAAa7lB,KAAK8H,eAAe,EAAGC,GACpC8d,EAAet5B,EAAqBkV,EAA2B,IAAK+jB,EAClExlB,KAAM,IAER8lB,EAAoB91B,EAAuByR,EAA2B,IAAKgkB,EACzE3G,aAAcnY,EAAgB,GAC9B0Y,aAAc1Y,EAAgB,GAC9B2Y,aAAc3Y,EAAgB,GAC9BV,UAAWW,EAAa,GACxBV,UAAWU,EAAa,GACxBT,UAAWS,EAAa,KAE1Bif,EAAa7lB,KAAK8H,eAAe,EAAGC,GACpC6X,EAAcr1B,QAAQs7B,GAAct7B,QAAQu7B,EAAkBtqB,OAAO,IACrEsqB,EAAkBv7B,QAAQqV,IAI9B,OAAOA,EAyBT,OAtBK8lB,SAQG54B,EAAkB2U,EAA2BD,EAAMsd,aAAcF,EAAiBE,aAAcpd,SAChG5U,EAAkB2U,EAA2BD,EAAM6d,aAAcT,EAAiBS,aAAc3d,SAChG5U,EAAkB2U,EAA2BD,EAAM8d,aAAcV,EAAiBU,aAAc5d,SAChG5U,EAAkB2U,EAA2BD,EAAMyE,UAAW2Y,EAAiB3Y,UAAWvE,SAC1F5U,EAAkB2U,EAA2BD,EAAM0E,UAAW0Y,EAAiB1Y,UAAWxE,SAC1F5U,EAAkB2U,EAA2BD,EAAM2E,UAAWyY,EAAiBzY,UAAWzE,WAZ1F1U,EAAiByU,EAA2BD,EAAMsd,aAAcF,EAAiBE,aAAcpd,SAC/F1U,EAAiByU,EAA2BD,EAAM6d,aAAcT,EAAiBS,aAAc3d,SAC/F1U,EAAiByU,EAA2BD,EAAM8d,aAAcV,EAAiBU,aAAc5d,SAC/F1U,EAAiByU,EAA2BD,EAAMyE,UAAW2Y,EAAiB3Y,UAAWvE,SACzF1U,EAAiByU,EAA2BD,EAAM0E,UAAW0Y,EAAiB1Y,UAAWxE,SACzF1U,EAAiByU,EAA2BD,EAAM2E,UAAWyY,EAAiBzY,UAAWzE,IAU7F,YAAuBkd,SACnBvzB,EAAwBmW,EAAOC,EAA2Bmd,EAAiBpjB,OAAO,GAAIkG,SAEtFrW,EAAwBmW,EAAOC,EAA2Bmd,EAAkBld,GAG7Ekd,GAWE5R,CAAgBxL,EAAOC,EAA2BC,O,6BC5KjE,wCAAMpB,EAAkB,CACtBqK,sBAAsB,GAEXob,EAAgC,CAAC51B,EAA0B3E,EAAkBw6B,IACjF,MAAMC,EACX,YAAY98B,EAASL,GACnB,MAAMI,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAEC21B,EAAetuB,EAAyBjH,EAAe2X,GAG7D,OAFAmlB,EAAkBzyB,IAAIkrB,GAEfA,EAGT,OAAQ33B,OAAOub,aAAaC,GAC1B,OAAoB,OAAbA,GAAyC,iBAAbA,GAAyB7b,OAAOmW,eAAe0F,KAAc2jB,EAAat+B,WAAaq+B,EAAkBvyB,IAAI6O,M,6BCjBtJ,kCAAO,MAAM4jB,EAAyB,CAACC,EAAuBt5B,IACrD,CAAC4U,EAA2BjY,EAAYke,EAAkBhG,KACpCykB,EAAsB38B,GAC9B48B,OAAO1e,GACnB7a,EAAyBrD,EAAYiY,EAA2BiG,EAAkBhG,K,6BCJ7F,kCAAO,MAAM2kB,EAAgC,CAACt8B,EAAyBqB,EAAsB6N,IACpF6I,MAAOpY,EAAW+X,EAA2B5Y,EAAiB6Y,KACnE,MAAM0S,EAAuBrqB,EAAwBL,GAC/C48B,EAAY,IAAI5kB,EAAOhY,SACvBkY,QAAQyV,IAAIjD,EAAqBlV,aAAajV,IAAI,CAACmvB,EAAa9d,IAAU6M,MAAMC,KAAKgR,GAAamN,OAAO,EAAEhV,MAAa+U,EAAUE,SAASjV,IAAStnB,IAAI6X,OAAQyP,EAAQlW,MAC5K,MAAM4D,EAAoB7T,EAAqBmmB,GACzCxE,QAAgC9N,EAAkBwG,OAAO8L,EAAQ9P,EAA2B6kB,GAC5FrmB,EAAcvW,EAAUP,QAAQ8W,YAEjChH,EAAesY,IAAY7nB,IAAcuW,GAAgBhH,EAAevP,IAC3EqjB,EAAwBxiB,QAAQ1B,EAAiBwS,EAAQC,MAEzDmrB,OAAO,CAACC,EAAsBC,IAAsB,IAAID,KAAyBC,GAAoB,O,6BCZ7G,kCAAO,MAAMC,EAAiC,CAACx7B,EAAsBuO,EAA0BV,IACtF6I,MAAOtY,EAAYiY,EAA2BiG,EAAkBhG,KACrE,MAAM4S,EAAwB3a,EAAyBnQ,SACjDoY,QAAQyV,IAAIlP,MAAMC,KAAKkM,EAAsBpV,cAAcjV,IAAI6X,OAAQyP,EAAQlW,MACnF,MAAM4D,EAAoB7T,EAAqBmmB,GACzCxE,QAAgC9N,EAAkBwG,OAAO8L,EAAQ9P,EAA2BC,GAE7FzI,EAAesY,IAClBxE,EAAwBxiB,QAAQmd,EAAkBrM,Q,6BCR1D,8CACO,MAAMwrB,EAAwC,CAACl8B,EAAiB4B,EAAsByC,EAAiC83B,IACrHrlB,GAED9W,EAAgB,IAAoB,IAAM,YAAmB8W,IAExDG,QAAQC,QAAQlX,EAAgBm8B,EAA2CA,IAA4CriB,KAAKsiB,IACjI,IAAKA,EAA2C,CAC9C,MAAMvgB,EAAsBxX,EAAgCyS,EAA2B,IAAK,EAAG,GAE/FA,EAA0BulB,WAAa,KACrCxgB,EAAoBK,eAAiB,KAErCL,EAAoBhc,cAGtBgc,EAAoBK,eAAiB,IAAMpF,EAA0BsG,YAGrEvB,EAAoBjc,QAAQkX,EAA0BxB,aAGxD,OAAOwB,EAA0BpP,mBAI9B,IAAIuP,QAAQC,IAEjB,MAAMoY,EAAW1tB,EAAqBkV,EAA2B,CAC/D5B,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBC,KAAM,IAGRyB,EAA0BulB,WAAaltB,IACrCmgB,EAASzvB,aACTqX,EAAQ/H,EAAMub,iBAGhB4E,EAAS1vB,QAAQkX,EAA0BxB,aAC3CwB,EAA0BpP,oB,6BCzChC,8CACO,MAAM40B,EAAuB,CAACj7B,EAAkBrB,EAAiBS,EAAsBsG,EAAgCxC,EAAiC6L,EAAqD3O,EAAmCC,KACrP,MAAMqV,EAAQ,GACd,MAAO,CAACzB,EAAawB,IAA8BrW,EAAqB6U,GAAawF,OAAOxF,EAAawB,EAA2BC,GAKnI+C,KAAK,IAAM7C,QAAQyV,IAAIlP,MAAMC,KAAK1W,EAA+B+P,IAA4BxX,IAAIoW,GAAoBjV,EAAqBiV,GAAkBoF,OAAOpF,EAAkBoB,EAA2BC,MAAU+C,KAAK,IAAMvV,EAAgCuS,IAA4BgD,KAAKrK,IAG1P,mBAAhCA,EAAYsB,iBACrBtP,EAAkCgO,GAClC,YAAoCA,IAC1BzP,EAAgBoQ,EAAqD,IAAMA,EAAoDX,KACzI/N,EAA6C+N,GAG/CpO,EAAiBuH,IAAI6G,GACdA,M,6BCnBX,wCAAMkG,EAAkB,CACtBT,aAAc,EAMdC,iBAAkB,WAClBC,sBAAuB,WACvBijB,IAAK,GAEMkE,EAAoC,CAACp7B,EAAsBoB,EAAkBoD,EAA8BC,EAAgC/E,EAAkBT,IACjK,cAA+Be,EACpC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECm4B,EAAyB3wB,EAA6BpH,EAAe2X,GACrEgC,EAAY9X,EAA4B7B,GAE9C6X,MAAM5X,GAAS,EAAO83B,EADWpe,EAAYtS,IAAmC,MAGhFwG,KAAKowB,KAAOj6B,EAAiB6J,KAAM8L,EAAWoe,EAAuB+B,IAAK,GAAI,GAGhF,UACE,OAAOjsB,KAAKowB,Q,6BC3BlB,qDAEO,MAAMC,EAAwC,CAACt6B,EAAmBwD,EAA8B7G,EAAoBuD,EAAkB3B,IACpI,KACL,MAAMg8B,EAAkC,IAAIn/B,QAsC5C,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAM4lB,EAAiCD,EAAgCzgC,IAAI6a,GAE3E,YAAuCnY,IAAnCg+B,EACK1lB,QAAQC,QAAQylB,GAzCExlB,OAAON,EAAOC,EAA2BC,KACtE,IAAIuf,EAAyBx3B,EAAmB+X,GAMhD,MAAM+lB,EAAyC,YAAiBtG,EAAwBxf,GAExF,IAAK8lB,EAAwC,CAC3C,MAAMz+B,EAAU,CACd+W,aAAcohB,EAAuBphB,aACrCC,iBAAkBmhB,EAAuBnhB,iBACzCC,sBAAuBkhB,EAAuBlhB,sBAC9CijB,IAAK/B,EAAuB+B,IAAIh8B,OAElCi6B,EAAyB3wB,EAA6BmR,EAA2B3Y,GAiBnF,OAdAu+B,EAAgCn0B,IAAIuO,EAA2Bwf,GAE1DsG,QAGGz6B,EAAkB2U,EAA2BD,EAAMwhB,IAAK/B,EAAuB+B,IAAKthB,SAFpF1U,EAAiByU,EAA2BD,EAAMwhB,IAAK/B,EAAuB+B,IAAKthB,GAKvF,YAAuBuf,SACnB51B,EAAwBmW,EAAOC,EAA2Bwf,EAAuBzlB,OAAO,GAAIkG,SAE5FrW,EAAwBmW,EAAOC,EAA2Bwf,EAAwBvf,GAGnFuf,GAWEuG,CAAuBhmB,EAAOC,EAA2BC,O,6BClDxE,kCACO,MAAM+lB,EAA0Cx7B,GAC9C,KACL,GAAqC,OAAjCA,EACF,OAAO,EAGT,IACE,IAAIA,EAA6B,CAC/B0J,OAAQ,EACR2I,WAAY,QAEd,MACA,OAAO,EAGT,OAAO,I,6BChBX,kCAIO,MAAMopB,EAAyD58B,GAC7D,KACL,GAA6C,OAAzCA,EACF,OAAO,EAGT,MACMkQ,EAD4B,IAAIlQ,EAAqC,EAAG,EAAG,OAC7BsX,aAAa,EAAG,EAAG,OAEvE,QAAwC9Y,IAApC0R,EAAkBC,cACpB,OAAO,EAGT,MAAMsW,EAAS,IAAI1Z,aAAa,GAEhC,IACEmD,EAAkBU,gBAAgB6V,EAAQ,EAAG,GAC7C,MACA,OAAO,EAGT,OAAO,I,6BCzBX,kCAAO,MAAMoW,EAAoEz8B,GACxEhC,IACL,MAAM0Z,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASyS,sBAC9FhlB,EAA4BnI,QAE5B,IACEmI,EAA4BnI,QAC5B,MACA,OAAO,EAGT,OAAO,I,6BCXX,kCACO,MAAMotB,EAAqE/8B,GACzE,KACL,GAA6C,OAAzCA,EACF,OAAO8W,QAAQC,SAAQ,GAGzB,MAAMimB,EAAsB,IAAIh9B,EAAqC,EAAG,EAAG,OACrEsP,EAAc0tB,EAAoB1lB,aAAa,EAAG,EAAG0lB,EAAoBxpB,YACzEyc,EAAwB+M,EAAoBF,qBAMlD,OALAxtB,EAAYC,eAAe,GAAG,GAAK,EACnC0gB,EAAsBjoB,OAASsH,EAC/B2gB,EAAsBtgB,MAAM,EAAG,EAAG,GAClCsgB,EAAsBxwB,QAAQu9B,EAAoB7nB,aAE3C,IAAI2B,QAAQC,IACjBimB,EAAoBd,WAAa,EAC/B3R,qBAGAxT,EAAgD,IAAxCwT,EAAehb,eAAe,GAAG,KAG3CytB,EAAoBz1B,qB,6BCvB1B,kCAAO,MAAM01B,EAAkE78B,GACtEhC,IACL,MAAM0Z,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASyS,sBACxF5sB,EAAoB9R,EAAckZ,aAAa,EAAG,EAAG,OAC3DQ,EAA4B9P,OAASkI,EAErC,IACE4H,EAA4BnI,MAAM,EAAG,GACrC,MACA,OAAO,EAGT,OAAO,I,6BCZX,kCAAO,MAAMutB,EAAkE98B,GACtEhC,IACL,MAAM0Z,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASyS,sBAC9FhlB,EAA4BnI,QAE5B,IACEmI,EAA4B9H,OAC5B,MACA,OAAO,EAGT,OAAO,I,6BCXX,kCAAO,MAAMmtB,EAA2Cj9B,GAC/C,KACL,GAAsC,OAAlCA,EACF,OAAO,EAIT,QAAgD1B,IAA5C0B,EAA8BrD,gBAA6E2B,IAAlD0B,EAA8BrD,UAAU6c,MACnG,OAAO,EAGT,MAAM0jB,EAAe,IAAIl9B,EACnBm9B,OAAgD7+B,IAAvB4+B,EAAa1jB,MAE5C,IACE0jB,EAAa1jB,QACb,OAGF,OAAO2jB,I,6BCnBX,kCAIO,MAAMC,EAA8Dt9B,GAClE,KACL,GAA6C,OAAzCA,EACF,OAAO8W,QAAQC,SAAQ,GAGzB,MAAMimB,EAAsB,IAAIh9B,EAAqC,EAAG,EAAG,OAE3E,OAAO,IAAI8W,QAAQC,IACjB,IAAIwmB,GAAY,EAEhB,MAAMvjB,EAAiBjb,IACjBw+B,IACFA,GAAY,EACZP,EAAoBz1B,iBACpBwP,EAAQhY,aAAeqa,aAI3B,IAAIrR,EAEJ,IACEA,EAAUi1B,EACT/2B,gBAAgB,KAAM,OACpB+T,GACH,MAAOjb,GACPib,EAAejb,QAIDP,IAAZuJ,GAEFA,EAAQE,MAAM+R,O,6BCpCtB,kCAAO,MAAMwjB,EAAuCt9B,GAC3C,KACL,GAAsC,OAAlCA,EACF,OAAO,EAGT,IAAIk9B,EAEJ,IACEA,EAAe,IAAIl9B,EAA8B,CAC/C+R,YAAa,aAEf,MACA,OAAO,EAIT,OADAmrB,EAAa1jB,SACN,I,6BCjBX,kCACO,MAAM+jB,EAA0Cz9B,GAC9C,KACL,GAA6C,OAAzCA,EACF,OAAO,EAGT,MACM8U,EAD4B,IAAI9U,EAAqC,EAAG,EAAG,OAChC8wB,aAC3C4M,EAAc5oB,EAAerV,QAAQqV,KAAoBA,EAE/D,OADAA,EAAepV,WAAWoV,GACnB4oB,I,6BCXX,kCAAO,MAAMC,EAAyEv9B,GAC7EhC,IACL,MAAM0Z,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASqJ,oBAE9F,IACE5b,EAA4BnI,OAAO,GACnC,MAAO5Q,GACP,OAAOA,aAAe+Q,WAGxB,OAAO,I,6BCVX,kCAAO,MAAM8tB,EAAsEx9B,GAC1EhC,IACL,MAAM8R,EAAoB9R,EAAckZ,aAAa,EAAG,EAAG,OACrDQ,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASyS,sBAC9FhlB,EAA4B9P,OAASkI,EACrC4H,EAA4BnI,QAC5BmI,EAA4B9H,OAE5B,IAEE,OADA8H,EAA4B9H,QACrB,EACP,MACA,OAAO,K,6BCZb,kCAAO,MAAM6tB,EAAwEz9B,GAC5EhC,IACL,MAAM0Z,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASqJ,oBAE9F,IACE5b,EAA4B9H,MAAM,GAClC,MAAOjR,GACP,OAAOA,aAAe+Q,WAGxB,OAAO,I,6BCVX,kCAIO,MAAMguB,EAAkD,CAAC32B,EAAmCnH,IAC1FgX,UAEL,GAA0C,OAAtC7P,EACF,OAAO,EAGT,GAA6C,OAAzCnH,EACF,OAAO,EAGT,MAAM+mB,EAAO,IAAIC,KAAK,CAAC,sGAAuG,CAC5H5d,KAAM,0CAEF4zB,EAAsB,IAAIh9B,EAAqC,EAAG,IAAK,MACvEinB,EAAMC,IAAIC,gBAAgBJ,GAChC,IAAIgX,GAAmB,EAEvB,UACQf,EAAoBgB,aAAaze,UAAU0H,GACjD,MAAMkI,EAAW6N,EAAoBlM,aAC/Bvb,EAAmB,IAAIpO,EAAkC61B,EAAqB,IAAK,CACvF7e,gBAAiB,IAGnB5I,EAAiB4J,KAAK8e,UAAY,IAAMF,GAAmB,EAE3D5O,EAAS1vB,QAAQ8V,SACXynB,EAAoBz1B,iBAC1B,OACA,QACA2f,IAAIK,gBAAgBN,GAGtB,OAAO8W,I,6BCtCX,kCAGO,MAAMG,EAAiD,CAAC99B,EAAuBJ,IAC7E,KACL,GAA6C,OAAzCA,EACF,OAAO,EAGT,MAAMg9B,EAAsB,IAAIh9B,EAAqC,EAAG,EAAG,OACrE2vB,EAA0BvvB,EAAsB48B,EAAqB3S,GAAYA,EAASuF,uBAEhG,IACED,EAAwB5a,aAAe,EACvC,MACA,OAAO,EAGT,OAAO,I,6BClBX,kCAAO,MAAMopB,EAAwD,CAAC/9B,EAAuBJ,IACpF,KACL,GAA6C,OAAzCA,EACF,OAAO,EAGT,MAAM2W,EAA4B,IAAI3W,EAAqC,EAAG,EAAG,OAEjF,YAAuDxB,IAAnDmY,EAA0BmZ,sBAIG1vB,EAAsBuW,EAA2B0T,GAAYA,EAASyF,wBAMvEjgB,OAAOgN,WAAauhB,OAAOC,oB,6BClB/D,kCACO,MAAMC,EAAsDt+B,GAC1D,KACL,GAA6C,OAAzCA,EACF,OAAO,EAGT,MAAMg9B,EAAsB,IAAIh9B,EAAqC,EAAG,EAAG,OACrEwjB,EAAsBwZ,EAAoB3M,kBAChD7M,EAAoBxb,OAASg1B,EAAoB1lB,aAAa,EAAG,EAAG0lB,EAAoBxpB,YAExF,IACEgQ,EAAoBxb,OAASg1B,EAAoB1lB,aAAa,EAAG,EAAG0lB,EAAoBxpB,YACxF,MACA,OAAO,EAGT,OAAO,I,6BCjBX,kCAAO,MAAM+qB,EAAmCx+B,GACvC,IAAiB,OAAXA,GAAmBA,EAAOjD,eAAe,oB,6BCDxD,kCACO,MAAM0hC,EAA0Et+B,GAC9E,KACL,GAAsC,OAAlCA,EACF,OAAO,EAGT,MAAMk9B,EAAe,IAAIl9B,EAEzB,IAEE,OADAk9B,EAAapK,wBAAwB,IAAIC,cAClC,EACP,MAAOl0B,GACP,OAAO,K,6BCbb,kCAAO,MAAM0/B,EAAkD,CAACh9B,EAAsBzB,IAC7E,KACL,GAA6C,OAAzCA,EACF,OAAO8W,QAAQC,SAAQ,GAGzB,MAAMJ,EAA4B,IAAI3W,EAAqC,EAAG,EAAG,OAE3EmvB,EAAW1tB,EAAqBkV,EAA2B,CAC/D5B,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBC,KAAM,IAGR,OAAO,IAAI4B,QAAQC,IACjBJ,EAA0BulB,WAAa,KACrC/M,EAASzvB,aACTqX,EAAkD,IAA1CJ,EAA0BsG,cAGpCtG,EAA0BpP,qB,6BCrBhC,kCAGO,MAAMm3B,EAAgD1+B,GACpD,KACL,GAA6C,OAAzCA,EACF,OAAO8W,QAAQC,SAAQ,GAGzB,MAAMJ,EAA4B,IAAI3W,EAAqC,EAAG,EAAG,OAMjF,QAAqDxB,IAAjDmY,EAA0Buf,mBAC5B,OAAOpf,QAAQC,SAAQ,GAIzB,QAAuDvY,IAAnDmY,EAA0BmZ,qBAC5B,OAAOhZ,QAAQC,SAAQ,GAGzB,MAAM6E,EAAqBjF,EAA0BmZ,uBAC/C6O,EAAehoB,EAA0Buf,qBAM/C,OALAta,EAAmB7G,aAAe,EAClC6G,EAAmB/L,OAAO3T,MAAQ,EAClCyiC,EAAa5pB,aAAe,EAC5B6G,EAAmBjM,QACnBiM,EAAmBnc,QAAQk/B,GAAcl/B,QAAQkX,EAA0BxB,aACpEwB,EAA0BpP,iBAAiBoS,KAAK3R,GAA0C,IAAhCA,EAAOuH,eAAe,GAAG,M,6BC/B9F,wCAAMiG,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBlB,MAAO,KACPuhB,WAAY,QAEDsJ,EAAkC,CAAC59B,EAAsBnC,EAAyBmG,EAA4BW,EAA8BjF,EAAkBT,IAClK,cAA6Be,EAClC,YAAY3C,EAASL,EAAUwX,GAC7B,MAAMpX,EAAgBsC,EAAiBrC,GACjC0X,EAAgB,IAAKP,KACtBxX,GAECu6B,EAAuBvzB,EAA2B5G,EAAe2X,GAIvEE,MAAM5X,GAAS,EAAMk6B,EAHHt4B,EAA4B7B,GACHuH,IAAiC,MAG5EsG,KAAK4yB,mBAAoB,EACzB5yB,KAAK6yB,sBAAwBvG,EAG/B,YACE,OAAItsB,KAAK4yB,kBACA,KAGF5yB,KAAK6yB,sBAAsB/qB,MAGpC,UAAU7X,GAER,GAAc,OAAVA,EACF+P,KAAK4yB,mBAAoB,EACzB5yB,KAAK6yB,sBAAsB/qB,MAAQ,IAAIhH,aAAa,CAAC,EAAG,QACnD,CAGL,GAAI7Q,EAAM2O,OAAS,EACjB,MAAMhM,IAGRoN,KAAK4yB,mBAAoB,EACzB5yB,KAAK6yB,sBAAsB/qB,MAAQ7X,GAIvC,iBACE,OAAO+P,KAAK6yB,sBAAsBxJ,WAGpC,eAAep5B,GACb+P,KAAK6yB,sBAAsBxJ,WAAap5B,K,6BCrD9C,qDAEO,MAAM6iC,EAAsC,CAAC/5B,EAA4BrG,EAAoB4B,IAC3F,KACL,MAAMy+B,EAAgC,IAAI5hC,QA6B1C,MAAO,CACL,OAAOsZ,EAAOC,EAA2BC,GACvC,MAAMqoB,EAA+BD,EAA8BljC,IAAI6a,GAEvE,YAAqCnY,IAAjCygC,EACKnoB,QAAQC,QAAQkoB,GAhCAjoB,OAAON,EAAOC,EAA2BC,KACpE,IAAI2hB,EAAuB55B,EAAmB+X,GAI9C,IAF6C,YAAiB6hB,EAAsB5hB,GAEzC,CACzC,MAAM3Y,EAAU,CACd+W,aAAcwjB,EAAqBxjB,aACnCC,iBAAkBujB,EAAqBvjB,iBACvCC,sBAAuBsjB,EAAqBtjB,sBAC5ClB,MAAOwkB,EAAqBxkB,MAC5BuhB,WAAYiD,EAAqBjD,YAEnCiD,EAAuBvzB,EAA2B2R,EAA2B3Y,GAW/E,OARAghC,EAA8B52B,IAAIuO,EAA2B4hB,GAEzD,YAAuBA,SACnBh4B,EAAwBmW,EAAOC,EAA2B4hB,EAAqB7nB,OAAO,GAAIkG,SAE1FrW,EAAwBmW,EAAOC,EAA2B4hB,EAAsB3hB,GAGjF2hB,GAWE2G,CAAqBxoB,EAAOC,EAA2BC,O,6BCzCtE,kCAAO,MAAMuoB,EAAe,IAAwB,oBAAXp/B,OAAyB,KAAOA,Q,6BCAzE,kCAAO,MAAMq/B,EAA0C,CAACh+B,EAA6B8G,IAC5EoH,IACLA,EAAYsB,gBAAkB,CAACuE,EAAakqB,EAAuBC,EAAuB,KACxF,MAAMvuB,EAAe3P,EAA4Bk+B,GAC3CxuB,EAAgB1P,EAA4Bi+B,GAElD,GAAIvuB,GAAiBxB,EAAY4H,iBAC/B,MAAMhP,IAGR,MAAMq3B,EAAoBjwB,EAAYzE,OAChCoG,EAAc3B,EAAYC,eAAeuB,GACzC0uB,EAAoBrqB,EAAYtK,OAEtC,IAAK,IAAI5P,EAAI8V,EAAe,GAAKA,EAAe,EAAG9V,EAAI8V,EAAewuB,GAAqBtkC,EAAIukC,EAAmBvkC,GAAK,EACrHka,EAAYla,GAAKgW,EAAYhW,EAAI8V,IAIrCzB,EAAYa,cAAgB,CAACsW,EAAQ4Y,EAAuBC,EAAuB,KACjF,MAAMvuB,EAAe3P,EAA4Bk+B,GAC3CxuB,EAAgB1P,EAA4Bi+B,GAElD,GAAIvuB,GAAiBxB,EAAY4H,iBAC/B,MAAMhP,IAGR,MAAMq3B,EAAoBjwB,EAAYzE,OAChCoG,EAAc3B,EAAYC,eAAeuB,GACzC2uB,EAAehZ,EAAO5b,OAE5B,IAAK,IAAI5P,EAAI8V,EAAe,GAAKA,EAAe,EAAG9V,EAAI8V,EAAewuB,GAAqBtkC,EAAIwkC,EAAcxkC,GAAK,EAChHgW,EAAYhW,EAAI8V,GAAgB0V,EAAOxrB,M,6BChC/C,kCAAO,MAAMykC,EAAqDt+B,GACzDkO,IACyB,IAACsB,EAWFT,EAX7Bb,EAAYsB,iBAAmBA,EAS5BtB,EAAYsB,gBARN,CAACuE,EAAakqB,EAAuBC,EAAuB,KACjE,MAAMvuB,EAAe3P,EAA4Bk+B,GAC3CxuB,EAAgB1P,EAA4Bi+B,GAElD,GAAItuB,EAAezB,EAAYzE,OAC7B,OAAO+F,EAAgBxV,KAAKkU,EAAa6F,EAAarE,EAAeC,KAK3EzB,EAAYa,eAAiBA,EAS1Bb,EAAYa,cARN,CAACsW,EAAQ4Y,EAAuBC,EAAuB,KAC5D,MAAMvuB,EAAe3P,EAA4Bk+B,GAC3CxuB,EAAgB1P,EAA4Bi+B,GAElD,GAAItuB,EAAezB,EAAYzE,OAC7B,OAAOsF,EAAc/U,KAAKkU,EAAamX,EAAQ3V,EAAeC,O,6BCnBxE,kCAAO,MAAM4uB,EAA2DhuB,GAC/D,CAACmG,EAA6B1Z,KACnC,MAAMwhC,EAAkBxhC,EAAckZ,aAAa,EAAG,EAAGlZ,EAAcoV,YAE5B,OAAvCsE,EAA4B9P,SAC9B8P,EAA4B9P,OAAS43B,GAGvCjuB,EAAmBmG,EAA6B,SAAUhc,GAAO,KAC/D,MAAMI,EAAQJ,EAAIV,KAAK0c,GACvB,OAAO5b,IAAU0jC,EAAkB,KAAO1jC,GACzCkM,GAAOlM,GACDkM,EAAIhN,KAAK0c,EAAuC,OAAV5b,EAAiB0jC,EAAkB1jC,M,6BCZtF,8CACO,MAAM2jC,EAA+Dz/B,GACnE,CAACsP,EAAgCtR,KACtC,MAAM0W,EAAiB1U,EAAsBhC,EAAeisB,GAAYA,EAASyG,cACjFphB,EAA+BjQ,QAAQqV,GAEvC,MAAMgrB,GAAsBpgC,EAMzBgQ,EAA+BhQ,WALzB,KAELA,EAAWtE,KAAKsU,EAAgCoF,GAChDpF,EAA+B0F,oBAAoB,QAAS0qB,KAJrC,IAACpgC,EAQ5BgQ,EAA+B2F,iBAAiB,QAASyqB,GACzD,YAAqBpwB,EAAgCoF,GAErDpF,EAA+BM,KAAO,CAACA,IACrC,IAAI+vB,GAAY,EAChB,MAAO,CAACnwB,EAAO,KACb,GAAImwB,EACF,IACE/vB,EAAK5U,KAAKsU,EAAgCE,GAC1C,MACAkF,EAAeI,KAAK8H,eAAe,EAAGpN,QAGxCI,EAAK5U,KAAKsU,EAAgCE,GAC1CmwB,GAAY,IAXoB,CAcnCrwB,EAA+BM,Q,6BC/BtC,kCAAO,MAAMgwB,EAA8B,CAACnhC,EAAyBuB,EAAuB6/B,IACnF,CAAC7hC,EAAeqd,KACrBA,EAAkB1G,aAAe,EACjC0G,EAAkBzG,iBAAmB,WACrCrZ,OAAOC,eAAe6f,EAAmB,eAAgB,CACvD3f,IAAK,IAAM,EACXsM,IAAK,KACH,MAAMvJ,OAGVlD,OAAOC,eAAe6f,EAAmB,mBAAoB,CAC3D3f,IAAK,IAAM,WACXsM,IAAK,KACH,MAAMvJ,OAIV,MAAMoxB,EAAwB7vB,EAAsBhC,EAAeisB,GAAYA,EAASyS,sBAYxFmD,EAA2BxkB,EAVL,KACpB,MAAM5Q,EAAS4Q,EAAkBpH,eAEjC,IAAK,IAAIpZ,EAAI,EAAGA,EAAI4P,EAAQ5P,GAAK,EAC/Bg1B,EAAsBxwB,QAAQgc,EAAmB,EAAGxgB,IAI/B,IAAMg1B,EAAsBvwB,WAAW+b,M,6BC3BpE,kCACO,MAAM6Q,EAA2B,IAAM,IAAIxV,QAAQC,IACxD,MAAMmpB,EAAc,IAAIC,YAAY,IAC9B,MACJC,EAAK,MACLC,GACE,IAAIC,eAERF,EAAMnC,UAAY,EAChBsC,UACIxpB,EAAiB,OAATwpB,GAEdF,EAAMG,YAAYN,EAAa,CAACA,O,6BCZlC,kCAAO,MAAMO,EAAqD3oB,IAC5B,IAACnI,EAArCmI,EAA4BnI,OAASA,EAYlCmI,EAA4BnI,MAXtB,CAACC,EAAO,EAAGC,EAAS,EAAGnG,KAC5B,MAAM1B,EAAS8P,EAA4B9P,OAErC04B,EAA2B,OAAX14B,EAAkB6H,EAAS5F,KAAKyJ,IAAI1L,EAAO0B,SAAUmG,GAE5D,OAAX7H,GAAmB04B,EAAgB14B,EAAO0B,SAAW,GAAMoO,EAA4BzZ,QAAQmV,WACjG7D,EAAMvU,KAAK0c,EAA6BlI,EAAM,EAAG,GAEjDD,EAAMvU,KAAK0c,EAA6BlI,EAAM8wB,EAAeh3B,O,0FCV9D,MAAMi3B,EAAqB/hC,GACzB,SAAUA,E,oBCAZ,MAAMgiC,EAAiC,CAAChiC,EAAWiK,KAGxD,IAFuB,YAA6BjK,GAEhC0P,OAAOzF,GACzB,MAAM,IAAIzJ,MAAM,yC,yECJb,MAAMyhC,EAAqBjiC,IACxB,IAAwB+J,IAAI/J,GCFzBkiC,EAAqB,CAAC14B,EAAKE,KACtC,MAAMy4B,EAAmB1jB,MAAMC,KAAKlV,GAAKqzB,OAAOnzB,GAEhD,GAAIy4B,EAAiBl2B,OAAS,EAC5B,MAAMzL,MAAM,oCAGd,GAAgC,IAA5B2hC,EAAiBl2B,OACnB,MAAMzL,MAAM,yBAGd,MAAO4hC,GAAmBD,EAE1B,OADA34B,EAAIkG,OAAO0yB,GACJA,G,oBCVF,MAAMC,EAAyC,CAACriC,EAAWwV,MAC3DusB,EAAmB/hC,IAAcwV,EAAaoY,MAAM8B,GAAoC,IAArBA,EAAYjc,OAClF,YAA0BzT,ICLjBsiC,EAAuC/nB,GAC3C,IAAIrC,QAAQC,IACjB,MAAMoqB,EAAWhoB,EAAmB4c,sBAAsB,IAAK,EAAG,GAC5DqL,EAAQjoB,EAAmB2X,aAE3BuQ,EAAOloB,EAAmB7B,aAAa,EAAG,EAAG,OAC7CrG,EAAcowB,EAAK9xB,eAAe,GACxC0B,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjB,MAAMwV,EAAStN,EAAmB2jB,qBAClCrW,EAAOze,OAASq5B,EAChB5a,EAAOhP,MAAO,EACdgP,EAAOhnB,QAAQ0hC,GAAU1hC,QAAQ0Z,EAAmBhE,aACpDsR,EAAOhnB,QAAQ2hC,GACf3a,EAAO/mB,WAAW0hC,GAElBD,EAASplB,eAAiB/M,IACxB,MAAMsyB,EAAUtyB,EAAMgN,YAAYzM,eAAe,GAE7C8N,MAAMxgB,UAAUqf,KAAK9gB,KAAKkmC,EAASC,GAAqB,IAAXA,GAC/CxqB,GAAQ,GAERA,GAAQ,GAGV0P,EAAOzW,OACPmxB,EAASplB,eAAiB,KAE1B0K,EAAO/mB,WAAWyhC,GAClBA,EAASzhC,WAAWyZ,EAAmBhE,cAGzCsR,EAAO9W,UChCE6xB,EAAyB,CAACC,EAAQC,KAC7C,MAAMC,EAAS,IAAI7hC,IAEnB,IAAK,MAAM8hC,KAASH,EAClB,IAAK,MAAM7iC,KAAagjC,EAAO,CAC7B,MAAMzd,EAAQwd,EAAO7lC,IAAI8C,GACzB+iC,EAAOv5B,IAAIxJ,OAAqBJ,IAAV2lB,EAAsB,EAAIA,EAAQ,GAI5Dwd,EAAO/4B,QAAQ,CAACub,EAAOvlB,IAAc8iC,EAAQ9iC,EAAWulB,K,YCTnD,MCuBD0d,EAAsC,CAACztB,EAAcqS,GAASlW,EAAQC,EAAO3H,GAAgBN,KACjG,YAAmB6L,EAAa5D,GAAQ,CAACiW,EAAQlW,EAAQ1H,GAAgBi5B,GAAyBA,EAAsB,KAAOrb,GAAUqb,EAAsB,KAAOvxB,EAAQhI,IAG1Kw5B,EAAuC,CAAC3tB,EAAcqS,GAASlW,EAAQ1H,GAAgBN,KAC3F,YAAmB6L,EAAc,CAACqS,EAAQlW,EAAQ1H,GAAgBi5B,GAAyBA,EAAsB,KAAOrb,GAAUqb,EAAsB,KAAOvxB,EAAQhI,IAWnKy5B,EAAuC,CAACxtB,EAAehE,GAAQiW,EAAQlW,EAAQ1H,GAAgBN,KACnG,MAAM05B,EAA0BztB,EAAc1Y,IAAI2qB,QAElBjoB,IAA5ByjC,EACFztB,EAAcpM,IAAIqe,EAAQ,IAAInS,IAAI,CAAC,CAAC/D,EAAQC,EAAO3H,MAEnD,YAAmBo5B,EAAyB,CAAC1xB,EAAQC,EAAO3H,GAAgBq5B,GAA0BA,EAAuB,KAAO3xB,GAAU2xB,EAAuB,KAAO1xB,EAAOjI,IAIjL45B,EAAwC,CAAC3tB,GAAgBiS,EAAQlW,EAAQ1H,GAAgBN,KAC7F,MAAM05B,EAA0BztB,EAAc1Y,IAAI2qB,QAElBjoB,IAA5ByjC,EACFztB,EAAcpM,IAAIqe,EAAQ,IAAInS,IAAI,CAAC,CAAC/D,EAAQ1H,MAE5C,YAAmBo5B,EAAyB,CAAC1xB,EAAQ1H,GAAgBq5B,GAA0BA,EAAuB,KAAO3xB,EAAQhI,IAInI65B,EAA0C,CAAC5tB,EAAeiS,EAAQlW,EAAQC,KAC9E,MAAMyxB,EAA0B,YAAeztB,EAAeiS,GACxD4b,EAAqBvB,EAAmBmB,EAAyBC,GAA0BA,EAAuB,KAAO3xB,GAAU2xB,EAAuB,KAAO1xB,GAMvK,OAJqC,IAAjCyxB,EAAwB5vB,MAC1BmC,EAAclG,OAAOmY,GAGhB4b,GAGHC,EAA2C,CAAC9tB,EAAeiS,EAAQlW,KACvE,MAAM0xB,EAA0B,YAAeztB,EAAeiS,GACxD4b,EAAqBvB,EAAmBmB,EAAyBC,GAA0BA,EAAuB,KAAO3xB,GAM/H,OAJqC,IAAjC0xB,EAAwB5vB,MAC1BmC,EAAclG,OAAOmY,GAGhB4b,GAGHE,EAAyC,CAAC9b,EAAQtR,EAAa5E,EAAQC,KAC3E,MAAM,aACJ4D,EAAY,cACZI,GACE,YAAwBW,IACtB,QACJZ,GACE,YAAwBkS,GACtB+b,EAAiB,YAA6B/b,GAE9C5d,EAAgB45B,IACpB,MAAMnyB,EAA6B,YAAmB6E,GAChD9E,EAAwB,YAAmBoW,GAEjD,GAAIgc,EAAU,CACZ,MAAMC,EAAoBN,EAAwC5tB,EAAeiS,EAAQlW,EAAQC,GACjGqxB,EAAoCztB,EAAcqS,EAAQic,GAAmB,GAExE,YAAejc,IAClB,YAAwCpW,EAAuBC,EAA4BC,EAAQC,GAGjGqwB,EAAmB1rB,IACrB,YAAyBA,OAEtB,CACL,MAAMutB,EA5EmC,EAACtuB,EAAcqS,EAAQlW,EAAQC,IACrEswB,EAAmB1sB,EAAa5D,GAAQsxB,GAAyBA,EAAsB,KAAOrb,GAAUqb,EAAsB,KAAOvxB,GA2E9GoyB,CAAuCvuB,EAAcqS,EAAQlW,EAAQC,GAC/FwxB,EAAqCxtB,EAAehE,EAAOkyB,GAAmB,GAEzE,YAAejc,IAClB,YAA6CpW,EAAuBC,EAA4BC,EAAQC,GAGtG,YAAkB2E,IACpB8rB,EAAuC9rB,EAAaf,KAK1D,QAAI,YAAmBG,EAAS,CAACY,EAAa5E,EAAQC,GAAQhC,GAAoBA,EAAiB,KAAO2G,GAAe3G,EAAiB,KAAO+B,GAAU/B,EAAiB,KAAOgC,GAAO,KACxLgyB,EAAe/5B,IAAII,GAEf,YAAkB4d,GACpBob,EAAoCztB,EAAcqS,EAAQ,CAAClW,EAAQC,EAAO3H,IAAgB,GAE1Fm5B,EAAqCxtB,EAAehE,EAAO,CAACiW,EAAQlW,EAAQ1H,IAAgB,IAGvF,IAsBL+5B,EAA0C,CAACnc,EAAQtR,EAAa5E,KACpE,MAAM,aACJ6D,EAAY,cACZI,GACE,YAAyBW,IACvB,QACJZ,GACE,YAAwBkS,GACtB+b,EAAiB,YAA6B/b,GAE9C5d,EAAgB45B,IACpB,MAAM1kC,EAAkB,YAAmB0oB,GACrC7J,EAAmB,YAAoBzH,GAE7C,GAAIstB,EAAU,CACZ,MAAMC,EAAoBJ,EAAyC9tB,EAAeiS,EAAQlW,GAC1FwxB,EAAqC3tB,EAAcqS,EAAQic,GAAmB,GAEzE,YAAejc,IAClB1oB,EAAgB0B,QAAQmd,EAAkBrM,OAEvC,CACL,MAAMmyB,EA1IoC,EAACtuB,EAAcqS,EAAQlW,IAC9DuwB,EAAmB1sB,EAAc0tB,GAAyBA,EAAsB,KAAOrb,GAAUqb,EAAsB,KAAOvxB,GAyIvGsyB,CAAwCzuB,EAAcqS,EAAQlW,GACxF4xB,EAAsC3tB,EAAekuB,GAAmB,GAEnE,YAAejc,IAClB1oB,EAAgB2B,WAAWkd,EAAkBrM,KAKnD,QAAI,YAAmBgE,EAAS,CAACY,EAAa5E,GAAS/B,GAAoBA,EAAiB,KAAO2G,GAAe3G,EAAiB,KAAO+B,GAAQ,KAChJiyB,EAAe/5B,IAAII,GAEf,YAAkB4d,GACpBsb,EAAqC3tB,EAAcqS,EAAQ,CAAClW,EAAQ1H,IAAgB,GAEpFs5B,EAAsC3tB,EAAe,CAACiS,EAAQlW,EAAQ1H,IAAgB,IAGjF,IAsBLi6B,EAA8B,CAACC,EAAwBtc,EAAQlW,KACnE,IAAK,MAAMuxB,KAAyBiB,EAClC,GAAIjB,EAAsB,KAAOrb,GAAUqb,EAAsB,KAAOvxB,EAEtE,OADAwyB,EAAuBz0B,OAAOwzB,GACvBA,EAIX,OAAO,MAiCHkB,EAA0B,CAACvc,EAAQtR,EAAa5E,EAAQC,KAC5D,MAAOuK,EAAU0nB,GA/BsB,EAAChc,EAAQtR,EAAa5E,EAAQC,KACrE,MAAM,aACJ4D,EAAY,cACZI,GACE,YAAwBW,GACtB2sB,EAAwBgB,EAA4B1uB,EAAa5D,GAAQiW,EAAQlW,GAEvF,GAA8B,OAA1BuxB,EAAgC,CAElC,MAAO,CADwBM,EAAwC5tB,EAAeiS,EAAQlW,EAAQC,GACvE,IAAI,GAGrC,MAAO,CAACsxB,EAAsB,IAAI,IAmBLmB,CAAiCxc,EAAQtR,EAAa5E,EAAQC,GAU3F,GARiB,OAAbuK,IACF6lB,EAA+Bna,EAAQ1L,GAEnC0nB,IAAa,YAAehc,IAC9B,YAA6C,YAAmBA,GAAS,YAAmBtR,GAAc5E,EAAQC,IAIlH,YAAkB2E,GAAc,CAClC,MAAM,aACJf,GACE,YAAwBe,GAC5B8rB,EAAuC9rB,EAAaf,KAIlD8uB,EAA2B,CAACzc,EAAQtR,EAAa5E,KACrD,MAAOwK,EAAU0nB,GAnCuB,EAAChc,EAAQtR,EAAa5E,KAC9D,MAAM,aACJ6D,EAAY,cACZI,GACE,YAAyBW,GACvB2sB,EAAwBgB,EAA4B1uB,EAAcqS,EAAQlW,GAEhF,GAA8B,OAA1BuxB,EAAgC,CAElC,MAAO,CADwBQ,EAAyC9tB,EAAeiS,EAAQlW,GAChE,IAAI,GAGrC,MAAO,CAACuxB,EAAsB,IAAI,IAuBLqB,CAAkC1c,EAAQtR,EAAa5E,GAEnE,OAAbwK,IACF6lB,EAA+Bna,EAAQ1L,GAEnC0nB,IAAa,YAAehc,IAC9B,YAAmBA,GAAQ/mB,WAAW,YAAoByV,GAAc5E,KAyDjE6yB,EAA6B,CAACC,EAAyB5iC,EAAwBZ,EAAiByjC,EAA6Bp7B,EAAsBwJ,EAA0BrS,EAAyBkkC,EAAuBC,EAAc5iC,EAAwBF,EAAkBG,EAAsBC,EAAmBC,EAAoBd,IACtV,cAAwBW,EAC7B,YAAYvC,EAASokC,EAAU1kC,EAAiBoW,GAC9C8B,MAAMlY,GACNkO,KAAKw3B,SAAWplC,EAChB4N,KAAKy3B,iBAAmB3lC,EACxB,MAAMK,EAAgBsC,EAAiBrC,GAEnCwC,EAAqBzC,KAAkB,IAASyB,EAAgBqhC,EAAsC,IACjGA,EAAqC9iC,KD1VPL,KAC3C,MAAMuwB,EAAc,IAAIxuB,IAEE,IAACL,EAwBGC,EAxB9B3B,EAAgB0B,SAAWA,EAsBxB1B,EAAgB0B,QAAQhD,KAAKsB,GArBvB,CAACoX,EAAa5E,EAAS,EAAGC,EAAQ,KACvC,MAAMmzB,EAAc,YAAkBxuB,GAAe1V,EAAQ0V,EAAa5E,EAAQC,GAAS/Q,EAAQ0V,EAAa5E,GAE1GqzB,EAA2BtV,EAAYxyB,IAAIqZ,GAgBjD,YAdiC3W,IAA7BolC,EACFtV,EAAYlmB,IAAI+M,EAAa,CAAC,CAC5B3E,QACAD,YAGEqzB,EAAyBpX,MAAMgC,GAAcA,EAAWhe,QAAUA,GAASge,EAAWje,SAAWA,IACnGqzB,EAAyB/2B,KAAK,CAC5B2D,QACAD,WAKCozB,IAIX5lC,EAAgB2B,YAAcA,EA4C3B3B,EAAgB2B,WA3CV,CAACwlB,EAAqB3U,EAAQC,KAGnC,GAFA9Q,EAAWgvB,MAAM3wB,QAEWS,IAAxB0mB,EACFoJ,EAAYK,aACP,GAAmC,iBAAxBzJ,EAChB,IAAK,MAAO/P,EAAayuB,KAA6BtV,EAAa,CACjE,MAAMuV,EAAsBD,EAAyBnI,OAAOjN,GAAcA,EAAWje,SAAW2U,GAE7D,IAA/B2e,EAAoBh5B,OACtByjB,EAAYhgB,OAAO6G,GAEnBmZ,EAAYlmB,IAAI+M,EAAa0uB,QAG5B,GAAIvV,EAAY3lB,IAAIuc,GACzB,QAAe1mB,IAAX+R,EACF+d,EAAYhgB,OAAO4W,OACd,CACL,MAAM0e,EAA2BtV,EAAYxyB,IAAIopB,GAEjD,QAAiC1mB,IAA7BolC,EAAwC,CAC1C,MAAMC,EAAsBD,EAAyBnI,OAAOjN,GAAcA,EAAWje,SAAWA,IAAWie,EAAWhe,QAAUA,QAAmBhS,IAAVgS,IAEtG,IAA/BqzB,EAAoBh5B,OACtByjB,EAAYhgB,OAAO4W,GAEnBoJ,EAAYlmB,IAAI8c,EAAqB2e,IAM7C,IAAK,MAAO1uB,EAAayuB,KAA6BtV,EACpDsV,EAAyBh7B,QAAQ4lB,IAC3B,YAAkBrZ,GACpBpX,EAAgB0B,QAAQ0V,EAAaqZ,EAAWje,OAAQie,EAAWhe,OAEnEzS,EAAgB0B,QAAQ0V,EAAaqZ,EAAWje,aC0RpDuzB,CAA8B/lC,GAGhC,IAAiBqK,IAAI6D,KAAMlO,GAC3B,IAAgBqK,IAAI6D,KAAM,IAAIqI,KAE1BmuB,GACF,YAAyBx2B,MAG3Bo3B,EAAwBp3B,KAAMkI,EAAmBpW,GAGnD,mBACE,OAAOkO,KAAKy3B,iBAAiB3uB,aAG/B,iBAAiB7Y,GACf+P,KAAKy3B,iBAAiB3uB,aAAe7Y,EAGvC,uBACE,OAAO+P,KAAKy3B,iBAAiB1uB,iBAG/B,qBAAqB9Y,GACnB+P,KAAKy3B,iBAAiB1uB,iBAAmB9Y,EAG3C,4BACE,OAAO+P,KAAKy3B,iBAAiBzuB,sBAG/B,0BAA0B/Y,GACxB+P,KAAKy3B,iBAAiBzuB,sBAAwB/Y,EAGhD,cACE,OAAO+P,KAAKw3B,SAGd,qBACE,OAAOx3B,KAAKy3B,iBAAiBrvB,eAG/B,sBACE,OAAOpI,KAAKy3B,iBAAiBvlB,gBAG/B,QAAQhJ,EAAa5E,EAAS,EAAGC,EAAQ,GAEvC,GAAID,EAAS,GAAKA,GAAUtE,KAAKy3B,iBAAiBvlB,gBAChD,MAAMjW,IAGR,MAAM9J,EAAgBsC,EAAiBuL,KAAKw3B,UACtC1rB,EAAY9X,EAA4B7B,GAE9C,GAAI0C,EAAkBqU,IAAgBpU,EAAmBoU,GACvD,MAAMzD,IAGR,GAAI,YAAYyD,GAAc,CAC5B,MAAM7E,EAA6B,YAAmB6E,GAEtD,IACE,MAAMqZ,EAAa,YAAwCviB,KAAKy3B,iBAAkBpzB,EAA4BC,EAAQC,GAUtH,GARIuH,GAAa8oB,EAAmB50B,MAClCA,KAAKy3B,iBAAiBhkC,cAAc8uB,GAC3BqS,EAAmB1rB,IAC5B,YAAyBA,GAKvBwrB,EAAmBxrB,GAAc,CACnC,MAAM4uB,EAAqBtjC,EAAuB3E,IAAIwU,GAEtD,QAA2B9R,IAAvBulC,EAAkC,CACpC,MAAMjvB,EAAiB1W,EAAc0yB,aACrChc,EAAerV,QAAQ+uB,EAAW,GAAI,EAAGA,EAAW,IACpD/tB,EAAuB2H,IAAIkI,EAA4B,IAAIxQ,IAAI,CAAC,CAAC0Q,EAAOsE,WACnE,QAAsCtW,IAAlCulC,EAAmBjoC,IAAI0U,GAAsB,CACtD,MAAMsE,EAAiB1W,EAAc0yB,aACrChc,EAAerV,QAAQ+uB,EAAW,GAAI,EAAGA,EAAW,IACpDuV,EAAmB37B,IAAIoI,EAAOsE,KAGlC,MAAO/V,GAEP,GAAiB,KAAbA,EAAIC,KACN,MAAM0S,IAGR,MAAM3S,EAKR,GAFmCgZ,EAvTW,EAAC0O,EAAQtR,EAAa5E,EAAQC,KAClF,MAAM,QACJ+D,GACE,YAAwBkS,GAE5B,GAAI,YAAmBlS,EAAS,CAACY,EAAa5E,EAAQC,GAAQhC,GAAoBA,EAAiB,KAAO2G,GAAe3G,EAAiB,KAAO+B,GAAU/B,EAAiB,KAAOgC,GAAO,GAAO,CAC/L,MAAM,aACJ4D,GACE,YAAwBe,GAE5B,OADA0sB,EAAoCztB,EAAcqS,EAAQ,CAAClW,EAAQC,EAAO,OAAO,IAC1E,EAGT,OAAO,GA0S8CwzB,CAA8C/3B,KAAMkJ,EAAa5E,EAAQC,GAAS+xB,EAAuCt2B,KAAMkJ,EAAa5E,EAAQC,GAEnK,CAC9B,MAAMixB,EAAS+B,EAAa,CAACv3B,MAAOkJ,GACpCqsB,EAAuBC,EAAQ6B,EAA4BvrB,IAG7D,OAAO5C,EAGT,MAAMyH,EAAmB,YAAoBzH,GAO7C,GAA8B,iBAA1ByH,EAAiBphB,KACnB,MAAM6D,IAGR,IACE4M,KAAKy3B,iBAAiBjkC,QAAQmd,EAAkBrM,IAE5CwH,GAAa8oB,EAAmB50B,QAClCA,KAAKy3B,iBAAiBhkC,WAAWkd,EAAkBrM,GAErD,MAAOxR,GAEP,GAAiB,KAAbA,EAAIC,KACN,MAAM0S,IAGR,MAAM3S,EAKR,GAFoCgZ,EA7Ra,EAAC0O,EAAQtR,EAAa5E,KAC3E,MAAM,QACJgE,GACE,YAAwBkS,GAE5B,GAAI,YAAmBlS,EAAS,CAACY,EAAa5E,GAAS/B,GAAoBA,EAAiB,KAAO2G,GAAe3G,EAAiB,KAAO+B,GAAQ,GAAO,CACvJ,MAAM,aACJ6D,GACE,YAAyBe,GAE7B,OADA4sB,EAAqC3tB,EAAcqS,EAAQ,CAAClW,EAAQ,OAAO,IACpE,EAGT,OAAO,GAgR6C0zB,CAA+Ch4B,KAAMkJ,EAAa5E,GAAUqyB,EAAwC32B,KAAMkJ,EAAa5E,GAEtJ,CAC/B,MAAMkxB,EAAS+B,EAAa,CAACv3B,MAAOkJ,GACpCqsB,EAAuBC,EAAQ6B,EAA4BvrB,KAI/D,WAAWmN,EAAqB3U,EAAQC,GACtC,IAAI0zB,EAEJ,QAA4B1lC,IAAxB0mB,EACFgf,EAjNoBzd,KAC1B,MAAM0d,EAA+B,YAAwB1d,GACvDyd,EAAe,GAErB,IAAK,MAAM11B,KAAoB21B,EAA6B5vB,QACtD,YAA4B/F,GAC9Bw0B,EAAwBvc,KAAWjY,GAEnC00B,EAAyBzc,KAAWjY,GAGtC01B,EAAar3B,KAAK2B,EAAiB,IAIrC,OADA21B,EAA6B5vB,QAAQoa,QAC9BuV,GAkMcE,CAAoBn4B,WAC9B,GAAmC,iBAAxBiZ,EAAkC,CAClD,GAAIA,EAAsB,GAAKA,GAAuBjZ,KAAKkS,gBACzD,MAAMjW,IAGRg8B,EArMyB,EAACzd,EAAQlW,KACxC,MAAM4zB,EAA+B,YAAwB1d,GACvDyd,EAAe,GAErB,IAAK,MAAM11B,KAAoB21B,EAA6B5vB,QACtD/F,EAAiB,KAAO+B,IACtB,YAA4B/B,GAC9Bw0B,EAAwBvc,KAAWjY,GAEnC00B,EAAyBzc,KAAWjY,GAGtC01B,EAAar3B,KAAK2B,EAAiB,IACnC21B,EAA6B5vB,QAAQjG,OAAOE,IAIhD,OAAO01B,GAoLcG,CAAyBp4B,KAAMiZ,OACzC,CACL,QAAe1mB,IAAX+R,IAAyBA,EAAS,GAAKA,GAAUtE,KAAKkS,iBACxD,MAAMjW,IAGR,GAAI,YAAYgd,SAAkC1mB,IAAVgS,IAAwBA,EAAQ,GAAKA,GAAS0U,EAAoB7Q,gBACxG,MAAMnM,IAKR,GAFAg8B,EA3L8B,EAACzd,EAAQtR,EAAa5E,EAAQC,KAClE,MAAM2zB,EAA+B,YAAwB1d,GAC7D,OAAOpJ,MAAMC,KAAK6mB,EAA6B5vB,SAASknB,OAAOjtB,KAAoBA,EAAiB,KAAO2G,QAA2B3W,IAAX+R,GAAwB/B,EAAiB,KAAO+B,QAAsB/R,IAAVgS,GAAuBhC,EAAiB,KAAOgC,IAAQrR,IAAIqP,IAC5O,YAA4BA,GAC9Bw0B,EAAwBvc,KAAWjY,GAEnC00B,EAAyBzc,KAAWjY,GAGtC21B,EAA6B5vB,QAAQjG,OAAOE,GACrCA,EAAiB,MAiLL81B,CAA8Br4B,KAAMiZ,EAAqB3U,EAAQC,GAEpD,IAAxB0zB,EAAar5B,OACf,MAAM6G,IAKV,IAAK,MAAMyD,KAAe+uB,EAAc,CACtC,MAAMzC,EAAS+B,EAAa,CAACv3B,MAAOkJ,GACpCqsB,EAAuBC,EAAQ8B,O,yGCzgBhC,MCCMgB,EAAqCvtB,MAAO2H,EAAsB6lB,IAEtE,IAAI7lB,ODH+B6lB,IACnC,IAAI1tB,QAAQ,CAACC,EAASgD,KAC3B,MAAM,MACJqmB,EAAK,MACLC,GACE,IAAIC,eAERF,EAAMnC,UAAY,EAChBsC,WAEAH,EAAM1mB,QACN2mB,EAAM3mB,QACN3C,EAAQwpB,IAGVH,EAAMqE,eAAiB,EACrBlE,WAEAH,EAAM1mB,QACN2mB,EAAM3mB,QACNK,EAAOwmB,IAITF,EAAMG,YAAYgE,KCtBwBE,CAA6BF,I,oBCKpE,MAAMG,EAA2C,CAAClkC,EAAwBqG,EAAwBoB,EAAsBrJ,EAAyB+D,EAA+BG,EAAiCI,EAAgC1B,EAAsByC,EAAiC7E,EAAyB2H,EAA2BlB,EAAkCpD,IAC5X,CAACtE,EAAemV,EAAaoL,EAAsB3gB,KACxD,GAA+B,IAA3BA,EAAQqW,gBAAoD,IAA5BrW,EAAQmgB,gBAC1C,MAAM9e,IAGR,QAAmCb,IAA/BR,EAAQogB,mBAAkC,CAE5C,GAAIpgB,EAAQogB,mBAAmBlC,KAAKnH,GAAgBA,EAAe,GACjE,MAAM1V,IAGR,GAAIrB,EAAQogB,mBAAmBvT,SAAW7M,EAAQmgB,gBAChD,MAAMjW,IAKV,GAAiC,aAA7BlK,EAAQgX,iBACV,MAAM3V,IAGR,MAAMw2B,EAAwB73B,EAAQ+W,aAAe/W,EAAQqW,eACvDyhB,EAAyB93B,EAAQogB,mBAAmBud,OAAO,CAACiJ,EAAK1oC,IAAU0oC,EAAM1oC,EAAO,GACxF2oC,OAAmErmC,IAA9CmgB,EAAqBmmB,qBAAqC,EAAInmB,EAAqBmmB,qBAAqBj6B,OAEnI,GAAIgrB,EAAwBgP,EAAqB,GAAK/O,EAAyB,EAC7E,MAAMz2B,IAGR,MAAM0lC,EAAiB,IAAIzE,eACrB0E,EAAY,GACZC,EAA4B,GAElC,IAAK,IAAIhqC,EAAI,EAAGA,EAAI+C,EAAQqW,eAAgBpZ,GAAK,EAC/C+pC,EAAUn4B,KAAKpL,EAAqBrD,EAAe,CACjD2W,aAAc/W,EAAQ+W,aACtBC,iBAAkBhX,EAAQgX,iBAC1BC,sBAAuBjX,EAAQiX,sBAC/BC,KAAM,KAER+vB,EAA0Bp4B,KAAK9J,EAAgC3E,EAAe,CAC5E2W,aAAc/W,EAAQ+W,aACtBC,iBAAkB,WAClBC,sBAAuB,WACvBkJ,gBAAiBngB,EAAQ+W,gBAI7B,MAAMmwB,EAAsB,GAE5B,QAAkD1mC,IAA9CmgB,EAAqBmmB,qBACvB,IAAK,MAAM,aACTl6B,EAAY,SACZiS,EAAQ,SACRC,EAAQ,KACRthB,KACGmjB,EAAqBmmB,qBAAsB,CAC9C,MAAMlpB,EAAqBzY,EAA+B/E,EAAe,CACvE2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBpF,YAAwCrR,IAAhCR,EAAQqgB,cAAc7iB,GAAsBwC,EAAQqgB,cAAc7iB,QAAyBgD,IAAjBoM,EAA6B,EAAIA,IAErHjP,OAAOuT,iBAAiB0M,EAAmB/L,OAAQ,CACjDjF,aAAc,CACZ9O,IAAK,SAAuB0C,IAAjBoM,EAA6B,EAAIA,GAE9CiS,SAAU,CACR/gB,IAAK,SAAmB0C,IAAbqe,EAAyB,IAA6BA,GAEnEC,SAAU,CACRhhB,IAAK,SAAmB0C,IAAbse,EAAyB,IAA6BA,KAGrEooB,EAAoBr4B,KAAK+O,GAI7B,MAAMupB,EAAyBviC,EAA8BxE,EAAe,CAC1E2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgBpK,KAAKwJ,IAAI,EAAGoiB,EAAwBgP,KAEhDrT,EAAa,YAAkBje,EAAanV,EAAcoV,YAC1DkI,EAAsBxX,EAAgC9F,EAAeozB,EAAYqE,EAAwBgP,EAC/G56B,KAAKwJ,IAAI,EAAGqiB,IACNsP,EAA4BriC,EAAgC3E,EAAe,CAC/E2W,aAAc9K,KAAKwJ,IAAI,EAAGqiB,GAC1B9gB,iBAAkB,WAClBC,sBAAuB,WACvBkJ,gBAAiBlU,KAAKwJ,IAAI,EAAGqiB,KAEzBuP,EAA2B,GAEjC,IAAK,IAAIpqC,EAAI,EAAGA,EAAI+C,EAAQmgB,gBAAiBljB,GAAK,EAChDoqC,EAAyBx4B,KAAKjK,EAA8BxE,EAAe,CACzE2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgBrW,EAAQogB,mBAAmBnjB,MAI/C,IAAK,IAAIA,EAAI,EAAGA,EAAI+C,EAAQqW,eAAgBpZ,GAAK,EAAG,CAClD+pC,EAAU/pC,GAAGwE,QAAQwlC,EAA0BhqC,IAE/C,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQ+W,aAActD,GAAK,EAC7CwzB,EAA0BhqC,GAAGwE,QAAQ0lC,EAAwB1zB,EAAGxW,EAAI+C,EAAQ+W,aAAetD,GAI/F,MAAM6zB,EAAe,IAAI,SAA0D9mC,IAA9CmgB,EAAqBmmB,qBAAqC,GAAKnmB,EAAqBmmB,qBAAqB3lC,IAAI,EAChJ3D,QACCmP,KACD,MAAMiR,EAAqBspB,EAAoBv6B,GAG/C,OAFAiR,EAAmBnc,QAAQ0lC,EAAwB,EAAGtP,EAAwBlrB,GAC9EiR,EAAmBjM,MAAM,GAClB,CAACnU,EAAMogB,EAAmB/L,WAEnCs1B,EAAuB1lC,QAAQic,GAC/B,IAAIzG,EAAwBjX,EAAQiX,sBAChCgK,EAAmB,KAEvB,MAAMsD,EAA+C,IAA5BvkB,EAAQmgB,gBAAwB,CAACzC,GAAuB2pB,EAC3EE,EAA8B,CAClC,iBACE,OAAO/T,GAGT,mBACE,OAAOxzB,EAAQ+W,cAGjB,iBAAiBywB,GAEf,MAAM3mC,KAGR,uBACE,OAAOb,EAAQgX,kBAGjB,qBAAqBwwB,GAEnB,MAAM3mC,KAGR,4BACE,OAAOoW,GAGT,0BAA0B/Y,GACxB,IAAK,MAAMizB,KAAY6V,EACrB7V,EAASla,sBAAwB/Y,EAGnC+Y,EAAwB/Y,GAG1B,cACE,OAAOwf,EAAoBrd,SAG7B,aACE,OAAO2mC,GAGT,qBACE,OAAOhnC,EAAQqW,gBAGjB,sBACE,OAAOrW,EAAQmgB,iBAGjB,uBACE,OAAOc,GAGT,qBAAqB/iB,GACa,mBAArB+iB,GACTsmB,EAA4BnwB,oBAAoB,iBAAkB6J,GAGpEA,EAAoC,mBAAV/iB,EAAuBA,EAAQ,KAEzB,mBAArB+iB,GACTsmB,EAA4BlwB,iBAAiB,iBAAkB4J,IAInE,iBACE,OAAOqmB,GAGT,WACE,OAAOP,EAAe1E,OAGxBhrB,iBAAgB,IAAI8a,IACXzU,EAAoBrG,iBAAiB8a,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGrE1wB,QAASqH,EAAuBrK,KAAK,KAAM8lB,GAC3C7iB,WAAYsH,EAA0BvK,KAAK,KAAM8lB,GAEjD8F,cAAa,IAAI8H,IACRzU,EAAoB2M,cAAc8H,EAAK,IAGhD/a,oBAAmB,IAAI+a,IACdzU,EAAoBtG,oBAAoB+a,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAIpEsV,EAAwB,IAAI3lC,IAEM,IAACuV,EAwBGD,EAxB5C2vB,EAAe3E,MAAM/qB,kBAAoBA,EAsBtC0vB,EAAe3E,MAAM/qB,iBArBf,IAAI8a,KACT,GAAgB,YAAZA,EAAK,GAAkB,CACzB,MAAMuV,EAA4C,mBAAZvV,EAAK,GAAoBA,EAAK,GAAwB,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAG/gB,YAA6B+gB,EAAK,GAAG/gB,YAAc,KAE9L,GAA+B,OAA3Bs2B,EAAiC,CACnC,MAAMC,EAAuBF,EAAsB3pC,IAAIq0B,EAAK,SAE/B3xB,IAAzBmnC,EACFxV,EAAK,GAAKwV,GAEVxV,EAAK,GAAKnhB,IACRlJ,EAAiC1H,EAAc6e,YAAa7e,EAAcoV,WAAY,IAAMkyB,EAAuB12B,KAGrHy2B,EAAsBr9B,IAAIs9B,EAAwBvV,EAAK,MAK7D,OAAO9a,EAAiBja,KAAK2pC,EAAe3E,MAAOjQ,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAI9E4U,EAAe3E,MAAMhrB,qBAAuBA,EAazC2vB,EAAe3E,MAAMhrB,oBAZf,IAAI+a,KACT,GAAgB,YAAZA,EAAK,GAAkB,CACzB,MAAMwV,EAAuBF,EAAsB3pC,IAAIq0B,EAAK,SAE/B3xB,IAAzBmnC,IACFF,EAAsBn3B,OAAO6hB,EAAK,IAClCA,EAAK,GAAKwV,GAId,OAAOvwB,EAAoBha,KAAK2pC,EAAe3E,MAAOjQ,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAIjF,IAAI8N,EAAY,KAChBtiC,OAAOC,eAAempC,EAAe3E,MAAO,YAAa,CACvDtkC,IAAK,IAAMmiC,EACX71B,IAAKlM,IACsB,mBAAd+hC,GACT8G,EAAe3E,MAAMhrB,oBAAoB,UAAW6oB,GAGtDA,EAA6B,mBAAV/hC,EAAuBA,EAAQ,KAEzB,mBAAd+hC,IACT8G,EAAe3E,MAAM/qB,iBAAiB,UAAW4oB,GACjD8G,EAAe3E,MAAMzwB,YAI3BgP,EAAqB9hB,UAAUsiB,KAAO4lB,EAAe3E,MACrD,IAAIwF,EAAwB,KCxRW,EAACxnC,EAAewgB,EAAwBD,EAAsB6lB,KACvG,IAAIqB,EAAqB,IAAuB/pC,IAAIsC,QAEzBI,IAAvBqnC,IACFA,EAAqB,IAAIzoC,QACzB,IAAuBgL,IAAIhK,EAAeynC,IAG5C,MAAMC,EAA+BvB,EAAmC5lB,EAAsB6lB,GAE9F,OADAqB,EAAmBz9B,IAAIwW,EAAwBknB,GACxCA,GD+QgCC,CAA4B3nC,EAAemnC,EAA6B5mB,EAAsB3gB,GACtG2b,KAAKqsB,GAAgBJ,EAAwBI,GAC1E,MAAMt1B,EAAS,YAAmB1S,EAAQqW,eAAgBrW,EAAQ+W,cAC5DR,EAAU,YAAmBvW,EAAQmgB,gBAAiBngB,EAAQogB,oBAC9DjM,OAA2D3T,IAA9CmgB,EAAqBmmB,qBAAqC,GAAKnmB,EAAqBmmB,qBAAqBnJ,OAAO,CAACsK,GAClIzqC,WACI,IAAMyqC,EACV,CAACzqC,GAAO,IAAIuR,aAAa,OACvB,IACJ,IAAI01B,GAAW,EAEf,MAAMyD,EAAyB,KACzBloC,EAAQmgB,gBAAkB,GAC5BzC,EAAoBhc,WAAW0lC,GAGjC,IAAK,IAAInqC,EAAI,EAAGkrC,EAAkC,EAAGlrC,EAAI+C,EAAQmgB,gBAAiBljB,GAAK,EAAG,CACxF,MAAMmrC,EAA0Bf,EAAyBpqC,GAEzD,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQogB,mBAAmBnjB,GAAIwW,GAAK,EACtD2zB,EAA0B1lC,WAAW0mC,EAAyBD,EAAkC10B,EAAGA,GAGrG00B,GAAmCnoC,EAAQogB,mBAAmBnjB,KAIlEygB,EAAoBK,eAAiB,EACnCC,cACA4V,mBAEA,GAA8B,OAA1BgU,EACF,IAAK,IAAI3qC,EAAI,EAAGA,EAAIu2B,EAAYv2B,GAAK,IAAK,CACxC,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQqW,eAAgB5C,GAAK,EAC/C,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQ+W,aAAc1B,GAAK,EAC7C,YAAgB2I,EAAatL,EAAOe,GAAI4B,EAAGA,EAAGpY,QAIAuD,IAA9CmgB,EAAqBmmB,sBACvBnmB,EAAqBmmB,qBAAqBl8B,QAAQ,EAChDpN,QACCmP,KACD,YAAgBqR,EAAa7J,EAAY3W,EAAMq6B,EAAwBlrB,EAAO1P,KAIlF,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQqW,eAAgB5C,GAAK,EAC/C,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQogB,mBAAmB3M,GAAI4B,GAAK,EAErB,IAA7BkB,EAAQ9C,GAAG4B,GAAGrC,aAChBuD,EAAQ9C,GAAG4B,GAAK,IAAItG,aAAa,MAKvC,IACE,MAAMs5B,EAAyB31B,EAAOvR,IAAI,CAACqR,EAAO7F,KAChD,MAAMo5B,EAAqBtjC,EAAuB3E,IAAIypC,GAEtD,YAA2B/mC,IAAvBulC,QAAsEvlC,IAAlCulC,EAAmBjoC,IAAI6O,GACtD,GAGF6F,IAEH81B,EAAmBxgC,EAAiC1H,EAAc6e,YAAchiB,EAAImD,EAAcoV,WAAYpV,EAAcoV,WAAY,IAAMoyB,EAAsBW,QAAQF,EAAwB9xB,EAASpC,IACnNswB,EAAW6D,EAEX,IAAK,IAAI70B,EAAI,EAAG00B,EAAkC,EAAG10B,EAAIzT,EAAQmgB,gBAAiB1M,GAAK,EAAG,CACxF,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQogB,mBAAmB3M,GAAI4B,GAAK,EACtD,YAAcue,EAAcrd,EAAQ9C,GAAI4B,EAAG8yB,EAAkC9yB,EAAGpY,GAGlFkrC,GAAmCnoC,EAAQogB,mBAAmB3M,IAEhE,MAAOmW,GACP6a,GAAW,EACX8C,EAA4Bld,cAAc,IAAIme,WAAW,iBAAkB,CACzE5e,WAIJ,IAAK6a,EAAU,CACb,IAAK,IAAIhxB,EAAI,EAAGA,EAAIzT,EAAQqW,eAAgB5C,GAAK,EAAG,CAClDuzB,EAAUvzB,GAAG/R,WAAWulC,EAA0BxzB,IAElD,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQ+W,aAAc1B,GAAK,EAC7C4xB,EAA0BhqC,GAAGyE,WAAWylC,EAAwB9xB,EAAG5B,EAAIzT,EAAQ+W,aAAe1B,GAIlG,QAAkD7U,IAA9CmgB,EAAqBmmB,qBAAoC,CAC3D,MAAMj6B,EAAS8T,EAAqBmmB,qBAAqBj6B,OAEzD,IAAK,IAAI4G,EAAI,EAAGA,EAAI5G,EAAQ4G,GAAK,EAAG,CAClC,MAAMmK,EAAqBspB,EAAoBzzB,GAC/CmK,EAAmBlc,WAAWylC,EAAwB,EAAGtP,EAAwBpkB,GACjFmK,EAAmB5L,QAIvBm1B,EAAuBzlC,WAAWgc,GAClCA,EAAoBK,eAAiB,KAEjCsc,EACF6N,IAEAO,KAGF,SAMR,IAAIpO,GAAc,EAElB,MAAMvjB,EAAiBrT,EAAqBrD,EAAe,CACzD2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBC,KAAM,IAGFwxB,GAAmB,IAAMhrB,EAAoBjc,QAAQqV,GAK1DrV,QAAQqV,EAAezW,QAAQ8W,aAE1BsxB,GAAsB,KAC1B/qB,EAAoBhc,WAAWoV,GAC/BA,EAAepV,cAmCjB,OADAgnC,KACOhkC,EAAmB6iC,EAhCJ,KACpB,GAAI9C,EAAU,CACZgE,KAEIzoC,EAAQmgB,gBAAkB,GAC5BzC,EAAoBjc,QAAQ2lC,GAG9B,IAAK,IAAInqC,EAAI,EAAGkrC,EAAkC,EAAGlrC,EAAI+C,EAAQmgB,gBAAiBljB,GAAK,EAAG,CACxF,MAAMmrC,EAA0Bf,EAAyBpqC,GAEzD,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQogB,mBAAmBnjB,GAAIwW,GAAK,EACtD2zB,EAA0B3lC,QAAQ2mC,EAAyBD,EAAkC10B,EAAGA,GAGlG00B,GAAmCnoC,EAAQogB,mBAAmBnjB,IAIlEo9B,GAAc,GAGS,KACnBoK,IACFiE,KACAR,KAGF7N,GAAc,M,mHE1bb,MAAMsO,EAA2C,CAACjlC,EAAqB7B,EAAiBO,EAAuBwmC,EAA6DC,EAA8DC,EAA2DC,EAA2DplC,EAAkEC,EAA+DC,EAAiEmlC,EAAqDC,EAAoDnlC,IACzoB,CAAC1D,EAAeJ,EAAU,MAC/B,MAAM8Z,EAA8B1X,EAAsBhC,EAAeisB,GAAYA,EAASyS,sBA8C9F,OA7CA,YAA6BhlB,EAA6B9Z,GAC1D,YAAqC8Z,EAA6B9Z,EAAS,gBAE3E,YAA4B8Z,EAA6B9Z,EAAS,UAElE,YAA4B8Z,EAA6B9Z,EAAS,QAClE,YAA4B8Z,EAA6B9Z,EAAS,WAClE,YAA4B8Z,EAA6B9Z,EAAS,aAE7D6B,EAAgB+mC,EAA6D,IAAMA,EAA4DxoC,KClBpF0Z,KAClEA,EAA4BnI,MAAQ,CAACA,IACnC,IAAIu3B,GAAc,EAClB,MAAO,CAACt3B,EAAO,EAAGC,EAAS,EAAGnG,KAC5B,GAAIw9B,EACF,MAAM,cAGRv3B,EAAMvU,KAAK0c,EAA6BlI,EAAMC,EAAQnG,GACtDw9B,GAAc,IARkB,CAUjCpvB,EAA4BnI,QDQ3Bw3B,CAAqDrvB,GAIlDjY,EAAgBgnC,EAA8DA,IExBlB,EAACn3B,EAAgCtR,KACpG,IAAI8K,EAAUk1B,OAAOC,kBACjB+I,EAAWhJ,OAAOC,kBAEiB,IAAE1uB,EAAOK,EAAhDN,EAA+BC,OAAUA,EAYtCD,EAA+BC,MAZcK,EAYPN,EAA+BM,KAX/D,CAACJ,EAAO,EAAGC,EAAS,EAAGnG,EAAW00B,OAAOC,qBAG9C,GAFA1uB,EAAMvU,KAAKsU,EAAgCE,EAAMC,GAE7CnG,GAAY,GAAKA,EAAW00B,OAAOC,kBAAmB,CACxD,MAAMgJ,EAAkBp9B,KAAKwJ,IAAI7D,EAAMxR,EAAc6e,aAE/CqqB,EAAuB59B,EAAWgG,EAA+BkI,aAAa1b,MACpFgN,EAAUm+B,EAAkBC,EAC5Bt3B,EAAK5U,KAAKsU,EAAgCzF,KAAKyJ,IAAIxK,EAASk+B,OAKlE13B,EAA+BM,KAAO,CAACA,GAC9B,CAACJ,EAAO,KACbw3B,EAAWn9B,KAAKwJ,IAAI7D,EAAMxR,EAAc6e,aACxCjN,EAAK5U,KAAKsU,EAAgCzF,KAAKyJ,IAAIxK,EAASk+B,KAH1B,CAKnC13B,EAA+BM,OFE9Bu3B,CAAsDzvB,EAA6B1Z,GAIhFyB,EAAgBinC,EAA2D,IAAMA,EAA0D1oC,KAC9I4oC,EAAoDlvB,GAIjDjY,EAAgBknC,EAA2D,IAAMA,EAA0D3oC,KAC9I6oC,EAAmDnvB,EAA6B1Z,GAI7EyB,EAAgB8B,EAAkE,IAAMA,EAAiEvD,KAC5J,YAA0D0Z,GAIvDjY,EAAgB+B,EAA+D,IAAMA,EAA8DxD,KACtJ0D,EAAuDgW,EAA6B1Z,GAIjFyB,EAAgBgC,EAAiE,IAAMA,EAAgEzD,KAC1J,YAAyD0Z,GAI3DpW,EAAoBtD,EAAe0Z,GAC5BA,I,0EGvDX,MAAM0vB,EAAU,CACdC,UAAS,IACAD,GCULE,EAAyB,uPAElBC,EAAwB,CAAClhB,EAAQQ,KAC5C,MAAM2gB,EAAmB,GACzB,IAAIC,EAAgCphB,EAAOqhB,QAAQ,SAAU,IACzDrb,EAASob,EAA8BE,MAAML,GAEjD,KAAkB,OAAXjb,GAAiB,CACtB,MAAMub,EAAgBvb,EAAO,GAAGhgB,MAAM,GAAI,GACpCw7B,EAAiCxb,EAAO,GAAGqb,QAAQ,cAAe,IAAIA,QAAQE,EAAe,IAAI9gB,IAAI8gB,EAAe/gB,GAAKihB,YAC/HN,EAAiB/6B,KAAKo7B,GACtBJ,EAAgCA,EAA8Bp7B,MAAMggB,EAAO,GAAG5hB,QAAQi9B,QAAQ,SAAU,IACxGrb,EAASob,EAA8BE,MAAML,GAG/C,MAAO,CAACE,EAAiBO,KAAK,KAAMN,ICvBhCO,EAA6BtD,IACjC,QAA6BtmC,IAAzBsmC,IAAuCznB,MAAMgrB,QAAQvD,GACvD,MAAM,IAAI1rB,UAAU,wFAIlBkvB,EAAsBC,IAC1B,IFL6BC,KAC7B,IAEE,IADc,IAAIC,MAAMD,EAAehB,GAEvC,MACA,OAAO,EAGT,OAAO,GEHFkB,CAAgBH,GACnB,MAAM,IAAInvB,UAAU,8DAGtB,GAAgC,OAA5BmvB,EAAc1rC,WAAyD,iBAA5B0rC,EAAc1rC,UAC3D,MAAM,IAAIuc,UAAU,+DAIXuvB,EAA8B,CAACtpC,EAAyBupC,EAAgB9iC,EAAkC+iC,EAAa1oC,EAAwBO,EAAkBooC,EAAiBC,EAAkBhpC,IACxM,CAAC1B,EAASmhB,EAAWxhB,EAAU,CACpCgrC,YAAa,WAEb,MAAM5qC,EAAgBsC,EAAiBrC,GACjC4qC,EAAc,IAAI/hB,IAAI1H,EAAWzf,EAAO8nB,SAASC,MAAMogB,WAE7D,QAAmC1pC,IAA/BJ,EAAc4/B,aAChB,OAAO6K,EAAYrpB,GAAW7F,KAAK8M,IACjC,MAAOmhB,EAAkBC,GAAiCF,EAAsBlhB,EAAQwiB,GA2BlFliB,EAAO,IAAIC,KAAK,CAHA,GAAG4gB,0BAAyCC,wIAG3B,CACrCz+B,KAAM,0CAEF6d,EAAMC,IAAIC,gBAAgBJ,GAC1B2C,EAAsBvpB,EAAuB/B,GAEnD,OADmE,OAAxBsrB,EAA+BA,EAAsBtrB,GACtD4/B,aAAaze,UAAU0H,EAAKjpB,GAAS2b,KAAK,IAAMuN,IAAIK,gBAAgBN,IAC7Ghf,MAAMlJ,IAOL,MANAmoB,IAAIK,gBAAgBN,QAEHzoB,IAAbO,EAAIC,MAAmC,gBAAbD,EAAIvD,OAChCuD,EAAIC,KAAO,IAGPD,MAKZ,MAAMmqC,EAA4BH,EAAiBjtC,IAAIuC,GAEvD,QAAkCG,IAA9B0qC,GAA2CA,EAA0BvgC,IAAI6W,GAC3E,OAAO1I,QAAQC,UAGjB,MAAMoyB,EAA2BL,EAAgBhtC,IAAIuC,GAErD,QAAiCG,IAA7B2qC,EAAwC,CAC1C,MAAMC,EAA0BD,EAAyBrtC,IAAI0jB,GAE7D,QAAgChhB,IAA5B4qC,EACF,OAAOA,EAIX,MAAMrhC,EAAU8gC,EAAYrpB,GAAW7F,KAAK8M,IAC1C,MAAOmhB,EAAkBC,GAAiCF,EAAsBlhB,EAAQwiB,GAoBxF,OAAOL,EAHe,GAAGhB,6GAA4HC,6BAIpJluB,KAAK,KACN,MAAM0vB,EAAkCtpC,EAAOupC,MAAM/rB,MAErD,QAAwC/e,IAApC6qC,EACF,MAAM,IAAI3iB,YAGZ5gB,EAAiC1H,EAAc6e,YAAa7e,EAAcoV,WAAY,IAAM61B,EAAgC,aAAgC7qC,EAAW,CAAChD,EAAM+sC,KAC5K,GAAoB,KAAhB/sC,EAAK+tC,OACP,MAAMlqC,IAGR,MAAMqf,EAAoC,IAAwC5iB,IAAIsC,GAEtF,QAA0CI,IAAtCkgB,EAAiD,CACnD,GAAIA,EAAkC/V,IAAInN,GACxC,MAAM6D,IAGRipC,EAAoBC,GACpBH,EAA2BG,EAAczD,sBACzCpmB,EAAkCtW,IAAI5M,EAAM+sC,QAE5CD,EAAoBC,GACpBH,EAA2BG,EAAczD,sBACzC,IAAwC18B,IAAIhK,EAAe,IAAI0B,IAAI,CAAC,CAACtE,EAAM+sC,OAE5EnqC,EAAcoV,gBAAYhV,OAAWA,MACvCyJ,MAAMlJ,IAKP,WAJiBP,IAAbO,EAAIC,MAAmC,gBAAbD,EAAIvD,OAChCuD,EAAIC,KAAO,IAGPD,IA0BR,YAvBiCP,IAA7B2qC,EACFL,EAAgB1gC,IAAI/J,EAAS,IAAIyB,IAAI,CAAC,CAAC0f,EAAWzX,MAElDohC,EAAyB/gC,IAAIoX,EAAWzX,GAG1CA,EAAQ4R,KAAK,KACX,MAAM6vB,EAAmBT,EAAiBjtC,IAAIuC,QAErBG,IAArBgrC,EACFT,EAAiB3gC,IAAI/J,EAAS,IAAIiW,IAAI,CAACkL,KAEvCgqB,EAAiB/gC,IAAI+W,KAEtBvX,MAAM,QAER0R,KAAK,KACJ,MAAM8vB,EAAkBX,EAAgBhtC,IAAIuC,QAEpBG,IAApBirC,GACFA,EAAgBn7B,OAAOkR,KAGpBzX,I,iFC5KJ,MAAM2hC,EAAsD1zB,GACL,mBAA9CA,EAAmBO,uBCGtBozB,EAAkC,CAAC9pC,EAAiBqI,EAAsB9H,IAC9E,CAAChC,EAAeJ,KACrB,MAAMgY,EAAqB5V,EAAsBhC,EAAeisB,GAAYA,EAASuf,kBAIrF,GAFA,YAA6B5zB,EAAoBhY,KAE3CA,EAAQ0X,YAAc1X,EAAQ2X,aAClC,MAAMzN,IAYR,OATA,YAA4B8N,EAAoBhY,EAAS,WACzD,YAA4BgY,EAAoBhY,EAAS,eACzD,YAA4BgY,EAAoBhY,EAAS,eACzD,YAA4BgY,EAAoBhY,EAAS,yBAEpD6B,EAAgB6pC,EAAqD,IAAMA,EAAoD1zB,KCnB5EA,KAC1DA,EAAmBO,uBAAyB/E,IAC1C,MAAMq4B,EAAqB,IAAIC,WAAWt4B,EAAM3G,QAChDmL,EAAmBK,sBAAsBwzB,GACzC,MAAMh/B,EAASZ,KAAKwJ,IAAIo2B,EAAmBh/B,OAAQmL,EAAmBP,SAEtE,IAAK,IAAIxa,EAAI,EAAGA,EAAI4P,EAAQ5P,GAAK,EAC/BuW,EAAMvW,GAAqC,UAA/B4uC,EAAmB5uC,GAAK,KAGtC,OAAOuW,IDULu4B,CAA6C/zB,GAGxCA,I,2EEtBJ,MCADR,EAAkB,CACtBT,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,YAEZ+0B,EAAiC,CAAChpC,EAAsBsD,EAA2BD,EAA6B3D,EAAkBT,IACtI,cAA4Be,EACjC,YAAY3C,EAASL,GACnB,MAAMI,EAAgBsC,EAAiBrC,GACjC0Z,EAAY9X,EAA4B7B,GACxC2X,EAAgB,IAAKP,KACtBxX,GAECksB,EAAsB5lB,EAA0BlG,EAAe2Z,EAAY,KAAO1Z,EAAQkV,YAAawC,GAE7GE,MAAM5X,GAAS,EAAO6rB,EADQnS,EAAY1T,EAA4B0R,EAAcpD,SAAUoD,EAAclD,aAAe,MDdtEqX,KACd,IAACnJ,EAA5CmJ,EAAoBnJ,sBAAwBA,EAQzCmJ,EAAoBnJ,qBAPd,CAACH,EAAaC,EAAaC,KAChC,GAAIF,EAAY/V,SAAWgW,EAAYhW,QAAUgW,EAAYhW,SAAWiW,EAAcjW,OACpF,MAAM,cAGR,OAAOkW,EAAqB3lB,KAAK8uB,EAAqBtJ,EAAaC,EAAaC,MCWhFmpB,CAA4C/f,GAC5Cje,KAAKi+B,qBAAuBhgB,EAG9B,qBAAqBtJ,EAAaC,EAAaC,GAC7C,OAAO7U,KAAKi+B,qBAAqBnpB,qBAAqBH,EAAaC,EAAaC,M,2ECxB/E,MCEMqpB,EAAqB,CAACxpC,EAA0B1B,EAAyBC,IAC7E,SAASskC,EAAa4G,EAAOC,GAClC,MAAMzrC,EAAY,YAAYyrC,GAAYA,EAAWnrC,EAAeyB,EAA0B0pC,GAE9F,GDNuBzrC,IAClB,cAAeA,ECKhB0rC,CAAY1rC,GACd,MAAO,GAGT,GAAIwrC,EAAM,KAAOxrC,EACf,MAAO,CAACwrC,GAGV,GAAIA,EAAM1O,SAAS98B,GACjB,MAAO,GAGT,MAAM,QACJ2V,GACEtV,EAAwBL,GAC5B,OAAOye,MAAMC,KAAK/I,GAASpV,IAAIqP,GAAoBg1B,EAAa,IAAI4G,EAAOxrC,GAAY4P,EAAiB,KAAKmtB,OAAO,CAAC4O,EAAcC,IAAiBD,EAAaE,OAAOD,GAAe,M,2ECnBpL,MAAME,EAAwB,CAACxpC,EAAkBrB,EAAiBmkB,EAAsBuC,EAAqBokB,EAAsBjqC,EAAkBsF,EAAiB/F,EAA6BD,EAAsCiQ,EAAqDpI,EAAoBvG,EAAmCC,IACnV,CAACqpC,EAAY9qB,KAClB,MAAM1hB,EAAgB4H,EAAgB4kC,GAAcA,EAAalqC,EAAiBkqC,GAElF,GAAID,EAAqBhiC,IAAImX,GAAY,CACvC,MAAM/gB,EAAMilB,IACZ,OAAOlN,QAAQiD,OAAOhb,GAIxB,IACE4rC,EAAqBliC,IAAIqX,GACzB,OAIF,GAAIjgB,EAAgBgI,EAAoB,IAAMA,EAAmBzJ,IAAiB,CAWhF,OATmE,WAAxBA,EAAcob,OAA+D,OAAzCxZ,GAAiDC,EAA4B7B,GAAiB,IAAI4B,EAAqC,EAAG,EAAG5B,EAAcoV,YAAcpV,GACrM6H,gBAAgB6Z,GAAW7X,MAAMlJ,IAElF,GAAIA,aAAeD,cAA6B,sBAAbC,EAAIvD,KACrC,MAAM,IAAI4d,UAGZ,MAAMra,IAEO4a,KAAKrK,IAEbzP,EAAgBoQ,EAAqD,IAAMA,EAAoDX,KAClI/N,EAA6C+N,GAG/CpO,EAAiBuH,IAAI6G,GACdA,IAKX,OAAO,IAAIwH,QAAQ,CAACC,EAASgD,KAC3B,MAAM8wB,EAAW,KAEf,IC5CyB3K,KAC/B,MAAM,MACJE,GACE,IAAIE,eACRF,EAAMI,YAAYN,EAAa,CAACA,KDyCxB4K,CAAkBhrB,GAClB,SAKEirB,EAAOhsC,IACXgb,EAAOhb,GACP8rC,KAIF,IAEEzsC,EAAc6H,gBAAgB6Z,EAAWxQ,IAGI,mBAAhCA,EAAYsB,kBACrBtP,EAAkCgO,GAClC,YAAoCA,IAGtCpO,EAAiBuH,IAAI6G,GACrBu7B,IACA9zB,EAAQzH,IACPvQ,IAGCgsC,EADU,OAARhsC,EACGwnB,IAEAxnB,KAGT,MAAOA,GACPgsC,EAAKhsC,Q,+DE/EN,MCCMisC,EAAsC,CAACnsC,EAAyBuB,EAAuB6G,EAAmCxF,EAAsBpC,EAAyBqD,IAC7K,CAACtE,EAAemV,EAAapM,EAAmC3L,EAAMmjB,EAAsB3gB,KACjG,GAA0C,OAAtCmJ,EACF,IACE,MAAMyX,EAAyBxe,EAAsBhC,EAAeisB,GAC3D,IAAIljB,EAAkCkjB,EAAU7uB,EAAMwC,IAEzDynC,EAAwB,IAAI3lC,IAElC,IAAImf,EAAmB,KAiFvB,GAhFAtjB,OAAOuT,iBAAiB0P,EAAwB,CAK9C7J,aAAc,CACZjZ,IAAK,IAAMkC,EAAQ+W,aACnB3M,IAAK,KACH,MAAMvJ,MAGVmW,iBAAkB,CAChBlZ,IAAK,IAAM,WACXsM,IAAK,KACH,MAAMvJ,MAIVogB,iBAAkB,CAChBnjB,IAAK,IAAMmjB,EACX7W,IAAKlM,IAC6B,mBAArB+iB,GACTL,EAAuBxJ,oBAAoB,iBAAkB6J,GAG/DA,EAAoC,mBAAV/iB,EAAuBA,EAAQ,KAEzB,mBAArB+iB,GACTL,EAAuBvJ,iBAAiB,iBAAkB4J,OAMlEL,EAAuBvJ,kBAAoBA,EAwBxCuJ,EAAuBvJ,iBAvBjB,IAAI8a,KACT,GAAgB,mBAAZA,EAAK,GAAyB,CAChC,MAAMuV,EAA4C,mBAAZvV,EAAK,GAAoBA,EAAK,GAAwB,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAG/gB,YAA6B+gB,EAAK,GAAG/gB,YAAc,KAE9L,GAA+B,OAA3Bs2B,EAAiC,CACnC,MAAMC,EAAuBF,EAAsB3pC,IAAIq0B,EAAK,SAE/B3xB,IAAzBmnC,EACFxV,EAAK,GAAKwV,GAEVxV,EAAK,GAAKnhB,IACR02B,EAAuB,IAAIc,WAAWrW,EAAK,GAAI,IAAKnhB,EAClD4Y,MAAO,IAAIxoB,UAIfqmC,EAAsBr9B,IAAIs9B,EAAwBvV,EAAK,MAK7D,OAAO9a,EAAiBja,KAAKwjB,EAAwBuR,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAIhFvR,EAAuBxJ,qBAAuBA,EAa3CwJ,EAAuBxJ,oBAZjB,IAAI+a,KACT,GAAgB,mBAAZA,EAAK,GAAyB,CAChC,MAAMwV,EAAuBF,EAAsB3pC,IAAIq0B,EAAK,SAE/B3xB,IAAzBmnC,IACFF,EAAsBn3B,OAAO6hB,EAAK,IAClCA,EAAK,GAAKwV,GAId,OAAOvwB,EAAoBha,KAAKwjB,EAAwBuR,EAAK,GAAIA,EAAK,GAAIA,EAAK,MASnD,IAA5BnyB,EAAQmgB,gBAAuB,CACjC,MAAMrJ,EAAiBrT,EAAqBrD,EAAe,CACzD2W,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBC,KAAM,IAmBR,OAjBA0J,EAAuBnf,QAAQqV,GAK9BrV,QAAQqV,EAAezW,QAAQ8W,aAYzBzS,EAAmBkc,EAVJ,IAAM9J,EAAepV,aAOlB,IAAMoV,EAAerV,QAAQqV,EAAezW,QAAQ8W,cAM/E,OAAOyJ,EACP,MAAO7f,GAEP,GAAiB,KAAbA,EAAIC,KACN,MAAMK,IAGR,MAAMN,EAtDuC,IAACqW,EA1BHC,EAqF/C,QAA6B7W,IAAzBmgB,EACF,MAAMtf,IAIR,MDvIoDmlC,KACtD,MAAM,MACJpE,GACE,IAAIE,eAER,IAEEF,EAAMI,YAAYgE,GAClB,QACApE,EAAM1mB,UC6HNuxB,CAAyCjtC,GAClCiJ,EAAkC7I,EAAemV,EAAaoL,EAAsB3gB,K,kIChI/F,MAAMktC,EAAgBl0B,MAAON,EAAO6T,EAAgB5T,EAA2B3Y,EAAS2gB,EAAsB7Y,KAG5G,MAAM+E,EAA4B,OAAnB0f,EAAkE,IAAxCtgB,KAAK4B,KAAK6K,EAAMrY,QAAQwM,OAAS,KAAa0f,EAAe1f,OAChGgrB,EAAwB73B,EAAQ+W,aAAe/W,EAAQqW,eACvDyhB,EAAyB93B,EAAQogB,mBAAmBud,OAAO,CAACiJ,EAAK1oC,IAAU0oC,EAAM1oC,EAAO,GACxFivC,EAA6C,IAA3BrV,EAA+B,KAAOnf,EAA0BW,aAAawe,EAAwBjrB,EAAQ8L,EAA0BnD,YAE/J,QAA6BhV,IAAzBmgB,EACF,MAAM,IAAIvf,MAAM,sCAGlB,MAAMkqB,EAAuB,YAAwB5S,GAC/CkvB,OCjBgC,EAACjvB,EAA2BD,KAClE,MAAMmvB,EAAqB,YAAe,IAAwBlvB,GAC5DiI,EAAyB,YAAmBlI,GAClD,OAAO,YAAemvB,EAAoBjnB,IDcNwsB,CAAyBz0B,EAA2BD,GAClFhG,EAAS,YAAmB1S,EAAQqW,eAAgBrW,EAAQ+W,cAC5DR,EAAU,YAAmBvW,EAAQmgB,gBAAiBngB,EAAQogB,oBAC9DjM,EAAakL,MAAMC,KAAK5G,EAAMvE,WAAWM,QAAQkpB,OAAO,CAACsK,EAAQzqC,KAAS,IAAMyqC,EACpF,CAACzqC,GAAO,IAAIuR,aAAa,OACvB,IAEJ,IAAK,IAAI9R,EAAI,EAAGA,EAAI4P,EAAQ5P,GAAK,IAAK,CACpC,GAAI+C,EAAQqW,eAAiB,GAAwB,OAAnBkW,EAChC,IAAK,IAAI9Y,EAAI,EAAGA,EAAIzT,EAAQqW,eAAgB5C,GAAK,EAC/C,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQ+W,aAAc1B,GAAK,EAC7C,YAAgBkX,EAAgB7Z,EAAOe,GAAI4B,EAAGA,EAAGpY,QAKLuD,IAA9CmgB,EAAqBmmB,sBAAyD,OAAnBva,GAC7D5L,EAAqBmmB,qBAAqBl8B,QAAQ,EAChDpN,QACCmP,KACD,YAAgB4f,EAAgBpY,EAAY3W,EAAMq6B,EAAwBlrB,EAAO1P,KAIrF,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQqW,eAAgB5C,GAAK,EAC/C,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQogB,mBAAmB3M,GAAI4B,GAAK,EAErB,IAA7BkB,EAAQ9C,GAAG4B,GAAGrC,aAChBuD,EAAQ9C,GAAG4B,GAAK,IAAItG,aAAa,MAKvC,IACE,MAAMs5B,EAAyB31B,EAAOvR,IAAI,CAACqR,EAAO7F,IACM,IAAlD2e,EAAqBlV,aAAazJ,GAAO0H,KACpC,GAGF7B,GAEH81B,EAAmBxgC,EAAiC7K,EAAI0b,EAA0BnD,WAAYmD,EAA0BnD,WAAY,IAAMoyB,EAAsBW,QAAQF,EAAwB9xB,EAASpC,IAE/M,GAAwB,OAApBg5B,EACF,IAAK,IAAI15B,EAAI,EAAG00B,EAAkC,EAAG10B,EAAIzT,EAAQmgB,gBAAiB1M,GAAK,EAAG,CACxF,IAAK,IAAI4B,EAAI,EAAGA,EAAIrV,EAAQogB,mBAAmB3M,GAAI4B,GAAK,EACtD,YAAc83B,EAAiB52B,EAAQ9C,GAAI4B,EAAG8yB,EAAkC9yB,EAAGpY,GAGrFkrC,GAAmCnoC,EAAQogB,mBAAmB3M,GAIlE,IAAK60B,EACH,MAEF,MAAO1e,GACPlR,EAAM2R,cAAc,IAAIme,WAAW,iBAAkB,CACnD5e,WAEF,OAIJ,OAAOujB,GAGIE,EAAwC,CAACrpC,EAAmB8E,EAAwB7E,EAAmCW,EAA+BG,EAAiCI,EAAgC1B,EAAsBsF,EAAkCC,EAA2BlB,EAAkCnH,EAAoBwI,EAAmCnH,EAAsCkC,EAAkB3B,EAAyB6D,IACxd,CAAC5I,EAAMwC,EAAS2gB,KACrB,MAAMqD,EAA2B,IAAI5kB,QACrC,IAAIkuC,EAAyB,KA4J7B,MAAO,CACL,OAAO50B,EAAOC,EAA2BC,GACvC7P,EAAiC4P,EAA2BD,GAC5D,MAAM60B,EAA2CvpB,EAAyBlmB,IAAI6a,GAE9E,YAAiDnY,IAA7C+sC,EACKz0B,QAAQC,QAAQw0B,GAhKLv0B,OAAON,EAAOC,EAA2BC,KAC/D,IAAIgI,EAAyBjgB,EAAmB+X,GAC5C80B,EAAoB,KACxB,MAAMC,EAAyC,YAAiB7sB,EAAwBjI,GAExF,GAA0C,OAAtCxP,EAA4C,CAC9C,MAAM2uB,EAAyB93B,EAAQogB,mBAAmBud,OAAO,CAACiJ,EAAK1oC,IAAU0oC,EAAM1oC,EAAO,GACxFkpC,EAA4BriC,EAAgC4T,EAA2B,CAC3F5B,aAAc9K,KAAKwJ,IAAI,EAAGqiB,GAC1B9gB,iBAAkB,WAClBC,sBAAuB,WACvBkJ,gBAAiBlU,KAAKwJ,IAAI,EAAGqiB,KAEzBuP,EAA2B,GAEjC,IAAK,IAAIpqC,EAAI,EAAGA,EAAIyb,EAAMyH,gBAAiBljB,GAAK,EAC9CoqC,EAAyBx4B,KAAKjK,EAA8B+T,EAA2B,CACrF5B,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgBrW,EAAQogB,mBAAmBnjB,MAI/C,MAAM69B,EAAiBr3B,EAAqBkV,EAA2B,CACrE5B,aAAc/W,EAAQ+W,aACtBC,iBAAkBhX,EAAQgX,iBAC1BC,sBAAuBjX,EAAQiX,sBAC/BC,KAAM,IAER4jB,EAAer5B,QAAUqH,EAAuBrK,KAAK,KAAM4oC,GAC3DvM,EAAep5B,WAAasH,EAA0BvK,KAAK,KAAM4oC,GACjEmG,EAAoB,CAACpG,EAA2BC,EAA0BvM,QAChE2S,IACV7sB,EAAyB,IAAIzX,EAAkCwP,EAA2Bnb,IAK5F,GAFAwmB,EAAyB5Z,IAAIuO,EAAiD,OAAtB60B,EAA6B5sB,EAAyB4sB,EAAkB,IAEtG,OAAtBA,EAA4B,CAC9B,GAA+B,OAA3BF,EAAiC,CACnC,QAA6B9sC,IAAzBmgB,EACF,MAAM,IAAIvf,MAAM,sCAGlB,GAA6C,OAAzCY,EACF,MAAM,IAAIZ,MAAM,uDAIlB,MAAMy2B,EAAwBnf,EAAM3B,aAAe2B,EAAMrC,eACnDwwB,OAAmErmC,IAA9CmgB,EAAqBmmB,qBAAqC,EAAInmB,EAAqBmmB,qBAAqBj6B,OAC7HqM,EAAmB2e,EAAwBgP,EAE3C6G,EAAe10B,UACnB,MAAMsT,EAA6B,IAAItqB,EAAqCkX,EAEpC,IAAxCjN,KAAK4B,KAAK6K,EAAMrY,QAAQwM,OAAS,KAAY8L,EAA0BnD,YACjEwxB,EAAY,GACZC,EAA4B,GAElC,IAAK,IAAIhqC,EAAI,EAAGA,EAAI+C,EAAQqW,eAAgBpZ,GAAK,EAC/C+pC,EAAUn4B,KAAKpL,EAAqB6oB,EAA4B,CAC9DvV,aAAc/W,EAAQ+W,aACtBC,iBAAkBhX,EAAQgX,iBAC1BC,sBAAuBjX,EAAQiX,sBAC/BC,KAAM,KAER+vB,EAA0Bp4B,KAAK9J,EAAgCunB,EAA4B,CACzFvV,aAAc/W,EAAQ+W,aACtBC,iBAAkB,WAClBC,sBAAuB,WACvBkJ,gBAAiBngB,EAAQ+W,gBAI7B,MAAMmwB,QAA4BpuB,QAAQyV,IAAIlP,MAAMC,KAAK5G,EAAMvE,WAAW1I,UAAUtK,IAAI6X,UACtF,MAAM4E,EAAqBzY,EAA+BmnB,EAA4B,CACpFvV,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBpF,OAAQnR,EAAWxC,QAGrB,aADMgG,EAAiBooB,EAA4B5rB,EAAYkd,EAAmB/L,OAAQ+G,GACnFgF,KAEHupB,EAAyBviC,EAA8B0nB,EAA4B,CACvFvV,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBZ,eAAgBpK,KAAKwJ,IAAI,EAAGoiB,EAAwBgP,KAGtD,IAAK,IAAI5pC,EAAI,EAAGA,EAAI+C,EAAQqW,eAAgBpZ,GAAK,EAAG,CAClD+pC,EAAU/pC,GAAGwE,QAAQwlC,EAA0BhqC,IAE/C,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQ+W,aAActD,GAAK,EAC7CwzB,EAA0BhqC,GAAGwE,QAAQ0lC,EAAwB1zB,EAAGxW,EAAI+C,EAAQ+W,aAAetD,GAI/F,IAAK,MAAO9G,EAAOiR,KAAuBspB,EAAoB5yB,UAC5DsJ,EAAmBnc,QAAQ0lC,EAAwB,EAAGtP,EAAwBlrB,GAC9EiR,EAAmBjM,MAAM,GAK3B,OAFAw1B,EAAuB1lC,QAAQ6qB,EAA2BnV,mBACpD2B,QAAQyV,IAAIyY,EAAU7lC,IAAIgwB,GAAY5uB,EAAwBmW,EAAO4T,EAA4B6E,EAAUvY,KAC1GxS,EAAgCkmB,IAGzCghB,EAAyBJ,EAAcx0B,EAA4B,IAArBQ,EAAyB,WAAaw0B,IAAgB/0B,EAA2B3Y,EAAS2gB,EAAsB7Y,GAGhK,MAAMqlC,QAAwBG,EACxBrb,EAAwBhuB,EAAkC0U,IACzDyuB,EAA2BC,EAA0BvM,GAAkB0S,EAEtD,OAApBL,IACFlb,EAAsBjoB,OAASmjC,EAC/Blb,EAAsBtgB,MAAM,IAG9BsgB,EAAsBxwB,QAAQ2lC,GAE9B,IAAK,IAAInqC,EAAI,EAAGkrC,EAAkC,EAAGlrC,EAAIyb,EAAMyH,gBAAiBljB,GAAK,EAAG,CACtF,MAAMmrC,EAA0Bf,EAAyBpqC,GAEzD,IAAK,IAAIwW,EAAI,EAAGA,EAAIzT,EAAQogB,mBAAmBnjB,GAAIwW,GAAK,EACtD2zB,EAA0B3lC,QAAQ2mC,EAAyBD,EAAkC10B,EAAGA,GAGlG00B,GAAmCnoC,EAAQogB,mBAAmBnjB,GAGhE,OAAO69B,EAGT,GAAK2S,EAMH,IAAK,MAAO5sB,EAAIngB,KAAegY,EAAMvE,WAAWG,gBACxCtQ,EAAkB2U,EAA2BjY,EACnDkgB,EAAuBzM,WAAWrW,IAAI+iB,GAAKjI,QAP7C,IAAK,MAAOiI,EAAIngB,KAAegY,EAAMvE,WAAWG,gBACxCpQ,EAAiByU,EAA2BjY,EAClDkgB,EAAuBzM,WAAWrW,IAAI+iB,GAAKjI,GAU/C,aADMrW,EAAwBmW,EAAOC,EAA2BiI,EAAwBhI,GACjFgI,GAYEsD,CAAgBxL,EAAOC,EAA2BC,O,iFE9P1D,MCCM+0B,EAAyCvrC,GAC7C,CAAChC,EAAeJ,KACrB,MAAM4tC,EAA4BxrC,EAAsBhC,EAAeisB,GAC9DA,EAASwhB,sBAAsB7tC,EAAQmgB,kBAQhD,OAHA,YAA6BytB,EAA2B5tC,GDTrBw5B,KACrC,MAAMziB,EAAeyiB,EAAoBrZ,gBAEzCxiB,OAAOC,eAAe47B,EAAqB,eAAgB,CACzD17B,IAAK,IAAMiZ,EACX3M,IAAKlM,IACH,GAAIA,IAAU6Y,EACZ,MAAM,iBASZpZ,OAAOC,eAAe47B,EAAqB,mBAAoB,CAC7D17B,IAAK,IAAM,WACXsM,IAAKlM,IACH,GAAc,aAAVA,EACF,MAAM,iBASZP,OAAOC,eAAe47B,EAAqB,wBAAyB,CAClE17B,IAAK,IAAM,WACXsM,IAAKlM,IACH,GAAc,aAAVA,EACF,MAAM,kBCtBV4vC,CAAwBF,GACjBA,I,kCCbX,IAAIG,EAAiB,EAAQ,KAEzBC,EAAuB,EAAQ,KAE/BC,EAA6B,EAAQ,KAErCC,EAAkB,EAAQ,KAM9BlxC,EAAOD,QAJP,SAAwBoxC,EAAKlxC,GAC3B,OAAO8wC,EAAeI,IAAQH,EAAqBG,EAAKlxC,IAAMgxC,EAA2BE,EAAKlxC,IAAMixC,M,cCLtGlxC,EAAOD,QAJP,SAAyBoxC,GACvB,GAAI9uB,MAAMgrB,QAAQ8D,GAAM,OAAOA,I,cC0BjCnxC,EAAOD,QA3BP,SAA+BoxC,EAAKlxC,GAClC,GAAsB,oBAAXe,QAA4BA,OAAOqQ,YAAY1Q,OAAOwwC,GAAjE,CACA,IAAIC,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAK/tC,EAET,IACE,IAAK,IAAiCguC,EAA7BC,EAAKN,EAAInwC,OAAOqQ,cAAmBggC,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAKv/B,KAAK2/B,EAAGtwC,QAETjB,GAAKmxC,EAAKvhC,SAAW5P,GAH8CoxC,GAAK,IAK9E,MAAOttC,GACPutC,GAAK,EACLC,EAAKxtC,EACL,QACA,IACOstC,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,K,gBCxBT,IAAIQ,EAAmB,EAAQ,KAW/B5xC,EAAOD,QATP,SAAqCW,EAAGmxC,GACtC,GAAKnxC,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOkxC,EAAiBlxC,EAAGmxC,GACtD,IAAInwC,EAAIf,OAAOkB,UAAUqrC,SAAS9sC,KAAKM,GAAG+Q,MAAM,GAAI,GAEpD,MADU,WAAN/P,GAAkBhB,EAAEoxC,cAAapwC,EAAIhB,EAAEoxC,YAAYtxC,MAC7C,QAANkB,GAAqB,QAANA,EAAoB2gB,MAAMC,KAAK5gB,GACxC,cAANA,GAAqB,2CAA2C+kB,KAAK/kB,GAAWkwC,EAAiBlxC,EAAGmxC,QAAxG,K,cCEF7xC,EAAOD,QAVP,SAA2BoxC,EAAKY,IACnB,MAAPA,GAAeA,EAAMZ,EAAIthC,UAAQkiC,EAAMZ,EAAIthC,QAE/C,IAAK,IAAI5P,EAAI,EAAG+xC,EAAO,IAAI3vB,MAAM0vB,GAAM9xC,EAAI8xC,EAAK9xC,IAC9C+xC,EAAK/xC,GAAKkxC,EAAIlxC,GAGhB,OAAO+xC,I,cCHThyC,EAAOD,QAJP,WACE,MAAM,IAAIqe,UAAU,+I,cCKtBpe,EAAOD,QANP,SAAyByc,EAAUy1B,GACjC,KAAMz1B,aAAoBy1B,GACxB,MAAM,IAAI7zB,UAAU,uC,cCFxB,SAAS8zB,EAAkBnjC,EAAQojC,GACjC,IAAK,IAAIlyC,EAAI,EAAGA,EAAIkyC,EAAMtiC,OAAQ5P,IAAK,CACrC,IAAIgU,EAAak+B,EAAMlyC,GACvBgU,EAAWpT,WAAaoT,EAAWpT,aAAc,EACjDoT,EAAWwZ,cAAe,EACtB,UAAWxZ,IAAYA,EAAWm+B,UAAW,GACjDzxC,OAAOC,eAAemO,EAAQkF,EAAWzS,IAAKyS,IAUlDjU,EAAOD,QANP,SAAsBkyC,EAAaI,EAAYC,GAG7C,OAFID,GAAYH,EAAkBD,EAAYpwC,UAAWwwC,GACrDC,GAAaJ,EAAkBD,EAAaK,GACzCL,I,gBCPT,IAAIM,EAAU,SAAUxyC,GACtB,aAEA,IAAIyyC,EAAK7xC,OAAOkB,UACZ4wC,EAASD,EAAG1wC,eAGZ4wC,EAA4B,mBAAX1xC,OAAwBA,OAAS,GAClD2xC,EAAiBD,EAAQrhC,UAAY,aACrCuhC,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQzxC,aAAe,gBAE/C,SAAS8xC,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQpxC,qBAAqBwxC,EAAYJ,EAAUI,EAC/EC,EAAY3yC,OAAOY,OAAO6xC,EAAevxC,WACzCwB,EAAU,IAAIkwC,EAAQJ,GAAe,IAIzC,OADAG,EAAUE,QA+LZ,SAA0BR,EAASE,EAAM7vC,GACvC,IAAImb,EAnKuB,iBAoK3B,OAAO,SAAgBi1B,EAAQC,GAC7B,GAnKoB,cAmKhBl1B,EACF,MAAM,IAAIpa,MAAM,gCAGlB,GAtKoB,cAsKhBoa,EAA6B,CAC/B,GAAe,UAAXi1B,EACF,MAAMC,EAKR,OAAOC,IAMT,IAHAtwC,EAAQowC,OAASA,EACjBpwC,EAAQqwC,IAAMA,IAED,CACX,IAAIE,EAAWvwC,EAAQuwC,SAEvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUvwC,GAEnD,GAAIwwC,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBxwC,EAAQowC,OAGVpwC,EAAQ2wC,KAAO3wC,EAAQ4wC,MAAQ5wC,EAAQqwC,SAClC,GAAuB,UAAnBrwC,EAAQowC,OAAoB,CACrC,GAvMqB,mBAuMjBj1B,EAEF,MADAA,EArMc,YAsMRnb,EAAQqwC,IAGhBrwC,EAAQ6wC,kBAAkB7wC,EAAQqwC,SACN,WAAnBrwC,EAAQowC,QACjBpwC,EAAQ8wC,OAAO,SAAU9wC,EAAQqwC,KAGnCl1B,EA/MkB,YAgNlB,IAAI41B,EAASC,EAASrB,EAASE,EAAM7vC,GAErC,GAAoB,WAAhB+wC,EAAOhmC,KAAmB,CAK5B,GAFAoQ,EAAQnb,EAAQsuC,KApNA,YAFK,iBAwNjByC,EAAOV,MAAQK,EACjB,SAGF,MAAO,CACL7yC,MAAOkzC,EAAOV,IACd/B,KAAMtuC,EAAQsuC,MAES,UAAhByC,EAAOhmC,OAChBoQ,EA/NgB,YAkOhBnb,EAAQowC,OAAS,QACjBpwC,EAAQqwC,IAAMU,EAAOV,OAnQPY,CAAiBtB,EAASE,EAAM7vC,GAC7CiwC,EAcT,SAASe,EAAS9mB,EAAIgnB,EAAKb,GACzB,IACE,MAAO,CACLtlC,KAAM,SACNslC,IAAKnmB,EAAGntB,KAAKm0C,EAAKb,IAEpB,MAAO3vC,GACP,MAAO,CACLqK,KAAM,QACNslC,IAAK3vC,IApBXhE,EAAQgzC,KAAOA,EAyBf,IAMIgB,EAAmB,GAKvB,SAASV,KAET,SAASmB,KAET,SAASC,KAIT,IAAIC,EAAoB,GAExBA,EAAkB/B,GAAkB,WAClC,OAAO1hC,MAGT,IAAI0jC,EAAWh0C,OAAOmW,eAClB89B,EAA0BD,GAAYA,EAASA,EAASlmC,EAAO,MAE/DmmC,GAA2BA,IAA4BpC,GAAMC,EAAOryC,KAAKw0C,EAAyBjC,KAGpG+B,EAAoBE,GAGtB,IAAIC,EAAKJ,EAA2B5yC,UAAYwxC,EAAUxxC,UAAYlB,OAAOY,OAAOmzC,GAMpF,SAASI,EAAsBjzC,GAC7B,CAAC,OAAQ,QAAS,UAAU+L,SAAQ,SAAU6lC,GAC5C5xC,EAAU4xC,GAAU,SAAUC,GAC5B,OAAOziC,KAAKuiC,QAAQC,EAAQC,OAqClC,SAASqB,EAAczB,EAAW0B,GAgChC,IAAIC,EA4BJhkC,KAAKuiC,QA1BL,SAAiBC,EAAQC,GACvB,SAASwB,IACP,OAAO,IAAIF,GAAY,SAAUj5B,EAASgD,IAnC9C,SAASo2B,EAAO1B,EAAQC,EAAK33B,EAASgD,GACpC,IAAIq1B,EAASC,EAASf,EAAUG,GAASH,EAAWI,GAEpD,GAAoB,UAAhBU,EAAOhmC,KAEJ,CACL,IAAIqjB,EAAS2iB,EAAOV,IAChBxyC,EAAQuwB,EAAOvwB,MAEnB,OAAIA,GAA0B,iBAAVA,GAAsBuxC,EAAOryC,KAAKc,EAAO,WACpD8zC,EAAYj5B,QAAQ7a,EAAMk0C,SAASz2B,MAAK,SAAUzd,GACvDi0C,EAAO,OAAQj0C,EAAO6a,EAASgD,MAC9B,SAAUhb,GACXoxC,EAAO,QAASpxC,EAAKgY,EAASgD,MAI3Bi2B,EAAYj5B,QAAQ7a,GAAOyd,MAAK,SAAU02B,GAI/C5jB,EAAOvwB,MAAQm0C,EACft5B,EAAQ0V,MACP,SAAU7E,GAGX,OAAOuoB,EAAO,QAASvoB,EAAO7Q,EAASgD,MAtBzCA,EAAOq1B,EAAOV,KAgCZyB,CAAO1B,EAAQC,EAAK33B,EAASgD,MAIjC,OAAOk2B,EAYPA,EAAkBA,EAAgBt2B,KAAKu2B,EAEvCA,GAA8BA,KAyGlC,SAASpB,EAAoBF,EAAUvwC,GACrC,IAAIowC,EAASG,EAASviC,SAAShO,EAAQowC,QAEvC,QA9REjwC,IA8REiwC,EAAsB,CAKxB,GAFApwC,EAAQuwC,SAAW,KAEI,UAAnBvwC,EAAQowC,OAAoB,CAE9B,GAAIG,EAASviC,SAAiB,SAG5BhO,EAAQowC,OAAS,SACjBpwC,EAAQqwC,SAzSZlwC,EA0SIswC,EAAoBF,EAAUvwC,GAEP,UAAnBA,EAAQowC,QAGV,OAAOM,EAIX1wC,EAAQowC,OAAS,QACjBpwC,EAAQqwC,IAAM,IAAIt1B,UAAU,kDAG9B,OAAO21B,EAGT,IAAIK,EAASC,EAASZ,EAAQG,EAASviC,SAAUhO,EAAQqwC,KAEzD,GAAoB,UAAhBU,EAAOhmC,KAIT,OAHA/K,EAAQowC,OAAS,QACjBpwC,EAAQqwC,IAAMU,EAAOV,IACrBrwC,EAAQuwC,SAAW,KACZG,EAGT,IAAIuB,EAAOlB,EAAOV,IAElB,OAAK4B,EAODA,EAAK3D,MAGPtuC,EAAQuwC,EAAS2B,YAAcD,EAAKp0C,MAEpCmC,EAAQquC,KAAOkC,EAAS4B,QAOD,WAAnBnyC,EAAQowC,SACVpwC,EAAQowC,OAAS,OACjBpwC,EAAQqwC,SA1VVlwC,GAmWFH,EAAQuwC,SAAW,KACZG,GANEuB,GAxBPjyC,EAAQowC,OAAS,QACjBpwC,EAAQqwC,IAAM,IAAIt1B,UAAU,oCAC5B/a,EAAQuwC,SAAW,KACZG,GA+CX,SAAS0B,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAGX,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBzkC,KAAK+kC,WAAWnkC,KAAK8jC,GAGvB,SAASM,EAAcN,GACrB,IAAIvB,EAASuB,EAAMO,YAAc,GACjC9B,EAAOhmC,KAAO,gBACPgmC,EAAOV,IACdiC,EAAMO,WAAa9B,EAGrB,SAASb,EAAQJ,GAIfliC,KAAK+kC,WAAa,CAAC,CACjBJ,OAAQ,SAEVzC,EAAYvlC,QAAQ6nC,EAAcxkC,MAClCA,KAAKklC,OAAM,GAgCb,SAAS1nC,EAAO2nC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASzD,GAE9B,GAAI0D,EACF,OAAOA,EAAej2C,KAAKg2C,GAG7B,GAA6B,mBAAlBA,EAAS1E,KAClB,OAAO0E,EAGT,IAAKE,MAAMF,EAASvmC,QAAS,CAC3B,IAAI5P,GAAK,EACLyxC,EAAO,SAASA,IAClB,OAASzxC,EAAIm2C,EAASvmC,QACpB,GAAI4iC,EAAOryC,KAAKg2C,EAAUn2C,GAGxB,OAFAyxC,EAAKxwC,MAAQk1C,EAASn2C,GACtByxC,EAAKC,MAAO,EACLD,EAMX,OAFAA,EAAKxwC,WA/cTsC,EAgdIkuC,EAAKC,MAAO,EACLD,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CACLA,KAAMiC,GAMV,SAASA,IACP,MAAO,CACLzyC,WAleAsC,EAmeAmuC,MAAM,GA+LV,OAplBA6C,EAAkB3yC,UAAYgzC,EAAG/C,YAAc2C,EAC/CA,EAA2B3C,YAAc0C,EACzCC,EAA2B3B,GAAqB0B,EAAkB+B,YAAc,oBAWhFx2C,EAAQy2C,oBAAsB,SAAUC,GACtC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAO3E,YAClD,QAAO4E,IAAOA,IAASlC,GAEa,uBAAnCkC,EAAKH,aAAeG,EAAKl2C,QAG5BT,EAAQ42C,KAAO,SAAUF,GAYvB,OAXI91C,OAAOi2C,eACTj2C,OAAOi2C,eAAeH,EAAQhC,IAE9BgC,EAAOI,UAAYpC,EAEb3B,KAAqB2D,IACzBA,EAAO3D,GAAqB,sBAIhC2D,EAAO50C,UAAYlB,OAAOY,OAAOszC,GAC1B4B,GAOT12C,EAAQ+2C,MAAQ,SAAUpD,GACxB,MAAO,CACL0B,QAAS1B,IAmEboB,EAAsBC,EAAclzC,WAEpCkzC,EAAclzC,UAAU+wC,GAAuB,WAC7C,OAAO3hC,MAGTlR,EAAQg1C,cAAgBA,EAIxBh1C,EAAQic,MAAQ,SAAUg3B,EAASC,EAASC,EAAMC,EAAa6B,QACzC,IAAhBA,IAAwBA,EAAcl5B,SAC1C,IAAIi7B,EAAO,IAAIhC,EAAchC,EAAKC,EAASC,EAASC,EAAMC,GAAc6B,GACxE,OAAOj1C,EAAQy2C,oBAAoBvD,GAAW8D,EAC5CA,EAAKrF,OAAO/yB,MAAK,SAAU8S,GAC3B,OAAOA,EAAOkgB,KAAOlgB,EAAOvwB,MAAQ61C,EAAKrF,WAgK7CoD,EAAsBD,GACtBA,EAAG/B,GAAqB,YAMxB+B,EAAGlC,GAAkB,WACnB,OAAO1hC,MAGT4jC,EAAG3H,SAAW,WACZ,MAAO,sBAsCTntC,EAAQ0X,KAAO,SAAU9V,GACvB,IAAI8V,EAAO,GAEX,IAAK,IAAIjW,KAAOG,EACd8V,EAAK5F,KAAKrQ,GAMZ,OAHAiW,EAAKu/B,UAGE,SAAStF,IACd,KAAOj6B,EAAK5H,QAAQ,CAClB,IAAIrO,EAAMiW,EAAK8K,MAEf,GAAI/gB,KAAOG,EAGT,OAFA+vC,EAAKxwC,MAAQM,EACbkwC,EAAKC,MAAO,EACLD,EAQX,OADAA,EAAKC,MAAO,EACLD,IA0CX3xC,EAAQ0O,OAASA,EASjB8kC,EAAQ1xC,UAAY,CAClBiwC,YAAayB,EACb4C,MAAO,SAAUc,GAYf,GAXAhmC,KAAKimC,KAAO,EACZjmC,KAAKygC,KAAO,EAGZzgC,KAAK+iC,KAAO/iC,KAAKgjC,WA9ejBzwC,EA+eAyN,KAAK0gC,MAAO,EACZ1gC,KAAK2iC,SAAW,KAChB3iC,KAAKwiC,OAAS,OACdxiC,KAAKyiC,SAlfLlwC,EAmfAyN,KAAK+kC,WAAWpoC,QAAQqoC,IAEnBgB,EACH,IAAK,IAAIz2C,KAAQyQ,KAEQ,MAAnBzQ,EAAK22C,OAAO,IAAc1E,EAAOryC,KAAK6Q,KAAMzQ,KAAU81C,OAAO91C,EAAKiR,MAAM,MAC1ER,KAAKzQ,QAzfXgD,IA8fFwR,KAAM,WACJ/D,KAAK0gC,MAAO,EACZ,IACIyF,EADYnmC,KAAK+kC,WAAW,GACLE,WAE3B,GAAwB,UAApBkB,EAAWhpC,KACb,MAAMgpC,EAAW1D,IAGnB,OAAOziC,KAAKomC,MAEdnD,kBAAmB,SAAUoD,GAC3B,GAAIrmC,KAAK0gC,KACP,MAAM2F,EAGR,IAAIj0C,EAAU4N,KAEd,SAASsmC,EAAOC,EAAKC,GAYnB,OAXArD,EAAOhmC,KAAO,QACdgmC,EAAOV,IAAM4D,EACbj0C,EAAQquC,KAAO8F,EAEXC,IAGFp0C,EAAQowC,OAAS,OACjBpwC,EAAQqwC,SAzhBZlwC,KA4hBWi0C,EAGX,IAAK,IAAIx3C,EAAIgR,KAAK+kC,WAAWnmC,OAAS,EAAG5P,GAAK,IAAKA,EAAG,CACpD,IAAI01C,EAAQ1kC,KAAK+kC,WAAW/1C,GACxBm0C,EAASuB,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAO2B,EAAO,OAGhB,GAAI5B,EAAMC,QAAU3kC,KAAKimC,KAAM,CAC7B,IAAIQ,EAAWjF,EAAOryC,KAAKu1C,EAAO,YAC9BgC,EAAalF,EAAOryC,KAAKu1C,EAAO,cAEpC,GAAI+B,GAAYC,EAAY,CAC1B,GAAI1mC,KAAKimC,KAAOvB,EAAME,SACpB,OAAO0B,EAAO5B,EAAME,UAAU,GACzB,GAAI5kC,KAAKimC,KAAOvB,EAAMG,WAC3B,OAAOyB,EAAO5B,EAAMG,iBAEjB,GAAI4B,GACT,GAAIzmC,KAAKimC,KAAOvB,EAAME,SACpB,OAAO0B,EAAO5B,EAAME,UAAU,OAE3B,KAAI8B,EAKT,MAAM,IAAIvzC,MAAM,0CAJhB,GAAI6M,KAAKimC,KAAOvB,EAAMG,WACpB,OAAOyB,EAAO5B,EAAMG,gBAQ9B3B,OAAQ,SAAU/lC,EAAMslC,GACtB,IAAK,IAAIzzC,EAAIgR,KAAK+kC,WAAWnmC,OAAS,EAAG5P,GAAK,IAAKA,EAAG,CACpD,IAAI01C,EAAQ1kC,KAAK+kC,WAAW/1C,GAE5B,GAAI01C,EAAMC,QAAU3kC,KAAKimC,MAAQzE,EAAOryC,KAAKu1C,EAAO,eAAiB1kC,KAAKimC,KAAOvB,EAAMG,WAAY,CACjG,IAAI8B,EAAejC,EACnB,OAIAiC,IAA0B,UAATxpC,GAA6B,aAATA,IAAwBwpC,EAAahC,QAAUlC,GAAOA,GAAOkE,EAAa9B,aAGjH8B,EAAe,MAGjB,IAAIxD,EAASwD,EAAeA,EAAa1B,WAAa,GAItD,OAHA9B,EAAOhmC,KAAOA,EACdgmC,EAAOV,IAAMA,EAETkE,GACF3mC,KAAKwiC,OAAS,OACdxiC,KAAKygC,KAAOkG,EAAa9B,WAClB/B,GAGF9iC,KAAK4+B,SAASuE,IAEvBvE,SAAU,SAAUuE,EAAQ2B,GAC1B,GAAoB,UAAhB3B,EAAOhmC,KACT,MAAMgmC,EAAOV,IAaf,MAVoB,UAAhBU,EAAOhmC,MAAoC,aAAhBgmC,EAAOhmC,KACpC6C,KAAKygC,KAAO0C,EAAOV,IACM,WAAhBU,EAAOhmC,MAChB6C,KAAKomC,KAAOpmC,KAAKyiC,IAAMU,EAAOV,IAC9BziC,KAAKwiC,OAAS,SACdxiC,KAAKygC,KAAO,OACa,WAAhB0C,EAAOhmC,MAAqB2nC,IACrC9kC,KAAKygC,KAAOqE,GAGPhC,GAET8D,OAAQ,SAAU/B,GAChB,IAAK,IAAI71C,EAAIgR,KAAK+kC,WAAWnmC,OAAS,EAAG5P,GAAK,IAAKA,EAAG,CACpD,IAAI01C,EAAQ1kC,KAAK+kC,WAAW/1C,GAE5B,GAAI01C,EAAMG,aAAeA,EAGvB,OAFA7kC,KAAK4+B,SAAS8F,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACP5B,IAIb,MAAS,SAAU6B,GACjB,IAAK,IAAI31C,EAAIgR,KAAK+kC,WAAWnmC,OAAS,EAAG5P,GAAK,IAAKA,EAAG,CACpD,IAAI01C,EAAQ1kC,KAAK+kC,WAAW/1C,GAE5B,GAAI01C,EAAMC,SAAWA,EAAQ,CAC3B,IAAIxB,EAASuB,EAAMO,WAEnB,GAAoB,UAAhB9B,EAAOhmC,KAAkB,CAC3B,IAAI0pC,EAAS1D,EAAOV,IACpBuC,EAAcN,GAGhB,OAAOmC,GAMX,MAAM,IAAI1zC,MAAM,0BAElB2zC,cAAe,SAAU3B,EAAUb,EAAYC,GAa7C,OAZAvkC,KAAK2iC,SAAW,CACdviC,SAAU5C,EAAO2nC,GACjBb,WAAYA,EACZC,QAASA,GAGS,SAAhBvkC,KAAKwiC,SAGPxiC,KAAKyiC,SAxpBPlwC,GA2pBOuwC,IAOJh0C,EAvqBK,CA4qBeC,EAAOD,SAEpC,IACEi4C,mBAAqBzF,EACrB,MAAO0F,GAUPC,SAAS,IAAK,yBAAdA,CAAwC3F,K,uDChrBtC4F,EAAgB,SAAU53C,EAAG21B,GAS/B,OARAiiB,EAAgBx3C,OAAOi2C,gBAAkB,CACvCC,UAAW,cACAx0B,OAAS,SAAU9hB,EAAG21B,GACjC31B,EAAEs2C,UAAY3gB,IACX,SAAU31B,EAAG21B,GAChB,IAAK,IAAIn0B,KAAKm0B,EAAOA,EAAEp0B,eAAeC,KAAIxB,EAAEwB,GAAKm0B,EAAEn0B,MAGhCxB,EAAG21B,IAGnB,SAASkiB,EAAU73C,EAAG21B,GAG3B,SAASmiB,IACPpnC,KAAK6gC,YAAcvxC,EAHrB43C,EAAc53C,EAAG21B,GAMjB31B,EAAEsB,UAAkB,OAANq0B,EAAav1B,OAAOY,OAAO20B,IAAMmiB,EAAGx2C,UAAYq0B,EAAEr0B,UAAW,IAAIw2C,GAyB1E,SAASC,EAAWC,EAAYxpC,EAAQvN,EAAKg3C,GAClD,IAEIj4C,EAFAD,EAAIm4C,UAAU5oC,OACd9O,EAAIT,EAAI,EAAIyO,EAAkB,OAATypC,EAAgBA,EAAO73C,OAAOoW,yBAAyBhI,EAAQvN,GAAOg3C,EAE/F,GAAuB,iBAAZE,SAAoD,mBAArBA,QAAQC,SAAyB53C,EAAI23C,QAAQC,SAASJ,EAAYxpC,EAAQvN,EAAKg3C,QAAW,IAAK,IAAIv4C,EAAIs4C,EAAW1oC,OAAS,EAAG5P,GAAK,EAAGA,KAASM,EAAIg4C,EAAWt4C,MAAIc,GAAKT,EAAI,EAAIC,EAAEQ,GAAKT,EAAI,EAAIC,EAAEwO,EAAQvN,EAAKT,GAAKR,EAAEwO,EAAQvN,KAAST,GAC/Q,OAAOT,EAAI,GAAKS,GAAKJ,OAAOC,eAAemO,EAAQvN,EAAKT,GAAIA,EAUvD,SAAS63C,EAAUphC,EAASqhC,EAAYC,EAAGxF,GAOhD,OAAO,IAAKwF,IAAMA,EAAIh9B,WAAU,SAAUC,EAASgD,GACjD,SAASg6B,EAAU73C,GACjB,IACE83C,EAAK1F,EAAU5B,KAAKxwC,IACpB,MAAO+3C,GACPl6B,EAAOk6B,IAIX,SAASC,EAASh4C,GAChB,IACE83C,EAAK1F,EAAiB,MAAEpyC,IACxB,MAAO+3C,GACPl6B,EAAOk6B,IAIX,SAASD,EAAKvnB,GAvBhB,IAAevwB,EAwBXuwB,EAAOkgB,KAAO51B,EAAQ0V,EAAOvwB,QAxBlBA,EAwBiCuwB,EAAOvwB,MAvB9CA,aAAiB43C,EAAI53C,EAAQ,IAAI43C,GAAE,SAAU/8B,GAClDA,EAAQ7a,OAsBkDyd,KAAKo6B,EAAWG,GAG5EF,GAAM1F,EAAYA,EAAU5f,MAAMlc,EAASqhC,GAAc,KAAKnH,WAG3D,SAASyH,EAAY3hC,EAAS4hC,GACnC,IASIC,EACA/iC,EACAnV,EACAm4C,EAZA9O,EAAI,CACN+O,MAAO,EACPvF,KAAM,WACJ,GAAW,EAAP7yC,EAAE,GAAQ,MAAMA,EAAE,GACtB,OAAOA,EAAE,IAEXq4C,KAAM,GACNC,IAAK,IAMP,OAAOH,EAAI,CACT5H,KAAMgI,EAAK,GACX,MAASA,EAAK,GACd,OAAUA,EAAK,IACI,mBAAX14C,SAA0Bs4C,EAAEt4C,OAAOqQ,UAAY,WACvD,OAAOJ,OACLqoC,EAEJ,SAASI,EAAKh4C,GACZ,OAAO,SAAUi4C,GACf,OAIJ,SAAcC,GACZ,GAAIP,EAAG,MAAM,IAAIj7B,UAAU,mCAE3B,KAAOosB,GAAG,IACR,GAAI6O,EAAI,EAAG/iC,IAAMnV,EAAY,EAARy4C,EAAG,GAAStjC,EAAU,OAAIsjC,EAAG,GAAKtjC,EAAS,SAAOnV,EAAImV,EAAU,SAAMnV,EAAEf,KAAKkW,GAAI,GAAKA,EAAEo7B,SAAWvwC,EAAIA,EAAEf,KAAKkW,EAAGsjC,EAAG,KAAKjI,KAAM,OAAOxwC,EAG3J,OAFImV,EAAI,EAAGnV,IAAGy4C,EAAK,CAAS,EAARA,EAAG,GAAQz4C,EAAED,QAEzB04C,EAAG,IACT,KAAK,EACL,KAAK,EACHz4C,EAAIy4C,EACJ,MAEF,KAAK,EAEH,OADApP,EAAE+O,QACK,CACLr4C,MAAO04C,EAAG,GACVjI,MAAM,GAGV,KAAK,EACHnH,EAAE+O,QACFjjC,EAAIsjC,EAAG,GACPA,EAAK,CAAC,GACN,SAEF,KAAK,EACHA,EAAKpP,EAAEiP,IAAIl3B,MAEXioB,EAAEgP,KAAKj3B,MAEP,SAEF,QACE,KAAMphB,EAAIqpC,EAAEgP,MAAMr4C,EAAIA,EAAE0O,OAAS,GAAK1O,EAAEA,EAAE0O,OAAS,KAAkB,IAAV+pC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CACtFpP,EAAI,EACJ,SAGF,GAAc,IAAVoP,EAAG,MAAcz4C,GAAKy4C,EAAG,GAAKz4C,EAAE,IAAMy4C,EAAG,GAAKz4C,EAAE,IAAK,CACvDqpC,EAAE+O,MAAQK,EAAG,GACb,MAGF,GAAc,IAAVA,EAAG,IAAYpP,EAAE+O,MAAQp4C,EAAE,GAAI,CACjCqpC,EAAE+O,MAAQp4C,EAAE,GACZA,EAAIy4C,EACJ,MAGF,GAAIz4C,GAAKqpC,EAAE+O,MAAQp4C,EAAE,GAAI,CACvBqpC,EAAE+O,MAAQp4C,EAAE,GAEZqpC,EAAEiP,IAAI5nC,KAAK+nC,GAEX,MAGEz4C,EAAE,IAAIqpC,EAAEiP,IAAIl3B,MAEhBioB,EAAEgP,KAAKj3B,MAEP,SAGJq3B,EAAKR,EAAKh5C,KAAKoX,EAASgzB,GACxB,MAAOyO,GACPW,EAAK,CAAC,EAAGX,GACT3iC,EAAI,EACJ,QACA+iC,EAAIl4C,EAAI,EAGV,GAAY,EAARy4C,EAAG,GAAQ,MAAMA,EAAG,GACxB,MAAO,CACL14C,MAAO04C,EAAG,GAAKA,EAAG,QAAK,EACvBjI,MAAM,GAhFCqH,CAAK,CAACt3C,EAAGi4C,MAuFf,SAASE,EAASn5C,GACvB,IAAIsB,EAAsB,mBAAXhB,QAAyBA,OAAOqQ,SAC3ChR,EAAI2B,GAAKtB,EAAEsB,GACX/B,EAAI,EACR,GAAII,EAAG,OAAOA,EAAED,KAAKM,GACrB,GAAIA,GAAyB,iBAAbA,EAAEmP,OAAqB,MAAO,CAC5C6hC,KAAM,WAEJ,OADIhxC,GAAKT,GAAKS,EAAEmP,SAAQnP,OAAI,GACrB,CACLQ,MAAOR,GAAKA,EAAET,KACd0xC,MAAOjxC,KAIb,MAAM,IAAI0d,UAAUpc,EAAI,0BAA4B,mCAE/C,SAAS83C,EAAOp5C,EAAGgB,GACxB,IAAIrB,EAAsB,mBAAXW,QAAyBN,EAAEM,OAAOqQ,UACjD,IAAKhR,EAAG,OAAOK,EACf,IACIK,EAEAk4C,EAHAh5C,EAAII,EAAED,KAAKM,GAEXq5C,EAAK,GAGT,IACE,WAAc,IAANr4C,GAAgBA,KAAM,MAAQX,EAAId,EAAEyxC,QAAQC,MAAMoI,EAAGloC,KAAK9Q,EAAEG,OACpE,MAAO0rB,GACPqsB,EAAI,CACFrsB,MAAOA,GAET,QACA,IACM7rB,IAAMA,EAAE4wC,OAAStxC,EAAIJ,EAAU,SAAII,EAAED,KAAKH,GAC9C,QACA,GAAIg5C,EAAG,MAAMA,EAAErsB,OAInB,OAAOmtB,EAEF,SAASC,IACd,IAAK,IAAID,EAAK,GAAI95C,EAAI,EAAGA,EAAIw4C,UAAU5oC,OAAQ5P,IAAK85C,EAAKA,EAAGtK,OAAOqK,EAAOrB,UAAUx4C,KAEpF,OAAO85C,EC7PF,SAASE,EAAOC,EAAWttB,GAChC,IAAKstB,EACH,MAAM,IAAI91C,MAAMwoB,GAOb,SAASutB,EAAYj5C,EAAOk5C,EAAKC,GAKtC,QAJY,IAARA,IACFA,EAAMC,OAGFF,GAAOl5C,GAASA,GAASm5C,GAC7B,MAAM,IAAIvlC,WAAW,yBAA2BslC,EAAM,KAAOC,EAAM,WAAan5C,GAO7E,SAASq5C,EAAqBl3C,GAE9BA,EAAQ0Z,WAA+B,YAAlB1Z,EAAQmb,OAChCg8B,EAAK,+FAOT,IAAIC,EAAgBC,QAYb,SAASC,IAGd,IAFA,IAAIxlB,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,GAAMgH,UAAUhH,GAGvBgJ,EAAcE,IAAIjnB,MAAM+mB,EAAeT,EAAS7kB,IAM3C,SAASqlB,IAGd,IAFA,IAAIrlB,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,GAAMgH,UAAUhH,GAGvBgJ,EAAcD,KAAK9mB,MAAM+mB,EAAeT,EAAS7kB,ICpE5C,SAASylB,EAAQlH,GACtB,YAAsB,IAARA,EAMT,SAASmH,EAAUnH,GACxB,OAAQkH,EAAQlH,GAMX,SAASoH,EAAWpH,GACzB,MAAsB,mBAARA,EAMT,SAASqH,EAASrH,GACvB,MAAsB,iBAARA,EAMT,SAASsH,EAAStH,GACvB,MAA+C,oBAAxC/yC,OAAOkB,UAAUqrC,SAAS9sC,KAAKszC,IAA8BA,EAAI5B,cAAgBnxC,OAMnF,SAASs6C,EAAUvH,GACxB,MAAsB,kBAARA,EAMT,SAASrG,EAAQqG,GACtB,OAAOrxB,MAAMgrB,QAAQqG,GAMhB,SAASwH,EAASxH,GACvB,MAAsB,iBAARA,EAOT,SAASyH,EAAOzH,GACrB,OAAOwH,EAASxH,IAAQ,sCAAsCjtB,KAAKitB,GCtD9D,SAAS0H,IACd,OAAO,IAAI,eAMN,SAASC,EAA0BC,EAAUzrC,EAAQ2I,GAC1D,OAAO,IAAI,sBAAuB8iC,EAAUzrC,EAAQ2I,GAO/C,IAAI+iC,EAA4B,iBAATrI,KAAoBA,KAAO,KAM9CsI,EAAkBD,IAAcA,EAAUz5C,eAAe,iBAAmBy5C,EAAUz5C,eAAe,uBCxBhH,IAAI25C,EAEJ,WACE,SAASA,EAAOlkC,EAAUnJ,EAAMstC,GAC9BzqC,KAAK0qC,UAAYpkC,EACjBtG,KAAK2qC,MAAQxtC,EACb6C,KAAK4qC,gBAAkBH,EAEvBzqC,KAAK6qC,eA+GP,OAxGAL,EAAO55C,UAAUk6C,cAAgB,WAC/B,IAAIhwB,EAAO,IAAIC,KAAK,CAEpB,kEAA2F,IAAvB/a,KAAK4qC,iBAAwBG,QAAQ,GAAK,oXAAqX,CACje5tC,KAAM,oBAEJ6tC,EAAU/vB,IAAIC,gBAAgBJ,GAC9BmwB,EAAS,IAAIC,OAAOF,GACxBC,EAAOjZ,UAAYhyB,KAAK0qC,UAAUl6C,KAAKwP,MACvCA,KAAKmrC,QAAUF,GAOjBT,EAAO55C,UAAUw6C,eAAiB,WAChC,IAAIC,EAAQrrC,KAEZA,KAAKsrC,SAAW3+B,YAAW,WACzB0+B,EAAMD,iBAENC,EAAMX,cACkB,IAAvB1qC,KAAK4qC,kBAOVJ,EAAO55C,UAAUi6C,aAAe,WAC9B,GAAmB,WAAf7qC,KAAK2qC,MACP,IACE3qC,KAAK8qC,gBACL,MAAO9C,GAEPhoC,KAAK2qC,MAAQ,UAEb3qC,KAAK6qC,mBAEiB,YAAf7qC,KAAK2qC,OACd3qC,KAAKorC,kBAQTZ,EAAO55C,UAAU26C,cAAgB,WAC3BvrC,KAAKsrC,WACPE,aAAaxrC,KAAKsrC,UAClBtrC,KAAKsrC,SAAW,GAGdtrC,KAAKmrC,UACPnrC,KAAKmrC,QAAQM,YAEbzrC,KAAKmrC,QAAQnZ,UAAY,OAI7BtiC,OAAOC,eAAe66C,EAAO55C,UAAW,iBAAkB,CAIxDf,IAAK,WACH,OAAOmQ,KAAK4qC,iBAEdzuC,IAAK,SAAUuvC,GACb1rC,KAAK4qC,gBAAkB5sC,KAAKwJ,IAAIkkC,EAAU,IAAM,OAE7B,WAAf1rC,KAAK2qC,OACP3qC,KAAKmrC,QAAQ5W,YAAYv2B,KAAKwJ,IAAe,IAAXkkC,EAAiB,KAGvD97C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe66C,EAAO55C,UAAW,OAAQ,CAI9Cf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUgB,GACb6C,KAAKurC,gBAELvrC,KAAK2qC,MAAQxtC,EAEb6C,KAAK6qC,gBAEPj7C,YAAY,EACZ4sB,cAAc,IAMhBguB,EAAO55C,UAAU+6C,QAAU,WACzB3rC,KAAKurC,iBAGAf,EArHT,GCDO,SAASoB,EAAanJ,GAC3B,OAAO,0BAAgBA,GAMlB,SAAShgC,EAAYggC,GAC1B,OAAO,yBAAeA,GAMjB,SAASoJ,EAAsBpJ,GACpC,OAAO,mCAAyBA,GAM3B,SAASqJ,EAAerJ,GAC7B,OAAO,4BAAkBA,GAMpB,SAASsJ,EAActJ,GAC5B,OAAOA,aAAer3B,YC3BxB,SAAS4gC,EAAOz7C,EAAKkyC,GACnB,MAAe,UAARlyC,GAAmBq7C,EAAanJ,IAAQhgC,EAAYggC,IAAQsJ,EAActJ,GAG5E,SAASwJ,EAAUnuC,GAKxB,IAJA,IAAIouC,EAAIC,EAEJC,EAAU,GAEL5L,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtC4L,EAAQ5L,EAAK,GAAKgH,UAAUhH,GAG9B,IAAK4L,EAAQxtC,OACX,OAAOd,EAGT,IAAI0c,EAAS4xB,EAAQC,QAErB,GAAItC,EAASjsC,IAAWisC,EAASvvB,GAC/B,IAAK,IAAIjqB,KAAOiqB,EACVwxB,EAAOz7C,EAAKiqB,EAAOjqB,IACrBuN,EAAOvN,GAAOiqB,EAAOjqB,GACZw5C,EAASvvB,EAAOjqB,KACpBuN,EAAOvN,IACVb,OAAO48C,OAAOxuC,IAASouC,EAAK,IAAO37C,GAAO,GAAI27C,IAGhDD,EAAUnuC,EAAOvN,GAAMiqB,EAAOjqB,KAE9Bb,OAAO48C,OAAOxuC,IAASquC,EAAK,IAAO57C,GAAOiqB,EAAOjqB,GAAM47C,IAM7D,OAAOF,EAAUxpB,WAAM,EAAQsmB,EAAS,CAACjrC,GAASsuC,IAe7C,SAASG,EAAqBC,EAAUC,EAAWjmC,EAAMkmC,GAC9D,IAAIR,OAES,IAAT1lC,IACFA,EAAO,IAGT,IAAImmC,EAAO,GACPzoB,EAAO9S,MAAMC,KAAKo7B,GAElB1C,EAAS7lB,EAAK,KAAOwoB,IAAWjF,QAAQ/qC,IAAIwnB,EAAK,GAAIwoB,KAElCh9C,OAAO8W,KAAK0d,EAAK,IAAIjU,MAAK,SAAU1f,GACvD,OAAOk3C,QAAQ/qC,IAAI8vC,EAAUj8C,QAK7B07C,EAAUU,IAAOT,EAAK,IAAOQ,GAAUxoB,EAAK,GAAIgoB,IAEhD1lC,EAAKtF,OAAOsF,EAAKomC,QAAQF,GAAS,GAElCxoB,EAAKmoB,UAIT,GAAoB,IAAhBnoB,EAAKtlB,QAAgBmrC,EAAS7lB,EAAK,IACrC+nB,EAAUU,EAAMzoB,EAAK,SAErB,IAAK,IAAIl1B,EAAI,EAAGA,EAAIwX,EAAK5H,OAAQ5P,IAC3B46C,EAAU1lB,EAAKl1B,MACjB29C,EAAKnmC,EAAKxX,IAAMk1B,EAAKl1B,IAK3B,OAAOi9C,EAAUO,EAAUG,GActB,SAASE,EAAWC,EAAOC,GAChC,OAAIpD,EAAQmD,GACHC,EAEAD,EAOJ,SAASE,EAAe1J,EAAK2J,GAMlC,OALAA,EAAKtwC,SAAQ,SAAUuwC,GACjBzF,QAAQ/qC,IAAI4mC,EAAK4J,WACZ5J,EAAI4J,MAGR5J;;;;;;GC7GT,IAAI,EAEJ,WACE,SAAS6J,IAQPntC,KAAKotC,OAAQ,EAQbptC,KAAKqtC,cAAe,EA2EtB,OApEAF,EAAKG,YAAc,WACjB,MAAO,IAgBTH,EAAKv8C,UAAU84C,IAAM,WAGnB,IAFA,IAAIxlB,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,GAAMgH,UAAUhH,IAKnBxgC,KAAKotC,OAAS9C,GAAatqC,KAAKi8B,aAAeqO,EAAUiD,mBAC3D7D,EAAIjnB,WAAM,EAAQsmB,EAAS,CAAC/oC,MAAOkkB,KAQvCipB,EAAKv8C,UAAU+6C,QAAU,WAEvB,OADA3rC,KAAKqtC,cAAe,EACbrtC,MAGTtQ,OAAOC,eAAew9C,EAAKv8C,UAAW,WAAY,CAMhDf,IAAK,WACH,OAAOmQ,KAAKqtC,cAEdz9C,YAAY,EACZ4sB,cAAc,IAShB2wB,EAAKv8C,UAAUqrC,SAAW,WACxB,OAAOj8B,KAAKzQ,MAOd49C,EAAKK,QC7Gc,SD8GZL,EA5FT,GETO,SAASM,EAAGzoB,EAAGC,GACpB,OAAOD,EAAIC,EANC,KAYP,SAASyoB,EAAI1oB,EAAGC,GACrB,OAAOwoB,EAAGzoB,EAAGC,IAAM0oB,EAAG3oB,EAAGC,GAMpB,SAAS2oB,EAAG5oB,EAAGC,GACpB,OAAOD,EApBK,KAoBSC,EAMhB,SAAS0oB,EAAG3oB,EAAGC,GACpB,OAAOjnB,KAAK6vC,IAAI7oB,EAAIC,GA3BR,KAiCP,SAAS6oB,EAAM79C,EAAOwX,EAAKD,GAChC,OAAOxJ,KAAKwJ,IAAIxJ,KAAKyJ,IAAIxX,EAAOuX,GAAMC,GC1BxC,IAAI,EAEJ,SAAUsmC,GAGR,SAASC,IACP,IAAI3C,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAEjCqrC,EAAM97C,KAAO,WAKb87C,EAAM4C,UAAY,GAClB,IAAIl8C,EAAUw6C,EAAqByB,EAASV,cAAe9F,UAAW,CAAC,WAGvE,OAFA6D,EAAM6C,OAASn8C,EAAQm8C,OACvB7C,EAAM8C,WAAap8C,EAAQo8C,WACpB9C,EAqaT,OAnbAlE,EAAU6G,EAAUD,GAiBpBC,EAASV,YAAc,WACrB,MAAO,CACLY,OAAQ7E,IACR8E,YAAY,IAIhBz+C,OAAOC,eAAeq+C,EAASp9C,UAAW,SAAU,CAIlDf,IAAK,WACH,OAAOmQ,KAAKiuC,UAAUrvC,QAExBhP,YAAY,EACZ4sB,cAAc,IAOhBwxB,EAASp9C,UAAU4L,IAAM,SAAUuG,GAKjC,GAHAimC,EAAOvB,QAAQ/qC,IAAIqG,EAAO,QAAS,+CACnCA,EAAMpF,KAAOoF,EAAMpF,KAAKywC,UAEpBpuC,KAAKmuC,YAAcnuC,KAAKpB,OAAQ,CAClC,IAAIyvC,EAAYruC,KAAKiuC,UAAUjuC,KAAKpB,OAAS,GAC7CoqC,EAAO0E,EAAI3qC,EAAMpF,KAAM0wC,EAAU1wC,MAAO,qEAExCqC,KAAKiuC,UAAUrtC,KAAKmC,OACf,CACL,IAAIrE,EAAQsB,KAAKsuC,QAAQvrC,EAAMpF,MAE/BqC,KAAKiuC,UAAU/sC,OAAOxC,EAAQ,EAAG,EAAGqE,GAItC,GAAI/C,KAAKpB,OAASoB,KAAKkuC,OAAQ,CAC7B,IAAIK,EAAOvuC,KAAKpB,OAASoB,KAAKkuC,OAE9BluC,KAAKiuC,UAAU/sC,OAAO,EAAGqtC,GAG3B,OAAOvuC,MASTguC,EAASp9C,UAAU49C,OAAS,SAAUzrC,GACpC,IAAIrE,EAAQsB,KAAKiuC,UAAUrB,QAAQ7pC,GAMnC,OAJe,IAAXrE,GACFsB,KAAKiuC,UAAU/sC,OAAOxC,EAAO,GAGxBsB,MAQTguC,EAASp9C,UAAUf,IAAM,SAAU8N,EAAM8wC,QACzB,IAAVA,IACFA,EAAQ,QAGV,IAAI/vC,EAAQsB,KAAKsuC,QAAQ3wC,EAAM8wC,GAE/B,OAAe,IAAX/vC,EACKsB,KAAKiuC,UAAUvvC,GAEf,MASXsvC,EAASp9C,UAAU89C,KAAO,WACxB,OAAO1uC,KAAKiuC,UAAU,IAOxBD,EAASp9C,UAAUy7C,MAAQ,WACzB,OAAOrsC,KAAKiuC,UAAU5B,SAQxB2B,EAASp9C,UAAU+9C,SAAW,SAAUhxC,EAAM8wC,QAC9B,IAAVA,IACFA,EAAQ,QAGV,IAAI/vC,EAAQsB,KAAKsuC,QAAQ3wC,EAAM8wC,GAE/B,OAAI/vC,EAAQ,EAAIsB,KAAKiuC,UAAUrvC,OACtBoB,KAAKiuC,UAAUvvC,EAAQ,GAEvB,MASXsvC,EAASp9C,UAAUg+C,UAAY,SAAUjxC,GACvC,IAAImjC,EAAM9gC,KAAKiuC,UAAUrvC,OAEzB,GAAIkiC,EAAM,GAAK9gC,KAAKiuC,UAAUnN,EAAM,GAAGnjC,KAAOA,EAC5C,OAAOqC,KAAKiuC,UAAUnN,EAAM,GAG9B,IAAIpiC,EAAQsB,KAAKsuC,QAAQ3wC,GAEzB,OAAIe,EAAQ,GAAK,EACRsB,KAAKiuC,UAAUvvC,EAAQ,GAEvB,MASXsvC,EAASp9C,UAAUi+C,OAAS,SAAUC,GACpC,GAAI9uC,KAAKiuC,UAAUrvC,OAAS,EAAG,CAC7B,IAAIF,EAAQsB,KAAKsuC,QAAQQ,GAEzB,GAAIpwC,GAAS,EACX,GAAIivC,EAAG3tC,KAAKiuC,UAAUvvC,GAAOf,KAAMmxC,GAAQ,CAEzC,IAAK,IAAI9/C,EAAI0P,EAAO1P,GAAK,GACnB2+C,EAAG3tC,KAAKiuC,UAAUj/C,GAAG2O,KAAMmxC,GADL9/C,IAExB0P,EAAQ1P,EAMZgR,KAAKiuC,UAAYjuC,KAAKiuC,UAAUztC,MAAM,EAAG9B,QAEzCsB,KAAKiuC,UAAYjuC,KAAKiuC,UAAUztC,MAAM,EAAG9B,EAAQ,QAGnDsB,KAAKiuC,UAAY,QAEgB,IAA1BjuC,KAAKiuC,UAAUrvC,QAEpB8uC,EAAI1tC,KAAKiuC,UAAU,GAAGtwC,KAAMmxC,KAC9B9uC,KAAKiuC,UAAY,IAIrB,OAAOjuC,MAQTguC,EAASp9C,UAAUm+C,aAAe,SAAUpxC,GAC1C,IAAIe,EAAQsB,KAAKsuC,QAAQ3wC,GAMzB,OAJIe,GAAS,IACXsB,KAAKiuC,UAAYjuC,KAAKiuC,UAAUztC,MAAM9B,EAAQ,IAGzCsB,MASTguC,EAASp9C,UAAUo+C,cAAgB,SAAUjsC,GAC3C,IAAIrE,EAAQsB,KAAKiuC,UAAUrB,QAAQ7pC,GAEnC,OAAIrE,EAAQ,EACHsB,KAAKiuC,UAAUvvC,EAAQ,GAEvB,MAWXsvC,EAASp9C,UAAU09C,QAAU,SAAU3wC,EAAM8wC,GAK3C,QAJc,IAAVA,IACFA,EAAQ,QAGoB,IAA1BzuC,KAAKiuC,UAAUrvC,OACjB,OAAQ,EAGV,IAAIqwC,EAAY,EACZnO,EAAM9gC,KAAKiuC,UAAUrvC,OACrBswC,EAAMpO,EAEV,GAAIA,EAAM,GAAK9gC,KAAKiuC,UAAUnN,EAAM,GAAG2N,IAAU9wC,EAC/C,OAAOmjC,EAAM,EAGf,KAAOmO,EAAYC,GAAK,CAEtB,IAAIC,EAAWnxC,KAAK0B,MAAMuvC,GAAaC,EAAMD,GAAa,GACtDG,EAAUpvC,KAAKiuC,UAAUkB,GACzBE,EAAYrvC,KAAKiuC,UAAUkB,EAAW,GAE1C,GAAIxB,EAAGyB,EAAQX,GAAQ9wC,GAAO,CAE5B,IAAK,IAAI3O,EAAImgD,EAAUngD,EAAIgR,KAAKiuC,UAAUrvC,OAAQ5P,IAAK,CAGrD,IAAI2+C,EAFY3tC,KAAKiuC,UAAUj/C,GAEdy/C,GAAQ9wC,GAGvB,MAFAwxC,EAAWngD,EAMf,OAAOmgD,EACF,GAAIvB,EAAGwB,EAAQX,GAAQ9wC,IAAS8vC,EAAG4B,EAAUZ,GAAQ9wC,GAC1D,OAAOwxC,EACE1B,EAAG2B,EAAQX,GAAQ9wC,GAE5BuxC,EAAMC,EAGNF,EAAYE,EAAW,EAI3B,OAAQ,GAQVnB,EAASp9C,UAAU0+C,SAAW,SAAUhpC,EAAUipC,EAAYC,QACzC,IAAfD,IACFA,EAAa,QAGI,IAAfC,IACFA,EAAaxvC,KAAKiuC,UAAUrvC,OAAS,GAGvCoB,KAAKiuC,UAAUztC,MAAM+uC,EAAYC,EAAa,GAAG7yC,QAAQ2J,IAQ3D0nC,EAASp9C,UAAU+L,QAAU,SAAU2J,GAGrC,OAFAtG,KAAKsvC,SAAShpC,GAEPtG,MASTguC,EAASp9C,UAAU6+C,cAAgB,SAAU9xC,EAAM2I,GAEjD,IAAIkpC,EAAaxvC,KAAKsuC,QAAQ3wC,GAM9B,OAJoB,IAAhB6xC,GACFxvC,KAAKsvC,SAAShpC,EAAU,EAAGkpC,GAGtBxvC,MASTguC,EAASp9C,UAAU8+C,aAAe,SAAU/xC,EAAM2I,GAEhD,IAAIipC,EAAavvC,KAAKsuC,QAAQ3wC,GAI9B,OAFAqC,KAAKsvC,SAAShpC,EAAUipC,EAAa,GAE9BvvC,MAYTguC,EAASp9C,UAAU++C,eAAiB,SAAUryC,EAAWL,EAASqJ,GAChE,IAAIipC,EAAavvC,KAAKsuC,QAAQhxC,GAE1BkyC,EAAaxvC,KAAKsuC,QAAQrxC,GAiB9B,OAfoB,IAAhBsyC,IAAqC,IAAhBC,GACnBxvC,KAAKiuC,UAAUsB,GAAY5xC,OAASL,IACtCiyC,GAAc,GAIZvvC,KAAKiuC,UAAUuB,GAAY7xC,OAASV,IACtCuyC,GAAc,GAGhBxvC,KAAKsvC,SAAShpC,EAAUipC,EAAYC,KACX,IAAhBD,GACTvvC,KAAKsvC,SAAShpC,EAAU,EAAGkpC,GAGtBxvC,MAUTguC,EAASp9C,UAAUg/C,YAAc,SAAUjyC,EAAM2I,GAK/C,IAHA,IAAIipC,EAAavvC,KAAKsuC,QAAQ3wC,GAGvB4xC,GAAc,GAAKvvC,KAAKiuC,UAAUsB,GAAY5xC,MAAQA,GAC3D4xC,IAKF,OAFAvvC,KAAKsvC,SAAShpC,EAAUipC,EAAa,GAE9BvvC,MASTguC,EAASp9C,UAAUi/C,cAAgB,SAAUlyC,EAAM2I,GAEjD,IAAIkpC,EAAaxvC,KAAKsuC,QAAQ3wC,GAE9B,IAAoB,IAAhB6xC,GAAqB7B,EAAG3tC,KAAKiuC,UAAUuB,GAAY7xC,KAAMA,GAAO,CAGlE,IAFA,IAAI4xC,EAAaC,EAERxgD,EAAIwgD,EAAYxgD,GAAK,GACxB2+C,EAAG3tC,KAAKiuC,UAAUj/C,GAAG2O,KAAMA,GADA3O,IAE7BugD,EAAavgD,EAMjBgR,KAAKsvC,UAAS,SAAUvsC,GACtBuD,EAASvD,KACRwsC,EAAYC,GAGjB,OAAOxvC,MAOTguC,EAASp9C,UAAU+6C,QAAU,WAI3B,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKiuC,UAAY,GACVjuC,MAGFguC,EApbT,CAqbE,GC5bE8B,EAAmB,GAKhB,SAASC,EAAcC,GAC5BF,EAAiBlvC,KAAKovC,GAgBxB,IAAIC,EAAqB,GAKlB,SAASC,EAAeF,GAC7BC,EAAmBrvC,KAAKovC,GCzB1B,IAAI,EAEJ,SAAUjC,GAGR,SAASoC,IACP,IAAI9E,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAGhE,OADAqrC,EAAM97C,KAAO,UACN87C,EAyIT,OA/IAlE,EAAUgJ,EAASpC,GAenBoC,EAAQv/C,UAAUw/C,GAAK,SAAUrtC,EAAOuD,GACtC,IAAI+kC,EAAQrrC,KAeZ,OAZa+C,EAAMstC,MAAM,OAClB1zC,SAAQ,SAAU2zC,GACnB3G,EAAQ0B,EAAMkF,WAChBlF,EAAMkF,QAAU,IAGblF,EAAMkF,QAAQ1/C,eAAey/C,KAChCjF,EAAMkF,QAAQD,GAAa,IAG7BjF,EAAMkF,QAAQD,GAAW1vC,KAAK0F,MAEzBtG,MASTmwC,EAAQv/C,UAAU4/C,KAAO,SAAUztC,EAAOuD,GACxC,IAAI+kC,EAAQrrC,KAERywC,EAAgB,WAGlB,IAFA,IAAIvsB,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,GAAMgH,UAAUhH,GAIvBl6B,EAASmc,WAAM,EAAQsmB,EAAS7kB,IAEhCmnB,EAAMqF,IAAI3tC,EAAO0tC,IAInB,OADAzwC,KAAKowC,GAAGrtC,EAAO0tC,GACRzwC,MAUTmwC,EAAQv/C,UAAU8/C,IAAM,SAAU3tC,EAAOuD,GACvC,IAAI+kC,EAAQrrC,KAsBZ,OApBa+C,EAAMstC,MAAM,OAClB1zC,SAAQ,SAAU2zC,GAKvB,GAJI3G,EAAQ0B,EAAMkF,WAChBlF,EAAMkF,QAAU,IAGdlF,EAAMkF,QAAQ1/C,eAAekS,GAC/B,GAAI4mC,EAAQrjC,GACV+kC,EAAMkF,QAAQxtC,GAAS,QAIvB,IAFA,IAAI4tC,EAAYtF,EAAMkF,QAAQxtC,GAErB/T,EAAI,EAAGA,EAAI2hD,EAAU/xC,OAAQ5P,IAChC2hD,EAAU3hD,KAAOsX,GACnBqqC,EAAUzvC,OAAOlS,EAAG,MAMvBgR,MAUTmwC,EAAQv/C,UAAUggD,KAAO,SAAU7tC,GAGjC,IAFA,IAAImhB,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,EAAK,GAAKgH,UAAUhH,GAG3B,GAAIxgC,KAAKuwC,SACHvwC,KAAKuwC,QAAQ1/C,eAAekS,GAG9B,IAFA,IAAI4tC,EAAY3wC,KAAKuwC,QAAQxtC,GAAOvC,MAAM,GAEjCxR,EAAI,EAAG8xC,EAAM6P,EAAU/xC,OAAQ5P,EAAI8xC,EAAK9xC,IAC/C2hD,EAAU3hD,GAAGyzB,MAAMziB,KAAMkkB,GAK/B,OAAOlkB,MAOTmwC,EAAQU,MAAQ,SAAUC,GAExB,CAAC,KAAM,OAAQ,MAAO,QAAQn0C,SAAQ,SAAUpN,GAC9C,IAAIoB,EAAWjB,OAAOoW,yBAAyBqqC,EAAQv/C,UAAWrB,GAClEG,OAAOC,eAAemhD,EAAOlgD,UAAWrB,EAAMoB,OAQlDw/C,EAAQv/C,UAAU+6C,QAAU,WAI1B,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuwC,aAAUh+C,EACRyN,MAGFmwC,EAhJT,CAiJE,GC1JE,GAEJ,SAAUpC,GAGR,SAASgD,IACP,IAAI1F,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAGhE,OADAqrC,EAAMv/B,WAAY,EACXu/B,EAGT,OATAlE,EAAU4J,EAAahD,GAShBgD,EAVT,CAWE,GCDE,GAEJ,SAAUhD,GAGR,SAASzL,IACP,IAAI+I,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAEjCqrC,EAAM97C,KAAO,UAKb87C,EAAM2F,WAAa,IAAIn9C,IAKvBw3C,EAAM4F,UAAY,IAAI,EAKtB5F,EAAM6F,YAAc,EAKpB7F,EAAM8F,cAAe,EAKrB9F,EAAMv/B,WAAY,EAQlBu/B,EAAM+F,gBAAkB,IAAIv9C,IAC5B,IAAI9B,EAAUw6C,EAAqBjK,EAAQgL,cAAe9F,UAAW,CAAC,YAmBtE,OAjBIz1C,EAAQK,QACVi5C,EAAM7T,SAAWzlC,EAAQK,QAEzBi5C,EAAM7T,SAAW2S,IAGnBkB,EAAMgG,aAAet/C,EAAQiU,YAC7BqlC,EAAMiG,UAAYv/C,EAAQu/C,UAC1BjG,EAAMkG,QAAU,IAAI/G,EAAOa,EAAMuF,KAAKpgD,KAAK66C,EAAO,QAASt5C,EAAQy/C,YAAaz/C,EAAQ04C,gBAExFY,EAAM+E,GAAG,OAAQ/E,EAAMoG,aAAajhD,KAAK66C,IAGzCA,EAAM7T,SAAS9V,cAAgB,WAC7B2pB,EAAMuF,KAAK,cAAevF,EAAM99B,QAG3B89B,EAqkBT,OA/nBAlE,EAAU7E,EAASyL,GA6DnBzL,EAAQgL,YAAc,WACpB,MAAO,CACLkE,YAAa,SACbxrC,YAAa,cACbsrC,UAAW,GACX7G,eAAgB,MAQpBnI,EAAQ1xC,UAAU8gD,WAAa,WHzE1B,IAA2BC,EGgF9B,OANK3xC,KAAKmxC,eH1EoBQ,EG4EV3xC,KH1EtB8vC,EAAiBnzC,SAAQ,SAAUqzC,GACjC,OAAOA,EAAG2B,MG0ER3xC,KAAKmxC,cAAe,GAGfnxC,MAMTsiC,EAAQ1xC,UAAU+sC,eAAiB,WACjC,OAAO39B,KAAKw3B,SAASmG,kBAGvB2E,EAAQ1xC,UAAU62B,iBAAmB,WACnC,OAAOznB,KAAKw3B,SAAS/P,oBAGvB6a,EAAQ1xC,UAAUigC,mBAAqB,WACrC,OAAO7wB,KAAKw3B,SAAS3G,sBAGvByR,EAAQ1xC,UAAU4yB,mBAAqB,WACrC,OAAOxjB,KAAKw3B,SAAShU,sBAGvB8e,EAAQ1xC,UAAUya,aAAe,SAAUJ,EAAkBrM,EAAQ2I,GACnE,OAAOvH,KAAKw3B,SAASnsB,aAAaJ,EAAkBrM,EAAQ2I,IAG9D+6B,EAAQ1xC,UAAU+yB,oBAAsB,SAAUvb,GAChD,OAAOpI,KAAKw3B,SAAS7T,oBAAoBvb,IAG3Ck6B,EAAQ1xC,UAAUgvC,sBAAwB,SAAU1tB,GAClD,OAAOlS,KAAKw3B,SAASoI,sBAAsB1tB,IAG7CowB,EAAQ1xC,UAAUizB,qBAAuB,WACvC,OAAO7jB,KAAKw3B,SAAS3T,wBAGvBye,EAAQ1xC,UAAUwzB,gBAAkB,WAClC,OAAOpkB,KAAKw3B,SAASpT,mBAGvBke,EAAQ1xC,UAAU6zB,YAAc,SAAUjR,GACxC,OAAOxT,KAAKw3B,SAAS/S,YAAYjR,IAGnC8uB,EAAQ1xC,UAAU+zB,yBAA2B,WAC3C,OAAO3kB,KAAKw3B,SAAS7S,4BAGvB2d,EAAQ1xC,UAAUi0B,WAAa,WAC7B,OAAO7kB,KAAKw3B,SAAS3S,cAGvByd,EAAQ1xC,UAAUutB,gBAAkB,SAAUyzB,EAAalrC,GAEzD,OAAO1G,KAAKw3B,SAASrZ,gBAAgByzB,EAAalrC,IAGpD47B,EAAQ1xC,UAAUk3B,aAAe,WAC/B,OAAO9nB,KAAKw3B,SAAS1P,gBAGvBwa,EAAQ1xC,UAAU84B,mBAAqB,SAAUjW,EAAMC,EAAMC,GAC3D,OAAO3T,KAAKw3B,SAAS9N,mBAAmBjW,EAAMC,EAAMC,IAGtD2uB,EAAQ1xC,UAAUq5B,mBAAqB,WACrC,OAAOjqB,KAAKw3B,SAASvN,sBAGvBqY,EAAQ1xC,UAAU27B,iBAAmB,WACnC,OAAOvsB,KAAKw3B,SAASjL,oBAGvB+V,EAAQ1xC,UAAUm2B,wBAA0B,SAAU/F,GAGpD,OAFAgoB,EAAO8C,EAAe9rC,KAAKw3B,UAAW,wCACxBx3B,KAAKw3B,SACJzQ,wBAAwB/F,IAGzCshB,EAAQ1xC,UAAU41B,6BAA+B,WAG/C,OAFAwiB,EAAO8C,EAAe9rC,KAAKw3B,UAAW,wCACxBx3B,KAAKw3B,SACJhR,gCAGjB8b,EAAQ1xC,UAAUoJ,gBAAkB,SAAU6Z,GAC5C,OAAO7T,KAAKw3B,SAASx9B,gBAAgB6Z,IAGvCnkB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,cAAe,CAItDf,IAAK,WACH,OAAOmQ,KAAKw3B,SAASxmB,aAEvBphB,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,QAAS,CAIhDf,IAAK,WACH,OAAOmQ,KAAKw3B,SAASjqB,OAEvB3d,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,aAAc,CAIrDf,IAAK,WACH,OAAOmQ,KAAKw3B,SAASjwB,YAEvB3X,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,WAAY,CAInDf,IAAK,WAEH,OADAmQ,KAAK0xC,aACE1xC,KAAKwhB,WAEdrlB,IAAK,SAAUlN,GACb+5C,GAAQhpC,KAAKmxC,aAAc,oDAC3BnxC,KAAKwhB,UAAYvyB,GAEnBW,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,YAAa,CAIpDf,IAAK,WAEH,OADAmQ,KAAK0xC,aACE1xC,KAAK6xC,YAEd11C,IAAK,SAAUjM,GACb84C,GAAQhpC,KAAKmxC,aAAc,qDAC3BnxC,KAAK6xC,WAAa3hD,GAEpBN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,OAAQ,CAI/Cf,IAAK,WAEH,OADAmQ,KAAK0xC,aACE1xC,KAAK8xC,OAEd31C,IAAK,SAAU7M,GACb05C,GAAQhpC,KAAKmxC,aAAc,4CAC3BnxC,KAAK8xC,MAAQxiD,GAEfM,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,cAAe,CAItDf,IAAK,WAEH,OADAmQ,KAAK0xC,aACE1xC,KAAKuhB,cAEdplB,IAAK,SAAU7M,GACb05C,GAAQhpC,KAAKmxC,aAAc,uDAC3BnxC,KAAKuhB,aAAejyB,GAEtBM,YAAY,EACZ4sB,cAAc,IAOhB8lB,EAAQ1xC,UAAUmhD,uBAAyB,SAAUxiD,EAAMwC,GACzD,OXjQG,SAAgCK,EAAS7C,EAAMwC,GAGpD,OAFAi3C,EAAOY,EAAU,oBAAsB,iEAEhC,IAAI,mBAAoBx3C,EAAS7C,EAAMwC,GW8PrCggD,CAAuB/xC,KAAKgyC,WAAYziD,EAAMwC,IASvDuwC,EAAQ1xC,UAAUkJ,sBAAwB,SAAUkhB,EAAKzrB,GACvD,OAAOo4C,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAOH,OANAU,EAAOY,EAAU5pC,KAAKgyC,WAAWjgB,cAAe,+EAE3C/xB,KAAKoxC,gBAAgB10C,IAAInN,IAC5ByQ,KAAKoxC,gBAAgBj1C,IAAI5M,EAAMyQ,KAAKgyC,WAAWjgB,aAAaze,UAAU0H,IAGjE,CAAC,EAENhb,KAAKoxC,gBAAgBvhD,IAAIN,IAE7B,KAAK,EAGH,OAFA28C,EAAGnJ,OAEI,CAAC,WAYlBT,EAAQ1xC,UAAUqhD,iBAAmB,WACnC,OAAOtK,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAIkyC,EACJ,OAAOhK,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAOH,OANA4J,EAAW,GAEXlyC,KAAKoxC,gBAAgBz0C,SAAQ,SAAUb,GACrC,OAAOo2C,EAAStxC,KAAK9E,MAGhB,CAAC,EAEN+O,QAAQyV,IAAI4xB,IAEhB,KAAK,EAGH,OAFAhG,EAAGnJ,OAEI,CAAC,WAQlBrzC,OAAOC,eAAe2yC,EAAQ1xC,UAAW,iBAAkB,CAWzDf,IAAK,WACH,OAAOmQ,KAAKuxC,QAAQ9G,gBAEtBtuC,IAAK,SAAUuvC,GACb1rC,KAAKuxC,QAAQ9G,eAAiBiB,GAEhC97C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,cAAe,CAKtDf,IAAK,WACH,OAAOmQ,KAAKuxC,QAAQp0C,MAEtBhB,IAAK,SAAUgB,GACb6C,KAAKuxC,QAAQp0C,KAAOA,GAEtBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,cAAe,CAYtDf,IAAK,WACH,OAAOmQ,KAAKqxC,cAEdl1C,IAAK,SAAUg2C,GACb,IAAIC,EAAiB,EAGrB,GAFApyC,KAAKqxC,aAAec,EAEhBlI,EAASkI,GACX,OAAQA,GACN,IAAK,cACHC,EAAiB,GACjB,MAEF,IAAK,WACHA,EAAiB,GACjB,MAEF,IAAK,WACHA,EAAiB,IACjB,MAEF,IAAK,UACHA,EAAiB,IAKvBpyC,KAAKsxC,UAAYc,EACjBpyC,KAAKyqC,eAAiB2H,EAAiB,GAEzCxiD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2yC,EAAQ1xC,UAAW,aAAc,CAIrDf,IAAK,WACH,OAAOmQ,KAAKw3B,UAEd5nC,YAAY,EACZ4sB,cAAc,IAMhB8lB,EAAQ1xC,UAAUyhD,IAAM,WACtB,OAAOryC,KAAKw3B,SAASxmB,YAAchR,KAAKsxC,WAW1ChP,EAAQ1xC,UAAU0hD,UAAY,WAC5B,OAAOtyC,KAAKw3B,SAASxmB,aAQvBsxB,EAAQ1xC,UAAUod,OAAS,WACzB,MAA4B,cAAxBhO,KAAKw3B,SAASjqB,OAAyBu+B,EAAe9rC,KAAKw3B,UACtDx3B,KAAKw3B,SAASxpB,SAEdnD,QAAQC,WASnBw3B,EAAQ1xC,UAAU6c,MAAQ,WACxB,OAAOk6B,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH,OAAKwD,EAAe9rC,KAAKw3B,UAGlB,CAAC,EAENx3B,KAAKw3B,SAAS/pB,SAL2B,CAAC,EAE1C,GAKJ,KAAK,EACHy+B,EAAGnJ,OAEHmJ,EAAG5D,MAAQ,EAEb,KAAK,EAKH,OAJItoC,KAAKmxC,eH5cQQ,EG6cF3xC,KH3czBiwC,EAAmBtzC,SAAQ,SAAUqzC,GACnC,OAAOA,EAAG2B,OG6cK,CAAC,GHhdb,IAAsBA,SG4d3BrP,EAAQ1xC,UAAU2hD,YAAc,SAAUC,GACxC,GAAIxyC,KAAKgxC,WAAWt0C,IAAI81C,GACtB,OAAOxyC,KAAKgxC,WAAWnhD,IAAI2iD,GAM3B,IAJA,IAAIz2C,EAASiE,KAAKw3B,SAASnsB,aAAa,EAAG,IAAKrL,KAAKw3B,SAASjwB,YAE1D24B,EAAMnkC,EAAOuH,eAAe,GAEvBtU,EAAI,EAAGA,EAAIkxC,EAAIthC,OAAQ5P,IAC9BkxC,EAAIlxC,GAAKwjD,EAGX,IAAIC,EAAWzyC,KAAKw3B,SAAS3G,qBAU7B,OARA4hB,EAAS3pC,aAAe,EACxB2pC,EAAS1pC,iBAAmB,WAC5B0pC,EAAS12C,OAASA,EAClB02C,EAASjnC,MAAO,EAChBinC,EAAS/uC,MAAM,GAEf1D,KAAKgxC,WAAW70C,IAAIq2C,EAAKC,GAElBA,GAQXnQ,EAAQ1xC,UAAU+6C,QAAU,WAC1B,IAAIN,EAAQrrC,KAWZ,OATA+tC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuxC,QAAQ5F,UAEb3rC,KAAKixC,UAAUtF,UAEfj8C,OAAO8W,KAAKxG,KAAKgxC,YAAY99C,KAAI,SAAUs/C,GACzC,OAAOnH,EAAM2F,WAAWwB,GAAK/+C,gBAExBuM,MAWTsiC,EAAQ1xC,UAAU6gD,aAAe,WAK/B,IAJA,IAAIY,EAAMryC,KAAKqyC,MAEXK,EAAa1yC,KAAKixC,UAAUvC,OAEzB1uC,KAAKixC,UAAUryC,QAAU8zC,GAAcA,EAAW/0C,MAAQ00C,GAE/DK,EAAWpsC,WAEXtG,KAAKixC,UAAU5E,QAGfqG,EAAa1yC,KAAKixC,UAAUvC,QAYhCpM,EAAQ1xC,UAAU+b,WAAa,SAAU2P,EAAIq2B,GAC3C3yC,KAAKkxC,cACL,IAAImB,EAAMryC,KAAKqyC,MAQf,OANAryC,KAAKixC,UAAUz0C,IAAI,CACjB8J,SAAUgW,EACVwK,GAAI9mB,KAAKkxC,YACTvzC,KAAM00C,EAAMM,IAGP3yC,KAAKkxC,aAQd5O,EAAQ1xC,UAAU46C,aAAe,SAAU1kB,GACzC,IAAIukB,EAAQrrC,KAQZ,OANAA,KAAKixC,UAAUt0C,SAAQ,SAAUoG,GAC3BA,EAAM+jB,KAAOA,GACfukB,EAAM4F,UAAUzC,OAAOzrC,MAIpB/C,MAOTsiC,EAAQ1xC,UAAUgiD,cAAgB,SAAU9rB,GAC1C,OAAO9mB,KAAKwrC,aAAa1kB,IAO3Bwb,EAAQ1xC,UAAUiiD,YAAc,SAAUv2B,EAAIovB,GAC5C,IAAIL,EAAQrrC,KAER8mB,IAAO9mB,KAAKkxC,YAEZ4B,EAAa,WACf,IAAIT,EAAMhH,EAAMgH,MAEhBhH,EAAM4F,UAAUz0C,IAAI,CAClB8J,SAAU,WAERgW,IAEAw2B,KAEFhsB,GAAIA,EACJnpB,KAAM00C,EAAM3G,KAMhB,OADAoH,IACOhsB,GAGFwb,EAhoBT,CAioBE,IC/oBE,GAEJ,SAAUyL,GAGR,SAASgF,IACP,IAAI1H,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAKhE,OAHAqrC,EAAMiG,UAAY,EAClBjG,EAAMrlC,YAAc,EACpBqlC,EAAMv/B,WAAY,EACXu/B,EAmMT,OA3MAlE,EAAU4L,EAAchF,GAcxBgF,EAAaniD,UAAU+sC,eAAiB,WACtC,MAAO,IAGToV,EAAaniD,UAAU62B,iBAAmB,WACxC,MAAO,IAGTsrB,EAAaniD,UAAUigC,mBAAqB,WAC1C,MAAO,IAGTkiB,EAAaniD,UAAU4yB,mBAAqB,WAC1C,MAAO,IAGTuvB,EAAaniD,UAAUya,aAAe,SAAU2nC,EAAmBhxB,EAASixB,GAC1E,MAAO,IAGTF,EAAaniD,UAAU+yB,oBAAsB,SAAUuvB,GACrD,MAAO,IAGTH,EAAaniD,UAAUgvC,sBAAwB,SAAUuT,GACvD,MAAO,IAGTJ,EAAaniD,UAAUizB,qBAAuB,WAC5C,MAAO,IAGTkvB,EAAaniD,UAAUwzB,gBAAkB,WACvC,MAAO,IAGT2uB,EAAaniD,UAAU6zB,YAAc,SAAU2uB,GAC7C,MAAO,IAGTL,EAAaniD,UAAU+zB,yBAA2B,WAChD,MAAO,IAGTouB,EAAaniD,UAAUi0B,WAAa,WAClC,MAAO,IAGTkuB,EAAaniD,UAAUutB,gBAAkB,SAAUk1B,EAAcC,GAC/D,MAAO,IAGTP,EAAaniD,UAAUk3B,aAAe,WACpC,MAAO,IAGTirB,EAAaniD,UAAU84B,mBAAqB,SAAU6pB,EAAOC,EAAOC,GAClE,MAAO,IAGTV,EAAaniD,UAAUq5B,mBAAqB,WAC1C,MAAO,IAGT8oB,EAAaniD,UAAU27B,iBAAmB,WACxC,MAAO,IAGTwmB,EAAaniD,UAAUm2B,wBAA0B,SAAU2sB,GACzD,MAAO,IAGTX,EAAaniD,UAAU41B,6BAA+B,WACpD,MAAO,IAGTusB,EAAaniD,UAAUoJ,gBAAkB,SAAU25C,GACjD,OAAO9oC,QAAQC,QAAQ,KAMzBioC,EAAaniD,UAAUmhD,uBAAyB,SAAU6B,EAAOC,GAC/D,MAAO,IAGTnkD,OAAOC,eAAeojD,EAAaniD,UAAW,aAAc,CAC1Df,IAAK,WACH,MAAO,IAETD,YAAY,EACZ4sB,cAAc,IAGhBu2B,EAAaniD,UAAUkJ,sBAAwB,SAAUg6C,EAAMF,GAC7D,OAAOjM,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENrhC,QAAQC,kBAKhBioC,EAAaniD,UAAUod,OAAS,WAC9B,OAAOnD,QAAQC,WAGjBioC,EAAaniD,UAAU+b,WAAa,SAAUonC,EAAKzI,GACjD,OAAO,GAGTyH,EAAaniD,UAAU46C,aAAe,SAAUwI,GAC9C,OAAOh0C,MAGT+yC,EAAaniD,UAAUiiD,YAAc,SAAUkB,EAAKE,GAClD,OAAO,GAGTlB,EAAaniD,UAAUgiD,cAAgB,SAAUoB,GAC/C,OAAOh0C,MAGT+yC,EAAaniD,UAAU2hD,YAAc,SAAU2B,GAC7C,MAAO,IAGTxkD,OAAOC,eAAeojD,EAAaniD,UAAW,cAAe,CAC3Df,IAAK,WACH,OAAO,GAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeojD,EAAaniD,UAAW,QAAS,CACrDf,IAAK,WACH,MAAO,IAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeojD,EAAaniD,UAAW,aAAc,CAC1Df,IAAK,WACH,OAAO,GAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeojD,EAAaniD,UAAW,WAAY,CACxDf,IAAK,WACH,MAAO,IAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeojD,EAAaniD,UAAW,YAAa,CACzDf,IAAK,WACH,MAAO,IAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeojD,EAAaniD,UAAW,OAAQ,CACpDf,IAAK,WACH,MAAO,IAETsM,IAAK,SAAUkkC,KACfzwC,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeojD,EAAaniD,UAAW,cAAe,CAC3Df,IAAK,WACH,MAAO,IAETsM,IAAK,SAAUkkC,KACfzwC,YAAY,EACZ4sB,cAAc,IAGhBu2B,EAAaniD,UAAUyhD,IAAM,WAC3B,OAAO,GAGTU,EAAaniD,UAAU0hD,UAAY,WACjC,OAAO,GAGFS,EA5MT,CA6ME,IC7MK,SAASoB,GAASr2C,EAAQnN,GAC3ByrC,EAAQzrC,GACVA,EAASgM,SAAQ,SAAUy3C,GACzB,OAAOD,GAASr2C,EAAQs2C,MAG1B1kD,OAAOC,eAAemO,EAAQnN,EAAU,CACtCf,YAAY,EACZuxC,UAAU,IAQT,SAASA,GAASrjC,EAAQnN,GAC3ByrC,EAAQzrC,GACVA,EAASgM,SAAQ,SAAUy3C,GACzB,OAAOjT,GAASrjC,EAAQs2C,MAG1B1kD,OAAOC,eAAemO,EAAQnN,EAAU,CACtCwwC,UAAU,IAIT,IAAIkT,GAAO,aCVd,GAEJ,SAAUtG,GAGR,SAASuG,IACP,IAAIjJ,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAEjCqrC,EAAM97C,KAAO,kBAKb87C,EAAMvvB,OAASu4B,GACf,IAAItiD,EAAUw6C,EAAqB+H,EAAgBhH,cAAe9F,UAAW,CAAC,MAAO,SAAU,YAW/F,OAVA6D,EAAMtF,QAAUh0C,EAAQg0C,QACxBsF,EAAMvvB,OAAS/pB,EAAQ+pB,OAEnB/pB,EAAQipB,KAAO+wB,EAAch6C,EAAQipB,MAAQjpB,EAAQipB,eAAes5B,EACtEjJ,EAAMlvC,IAAIpK,EAAQipB,KACTivB,EAASl4C,EAAQipB,MAE1BqwB,EAAMkJ,KAAKxiD,EAAQipB,KAAKhf,MAAMjK,EAAQqpB,SAGjCiwB,EAggBT,OAthBAlE,EAAUmN,EAAiBvG,GAyB3BuG,EAAgBhH,YAAc,WAC5B,MAAO,CACLlyB,QAASi5B,GACTv4B,OAAQu4B,GACRtO,SAAS,IAIbr2C,OAAOC,eAAe2kD,EAAgB1jD,UAAW,aAAc,CAI7Df,IAAK,WACH,OAAImQ,KAAKw0C,QACAx0C,KAAKw0C,QAAQjtC,WAEbktC,KAAaltC,YAGxB3X,YAAY,EACZ4sB,cAAc,IAMhB83B,EAAgB1jD,UAAUuL,IAAM,SAAUJ,GACxC,IAAIsvC,EAAQrrC,KAuBZ,OArBIjE,aAAkBu4C,EAEhBv4C,EAAO24C,OACT10C,KAAKw0C,QAAUz4C,EAAOlM,MAGtBkM,EAAO+f,OAAS,WACduvB,EAAMlvC,IAAIJ,GAEVsvC,EAAMvvB,OAAOuvB,IAIjBrrC,KAAKw0C,QAAUz4C,EAIbiE,KAAK20C,WACP30C,KAAK40C,WAGA50C,MAOTs0C,EAAgB1jD,UAAUf,IAAM,WAC9B,OAAOmQ,KAAKw0C,SAUdF,EAAgB1jD,UAAU2jD,KAAO,SAAUv5B,GACzC,OAAO2sB,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAI60C,EAAan2C,EAEb2sC,EAAQrrC,KAEZ,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACHuM,EAAcP,EAAgBC,KAAKv5B,GAAKtN,MAAK,SAAUrK,GACrDgoC,EAAMlvC,IAAIkH,GAGVgoC,EAAMvvB,OAAOuvB,MAEfiJ,EAAgBQ,UAAUl0C,KAAKi0C,GAC/B3I,EAAG5D,MAAQ,EAEb,KAAK,EAGH,OAFA4D,EAAG3D,KAAK3nC,KAAK,CAAC,EAAE,CAAE,EAAG,IAEd,CAAC,EAENi0C,GAEJ,KAAK,EAGH,OAFA3I,EAAGnJ,OAEI,CAAC,EAEN,GAEJ,KAAK,EAGH,OAFArkC,EAAQ41C,EAAgBQ,UAAUlI,QAAQiI,GAC1CP,EAAgBQ,UAAU5zC,OAAOxC,EAAO,GACjC,CAAC,GAIV,KAAK,EACH,MAAO,CAAC,EAENsB,cAUZs0C,EAAgB1jD,UAAU+6C,QAAU,WAIlC,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKw0C,aAAUjiD,EACRyN,MASTs0C,EAAgB1jD,UAAUmkD,UAAY,SAAUxvC,GAQ9C,IAPA,IAAIyvC,EAAqB5Y,EAAQ72B,IAAUA,EAAM,GAAG3G,OAAS,EACzDyrC,EAAW2K,EAAqBzvC,EAAM3G,OAAS,EAC/CkiC,EAAMkU,EAAqBzvC,EAAM,GAAG3G,OAAS2G,EAAM3G,OACnDxM,EAAUqiD,KACV14C,EAAS3J,EAAQiZ,aAAag/B,EAAUvJ,EAAK1uC,EAAQmV,YACrD0tC,EAAqBD,GAAmC,IAAb3K,EAA2B9kC,EAAV,CAACA,GAExDlW,EAAI,EAAGA,EAAIg7C,EAAUh7C,IAC5B0M,EAAOmI,cAAc+wC,EAAkB5lD,GAAIA,GAI7C,OADA2Q,KAAKw0C,QAAUz4C,EACRiE,MAQTs0C,EAAgB1jD,UAAUskD,OAAS,SAAUC,GAC3C,GAAIrL,EAASqL,GACXn1C,KAAK+0C,UAAU/0C,KAAKo1C,QAAQD,QACvB,CAIL,IAHA,IAAIE,EAAc,IAAIv0C,aAAad,KAAKpB,QACpC02C,EAAgBt1C,KAAKiL,iBAEhB1H,EAAU,EAAGA,EAAU+xC,EAAe/xC,IAG7C,IAFA,IAAIgyC,EAAev1C,KAAKo1C,QAAQ7xC,GAEvBvU,EAAI,EAAGA,EAAIumD,EAAa32C,OAAQ5P,IACvCqmD,EAAYrmD,IAAMumD,EAAavmD,GAKnCqmD,EAAcA,EAAYniD,KAAI,SAAUoiC,GACtC,OAAOA,EAASggB,KAElBt1C,KAAK+0C,UAAUM,GAGjB,OAAOr1C,MASTs0C,EAAgB1jD,UAAUwkD,QAAU,SAAU7xC,GAC5C,GAAIumC,EAASvmC,GACX,OAAOvD,KAAKsD,eAAeC,GACtB,GAA8B,IAA1BvD,KAAKiL,iBACd,OAAOjL,KAAKo1C,QAAQ,GAIpB,IAFA,IAAII,EAAM,GAEDnmD,EAAI,EAAGA,EAAI2Q,KAAKiL,iBAAkB5b,IACzCmmD,EAAInmD,GAAK2Q,KAAKsD,eAAejU,GAG/B,OAAOmmD,GAUXlB,EAAgB1jD,UAAU0S,eAAiB,SAAUC,GACnD,OAAIvD,KAAKw0C,QACAx0C,KAAKw0C,QAAQlxC,eAAeC,GAE5B,IAAIzC,aAAa,IAW5BwzC,EAAgB1jD,UAAU4P,MAAQ,SAAUkD,EAAOwrC,QACrC,IAARA,IACFA,EAAMlvC,KAAKvC,UAGb,IAAIg4C,EAAez3C,KAAK0B,MAAMgE,EAAQ1D,KAAKuH,YACvCmuC,EAAa13C,KAAK0B,MAAMwvC,EAAMlvC,KAAKuH,YACvCyhC,EAAOyM,EAAeC,EAAY,iDAIlC,IAHA,IAAI92C,EAAS82C,EAAaD,EACtBE,EAAYlB,KAAappC,aAAarL,KAAKiL,iBAAkBrM,EAAQoB,KAAKuH,YAErEhE,EAAU,EAAGA,EAAUvD,KAAKiL,iBAAkB1H,IACrDoyC,EAAUzxC,cAAclE,KAAKsD,eAAeC,GAASqyC,SAASH,EAAcC,GAAanyC,GAG3F,OAAO,IAAI+wC,EAAgBqB,IAO7BrB,EAAgB1jD,UAAUgkD,SAAW,WACnC,GAAI50C,KAAK00C,OACP,IAAK,IAAI1lD,EAAI,EAAGA,EAAIgR,KAAKiL,iBAAkBjc,IACzCgR,KAAKsD,eAAetU,GAAG+2C,UAI3B,OAAO/lC,MAGTtQ,OAAOC,eAAe2kD,EAAgB1jD,UAAW,SAAU,CAIzDf,IAAK,WACH,OAAOmQ,KAAKpB,OAAS,GAEvBhP,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2kD,EAAgB1jD,UAAW,WAAY,CAI3Df,IAAK,WACH,OAAImQ,KAAKw0C,QACAx0C,KAAKw0C,QAAQ/2C,SAEb,GAGX7N,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2kD,EAAgB1jD,UAAW,SAAU,CAIzDf,IAAK,WACH,OAAImQ,KAAKw0C,QACAx0C,KAAKw0C,QAAQ51C,OAEb,GAGXhP,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2kD,EAAgB1jD,UAAW,mBAAoB,CAInEf,IAAK,WACH,OAAImQ,KAAKw0C,QACAx0C,KAAKw0C,QAAQvpC,iBAEb,GAGXrb,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2kD,EAAgB1jD,UAAW,UAAW,CAI1Df,IAAK,WACH,OAAOmQ,KAAK20C,WAEdx4C,IAAK,SAAU05C,GACT71C,KAAK20C,YAAckB,IACrB71C,KAAK20C,UAAYkB,EAEjB71C,KAAK40C,aAGThlD,YAAY,EACZ4sB,cAAc,IAShB83B,EAAgBS,UAAY,SAAUxvC,GACpC,OAAO,IAAI+uC,GAAkBS,UAAUxvC,IASzC+uC,EAAgBwB,QAAU,SAAU96B,GAClC,OAAO2sB,EAAU3nC,UAAM,OAAQ,GAAQ,WAErC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAEH,MAAO,CAAC,GADC,IAAIgM,GAGJC,KAAKv5B,IAEhB,KAAK,EACH,MAAO,CAAC,EAENkxB,EAAGnJ,gBAUfuR,EAAgBC,KAAO,SAAUv5B,GAC/B,OAAO2sB,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAI+1C,EAASC,EAAYC,EAAWC,EAAcC,EAAgBC,EAAKC,EAAS35B,EAAUuX,EAEtFqiB,EAAKpK,EAET,OAAOhE,EAAYloC,MAAM,SAAUmsC,GACjC,OAAQA,EAAG7D,OACT,KAAK,EAGH,GAFAyN,EAAU/6B,EAAI8gB,MAAM,iBAEP,CACXka,EAAaD,EAAQ,GAAG1F,MAAM,KAC9B4F,EAAYD,EAAW,GAEvB,IACE,IAAKE,EAAetN,EAASoN,GAAaG,EAAiBD,EAAazV,QAAS0V,EAAezV,KAAMyV,EAAiBD,EAAazV,OAGlI,GAFA2V,EAAMD,EAAelmD,MAEjBqkD,EAAgBiC,aAAaH,GAAM,CACrCH,EAAYG,EACZ,OAGJ,MAAOI,GACPF,EAAM,CACJ36B,MAAO66B,GAET,QACA,IACML,IAAmBA,EAAezV,OAASwL,EAAKgK,EAAaO,SAASvK,EAAG/8C,KAAK+mD,GAClF,QACA,GAAII,EAAK,MAAMA,EAAI36B,OAIvBX,EAAMA,EAAI6gB,QAAQka,EAAQ,GAAIE,GAIhC,OADAI,EAAsC,KAA5B/B,EAAgB+B,SAAkB/B,EAAgB+B,QAAQK,SAAS,KAAOpC,EAAgB+B,QAAU/B,EAAgB+B,QAAU,IACjI,CAAC,EAEN15B,MAAM05B,EAAUr7B,IAEpB,KAAK,EAGH,KAFA0B,EAAWyvB,EAAGpJ,QAEAnmB,GACZ,MAAM,IAAIzpB,MAAM,uBAAyB6nB,GAG3C,MAAO,CAAC,EAEN0B,EAASuX,eAEb,KAAK,EAEH,OADAA,EAAckY,EAAGpJ,OACV,CAAC,EAEN0R,KAAaz6C,gBAAgBi6B,IAEjC,KAAK,EAEH,MAAO,CAAC,EADMkY,EAAGpJ,gBAmB3BuR,EAAgBiC,aAAe,SAAUv7B,GACvC,IAAIg7B,EAAah7B,EAAIq1B,MAAM,KACvB4F,EAAYD,EAAWA,EAAWp3C,OAAS,GAE/C,MAAoB,KADL+b,SAASE,cAAc,SAAS87B,YAAY,SAAWV,IAQxE3B,EAAgBI,OAAS,WACvB,OAAO/M,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAEH,MAAO,CAAC,EAENz9B,QAAQC,WAEZ,KAAK,EAEHohC,EAAGnJ,OAEHmJ,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAKgM,EAAgBQ,UAAUl2C,OAGxB,CAAC,EAEN01C,EAAgBQ,UAAU,IALkB,CAAC,EAE7C,GAKJ,KAAK,EAGH,OAFA5I,EAAGnJ,OAEI,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,WAelBuR,EAAgB+B,QAAU,GAK1B/B,EAAgBQ,UAAY,GACrBR,EAvhBT,CAwhBE,GCtiBE,GAEJ,SAAUvG,GAGR,SAAS6I,IACP,IAAIvL,EAAQ0C,EAAO5+C,KAAK6Q,KAAM,CAC5BwxC,YAAa,UACbp/C,QAASy5C,EAAsBrE,UAAU,IAAMA,UAAU,GAAK4C,EAA0B5C,UAAU,GAAIA,UAAU,GAAKA,UAAU,GAAIA,UAAU,IAC7I8J,UAAW,EACX7G,eAAgBoB,EAAsBrE,UAAU,IAAM,IAAMA,UAAU,GAAGjgC,WAAa,IAAMigC,UAAU,MAClGxnC,KAUN,OARAqrC,EAAM97C,KAAO,iBAKb87C,EAAMwL,aAAe,EACrBxL,EAAMv/B,WAAY,EAClBu/B,EAAMyL,UAAYjL,EAAsBrE,UAAU,IAAMA,UAAU,GAAG5oC,OAAS4oC,UAAU,GAAGjgC,WAAaigC,UAAU,GAC3G6D,EA4HT,OA9IAlE,EAAUyP,EAAgB7I,GAyB1B6I,EAAehmD,UAAUyhD,IAAM,WAC7B,OAAOryC,KAAK62C,cAGdnnD,OAAOC,eAAeinD,EAAehmD,UAAW,cAAe,CAI7Df,IAAK,WACH,OAAOmQ,KAAK62C,cAEdjnD,YAAY,EACZ4sB,cAAc,IAMhBo6B,EAAehmD,UAAUmmD,aAAe,SAAUC,GAChD,OAAOrP,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAItB,EAAOu4C,EACX,OAAO/O,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQ,EACRwtC,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAMtoC,KAAK82C,UAAY92C,KAAK62C,cAAgB,GAI5C72C,KAAK4wC,KAAK,QAEV5wC,KAAK62C,cAAgB,IAAM72C,KAAKuH,WAEhC7I,IACAu4C,EAAaj5C,KAAK0B,MAAMM,KAAKuH,WAAa,KACpCyvC,GAAgBt4C,EAAQu4C,GAAe,EAGtC,CAAC,EAEN,IAAIpsC,SAAQ,SAAU61B,GACtB,OAAO/zB,WAAW+zB,EAAM,OAN8B,CAAC,EAEvD,IAZqD,CAAC,EAEtD,GAiBJ,KAAK,EACHwL,EAAGnJ,OAEHmJ,EAAG5D,MAAQ,EAEb,KAAK,EACH,MAAO,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,WAalBsO,EAAehmD,UAAU8d,OAAS,SAAUsoC,GAK1C,YAJqB,IAAjBA,IACFA,GAAe,GAGVrP,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAIjE,EACJ,OAAOmsC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH,MAAO,CAAC,EAENtoC,KAAKiyC,oBAET,KAAK,EAGH,OAFA/F,EAAGnJ,OAEI,CAAC,EAEN/iC,KAAK+2C,aAAaC,IAEtB,KAAK,EAGH,OAFA9K,EAAGnJ,OAEI,CAAC,EAEN/iC,KAAKw3B,SAASl8B,kBAElB,KAAK,EAEH,OADAS,EAASmwC,EAAGnJ,OACL,CAAC,EAEN,IAAI,GAAgBhnC,YAUhC66C,EAAehmD,UAAU6c,MAAQ,WAC/B,OAAO5C,QAAQC,WAGV8rC,EA/IT,CAgJE,IClJEM,GAAe,IAAI,GAMnBC,GAAgBD,GAMb,SAASzC,KAKd,OAJI0C,KAAkBD,IAAgB3M,GACpC6M,GAAW,IAAI,IAGVD,GAOF,SAASC,GAAWhlD,GAEvB+kD,GADErL,EAAe15C,GACD,IAAI,GAAQA,GACnBy5C,EAAsBz5C,GACf,IAAI,GAAeA,GAEnBA,EAwBpB,GAAIk4C,IAAcA,EAAU+M,qBAAsB,CAChD,IAAIC,GAAS,IAET9J,EAIJ,IAAI+J,GAAc,cAAgBD,GAAhB,YAElB7N,QAAQC,IAAI,KAAO6N,GAAa,iCC7D3B,SAASC,GAASC,GACvB,OAAOz5C,KAAKqB,IAAI,GAAIo4C,EAAK,IAMpB,SAASC,GAASzuC,GACvB,OAAajL,KAAK0rC,IAAIzgC,GAAQjL,KAAK25C,KAA5B,GAWF,SAASC,GAAyBlM,GACvC,OAAO1tC,KAAKqB,IAAI,EAAGqsC,EAAW,IAOhC,IAAImM,GAAK,IAcF,SAASC,GAAK5jC,GACnB,OAAOlW,KAAK0J,MAMP,SAAewM,GACpB,OAAO,GAAK,GAAKlW,KAAK2J,KAAKuM,EAAY2jC,IAPrBE,CAAM7jC,IAiBnB,SAAS8jC,GAAKC,GACnB,OAAOJ,GAAK75C,KAAKqB,IAAI,GAAI44C,EAAO,IAAM,ICjExC,ICOI,GAEJ,SAAUlK,GAGR,SAASmK,IACP,IAAI7M,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAGhE,OADAqrC,EAAM97C,KAAO,YACN87C,EA6IT,OAnJAlE,EAAU+Q,EAAWnK,GASrBmK,EAAUtnD,UAAUunD,gBAAkB,WACpC,IAAI9M,EAAQrrC,KAEZ,OAAOtQ,OAAO48C,OAAOyB,EAAOn9C,UAAUunD,gBAAgBhpD,KAAK6Q,MAAO,CAChEqyC,IAAK,CACH7P,OAAQ,SAAU4V,GAChB,OAAO/M,EAAMgN,OAAS,IAAIhN,EAAMxK,YAAYwK,EAAMj5C,QAASgmD,GAAShK,WAEtEkK,OAAQ,WAEVC,SAAU,CACR/V,OAAQ,SAAU4V,GAChB,IAAII,EAAU,IAAIN,EAAU7M,EAAMj5C,QAASgmD,GAAShK,UACpD,OAAO/C,EAAMoN,gBAAgBpN,EAAMj5C,QAAQsmD,UAAUC,gBAAgBH,KAEvEF,OAAQ,aAgBdJ,EAAUtnD,UAAU2nD,SAAW,SAAUK,EAAQC,QAC/B,IAAZA,IACFA,EAAU,GAGZ,IAAIC,EAAc,IAAI94C,KAAK6gC,YAAY7gC,KAAK5N,QAASwmD,GAAQxK,UACzDn+C,EAAQ+P,KAAKouC,UAIjB,OAAOn+C,GAHQ+N,KAAK0J,MAAMzX,EAAQ6oD,GACXA,EACJ7oD,GACG4oD,GAexBX,EAAUtnD,UAAUmoD,WAAa,WAM/B,IALA,IAAI1N,EAAQrrC,KAERrC,EAAOqC,KAAKg5C,YACZC,EAAgB,CAAC,MAEZC,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtC,IAAIN,EAAS56C,KAAKqB,IAAI,EAAG65C,GACzBD,EAAcr4C,KAAKg4C,EAAS,MAC5BK,EAAcr4C,KAAKg4C,EAAS,KAC5BK,EAAcr4C,KAAKg4C,EAAS,KAG9BK,EAAcr4C,KAAK,KAEnB,IAAIu4C,EAAUF,EAAc,GACxBG,EAAiB,IAAIlB,EAAUl4C,KAAK5N,QAAS6mD,EAAc,IAAID,YASnE,OARAC,EAAct8C,SAAQ,SAAU08C,GAC9B,IAAIC,EAAkB,IAAIpB,EAAU7M,EAAMj5C,QAASinD,GAAUL,YAEzDh7C,KAAK6vC,IAAIyL,EAAkB37C,GAAQK,KAAK6vC,IAAIuL,EAAiBz7C,KAC/Dw7C,EAAUE,EACVD,EAAiBE,MAGdH,GAOTjB,EAAUtnD,UAAU2oD,sBAAwB,WAC1C,IAAIC,EAAcx5C,KAAKy5C,cAAc,GAEjCC,EAAW15C,KAAKouC,UAAYoL,EAChCE,EAAWC,WAAWD,EAAS3O,QAAQ,IACvC,IAAI6O,EAAW57C,KAAK0B,MAAMg6C,EAAW15C,KAAK65C,qBACtCC,EAAaJ,EAAW,EAAI,EAChCA,EAAW17C,KAAK0B,MAAMg6C,GAAY15C,KAAK65C,oBACvC,IAAIE,EAAkBD,EAAW7d,WAQjC,OANI8d,EAAgBn7C,OAAS,IAE3Bk7C,EAAaH,WAAWA,WAAWI,GAAiBhP,QAAQ,KAG/C,CAAC6O,EAAUF,EAAUI,GACpB5d,KAAK,MAOvBgc,EAAUtnD,UAAUopD,QAAU,WAC5B,IAAIR,EAAcx5C,KAAKy5C,cAAc,GAEjCC,EAAW15C,KAAKouC,UAAYoL,EAChC,OAAOx7C,KAAK0J,MAAMgyC,EAAW15C,KAAKi6C,YAOpC/B,EAAUtnD,UAAUooD,UAAY,WAC9B,OAAOh5C,KAAKouC,WAOd8J,EAAUtnD,UAAUspD,OAAS,WAC3B,OAAOpC,GAAK93C,KAAKm6C,gBAGnBjC,EAAUtnD,UAAUynD,KAAO,WACzB,OAAOr4C,KAAK5N,QAAQigD,OAGf6F,EApJT,CDPA,SAAUnK,GAUR,SAASqM,EAAchoD,EAASnC,EAAOoqD,GACrC,IAAIhP,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAWjC,OALAqrC,EAAMiP,aAAe,IACrBjP,EAAM6I,KAAOjkD,EACbo7C,EAAMkP,OAASF,EACfhP,EAAMj5C,QAAUA,EAChBi5C,EAAMmP,aAAenP,EAAM8M,kBACpB9M,EA6QT,OAlSAlE,EAAUiT,EAAerM,GA4BzBqM,EAAcxpD,UAAUunD,gBAAkB,WACxC,IAAI9M,EAAQrrC,KAEZ,MAAO,CACLy6C,GAAI,CACFjY,OAAQ,SAAUvyC,GAChB,OAAOo7C,EAAMqP,kBAAkBf,WAAW1pD,KAE5CqoD,OAAQ,wBAEVtpD,EAAG,CACDwzC,OAAQ,SAAUvyC,GAChB,OAAOo7C,EAAMsP,cAAcC,SAAS3qD,EAAO,MAE7CqoD,OAAQ,aAEVlpD,EAAG,CACDozC,OAAQ,SAAUvyC,GAChB,OAAOo7C,EAAMoO,cAAcmB,SAAS3qD,EAAO,IAAMo7C,EAAMwO,sBAEzDvB,OAAQ,aAEV7nD,EAAG,CACD+xC,OAAQ,SAAUvyC,EAAO4qD,GACvB,IAAIC,EAAeF,SAAS3qD,EAAO,IAC/B8qD,EAAiB,MAARF,EAAc,IAAM,EAEjC,OAAqB,IAAjBC,EACKzP,EAAMoO,cAAcpO,EAAMwO,qBAAuBkB,EAEjD1P,EAAMoO,cAAc,EAAIqB,GAAgBC,GAGnDzC,OAAQ,kBAEV0C,OAAQ,CACNxY,OAAQ,SAAUvyC,GAChB,OAAOo7C,EAAMmP,aAAanP,EAAMiP,cAAc9X,OAAOrzC,KAAKk8C,EAAOp7C,IAEnEqoD,OAAQ,qBAEVvnD,EAAG,CACDyxC,OAAQ,SAAUvyC,GAChB,OAAOo7C,EAAMoN,gBAAgBkB,WAAW1pD,KAE1CqoD,OAAQ,sBAEV2C,QAAS,CACPzY,OAAQ,SAAUvyC,GAChB,OAAO2qD,SAAS3qD,EAAO,IAAMo7C,EAAMj5C,QAAQmV,YAE7C+wC,OAAQ,kBAEVpoD,EAAG,CACDsyC,OAAQ,SAAUvyC,GAChB,IAAI6qD,EAAeF,SAAS3qD,EAAO,IACnC,OAAOo7C,EAAMoO,cAAc,GAAgC,EAA3Bz7C,KAAK0B,MAAMo7C,MAE7CxC,OAAQ,aAEV4C,GAAI,CACF1Y,OAAQ,SAAUpzC,EAAG+rD,EAAGpqD,GACtB,IAAIqqD,EAAQ,EAcZ,OAZIhsD,GAAW,MAANA,IACPgsD,GAAS/P,EAAMoO,cAAcpO,EAAMwO,oBAAsBF,WAAWvqD,KAGlE+rD,GAAW,MAANA,IACPC,GAAS/P,EAAMoO,cAAcE,WAAWwB,KAGtCpqD,GAAW,MAANA,IACPqqD,GAAS/P,EAAMoO,cAAcE,WAAW5oD,GAAK,IAGxCqqD,GAET9C,OAAQ,yDAYd8B,EAAcxpD,UAAUw9C,QAAU,WAKhC,GAJIpuC,KAAKk0C,gBAAgBkG,GACvBp6C,KAAKq7C,SAASr7C,KAAKk0C,MAGjBvK,EAAQ3pC,KAAKk0C,MACf,OAAOl0C,KAAKs7C,SACP,GAAIrR,EAASjqC,KAAKk0C,OAASvK,EAAQ3pC,KAAKu6C,SAC7C,IAAK,IAAIF,KAASr6C,KAAKw6C,aACrB,GAAIx6C,KAAKw6C,aAAaH,GAAO/B,OAAO9iC,KAAKxV,KAAKk0C,KAAK5W,QAAS,CAC1Dt9B,KAAKu6C,OAASF,EACd,YAGC,GAAItQ,EAAS/pC,KAAKk0C,MAAO,CAC9B,IAAIkH,EAAQ,EAEZ,IAAK,IAAIG,KAAYv7C,KAAKk0C,KACxB,GAAItK,EAAU5pC,KAAKk0C,KAAKqH,IAAY,CAClC,IAAIC,EAAWx7C,KAAKk0C,KAAKqH,GAGzBH,GADW,IAAIp7C,KAAK6gC,YAAY7gC,KAAK5N,QAASmpD,GAAUnN,UAAYoN,EAKxE,OAAOJ,EAGT,GAAIxR,EAAU5pC,KAAKu6C,QAAS,CAC1B,IAAIkB,EAAOz7C,KAAKw6C,aAAax6C,KAAKu6C,QAE9BmB,EAAW17C,KAAKk0C,KAAKjY,WAAWqB,OAAOxB,MAAM2f,EAAKnD,QAEtD,OAAIoD,EACKD,EAAKjZ,OAAO/f,MAAMziB,KAAM07C,EAASl7C,MAAM,IAEvCi7C,EAAKjZ,OAAOrzC,KAAK6Q,KAAMA,KAAKk0C,MAEhC,OAAIjK,EAASjqC,KAAKk0C,MAChByF,WAAW35C,KAAKk0C,MAEhBl0C,KAAKk0C,MAWhBkG,EAAcxpD,UAAU8pD,kBAAoB,SAAUiB,GACpD,OAAO,EAAIA,GAObvB,EAAcxpD,UAAU6oD,cAAgB,SAAUmC,GAChD,OAAO,GAAK57C,KAAK67C,UAAYD,GAO/BxB,EAAcxpD,UAAU6nD,gBAAkB,SAAUqD,GAClD,OAAOA,GAOT1B,EAAcxpD,UAAU+pD,cAAgB,SAAUoB,GAChD,OAAOA,EAAQ/7C,KAAKy5C,cAAc,GAAKz5C,KAAKi6C,WAO9CG,EAAcxpD,UAAU0qD,OAAS,WAC/B,OAAOt7C,KAAKq4C,QAUd+B,EAAcxpD,UAAUirD,QAAU,WAChC,OAAO77C,KAAK5N,QAAQsmD,UAAUsD,IAAI/rD,OAOpCmqD,EAAcxpD,UAAUipD,kBAAoB,WAC1C,OAAO75C,KAAK5N,QAAQsmD,UAAUuD,eAOhC7B,EAAcxpD,UAAUqpD,QAAU,WAChC,OAAOj6C,KAAK5N,QAAQsmD,UAAUwD,KAWhC9B,EAAcxpD,UAAUyqD,SAAW,SAAUl+C,GAG3C,OAFA6C,KAAKu6C,YAAShoD,EAENyN,KAAKs6C,cACX,IAAK,IACHt6C,KAAKk0C,KAAO/2C,EAAK67C,YACjB,MAEF,IAAK,IACHh5C,KAAKk0C,KAAO/2C,EAAK68C,UACjB,MAEF,IAAK,KACHh6C,KAAKk0C,KAAO/2C,EAAKg9C,cACjB,MAEF,IAAK,OACHn6C,KAAKk0C,KAAO/2C,EAAK+8C,SAIrB,OAAOl6C,MAOTo6C,EAAcxpD,UAAUupD,YAAc,WACpC,OAAO,EAAIn6C,KAAKg5C,aAOlBoB,EAAcxpD,UAAUurD,UAAY,WAClC,OAAOn8C,KAAKg5C,YAAch5C,KAAK5N,QAAQmV,YAOzC6yC,EAAcxpD,UAAUwrD,eAAiB,WACvC,OAA0B,IAAnBp8C,KAAKg5C,aAGPoB,EAnST,CAoSE,IE9RF,IAAI,GAEJ,SAAUrM,GAGR,SAASsO,IACP,IAAIhR,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAIhE,OAFAqrC,EAAM97C,KAAO,YACb87C,EAAMiP,aAAe,KACdjP,EAoNT,OA3NAlE,EAAUkV,EAAgBtO,GAU1Br+C,OAAOC,eAAe0sD,EAAgB,KAAM,CAK1CxsD,IAAK,WACH,OHOGgoD,IGLL17C,IAAK,SAAUw/C,IHOZ,SAAeA,GACpB9D,GAAK8D,EGPDW,CAAMX,IAER/rD,YAAY,EACZ4sB,cAAc,IAKhB6/B,EAAezrD,UAAUunD,gBAAkB,WACzC,OAAOzoD,OAAO48C,OAAO,GAAIyB,EAAOn9C,UAAUunD,gBAAgBhpD,KAAK6Q,MAAO,CACpEi4C,KAAM,CACJK,OAAQ,uBACR9V,OAAQ,SAAUvyC,GAChB,MAA0B,SAAtB+P,KAAKs6C,aACArqD,EAEAosD,EAAerE,KAAK/nD,KAIjCssD,KAAM,CACJjE,OAAQ,sCACR9V,OAAQ,SAAUga,EAAOC,GACvB,IACIC,EADQC,GAAiBH,EAAMI,eACmB,IAA5BhC,SAAS6B,EAAQ,IAAM,GAEjD,MAA0B,SAAtBz8C,KAAKs6C,aACAoC,EAEAL,EAAerE,KAAK0E,KAIjCxB,GAAI,CACF5C,OAAQ,qDACR9V,OAAQ,SAAUpzC,EAAG+rD,EAAGpqD,GACtB,IAAIqqD,EAAQ,EAcZ,OAZIhsD,GAAW,MAANA,IACPgsD,GAASp7C,KAAKy5C,cAAcz5C,KAAK65C,oBAAsBF,WAAWvqD,KAGhE+rD,GAAW,MAANA,IACPC,GAASp7C,KAAKy5C,cAAcE,WAAWwB,KAGrCpqD,GAAW,MAANA,IACPqqD,GAASp7C,KAAKy5C,cAAcE,WAAW5oD,GAAK,IAGvCqqD,OAgBfiB,EAAezrD,UAAUisD,UAAY,SAAUnR,GAC7C,OAAO,IAAI2Q,EAAer8C,KAAK5N,QAAS4N,KAAKouC,UAAYwJ,GAAyBlM,KAWpF2Q,EAAezrD,UAAUksD,UAAY,SAAUC,GAC7C,IAAI1R,EAAQrrC,KAEZ,OAAO+8C,EAAU7pD,KAAI,SAAUw4C,GAC7B,OAAOL,EAAMwR,UAAUnR,OAa3B2Q,EAAezrD,UAAUspD,OAAS,WAChC,OAAOpC,GAAK93C,KAAKouC,YASnBiO,EAAezrD,UAAUosD,OAAS,WAChC,IAAIrB,EAAO37C,KAAKm6C,cACZzQ,EAAM1rC,KAAK2J,KAAKg0C,EAAOU,EAAexE,IACtC6E,EAAa1+C,KAAK0J,MAAM,GAAKgiC,GAAO,GACpC+S,EAASz+C,KAAK0B,MAAMg9C,EAAa,IAOrC,OALID,EAAS,IACXC,IAAe,GAAKD,GAGPQ,GAAiBP,EAAa,IAC3BD,EAAOxgB,YAO3BogB,EAAezrD,UAAUooD,UAAY,WACnC,OAAO,EAAIjL,EAAOn9C,UAAUooD,UAAU7pD,KAAK6Q,OAO7Cq8C,EAAezrD,UAAUopD,QAAU,WACjC,IAAIR,EAAcx5C,KAAKy5C,cAAc,GAEjCC,EAAW15C,KAAKouC,UAAYoL,EAChC,OAAOx7C,KAAK0B,MAAMg6C,EAAW15C,KAAKi6C,YAUpCoC,EAAezrD,UAAU0qD,OAAS,WAChC,OAAO,GAOTe,EAAezrD,UAAU8pD,kBAAoB,SAAUiB,GACrD,OAAOA,GAOTU,EAAezrD,UAAU+pD,cAAgB,SAAUoB,GACjD,OAAO,GAAa,GAARA,GAAc/7C,KAAK67C,UAAY77C,KAAKi6C,aAOlDoC,EAAezrD,UAAU6oD,cAAgB,SAAUmC,GACjD,OAAO,EAAI7N,EAAOn9C,UAAU6oD,cAActqD,KAAK6Q,KAAM47C,IAOvDS,EAAezrD,UAAU6nD,gBAAkB,SAAUqD,GACnD,OAAO,EAAIA,GASbO,EAAerE,KAAO,SAAUC,GAC9B,OAAOD,GAAKC,IAQdoE,EAAevE,KAAO,SAAU5jC,GAC9B,OAAO4jC,GAAK5jC,IAGPmoC,EA5NT,CA6NE,IAWEM,GAAmB,CACrBO,KAAM,EACNlN,IAAK,EACL3gD,EAAG,EACH,KAAM,EACN8tD,GAAI,EACJC,IAAK,EACL3F,GAAI,EACJnoD,EAAG,EACH,KAAM,EACN+tD,GAAI,EACJC,IAAK,EACLC,GAAI,EACJvV,EAAG,EACH,KAAM,EACNwV,GAAI,EACJC,IAAK,EACLC,GAAI,EACJtV,EAAG,EACH,KAAM,EACNuV,GAAI,EACJC,IAAK,EACLC,GAAI,EACJxV,EAAG,EACH,KAAM,EACNyV,GAAI,EACJC,IAAK,EACLC,GAAI,EACJh5B,EAAG,EACH,KAAM,GACNi5B,GAAI,GACJC,IAAK,EACLC,GAAI,GACJl5B,EAAG,GACH,KAAM,GACNm5B,GAAI,IAOFnB,GAAmB,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KCxRpF,IAAI,GAEJ,SAAUlP,GAGR,SAASsQ,IACP,IAAIhT,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAGhE,OADAqrC,EAAM97C,KAAO,gBACN87C,EAWT,OAjBAlE,EAAUkX,EAAoBtQ,GAa9BsQ,EAAmBztD,UAAUynD,KAAO,WAClC,OAAOr4C,KAAK5N,QAAQsmD,UAAUoD,SAGzBuC,EAlBT,CAmBE,ICpBF,IAAI,GAEJ,SAAUtQ,GAGR,SAASuQ,IACP,IAAIjT,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAE7BjO,EAAUw6C,EAAqB+R,EAAgBhR,cAAe9F,UAAW,CAAC,YAQ9E,OANI6D,EAAMkT,eACRlT,EAAMj5C,QAAUi5C,EAAMkT,eAEtBlT,EAAMj5C,QAAUL,EAAQK,QAGnBi5C,EAyKT,OAtLAlE,EAAUmX,EAAiBvQ,GAgB3BuQ,EAAgBhR,YAAc,WAC5B,MAAO,CACLl7C,QAASqiD,OAYb6J,EAAgB1tD,UAAUyhD,IAAM,WAC9B,OAAOryC,KAAK5N,QAAQ4e,YAAchR,KAAK5N,QAAQk/C,WAWjDgN,EAAgB1tD,UAAU0hD,UAAY,WACpC,OAAOtyC,KAAK5N,QAAQ4e,aAGtBthB,OAAOC,eAAe2uD,EAAgB1tD,UAAW,aAAc,CAM7Df,IAAK,WACH,OAAO,EAAImQ,KAAK5N,QAAQmV,YAE1B3X,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe2uD,EAAgB1tD,UAAW,YAAa,CAM5Df,IAAK,WACH,OAAO,IAAMmQ,KAAK5N,QAAQmV,YAE5B3X,YAAY,EACZ4sB,cAAc,IAShB8hC,EAAgB1tD,UAAUooD,UAAY,SAAUr7C,GAC9C,OAAO,IAAI,GAAUqC,KAAK5N,QAASuL,GAAMq7C,aAU3CsF,EAAgB1tD,UAAUupD,YAAc,SAAUwB,GAChD,OAAO,IAAI,GAAe37C,KAAK5N,QAASupD,GAAMxB,eAUhDmE,EAAgB1tD,UAAUopD,QAAU,SAAUr8C,GAC5C,OAAO,IAAI,GAAmBqC,KAAK5N,QAASuL,GAAMq8C,WAUpDsE,EAAgB1tD,UAAU4tD,sBAAwB,SAAUtd,GAC1D,IAAInvC,EAAUiO,KAAKnQ,MAOnB,OALAH,OAAO8W,KAAKzU,GAAS4K,SAAQ,SAAUpN,GACjCo6C,EAAQzI,EAAM3xC,YACTwC,EAAQxC,MAGZwC,GAUTusD,EAAgB1tD,UAAUf,IAAM,WAC9B,IAAIw7C,EAAQrrC,KAERwsC,EAAmCxsC,KnB7CzB6gC,YAAYyM,cmB8D1B,OAhBA59C,OAAO8W,KAAKgmC,GAAU7vC,SAAQ,SAAU8hD,GACtC,GAAIhX,QAAQ/qC,IAAI2uC,EAAOoT,GAAY,CACjC,IAAIC,EAASrT,EAAMoT,GAEf7U,EAAU8U,IAAW9U,EAAU8U,EAAOzuD,QAAU25C,EAAU8U,EAAO3tC,gBACnEy7B,EAASiS,GAAaC,EAAOzuD,MACpByuD,aAAkBJ,EAC3B9R,EAASiS,GAAaC,EAAOF,sBAAsBhS,EAASiS,IACnDriB,EAAQsiB,IAAW5U,EAAS4U,IAAWzU,EAASyU,IAAW1U,EAAU0U,GAC9ElS,EAASiS,GAAaC,SAGflS,EAASiS,OAIfjS,GAcT8R,EAAgB1tD,UAAUuL,IAAM,SAAU+kC,GACxC,IAAImK,EAAQrrC,KAgBZ,OAdAtQ,OAAO8W,KAAK06B,GAAOvkC,SAAQ,SAAU8hD,GAC/BhX,QAAQ/qC,IAAI2uC,EAAOoT,IAAc7U,EAAUyB,EAAMoT,MAC/CpT,EAAMoT,IAAc7U,EAAUyB,EAAMoT,GAAWxuD,QAAU25C,EAAUyB,EAAMoT,GAAW1tC,gBAElFs6B,EAAMoT,GAAWxuD,QAAUixC,EAAMud,KACnCpT,EAAMoT,GAAWxuD,MAAQixC,EAAMud,IAExBpT,EAAMoT,aAAsBH,EACrCjT,EAAMoT,GAAWtiD,IAAI+kC,EAAMud,IAE3BpT,EAAMoT,GAAavd,EAAMud,OAIxBz+C,MAGFs+C,EAvLT,CAwLE,GC9LE,GAEJ,SAAUvQ,GAGR,SAAS4Q,EAAcC,QACL,IAAZA,IACFA,EAAU,WAGZ,IAAIvT,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAOjC,OALAqrC,EAAM97C,KAAO,gBACb87C,EAAMwT,SAAWD,EAEjBvT,EAAMyT,eAAezT,EAAMwT,SAAU,GAE9BxT,EA8ET,OA5FAlE,EAAUwX,EAAe5Q,GAwBzB4Q,EAAc/tD,UAAUmuD,eAAiB,SAAUphD,GACjD,IAAIoF,EAAQ/C,KAAKnQ,IAAI8N,GAErB,OAAc,OAAVoF,EACKA,EAAMwK,MAENvN,KAAK6+C,UAWhBF,EAAc/tD,UAAUkuD,eAAiB,SAAUvxC,EAAO5P,EAAM5L,GAM9D,OALAm3C,EAAYvrC,EAAM,GAClBqC,KAAKxD,IAAI9M,OAAO48C,OAAO,GAAIv6C,EAAS,CAClCwb,MAAOA,EACP5P,KAAMA,KAEDqC,MAUT2+C,EAAc/tD,UAAUouD,aAAe,SAAUzxC,EAAO5P,GAItD,IAFA,IAES3O,EAFGgR,KAAKsuC,QAAQ3wC,GAEL3O,GAAK,EAAGA,IAAK,CAC/B,IAAIogD,EAAUpvC,KAAKiuC,UAAUj/C,GAE7B,GAAIogD,EAAQ7hC,QAAUA,EACpB,OAAO6hC,IAYbuP,EAAc/tD,UAAUquD,aAAe,SAAU1xC,EAAO5P,GAEtD,IAAIe,EAAQsB,KAAKsuC,QAAQ3wC,GAEzB,IAAe,IAAXe,EACF,IAAK,IAAI1P,EAAI0P,EAAO1P,EAAIgR,KAAKiuC,UAAUrvC,OAAQ5P,IAAK,CAClD,IAAIkwD,EAAUl/C,KAAKiuC,UAAUj/C,GAE7B,GAAIkwD,EAAQ3xC,QAAUA,EACpB,OAAO2xC,IAMRP,EA7FT,CA8FE,GCxFE,GAEJ,SAAU5Q,GAGR,SAASoR,IACP,IAAI9T,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB4S,EAAM7R,cAAe9F,UAAW,CAAC,QAAS,QAAS,cAAgBxnC,KAEtHqrC,EAAM97C,KAAO,QACb87C,EAAM+T,YAAa,EAKnB/T,EAAMgU,WAAa,KACnB,IAAIttD,EAAUw6C,EAAqB4S,EAAM7R,cAAe9F,UAAW,CAAC,QAAS,QAAS,YAGtF,IAFAwB,EAAOY,EAAU73C,EAAQ08C,SAAW7C,EAAa75C,EAAQ08C,QAAU18C,EAAQ08C,iBAAiB0Q,GAAQ,gCAE5FvT,EAAa75C,EAAQ08C,QAC3B18C,EAAQ08C,MAAQ18C,EAAQ08C,MAAM6Q,OA0BhC,OAvBAjU,EAAMkU,aAAa3V,EAAU73C,EAAQytD,YAAaztD,EAAQytD,UAEtDnU,EAAMkU,YACRlU,EAAM9mC,MAAQ8mC,EAAMj5C,QAAQyyB,aAE5BwmB,EAAMiU,OAASvtD,EAAQ08C,MAEvBpD,EAAM9mC,MAAM/Q,QAAQ63C,EAAMiU,SAE1BjU,EAAMiU,OAASjU,EAAM9mC,MAAQxS,EAAQ08C,MAGvCpD,EAAMkF,QAAU,IAAI,EAAS,KAC7BlF,EAAMoU,cAAgBpU,EAAMiU,OAAO3gD,aACnC0sC,EAAMgP,MAAQtoD,EAAQsoD,MACtBhP,EAAMqU,QAAU3tD,EAAQ2tD,QACxBrU,EAAMsU,UAAY5tD,EAAQ8e,SAC1Bw6B,EAAMuU,UAAY7tD,EAAQ6e,SAEtBg5B,EAAU73C,EAAQ9B,QAAU8B,EAAQ9B,QAAUo7C,EAAMwU,QAAQxU,EAAMoU,gBACpEpU,EAAMt6B,eAAehf,EAAQ9B,MAAO,GAG/Bo7C,EAoeT,OA9gBAlE,EAAUgY,EAAOpR,GA6CjBoR,EAAM7R,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAgBgB,cAAe,CAClDoS,SAAS,EACTrF,MAAO,YAIX3qD,OAAOC,eAAewvD,EAAMvuD,UAAW,QAAS,CAC9Cf,IAAK,WACH,IAAIwiD,EAAMryC,KAAKqyC,MACf,OAAOryC,KAAK++C,eAAe1M,IAE7Bl2C,IAAK,SAAUlM,GACb+P,KAAKwR,sBAAsBxR,KAAKqyC,OAChCryC,KAAK+Q,eAAe9gB,EAAO+P,KAAKqyC,QAElCziD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewvD,EAAMvuD,UAAW,WAAY,CACjDf,IAAK,WAEH,OAAI+5C,EAAU5pC,KAAK2/C,WACV3/C,KAAK2/C,UACY,SAAf3/C,KAAKq6C,OAAmC,cAAfr6C,KAAKq6C,OAAwC,gBAAfr6C,KAAKq6C,OAA0C,aAAfr6C,KAAKq6C,OAAuC,kBAAfr6C,KAAKq6C,OAA4C,UAAfr6C,KAAKq6C,OAAoC,QAAfr6C,KAAKq6C,OAAkC,UAAfr6C,KAAKq6C,OAAoC,YAAfr6C,KAAKq6C,MACzO,EACiB,eAAfr6C,KAAKq6C,OACN,EACgB,aAAfr6C,KAAKq6C,OACNhR,IAEDrpC,KAAKs/C,OAAOzuC,UAGvBjhB,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewvD,EAAMvuD,UAAW,WAAY,CACjDf,IAAK,WACH,OAAI+5C,EAAU5pC,KAAK4/C,WACV5/C,KAAK4/C,UACY,gBAAf5/C,KAAKq6C,OAA0C,eAAfr6C,KAAKq6C,MACvC,EAEAr6C,KAAKs/C,OAAO1uC,UAGvBhhB,YAAY,EACZ4sB,cAAc,IAMhB2iC,EAAMvuD,UAAUkvD,IAAM,SAAUrd,EAAKtlC,GACnC,OAAO6C,KAAKq6C,QAAUl9C,GAOxBgiD,EAAMvuD,UAAUmvD,aAAe,SAAU9vD,GAKvC,OAJI25C,EAAU5pC,KAAK4Q,WAAag5B,EAAU5pC,KAAK6Q,WAC7Cq4B,EAAYj5C,EAAO+P,KAAKggD,UAAUhgD,KAAK6Q,UAAW7Q,KAAKggD,UAAUhgD,KAAK4Q,WAGjE3gB,GAQTkvD,EAAMvuD,UAAUovD,UAAY,SAAUxN,GACpC,OAAIxyC,KAAK0/C,UAAY1/C,KAAKo/C,WACpBp/C,KAAK8/C,IAAItN,EAAK,QACTxyC,KAAKg5C,UAAUxG,GACbxyC,KAAK8/C,IAAItN,EAAK,YAChBgF,GAAShF,GACPxyC,KAAK8/C,IAAItN,EAAK,aAChBxyC,KAAKm6C,YAAY3H,GAEjBA,EAEAxyC,KAAKo/C,WAEP,EAEA5M,GAQX2M,EAAMvuD,UAAUivD,QAAU,SAAUrN,GAClC,OAAIxyC,KAAK0/C,SAA0B,aAAf1/C,KAAKq6C,MAChB3C,GAASlF,GAETA,GAQX2M,EAAMvuD,UAAUmgB,eAAiB,SAAU9gB,EAAO0N,GAChD,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAE9Bm9C,EAAe96C,KAAKggD,UAAU/vD,GAgBlC,OAdA+4C,EAAOkX,SAASpF,IAAiBoF,SAASD,GAAe,0CAA4CE,KAAKC,UAAUnwD,GAAS,KAAOkwD,KAAKC,UAAUziD,IAEnJqC,KAAK+/C,aAAajF,GAElB96C,KAAK0pC,IAAI1pC,KAAKq6C,MAAO,iBAAkBpqD,EAAOgwD,GAE9CjgD,KAAKuwC,QAAQ/zC,IAAI,CACfmB,KAAMsiD,EACN9iD,KAAM,iBACNlN,MAAO6qD,IAGT96C,KAAKs/C,OAAOvuC,eAAe+pC,EAAcmF,GAElCjgD,MAGTm/C,EAAMvuD,UAAUmuD,eAAiB,SAAUphD,GACzC,IAAIsiD,EAAejiD,KAAKwJ,IAAIxH,KAAKg5C,UAAUr7C,GAAO,GAE9CmxC,EAAQ9uC,KAAKuwC,QAAQ5B,SAASsR,GAE9BI,EAASrgD,KAAKuwC,QAAQ1gD,IAAIowD,GAE1BhwD,EAAQ+P,KAAKy/C,cAEjB,GAAe,OAAXY,EACFpwD,EAAQ+P,KAAKy/C,mBACR,GAAoB,oBAAhBY,EAAOljD,MAAyC,OAAV2xC,GAAiC,mBAAfA,EAAM3xC,KAclE,GAAc,OAAV2xC,EACT7+C,EAAQowD,EAAOpwD,WACV,GAAmB,4BAAf6+C,EAAM3xC,MAAqD,iCAAf2xC,EAAM3xC,KAAyC,CACpG,IAAImjD,EAAcD,EAAOpwD,MAEzB,GAAoB,oBAAhBowD,EAAOljD,KAIPmjD,EADe,QAFbC,EAAWvgD,KAAKuwC,QAAQ3B,UAAUyR,EAAO1iD,OAG7BqC,KAAKy/C,cAELc,EAAStwD,MAKzBA,EADiB,4BAAf6+C,EAAM3xC,KACA6C,KAAKwgD,mBAAmBH,EAAO1iD,KAAM2iD,EAAaxR,EAAMnxC,KAAMmxC,EAAM7+C,MAAOgwD,GAE3EjgD,KAAKygD,wBAAwBJ,EAAO1iD,KAAM2iD,EAAaxR,EAAMnxC,KAAMmxC,EAAM7+C,MAAOgwD,QAG1FhwD,EAAQowD,EAAOpwD,UAnCoF,CACnG,IAAIswD,EAEAG,OAAc,EAGhBA,EADe,QAJbH,EAAWvgD,KAAKuwC,QAAQ3B,UAAUyR,EAAO1iD,OAK7BqC,KAAKy/C,cAELc,EAAStwD,MAGL,oBAAhBowD,EAAOljD,OACTlN,EAAQ+P,KAAK2gD,qBAAqBN,EAAO1iD,KAAM+iD,EAAaL,EAAOpwD,MAAOowD,EAAO5N,SAAUwN,IA0B/F,OAAOjgD,KAAK6/C,QAAQ5vD,IAGtBkvD,EAAMvuD,UAAUgwD,aAAe,SAAUjjD,GACvCA,EAAOqC,KAAKg5C,UAAUr7C,GACtB,IAAIkjD,EAAa7gD,KAAK++C,eAAephD,GAQrC,OAPAqC,KAAKiR,oBAAoBtT,GAEU,IAA/BqC,KAAKggD,UAAUa,KACjBA,EAAa7gD,KAAK6/C,QAAQ7/C,KAAKq/C,aAGjCr/C,KAAK+Q,eAAe8vC,EAAYljD,GACzBqC,MAGTm/C,EAAMvuD,UAAU8gB,wBAA0B,SAAUzhB,EAAOgN,GACzD,IAAI69C,EAAe96C,KAAKggD,UAAU/vD,GAE9BgwD,EAAejgD,KAAKg5C,UAAU/7C,GAelC,OAdA+rC,EAAOkX,SAASpF,IAAiBoF,SAASD,GAAe,mDAAqDE,KAAKC,UAAUnwD,GAAS,KAAOkwD,KAAKC,UAAUnjD,IAE5J+C,KAAK+/C,aAAajF,GAElB96C,KAAKuwC,QAAQ/zC,IAAI,CACfmB,KAAMsiD,EACN9iD,KAAM,0BACNlN,MAAO6qD,IAGT96C,KAAK0pC,IAAI1pC,KAAKq6C,MAAO,0BAA2BpqD,EAAOgwD,GAEvDjgD,KAAKs/C,OAAO5tC,wBAAwBopC,EAAcmF,GAE3CjgD,MAGTm/C,EAAMvuD,UAAU6gB,6BAA+B,SAAUxhB,EAAOgN,GAC9D,IAAI69C,EAAe96C,KAAKggD,UAAU/vD,GAElC6qD,EAAe98C,KAAKwJ,IAAIxH,KAAKq/C,WAAYvE,GAEzC96C,KAAK+/C,aAAajF,GAElB,IAAImF,EAAejgD,KAAKg5C,UAAU/7C,GAalC,OAZA+rC,EAAOkX,SAASpF,IAAiBoF,SAASD,GAAe,wDAA0DE,KAAKC,UAAUnwD,GAAS,KAAOkwD,KAAKC,UAAUnjD,IAEjK+C,KAAKuwC,QAAQ/zC,IAAI,CACfmB,KAAMsiD,EACN9iD,KAAM,+BACNlN,MAAO6qD,IAGT96C,KAAK0pC,IAAI1pC,KAAKq6C,MAAO,+BAAgCpqD,EAAOgwD,GAE5DjgD,KAAKs/C,OAAO7tC,6BAA6BqpC,EAAcmF,GAEhDjgD,MAGTm/C,EAAMvuD,UAAUkwD,kBAAoB,SAAU7wD,EAAO8wD,EAAUzjD,GAI7D,OAHAA,EAAY0C,KAAKg5C,UAAU17C,GAC3B0C,KAAK4gD,aAAatjD,GAClB0C,KAAKyR,6BAA6BxhB,EAAOqN,EAAY0C,KAAKg5C,UAAU+H,IAC7D/gD,MAGTm/C,EAAMvuD,UAAUowD,aAAe,SAAU/wD,EAAO8wD,EAAUzjD,GAIxD,OAHAA,EAAY0C,KAAKg5C,UAAU17C,GAC3B0C,KAAK4gD,aAAatjD,GAClB0C,KAAK0R,wBAAwBzhB,EAAOqN,EAAY0C,KAAKg5C,UAAU+H,IACxD/gD,MAGTm/C,EAAMvuD,UAAUqwD,aAAe,SAAUhxD,EAAO8wD,EAAUzjD,GAIxD,OAHAA,EAAY0C,KAAKg5C,UAAU17C,GAC3B0C,KAAK4gD,aAAatjD,GAClB0C,KAAKkhD,+BAA+BjxD,EAAOqN,EAAWyjD,GAC/C/gD,MAGTm/C,EAAMvuD,UAAUswD,+BAAiC,SAAUjxD,EAAO0N,EAAMojD,GACtEpjD,EAAOqC,KAAKg5C,UAAUr7C,GACtBojD,EAAW/gD,KAAKg5C,UAAU+H,GAC1B,IAAIhjD,EAAeC,KAAK0rC,IAAIqX,EAAW,GAAK/iD,KAAK0rC,IAAI,KAKrD,OAJA1pC,KAAK4R,gBAAgB3hB,EAAO0N,EAAMI,GAElCiC,KAAKiR,oBAAoBtT,EAAkB,GAAXojD,GAChC/gD,KAAK0R,wBAAwBzhB,EAAO0N,EAAOojD,GACpC/gD,MAGTm/C,EAAMvuD,UAAUghB,gBAAkB,SAAU3hB,EAAOqN,EAAWS,GAC5D,IAAI+8C,EAAe96C,KAAKggD,UAAU/vD,GAGlC+4C,EAAOkX,SAASniD,IAAiBA,EAAe,EAAG,gDACnD,IAAIkiD,EAAejgD,KAAKg5C,UAAU17C,GAiBlC,OAfA0C,KAAK+/C,aAAajF,GAElB9R,EAAOkX,SAASpF,IAAiBoF,SAASD,GAAe,2CAA6CE,KAAKC,UAAUnwD,GAAS,KAAOkwD,KAAKC,UAAU9iD,IAEpJ0C,KAAKuwC,QAAQ/zC,IAAI,CACfi2C,SAAU10C,EACVJ,KAAMsiD,EACN9iD,KAAM,kBACNlN,MAAO6qD,IAGT96C,KAAK0pC,IAAI1pC,KAAKq6C,MAAO,kBAAmBpqD,EAAOgwD,EAAcliD,GAE7DiC,KAAKs/C,OAAO1tC,gBAAgBkpC,EAAcmF,EAAcliD,GAEjDiC,MAGTm/C,EAAMvuD,UAAU+gB,oBAAsB,SAAUnU,EAAQF,EAAWG,EAAU0jD,QAC3D,IAAZA,IACFA,EAAU,GAGZ1jD,EAAWuC,KAAKg5C,UAAUv7C,GAC1BH,EAAY0C,KAAKg5C,UAAU17C,GAC3B,IAAI8jD,EAAgBphD,KAAKggD,UAAUxiD,EAAO,IAAM2jD,EAChDnhD,KAAK+Q,eAAe/Q,KAAK6/C,QAAQuB,GAAgB9jD,GAGjD,IAFA,IAAI+jD,EAAU5jD,GAAYD,EAAOoB,OAAS,GAEjC5P,EAAI,EAAGA,EAAIwO,EAAOoB,OAAQ5P,IAAK,CACtC,IAAI8rD,EAAe96C,KAAKggD,UAAUxiD,EAAOxO,IAAMmyD,EAC/CnhD,KAAK0R,wBAAwB1R,KAAK6/C,QAAQ/E,GAAex9C,EAAYtO,EAAIqyD,GAG3E,OAAOrhD,MAGTm/C,EAAMvuD,UAAU4gB,sBAAwB,SAAU7T,GAChD,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAQlC,OAPAqrC,EAAOkX,SAASD,GAAe,8CAAgDE,KAAKC,UAAUziD,IAE9FqC,KAAKuwC,QAAQ1B,OAAOoR,GAEpBjgD,KAAKs/C,OAAO9tC,sBAAsByuC,GAElCjgD,KAAK0pC,IAAI1pC,KAAKq6C,MAAO,wBAAyB4F,GACvCjgD,MAGTm/C,EAAMvuD,UAAUqgB,oBAAsB,SAAUtT,GAC9C,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAE9B2jD,EAActhD,KAAKggD,UAAUhgD,KAAK++C,eAAekB,IAGrDjX,EAAOkX,SAASD,GAAe,4CAA8CE,KAAKC,UAAUziD,IAC5FqC,KAAK0pC,IAAI1pC,KAAKq6C,MAAO,sBAAuB4F,EAAc,SAAWqB,GAGrE,IAAIjB,EAASrgD,KAAKuwC,QAAQ1gD,IAAIowD,GAE1BnR,EAAQ9uC,KAAKuwC,QAAQ5B,SAASsR,GAmClC,OAjCII,GAAU1S,EAAG0S,EAAO1iD,KAAMsiD,GAExBnR,GACF9uC,KAAKs/C,OAAO9tC,sBAAsBs9B,EAAMnxC,MAExCqC,KAAKuwC,QAAQ1B,OAAOC,EAAMnxC,QAE1BqC,KAAKs/C,OAAOruC,oBAAoBgvC,GAEhCjgD,KAAKuwC,QAAQ1B,OAAOoR,EAAejgD,KAAKuhD,aAEjCzS,IACT9uC,KAAKs/C,OAAO9tC,sBAAsBs9B,EAAMnxC,MAGxCqC,KAAKuwC,QAAQ1B,OAAOC,EAAMnxC,MAEP,4BAAfmxC,EAAM3xC,KACR6C,KAAK0R,wBAAwB1R,KAAK6/C,QAAQyB,GAAcrB,GAChC,iCAAfnR,EAAM3xC,MACf6C,KAAKyR,6BAA6BzR,KAAK6/C,QAAQyB,GAAcrB,IAKjEjgD,KAAKuwC,QAAQ/zC,IAAI,CACfmB,KAAMsiD,EACN9iD,KAAM,iBACNlN,MAAOqxD,IAGTthD,KAAKs/C,OAAOvuC,eAAeuwC,EAAarB,GAEjCjgD,MAGTm/C,EAAMvuD,UAAU4wD,OAAS,SAAUvxD,EAAO8wD,EAAUzjD,GAWlD,YAViB,IAAbyjD,IACFA,EAAW,IAGM,cAAf/gD,KAAKq6C,OAAwC,QAAfr6C,KAAKq6C,OAAkC,aAAfr6C,KAAKq6C,MAC7Dr6C,KAAK8gD,kBAAkB7wD,EAAO8wD,EAAUzjD,GAExC0C,KAAKghD,aAAa/wD,EAAO8wD,EAAUzjD,GAG9B0C,MASTm/C,EAAMvuD,UAAU6xB,MAAQ,SAAUgsB,GAChC,IAAI4D,EAAMryC,KAAK5N,QAAQ4e,YAEvBy9B,EAAM19B,eAAe/Q,KAAK++C,eAAe1M,GAAMA,GAE/C,IAAIrD,EAAgBhvC,KAAKuwC,QAAQ1gD,IAAIwiD,GAErC,GAAIrD,GAAwC,oBAAvBA,EAAc7xC,KAQjC,IANA,IAAIkyC,EAAYrvC,KAAKuwC,QAAQ5B,SAASK,EAAcrxC,MAGhDV,EAAUoyC,EAAYA,EAAU1xC,KAAO00C,EAAM,EAC7CoP,GAAgBxkD,EAAUo1C,GAAO,GAE5BrjD,EAAIqjD,EAAKrjD,EAAIiO,EAASjO,GAAKyyD,EAClChT,EAAM/8B,wBAAwB1R,KAAK++C,eAAe/vD,GAAIA,GAc1D,OAVAgR,KAAKuwC,QAAQb,aAAa1vC,KAAK5N,QAAQ4e,aAAa,SAAUjO,GACzC,0BAAfA,EAAM5F,KACRsxC,EAAMj9B,sBAAsBzO,EAAMpF,MACV,oBAAfoF,EAAM5F,KACfsxC,EAAM78B,gBAAgB7O,EAAM9S,MAAO8S,EAAMpF,KAAMoF,EAAM0vC,UAErDhE,EAAM1rC,EAAM5F,MAAM4F,EAAM9S,MAAO8S,EAAMpF,SAIlCqC,MAQTm/C,EAAMvuD,UAAU8wD,SAAW,SAAUjT,GACnCzF,EAAOhpC,KAAKu/C,WAAY,gEACxB,IAAIh7C,EAAQvE,KAAKuE,MAKjB,OAJAA,EAAM9Q,WAAWuM,KAAKs/C,QACtBt/C,KAAKyiB,MAAMgsB,GACXzuC,KAAKs/C,OAAS7Q,EACdlqC,EAAM/Q,QAAQwM,KAAKs/C,QACZt/C,MAGTm/C,EAAMvuD,UAAU+6C,QAAU,WAKxB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuwC,QAAQ5E,UAEN3rC,MAGTtQ,OAAOC,eAAewvD,EAAMvuD,UAAW,eAAgB,CACrDf,IAAK,WACH,OAAOmQ,KAAK6/C,QAAQ7/C,KAAKs/C,OAAO3gD,eAElC/O,YAAY,EACZ4sB,cAAc,IAOhB2iC,EAAMvuD,UAAU+vD,qBAAuB,SAAUgB,EAAIC,EAAIC,EAAI9jD,EAAc7N,GACzE,OAAO2xD,GAAMD,EAAKC,GAAM7jD,KAAKC,MAAM/N,EAAIyxD,GAAM5jD,IAI/CohD,EAAMvuD,UAAU4vD,mBAAqB,SAAUmB,EAAIC,EAAIE,EAAID,EAAI3xD,GAC7D,OAAO0xD,GAAmB1xD,EAAIyxD,IAAOG,EAAKH,IAA7BE,EAAKD,IAIpBzC,EAAMvuD,UAAU6vD,wBAA0B,SAAUkB,EAAIC,EAAIE,EAAID,EAAI3xD,GAClE,OAAO0xD,EAAK5jD,KAAKqB,IAAIwiD,EAAKD,GAAK1xD,EAAIyxD,IAAOG,EAAKH,KAG1CxC,EA/gBT,CAghBE,ICxhBE,GAEJ,SAAUpR,GAGR,SAASgU,IACP,IAAI1W,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAYhE,OANAqrC,EAAM97C,KAAO,gBAKb87C,EAAM2W,kBAAoB,GACnB3W,EA8ST,OA7TAlE,EAAU4a,EAAehU,GAkBzBr+C,OAAOC,eAAeoyD,EAAcnxD,UAAW,iBAAkB,CAQ/Df,IAAK,WACH,OAAI+5C,EAAU5pC,KAAKuE,OACbqnC,EAAa5rC,KAAKuE,QAAUvE,KAAKuE,iBAAiB,GAC7C,EAEAvE,KAAKuE,MAAM6D,eAGb,GAGXxY,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeoyD,EAAcnxD,UAAW,kBAAmB,CAOhEf,IAAK,WACH,OAAI+5C,EAAU5pC,KAAKsE,QACVtE,KAAKsE,OAAO4N,gBAEZ,GAGXtiB,YAAY,EACZ4sB,cAAc,IAShBulC,EAAcnxD,UAAUqxD,aAAe,SAAUC,GAC/C,OAAOtY,EAAUsY,KAAUA,aAAgBH,GAAiBt/C,EAAYy/C,KAQ1EH,EAAcnxD,UAAUuxD,kBAAoB,WAC1C,IAAIC,EAAWpiD,KAAKgiD,kBAAkBxhD,MAAM,GAY5C,OAVIR,KAAKiiD,aAAajiD,KAAKuE,QACzB69C,EAASxhD,KAAKZ,KAAKuE,OAGjBvE,KAAKiiD,aAAajiD,KAAKsE,SACrBtE,KAAKuE,QAAUvE,KAAKsE,QACtB89C,EAASxhD,KAAKZ,KAAKsE,QAIhB89C,GASTL,EAAcnxD,UAAUyxD,sBAAwB,SAAUtwD,GACzCiO,KAAKmiD,oBAEXxlD,SAAQ,SAAUulD,GACzBA,EAAKp5C,aAAe/W,EAAQ+W,aAC5Bo5C,EAAKn5C,iBAAmBhX,EAAQgX,iBAChCm5C,EAAKl5C,sBAAwBjX,EAAQiX,0BASzC+4C,EAAcnxD,UAAU0xD,sBAAwB,WAC9C,IAAIF,EAAWpiD,KAAKmiD,oBAEpBnZ,EAAOoZ,EAASxjD,OAAS,EAAG,kDAG5B,IAAIsjD,EAAOE,EAAS,GACpB,MAAO,CACLt5C,aAAco5C,EAAKp5C,aACnBC,iBAAkBm5C,EAAKn5C,iBACvBC,sBAAuBk5C,EAAKl5C,wBAIhCtZ,OAAOC,eAAeoyD,EAAcnxD,UAAW,eAAgB,CAM7Df,IAAK,WACH,OAAOmQ,KAAKsiD,wBAAwBx5C,cAEtC3M,IAAK,SAAU2M,GACb,IAAIo4B,EAAQlhC,KAAKsiD,wBAGjBtiD,KAAKqiD,sBAAsB3yD,OAAO48C,OAAOpL,EAAO,CAC9Cp4B,aAAcA,MAGlBlZ,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeoyD,EAAcnxD,UAAW,mBAAoB,CASjEf,IAAK,WACH,OAAOmQ,KAAKsiD,wBAAwBv5C,kBAEtC5M,IAAK,SAAU4M,GACb,IAAIm4B,EAAQlhC,KAAKsiD,wBAGjBtiD,KAAKqiD,sBAAsB3yD,OAAO48C,OAAOpL,EAAO,CAC9Cn4B,iBAAkBA,MAGtBnZ,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeoyD,EAAcnxD,UAAW,wBAAyB,CAMtEf,IAAK,WACH,OAAOmQ,KAAKsiD,wBAAwBt5C,uBAEtC7M,IAAK,SAAU6M,GACb,IAAIk4B,EAAQlhC,KAAKsiD,wBAGjBtiD,KAAKqiD,sBAAsB3yD,OAAO48C,OAAOpL,EAAO,CAC9Cl4B,sBAAuBA,MAG3BpZ,YAAY,EACZ4sB,cAAc,IAYhBulC,EAAcnxD,UAAU4C,QAAU,SAAU0V,EAAaq5C,EAAWC,GAUlE,YATkB,IAAdD,IACFA,EAAY,QAGG,IAAbC,IACFA,EAAW,GAGbhvD,GAAQwM,KAAMkJ,EAAaq5C,EAAWC,GAC/BxiD,MAUT+hD,EAAcnxD,UAAU6xD,cAAgB,WAEtC,OADAziD,KAAKxM,QAAQwM,KAAK5N,QAAQ8W,aACnBlJ,MAST+hD,EAAcnxD,UAAU8xD,SAAW,WAEjC,OADAnZ,EAAK,+CACEvpC,KAAKyiD,iBAOdV,EAAcnxD,UAAU6C,WAAa,SAAUyV,EAAaq5C,EAAWC,GAUrE,YATkB,IAAdD,IACFA,EAAY,QAGG,IAAbC,IACFA,EAAW,GAGb/uD,GAAWuM,KAAMkJ,EAAaq5C,EAAWC,GAClCxiD,MAaT+hD,EAAcnxD,UAAUutC,MAAQ,WAG9B,IAFA,IAAIwkB,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,GAIxB,OADAoiB,GAAcngC,WAAM,EAAQsmB,EAAS,CAAC/oC,MAAO2iD,IACtC3iD,MAOT+hD,EAAcnxD,UAAUiyD,IAAM,WAK5B,IAJA,IAAIxX,EAAQrrC,KAER2iD,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,GAMxB,OAHAmiB,EAAMhmD,SAAQ,SAAUulD,GACtB,OAAO7W,EAAM73C,QAAQ0uD,MAEhBliD,MAOT+hD,EAAcnxD,UAAU+6C,QAAU,WAoBhC,OAnBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE1B4pC,EAAU5pC,KAAKuE,SACbvE,KAAKuE,iBAAiBw9C,EACxB/hD,KAAKuE,MAAMonC,UACFlpC,EAAYzC,KAAKuE,QAC1BvE,KAAKuE,MAAM9Q,cAIXm2C,EAAU5pC,KAAKsE,UACbtE,KAAKsE,kBAAkBy9C,EACzB/hD,KAAKsE,OAAOqnC,UACHlpC,EAAYzC,KAAKsE,SAC1BtE,KAAKsE,OAAO7Q,cAIhBuM,KAAKgiD,kBAAoB,GAClBhiD,MAGF+hD,EA9TT,CA+TE,IAWK,SAASa,KAGd,IAFA,IAAID,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,GAGxB,IAAIsiB,EAAQH,EAAMtW,QAClBsW,EAAMjzB,QAAO,SAAUuW,EAAM8c,GAO3B,OANI9c,aAAgB,GAClBA,EAAKzyC,QAAQuvD,GACJtgD,EAAYwjC,IACrBzyC,GAAQyyC,EAAM8c,GAGTA,IACND,GAWE,SAAStvD,GAAQwvD,EAASC,EAASC,EAAcC,GAkBtD,SAjBqB,IAAjBD,IACFA,EAAe,QAGG,IAAhBC,IACFA,EAAc,GAGhBna,EAAOY,EAAUoZ,GAAU,sCAC3Bha,EAAOY,EAAUqZ,GAAU,qCAEvBA,aAAmB,IAAiBxgD,EAAYwgD,KAClDja,EAAOia,EAAQ76C,eAAiB,EAAG,yCAGrC4gC,EAAOga,EAAQ9wC,gBAAkB,EAAG,4CAE7B+wC,aAAmB,IAAiBA,aAAmB,IACxDrZ,EAAUqZ,EAAQ1+C,SACpB0+C,EAAUA,EAAQ1+C,OAItB,KAAOy+C,aAAmB,IACpBpZ,EAAUoZ,EAAQ1+C,UACpB0+C,EAAUA,EAAQ1+C,QAKlBsnC,EAAaqX,GACfD,EAAQxvD,QAAQyvD,EAASC,GAEzBF,EAAQxvD,QAAQyvD,EAASC,EAAcC,GAWpC,SAAS1vD,GAAWuvD,EAASC,EAASC,EAAcC,GAUzD,QATqB,IAAjBD,IACFA,EAAe,QAGG,IAAhBC,IACFA,EAAc,GAIZvZ,EAAUqZ,GACZ,KAAOA,aAAmB,IACxBA,EAAUA,EAAQ1+C,MAKtB,MAAQ9B,EAAYugD,IACdpZ,EAAUoZ,EAAQ1+C,UACpB0+C,EAAUA,EAAQ1+C,QAIlBsnC,EAAaqX,GACfD,EAAQvvD,WAAWwvD,EAASC,GACnBzgD,EAAYwgD,GACrBD,EAAQvvD,WAAWwvD,EAASC,EAAcC,GAE1CH,EAAQvvD,aC9aZ,IAAI,GAEJ,SAAUs6C,GAGR,SAASqV,IACP,IAAI/X,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6W,EAAK9V,cAAe9F,UAAW,CAAC,OAAQ,YAAcxnC,KAEzGqrC,EAAM97C,KAAO,OAKb87C,EAAMgY,UAAYhY,EAAMj5C,QAAQyyB,aAEhCwmB,EAAM9mC,MAAQ8mC,EAAMgY,UACpBhY,EAAM/mC,OAAS+mC,EAAMgY,UACrB,IAAItxD,EAAUw6C,EAAqB6W,EAAK9V,cAAe9F,UAAW,CAAC,OAAQ,UAW3E,OAVA6D,EAAMpiC,KAAO,IAAI,GAAM,CACrB7W,QAASi5C,EAAMj5C,QACfstD,QAAS3tD,EAAQ2tD,QACjBjR,MAAOpD,EAAMgY,UAAUp6C,KACvBoxC,MAAOtoD,EAAQsoD,MACfpqD,MAAO8B,EAAQkX,KACf4H,SAAU9e,EAAQ8e,SAClBD,SAAU7e,EAAQ6e,WAEpBujC,GAAS9I,EAAO,QACTA,EAwBT,OAjDAlE,EAAUic,EAAMrV,GA4BhBqV,EAAK9V,YAAc,WACjB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDoS,SAAS,EACTz2C,KAAM,EACNoxC,MAAO,UAQX+I,EAAKxyD,UAAU+6C,QAAU,WAMvB,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqjD,UAAU5vD,aAEfuM,KAAKiJ,KAAK0iC,UACH3rC,MAGFojD,EAlDT,CAmDE,ICxDE,GAEJ,SAAUrV,GAGR,SAASuV,EAAcvxD,GACrB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAsD1C,OA/CAqrC,EAAM7+B,QAAU6nC,GAKhBhJ,EAAM3pC,YAAc,EAKpB2pC,EAAMkY,WAAa,EAKnBlY,EAAMC,UAAY,EAKlBD,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,QACf6W,KAAM,IAMRoiC,EAAMgY,UAAYhY,EAAM/mC,OAKxB+mC,EAAMmY,eAAiB,SAAU7lD,GAC/B,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAElC,OAAyB,IAArBqC,KAAK0B,YAAqBu+C,GAAgBjgD,KAAK0B,cAAmC,IAApB1B,KAAKujD,WAAoBtD,GAAgBjgD,KAAKujD,WACvG,UAEA,WAIXlY,EAAMoY,QAAU1xD,EAAQ2xD,OACxBrY,EAAMsY,SAAW5xD,EAAQ6xD,QACzBvY,EAAMwY,OAAS9xD,EAAQ+V,MACvBujC,EAAM7+B,QAAUza,EAAQya,QACjB6+B,EAyJT,OAlNAlE,EAAUmc,EAAevV,GA4DzBuV,EAAchW,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDxlC,MAAO,SACP47C,OAAQ,EACRE,QAAS,EACTp3C,QAAS6nC,MASbiP,EAAc1yD,UAAUkzD,WAAa,SAAUnmD,EAAMsL,QACtC,IAATA,IACFA,EAAO,GAGT+/B,GAA4B,IAArBhpC,KAAK0B,WAAmB,2CAE/B,IAAIqiD,EAAa/jD,KAAKg5C,UAAUh5C,KAAKyjD,SAiBrC,OAfAzjD,KAAK0B,WAAa/D,EAAOomD,EACzB/jD,KAAK0B,WAAa1D,KAAKwJ,IAAIxH,KAAK0B,WAAY1B,KAAK5N,QAAQ4e,aAErD+yC,EAAa,GACf/jD,KAAKqjD,UAAUp6C,KAAK8H,eAAe,EAAGpT,GAElB,WAAhBqC,KAAK6jD,OACP7jD,KAAKqjD,UAAUp6C,KAAKyI,wBAAwBzI,EAAMtL,EAAOomD,GAEzD/jD,KAAKqjD,UAAUp6C,KAAKi4C,+BAA+Bj4C,EAAMtL,EAAMomD,IAGjE/jD,KAAKqjD,UAAUp6C,KAAK8H,eAAe9H,EAAMtL,GAGpCqC,MAQTsjD,EAAc1yD,UAAUmT,KAAO,SAAUpG,GAKvC,OAJAqC,KAAK0pC,IAAI,OAAQ/rC,GAEjBqC,KAAKgkD,UAAUhkD,KAAKg5C,UAAUr7C,IAEvBqC,MAQTsjD,EAAc1yD,UAAUozD,UAAY,SAAUrmD,GAC5C,IAAI0tC,EAAQrrC,KAEZgpC,GAA4B,IAArBhpC,KAAK0B,WAAmB,wCAE/B1B,KAAKikD,aAEL,IAAIC,EAAclkD,KAAKg5C,UAAUh5C,KAAK2jD,UA4BtC,OA1BA3jD,KAAKujD,UAAYvjD,KAAKg5C,UAAUr7C,GAAQumD,EACxClkD,KAAKujD,UAAYvlD,KAAKwJ,IAAIxH,KAAKujD,UAAWvjD,KAAK5N,QAAQ4e,aAEnDkzC,EAAc,EAEI,WAAhBlkD,KAAK6jD,OACP7jD,KAAKqjD,UAAUp6C,KAAK+3C,aAAa,EAAGkD,EAAavmD,GAEjDqC,KAAKqjD,UAAUp6C,KAAKg4C,aAAa,EAAGiD,EAAavmD,IAInDqC,KAAKqjD,UAAUp6C,KAAKgI,oBAAoBtT,GAExCqC,KAAKqjD,UAAUp6C,KAAK8H,eAAe,EAAGpT,IAGxCqC,KAAK5N,QAAQo5C,aAAaxrC,KAAKsrC,UAC/BtrC,KAAKsrC,SAAWtrC,KAAK5N,QAAQua,YAAW,WAEtC,IAAIw3C,EAAkC,gBAAjB9Y,EAAMwY,OAAyC,EAAdK,EAAkB,EAExE7Y,EAAM+Y,YAAY/Y,EAAMgH,MAAQ8R,GAEhC9Y,EAAMj/B,aACLpM,KAAKujD,UAAYvjD,KAAK5N,QAAQ4e,aAC1BhR,MAOTsjD,EAAc1yD,UAAUwb,SAAW,WACjC,IAAIi/B,EAAQrrC,KAERA,KAAKwM,UAAY6nC,KACnBr0C,KAAKwM,QAAQxM,MAEbA,KAAKwM,QAAU6nC,GAEVr0C,KAAK5N,QAAQ0Z,WAChBa,YAAW,WACT,OAAO0+B,EAAMM,YACZ,OAKTj8C,OAAOC,eAAe2zD,EAAc1yD,UAAW,QAAS,CAItDf,IAAK,WACH,OAAOmQ,KAAKwjD,eAAexjD,KAAKqyC,QAElCziD,YAAY,EACZ4sB,cAAc,IAMhB8mC,EAAc1yD,UAAUqzD,WAAa,WAQnC,OAPAjkD,KAAK0pC,IAAI,cACTV,GAA4B,IAArBhpC,KAAK0B,WAAmB,yBAE/B1B,KAAKqjD,UAAUp6C,KAAKuI,sBAAsBxR,KAAK0B,WAAa1B,KAAKuhD,YAEjEvhD,KAAK5N,QAAQo5C,aAAaxrC,KAAKsrC,UAC/BtrC,KAAKujD,WAAa,EACXvjD,MAGTsjD,EAAc1yD,UAAU+6C,QAAU,WAKhC,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqjD,UAAU5vD,aAERuM,MAGFsjD,EAnNT,CAoNE,ICpNE,GAEJ,SAAUvV,GAGR,SAASsW,IACP,IAAIhZ,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB8X,EAAmB/W,cAAe9F,UAAW,CAAC,aAAexnC,KAEhHqrC,EAAM97C,KAAO,qBAKb87C,EAAMiZ,QAAUjZ,EAAMj5C,QAAQyxB,uBAC9B,IAAI9xB,EAAUw6C,EAAqB8X,EAAmB/W,cAAe9F,UAAW,CAAC,WAWjF,OAVAh0C,GAAQ63C,EAAMiZ,QAASjZ,EAAMgY,WAC7BhY,EAAMznC,OAAS,IAAI,GAAM,CACvBxR,QAASi5C,EAAMj5C,QACfstD,QAAS3tD,EAAQ2tD,QACjBjR,MAAOpD,EAAMiZ,QAAQ1gD,OACrBy2C,MAAOtoD,EAAQsoD,MACfpqD,MAAO8B,EAAQ6R,OACfiN,SAAU9e,EAAQ8e,SAClBD,SAAU7e,EAAQ6e,WAEby6B,EA4CT,OAlEAlE,EAAUkd,EAAoBtW,GAyB9BsW,EAAmB/W,YAAc,WAC/B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDoS,SAAS,EACT97C,OAAQ,EACRy2C,MAAO,YASXgK,EAAmBzzD,UAAU8S,MAAQ,SAAU/F,GAC7C,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAOlC,OANAqC,KAAK0pC,IAAI,QAASuW,GAElBjgD,KAAK8jD,WAAW7D,GAEhBjgD,KAAKskD,QAAQ5gD,MAAMu8C,GAEZjgD,MAGTqkD,EAAmBzzD,UAAUwzD,YAAc,SAAUzmD,GACnDqC,KAAKskD,QAAQvgD,KAAKpG,IAGpB0mD,EAAmBzzD,UAAU+6C,QAAU,WAUrC,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAEX,YAAfA,KAAKuN,OACPvN,KAAK+D,OAGP/D,KAAKskD,QAAQ7wD,aAEbuM,KAAK4D,OAAO+nC,UACL3rC,MAGFqkD,EAnET,CAoEE,ICtDE,GAEJ,SAAUtW,GAGR,SAASwW,IACP,IAAIlZ,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgY,EAAOjX,cAAe9F,UAAW,CAAC,QAAS,YAAcxnC,KAE5GqrC,EAAM97C,KAAO,SAKb87C,EAAMmZ,UAAW,EACjB,IAAIzyD,EAAUw6C,EAAqBgY,EAAOjX,cAAe9F,UAAW,CAAC,QAAS,UAa9E,OAZA6D,EAAM/mC,OAAS+mC,EAAMoZ,gBAAkB,IAAI,GAAmB,CAC5DryD,QAASi5C,EAAMj5C,QACfstD,QAAS3tD,EAAQ2tD,QACjB97C,OAAQ7R,EAAQ9B,MAChBoqD,MAAOtoD,EAAQsoD,MACfxpC,SAAU9e,EAAQ8e,SAClBD,SAAU7e,EAAQ6e,WAGpBy6B,EAAMoZ,gBAAgB/gD,MAAM,GAE5B2nC,EAAM9mC,MAAQ8mC,EAAMiU,OAASjU,EAAMoZ,gBAAgB7gD,OAC5CynC,EAuLT,OA/MAlE,EAAUod,EAAQxW,GA2BlBwW,EAAOjX,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDoS,SAAS,EACTrF,MAAO,SACPpqD,MAAO,KAIXs0D,EAAO3zD,UAAU4C,QAAU,SAAU0V,EAAaq5C,EAAWC,GAW3D,YAVkB,IAAdD,IACFA,EAAY,QAGG,IAAbC,IACFA,EAAW,GAIbkC,GAAc1kD,KAAMkJ,EAAaq5C,EAAWC,GACrCxiD,MAGTukD,EAAO3zD,UAAU+6C,QAAU,WAOzB,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKs/C,OAAO3T,UAEZ3rC,KAAKykD,gBAAgB9Y,UAEd3rC,MAQTukD,EAAO3zD,UAAUmgB,eAAiB,SAAU9gB,EAAO0N,GAGjD,OAFAqC,KAAKs/C,OAAOvuC,eAAe9gB,EAAO0N,GAE3BqC,MAGTukD,EAAO3zD,UAAUmuD,eAAiB,SAAUphD,GAC1C,OAAOqC,KAAKs/C,OAAOP,eAAephD,IAGpC4mD,EAAO3zD,UAAUgwD,aAAe,SAAUjjD,GAGxC,OAFAqC,KAAKs/C,OAAOsB,aAAajjD,GAElBqC,MAGTukD,EAAO3zD,UAAU8gB,wBAA0B,SAAUzhB,EAAO0N,GAG1D,OAFAqC,KAAKs/C,OAAO5tC,wBAAwBzhB,EAAO0N,GAEpCqC,MAGTukD,EAAO3zD,UAAU6gB,6BAA+B,SAAUxhB,EAAO0N,GAG/D,OAFAqC,KAAKs/C,OAAO7tC,6BAA6BxhB,EAAO0N,GAEzCqC,MAGTukD,EAAO3zD,UAAUkwD,kBAAoB,SAAU7wD,EAAO8wD,EAAUzjD,GAG9D,OAFA0C,KAAKs/C,OAAOwB,kBAAkB7wD,EAAO8wD,EAAUzjD,GAExC0C,MAGTukD,EAAO3zD,UAAUowD,aAAe,SAAU/wD,EAAO8wD,EAAUzjD,GAGzD,OAFA0C,KAAKs/C,OAAO0B,aAAa/wD,EAAO8wD,EAAUzjD,GAEnC0C,MAGTukD,EAAO3zD,UAAUqwD,aAAe,SAAUhxD,EAAO8wD,EAAUzjD,GAGzD,OAFA0C,KAAKs/C,OAAO2B,aAAahxD,EAAO8wD,EAAUzjD,GAEnC0C,MAGTukD,EAAO3zD,UAAUswD,+BAAiC,SAAUjxD,EAAO0N,EAAMojD,GAGvE,OAFA/gD,KAAKs/C,OAAO4B,+BAA+BjxD,EAAO0N,EAAMojD,GAEjD/gD,MAGTukD,EAAO3zD,UAAUghB,gBAAkB,SAAU3hB,EAAOqN,EAAWS,GAG7D,OAFAiC,KAAKs/C,OAAO1tC,gBAAgB3hB,EAAOqN,EAAWS,GAEvCiC,MAGTukD,EAAO3zD,UAAU+gB,oBAAsB,SAAUnU,EAAQF,EAAWG,EAAU0jD,GAG5E,OAFAnhD,KAAKs/C,OAAO3tC,oBAAoBnU,EAAQF,EAAWG,EAAU0jD,GAEtDnhD,MAGTukD,EAAO3zD,UAAU4gB,sBAAwB,SAAU7T,GAGjD,OAFAqC,KAAKs/C,OAAO9tC,sBAAsB7T,GAE3BqC,MAGTukD,EAAO3zD,UAAUqgB,oBAAsB,SAAUtT,GAG/C,OAFAqC,KAAKs/C,OAAOruC,oBAAoBtT,GAEzBqC,MAGTukD,EAAO3zD,UAAU4wD,OAAS,SAAUvxD,EAAO8wD,EAAUzjD,GAGnD,OAFA0C,KAAKs/C,OAAOkC,OAAOvxD,EAAO8wD,EAAUzjD,GAE7B0C,MAGTtQ,OAAOC,eAAe40D,EAAO3zD,UAAW,QAAS,CAC/Cf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAOrvD,OAErBkM,IAAK,SAAUlM,GACb+P,KAAKs/C,OAAOrvD,MAAQA,GAEtBL,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe40D,EAAO3zD,UAAW,UAAW,CACjDf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAOI,SAErBvjD,IAAK,SAAUujD,GACb1/C,KAAKs/C,OAAOI,QAAUA,GAExB9vD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe40D,EAAO3zD,UAAW,QAAS,CAC/Cf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAOjF,OAErBzqD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe40D,EAAO3zD,UAAW,aAAc,CACpDf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAOF,YAErBjjD,IAAK,SAAUijD,GACbp/C,KAAKs/C,OAAOF,WAAaA,GAE3BxvD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe40D,EAAO3zD,UAAW,WAAY,CAClDf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAO1uC,UAErBhhB,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe40D,EAAO3zD,UAAW,WAAY,CAClDf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAOzuC,UAErBjhB,YAAY,EACZ4sB,cAAc,IAMhB+nC,EAAO3zD,UAAU6xB,MAAQ,SAAUgsB,GAGjC,OAFAzuC,KAAKs/C,OAAO78B,MAAMgsB,GAEXzuC,MAGFukD,EAhNT,CAiNE,IAcK,SAASG,GAAcC,EAAQz7C,EAAaq5C,EAAWC,IACxDt5C,aAAuB,IAAS0iC,EAAa1iC,IAAgBA,aAAuB,IAAUA,EAAYs7C,YAE5Gt7C,EAAYsI,sBAAsB,GAElCtI,EAAY6H,eAAe,EAAG,GAE1B7H,aAAuB,KACzBA,EAAYk2C,YAAa,IAI7B5rD,GAAQmxD,EAAQz7C,EAAaq5C,EAAWC,GC7P1C,IAAI,GAEJ,SAAUzU,GAGR,SAAS6W,IACP,IAAIvZ,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBqY,EAAUtX,cAAe9F,UAAW,CAAC,YAAcxnC,KAEtGqrC,EAAM97C,KAAO,YAKb87C,EAAMkF,QAAU,IAAI,EAASlH,KAK7BgC,EAAMwZ,YAAc,EACpB,IAAI9yD,EAAUw6C,EAAqBqY,EAAUtX,cAAe9F,UAAW,CAAC,UAgBxE,OAdA6D,EAAMwZ,YAAc9yD,EAAQ+yD,WAE5BzZ,EAAMkF,QAAQ1B,OAAO,GAGrBxD,EAAMkF,QAAQ/zC,IAAI,CAChBu/C,MAAO,EACPp+C,KAAM,EACNR,KAAM,iBACNlN,MAAOo7C,EAAM2U,UAAUjuD,EAAQ9B,SAGjCo7C,EAAMt6B,eAAehf,EAAQ9B,MAAO,GAE7Bo7C,EA+PT,OA/RAlE,EAAUyd,EAAW7W,GAmCrB6W,EAAUtX,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAMgB,cAAe,CACxCwX,WAAY,EACZzK,MAAO,QACPpqD,MAAO,KAIX20D,EAAUh0D,UAAUghB,gBAAkB,SAAU3hB,EAAO0N,EAAM80C,GAE3D90C,EAAOqC,KAAKg5C,UAAUr7C,GACtBqC,KAAK4gD,aAAajjD,GASlB,IAPA,IAAIonD,EAAgB/kD,KAAKggD,UAAU/vD,GAG/B+0D,EAAYhlD,KAAKuwC,QAAQ1gD,IAAI8N,GAE7BsnD,EAAWjnD,KAAK0J,MAAM1J,KAAKwJ,IAAI,EAAIirC,EAAU,IAExCzjD,EAAI,EAAGA,GAAKi2D,EAAUj2D,IAAK,CAClC,IAAIqyD,EAAU5O,EAAWzjD,EAAI2O,EAEzBunD,EAAUllD,KAAK2gD,qBAAqBqE,EAAUrnD,KAAMqnD,EAAU/0D,MAAO80D,EAAetS,EAAU4O,GAElGrhD,KAAK0R,wBAAwB1R,KAAK6/C,QAAQqF,GAAU7D,GAGtD,OAAOrhD,MAGT4kD,EAAUh0D,UAAUmgB,eAAiB,SAAU9gB,EAAO0N,GACpD,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAElCowC,EAAOn9C,UAAUmgB,eAAe5hB,KAAK6Q,KAAM/P,EAAO0N,GAElD,IAAIoF,EAAQ/C,KAAKuwC,QAAQ1gD,IAAIowD,GAEzBjR,EAAgBhvC,KAAKuwC,QAAQvB,cAAcjsC,GAE3CoiD,EAAiBnlD,KAAKolD,oBAAoBpW,EAAeiR,GAG7D,OADAl9C,EAAMg5C,MAAQ/9C,KAAKwJ,IAAI29C,EAAgB,GAChCnlD,MAGT4kD,EAAUh0D,UAAU8gB,wBAA0B,SAAUzhB,EAAO0N,GAC7D,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAElCowC,EAAOn9C,UAAU8gB,wBAAwBviB,KAAK6Q,KAAM/P,EAAO0N,GAE3D,IAAIoF,EAAQ/C,KAAKuwC,QAAQ1gD,IAAIowD,GAEzBjR,EAAgBhvC,KAAKuwC,QAAQvB,cAAcjsC,GAE3CoiD,EAAiBnlD,KAAKolD,oBAAoBpW,EAAeiR,GAG7D,OADAl9C,EAAMg5C,MAAQ/9C,KAAKwJ,IAAI29C,EAAgB,GAChCnlD,MAGT4kD,EAAUh0D,UAAU6gB,6BAA+B,SAAUxhB,EAAO0N,GAElEA,EAAOqC,KAAKg5C,UAAUr7C,GAWtB,IATA,IAAI0nD,EAAcrlD,KAAKggD,UAAU/vD,GAG7B+0D,EAAYhlD,KAAKuwC,QAAQ1gD,IAAI8N,GAG7BsnD,EAAWjnD,KAAK0J,MAAM1J,KAAKwJ,IAA8B,IAAzB7J,EAAOqnD,EAAUrnD,MAAY,IAC7D2nD,GAAc3nD,EAAOqnD,EAAUrnD,MAAQsnD,EAElCj2D,EAAI,EAAGA,GAAKi2D,EAAUj2D,IAAK,CAClC,IAAIqyD,EAAUiE,EAAat2D,EAAIg2D,EAAUrnD,KAErCunD,EAAUllD,KAAKygD,wBAAwBuE,EAAUrnD,KAAMqnD,EAAU/0D,MAAO0N,EAAM0nD,EAAahE,GAE/FrhD,KAAK0R,wBAAwB1R,KAAK6/C,QAAQqF,GAAU7D,GAGtD,OAAOrhD,MAUT4kD,EAAUh0D,UAAUw0D,oBAAsB,SAAUriD,EAAOpF,GACzD,GAAc,OAAVoF,EACFA,EAAQ,CACNg5C,MAAO,EACPp+C,KAAM,EACNR,KAAM,iBACNlN,MAAO,QAEJ,GAAI05C,EAAQ5mC,EAAMg5C,OAAQ,CAC/B,IAAI/M,EAAgBhvC,KAAKuwC,QAAQvB,cAAcjsC,GAE/CA,EAAMg5C,MAAQ/7C,KAAKolD,oBAAoBpW,EAAejsC,EAAMpF,MAG9D,IAAI4nD,EAAOvlD,KAAKggD,UAAUhgD,KAAK++C,eAAeh8C,EAAMpF,OAEhD6nD,EAAOxlD,KAAKggD,UAAUhgD,KAAK++C,eAAephD,IAG1C8nD,EAAiBzlD,KAAKuwC,QAAQ1gD,IAAI8N,GAMtC,OAJI8nD,GAAkBA,EAAe9nD,OAASA,GAAgC,mBAAxB8nD,EAAetoD,OACnEqoD,EAAOxlD,KAAKggD,UAAUhgD,KAAK++C,eAAephD,EAAOqC,KAAKuhD,cAGjD,IAAO5jD,EAAOoF,EAAMpF,OAAS4nD,EAAOC,GAAQziD,EAAMg5C,OAU3D6I,EAAUh0D,UAAU80D,eAAiB,SAAU/nD,GAC7C,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAE9BoF,EAAQ/C,KAAKuwC,QAAQ1gD,IAAIowD,GAE7B,OAAOjiD,KAAKwJ,IAAIxH,KAAKolD,oBAAoBriD,EAAOk9C,GAAe,IAUjE2E,EAAUh0D,UAAU+0D,mBAAqB,SAAU5J,EAAOp+C,GACxD,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAC9BioD,EAAc5lD,KAAK0lD,eAAe/nD,GACtC,OAAOqC,KAAK6lD,cAAcD,EAAc7J,GAASkE,GAQnD2E,EAAUh0D,UAAUi1D,cAAgB,SAAUC,GAC5C,IAAIzF,EAASrgD,KAAKuwC,QAAQ1gD,IAAIi2D,EAAM,SAEhChX,EAAQ9uC,KAAKuwC,QAAQ5B,SAASmX,EAAM,SAExC,GAAIzF,GAAUA,EAAOtE,QAAU+J,EAC7B,OAAOzF,EAAO1iD,KACT,GAAI0iD,GAAUvR,GAAwB,4BAAfA,EAAM3xC,MAAsCkjD,EAAOpwD,QAAU6+C,EAAM7+C,MAAO,CACtG,IAAIs1D,EAAOvlD,KAAKggD,UAAUhgD,KAAK++C,eAAesB,EAAO1iD,OAIjDooD,GAFO/lD,KAAKggD,UAAUhgD,KAAK++C,eAAejQ,EAAMnxC,OAEhC4nD,IAASzW,EAAMnxC,KAAO0iD,EAAO1iD,MAC7CyJ,EAAIpJ,KAAKkoB,KAAKloB,KAAKqB,IAAIkmD,EAAM,GAAK,EAAIQ,GAAS1F,EAAOtE,MAAQ+J,IAC9DE,IAAST,EAAOn+C,GAAK2+C,EAEzB,OAAQC,EAAO,EAAIA,IADNT,EAAOn+C,GAAK2+C,GACS1F,EAAO1iD,KACpC,OAAI0iD,EACY,IAAjBA,EAAOpwD,MACFo5C,IAEAgX,EAAO1iD,MAAQmoD,EAAOzF,EAAOtE,OAASsE,EAAOpwD,MAG/C61D,EAAO9lD,KAAKy/C,eAYvBmF,EAAUh0D,UAAUq1D,YAAc,SAAUlK,EAAOp4C,GACjD,OAAO3D,KAAK2lD,mBAAmB5J,EAAOp4C,IAYxCihD,EAAUh0D,UAAUs1D,YAAc,SAAUzoD,EAAUkG,GACpD,IAAIs8C,EAAejgD,KAAKg5C,UAAUr1C,GAC9BwiD,EAAmBnmD,KAAKg5C,UAAUv7C,GAClC2oD,EAAapmD,KAAK0lD,eAAezF,GAErC,OADejgD,KAAK0lD,eAAezF,EAAekG,GAChCC,GAOpBxB,EAAUh0D,UAAUovD,UAAY,SAAUxN,GACxC,MAAmB,QAAfxyC,KAAKq6C,OAAmBr6C,KAAK8kD,WACxB,GAAK,GAAKtS,EAAMxyC,KAAK8kD,YAErB/W,EAAOn9C,UAAUovD,UAAU7wD,KAAK6Q,KAAMwyC,IAQjDoS,EAAUh0D,UAAUivD,QAAU,SAAUrN,GACtC,MAAmB,QAAfxyC,KAAKq6C,OAAmBr6C,KAAK8kD,WACxBtS,EAAMxyC,KAAK8kD,WAAa,GAExB/W,EAAOn9C,UAAUivD,QAAQ1wD,KAAK6Q,KAAMwyC,IAI/C9iD,OAAOC,eAAei1D,EAAUh0D,UAAW,aAAc,CAIvDf,IAAK,WACH,OAAOmQ,KAAK6kD,aAEd1oD,IAAK,SAAU/M,GAGb,IAAIyxD,EAAa7gD,KAAK/P,MACtB+P,KAAK6kD,YAAcz1D,EACnB4Q,KAAKwR,sBAAsB,GAC3BxR,KAAK+Q,eAAe8vC,EAAY,IAElCjxD,YAAY,EACZ4sB,cAAc,IAETooC,EAhST,CAiSE,IChSE,GAEJ,SAAU7W,GAGR,SAASsY,IACP,IAAIhb,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB8Z,EAAW/Y,cAAe9F,UAAW,CAAC,YAAcxnC,KAEvGqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqB8Z,EAAW/Y,cAAe9F,UAAW,CAAC,UASzE,OARA6D,EAAM9mC,MAAQ8mC,EAAMiU,OAAS,IAAI,GAAU,CACzCltD,QAASi5C,EAAMj5C,QACfstD,QAAS3tD,EAAQ2tD,QACjBoF,WAAY/yD,EAAQ+yD,WACpBrW,MAAOpD,EAAMoZ,gBAAgB7gD,OAC7By2C,MAAOtoD,EAAQsoD,MACfpqD,MAAO8B,EAAQ9B,QAEVo7C,EAqDT,OApEAlE,EAAUkf,EAAYtY,GAkBtBsY,EAAW/Y,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCwX,WAAY,EACZzK,MAAO,QACPpqD,MAAO,KAIXo2D,EAAWz1D,UAAUq1D,YAAc,SAAUlK,EAAOp4C,GAClD,OAAO3D,KAAKs/C,OAAO2G,YAAYlK,EAAOp4C,IAGxC0iD,EAAWz1D,UAAUs1D,YAAc,SAAUzoD,EAAUkG,GACrD,OAAO3D,KAAKs/C,OAAO4G,YAAYzoD,EAAUkG,IAG3C0iD,EAAWz1D,UAAUi1D,cAAgB,SAAUC,GAC7C,OAAO9lD,KAAKs/C,OAAOuG,cAAcC,IAGnCO,EAAWz1D,UAAU+0D,mBAAqB,SAAU5J,EAAOp+C,GACzD,OAAOqC,KAAKs/C,OAAOqG,mBAAmB5J,EAAOp+C,IAG/C0oD,EAAWz1D,UAAU80D,eAAiB,SAAU/nD,GAC9C,OAAOqC,KAAKs/C,OAAOoG,eAAe/nD,IAGpCjO,OAAOC,eAAe02D,EAAWz1D,UAAW,aAAc,CAIxDf,IAAK,WACH,OAAOmQ,KAAKs/C,OAAOwF,YAErB3oD,IAAK,SAAU/M,GACb4Q,KAAKs/C,OAAOwF,WAAa11D,GAE3BQ,YAAY,EACZ4sB,cAAc,IAGhB6pC,EAAWz1D,UAAU+6C,QAAU,WAK7B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKs/C,OAAO3T,UAEL3rC,MAGFqmD,EArET,CAsEE,ICzEE,GAEJ,SAAUtY,GAGR,SAASuY,IACP,IAAIjb,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB+Z,EAAWhZ,cAAe9F,UAAW,CAAC,gBAAkBxnC,KAE3GqrC,EAAM97C,KAAO,aAKb87C,EAAM/9B,OAAS,IAAI,GAKnB+9B,EAAMkb,YAAc,IAAI,EACxB,IAAIx0D,EAAUw6C,EAAqB+Z,EAAWhZ,cAAe9F,UAAW,CAAC,cAazE,OAZA6D,EAAMn3B,UAAY,IAAI,GAAW,CAC/B9hB,QAASi5C,EAAMj5C,QACfioD,MAAOtoD,EAAQsoD,MACfpqD,MAAO8B,EAAQmiB,YAEjBigC,GAAS9I,EAAO,aAEhBA,EAAM/9B,OAAOwxC,eAAe,UAAW,GAGvCzT,EAAMmb,eAAe,EAAG,GAEjBnb,EA2VT,OAxXAlE,EAAUmf,EAAYvY,GAgCtBuY,EAAWhZ,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,CACnBp4B,UAAW,EACXmmC,MAAO,SACN,GAAgB/M,gBAGrB59C,OAAOC,eAAe22D,EAAW11D,UAAW,QAAS,CAInDf,IAAK,WACH,OAAOmQ,KAAKwjD,eAAexjD,KAAKqyC,QAElCziD,YAAY,EACZ4sB,cAAc,IAShB8pC,EAAW11D,UAAU8S,MAAQ,SAAU/F,EAAMiG,GAC3C,IAAIq8C,EAAejgD,KAAKg5C,UAAUr7C,GAUlC,MARiD,YAA7CqC,KAAKsN,OAAOyxC,eAAekB,KAC7BjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAElCrW,EAAUhmC,IACZ5D,KAAKwmD,eAAe5iD,EAAQq8C,IAIzBjgD,MAQTsmD,EAAW11D,UAAUmT,KAAO,SAAUpG,GACpC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAElC,GAAiD,YAA7CqC,KAAKsN,OAAOyxC,eAAekB,GAA6B,CAC1D,IAAI7Q,EAAUpvC,KAAKsN,OAAOzd,IAAIowD,GAE1B7Q,GAAWA,EAAQzxC,KAAO,IAC5BqC,KAAKumD,YAAY1X,OAAOO,EAAQzxC,MAEhCqC,KAAKsN,OAAOuhC,OAAOO,EAAQzxC,OAS/B,OALAqC,KAAKsN,OAAOuhC,OAAOoR,GAEnBjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAEtCjgD,KAAKwmD,eAAe,EAAGvG,GAChBjgD,MAQTsmD,EAAW11D,UAAU61D,MAAQ,SAAU9oD,GACrC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAMlC,MAJiD,YAA7CqC,KAAKsN,OAAOyxC,eAAekB,IAC7BjgD,KAAKsN,OAAOwxC,eAAe,SAAUmB,GAGhCjgD,MAQTsmD,EAAW11D,UAAUi+C,OAAS,SAAUlxC,GAOtC,OANAA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKsN,OAAOuhC,OAAOlxC,GAEnBqC,KAAKumD,YAAY1X,OAAOlxC,GAEjBqC,MASTsmD,EAAW11D,UAAU80D,eAAiB,SAAU/nD,GAC9C,IAAI0tC,EAAQrrC,KAERigD,EAAejgD,KAAKg5C,UAAUr7C,GAE9B+oD,EAAY1mD,KAAKsN,OAAO0xC,aAAa,UAAWiB,GAGhD0G,EAAW,CACbp5C,MAAO,SACP5P,KAAMsiD,GAGRjgD,KAAKsN,OAAO9Q,IAAImqD,GAGhB,IAAIC,EAAYF,EACZG,EAAe,EAuBnB,OArBA7mD,KAAKsN,OAAOqiC,eAAe+W,EAAU/oD,KAAMsiD,EAAejgD,KAAKuhD,YAAY,SAAUvZ,GACnF,IAAI8e,EAAkBF,EAAUjpD,KAE5BopD,EAAc1b,EAAMkb,YAAY12D,IAAIm4C,EAAErqC,MAEtCopD,GAAeA,EAAYppD,MAAQipD,EAAUjpD,OAC/CkpD,EAAeE,EAAYhL,MAC3B+K,EAAkBC,EAAYppD,MAGR,YAApBipD,EAAUr5C,OAAmC,YAAZy6B,EAAEz6B,QACrCs5C,GAAgBxb,EAAMn3B,UAAUwxC,eAAe1d,EAAErqC,MAAQ0tC,EAAMn3B,UAAUwxC,eAAeoB,IAG1FF,EAAY5e,KAIdhoC,KAAKsN,OAAOkhC,OAAOmY,GAGZE,GAGTn3D,OAAOC,eAAe22D,EAAW11D,UAAW,QAAS,CAKnDf,IAAK,WACH,OAAOmQ,KAAK0lD,eAAe1lD,KAAKqyC,QAElCl2C,IAAK,SAAUjM,GACb8P,KAAKwmD,eAAet2D,EAAG8P,KAAKqyC,QAE9BziD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe22D,EAAW11D,UAAW,UAAW,CAKrDf,IAAK,WACH,OAAOmQ,KAAKgnD,iBAAiBhnD,KAAKqyC,QAEpCl2C,IAAK,SAAUpL,GACb,IAAIshD,EAAMryC,KAAKqyC,MACX0J,EAAQ/7C,KAAKkU,UAAUgyC,YAAYn1D,EAAGshD,GAC1CryC,KAAKwmD,eAAezK,EAAO1J,IAE7BziD,YAAY,EACZ4sB,cAAc,IAQhB8pC,EAAW11D,UAAUo2D,iBAAmB,SAAUrpD,GAChD,IAAI0tC,EAAQrrC,KAEZrC,EAAOqC,KAAKg5C,UAAUr7C,GAEtB,IAAI+oD,EAAY1mD,KAAKsN,OAAO0xC,aAAa,UAAWrhD,GAGhDgpD,EAAW,CACbp5C,MAAO,SACP5P,KAAMA,GAGRqC,KAAKsN,OAAO9Q,IAAImqD,GAGhB,IAAIC,EAAYF,EACZO,EAAiB,EAuBrB,OArBAjnD,KAAKsN,OAAOqiC,eAAe+W,EAAU/oD,KAAMA,EAAOqC,KAAKuhD,YAAY,SAAUvZ,GAC3E,IAAI8e,EAAkBF,EAAUjpD,KAE5BopD,EAAc1b,EAAMkb,YAAY12D,IAAIm4C,EAAErqC,MAEtCopD,GAAeA,EAAYppD,MAAQipD,EAAUjpD,OAC/CspD,EAAiBF,EAAYjL,QAC7BgL,EAAkBC,EAAYppD,MAGR,YAApBipD,EAAUr5C,OAAmC,YAAZy6B,EAAEz6B,QACrC05C,GAAkBjf,EAAErqC,KAAOmpD,GAG7BF,EAAY5e,KAIdhoC,KAAKsN,OAAOkhC,OAAOmY,GAGZM,GASTX,EAAW11D,UAAU41D,eAAiB,SAAUzK,EAAOp+C,GAWrD,OAVAA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKumD,YAAY1X,OAAOlxC,GAExBqC,KAAKumD,YAAY/pD,IAAI,CACnBs/C,QAAS97C,KAAKkU,UAAUyxC,mBAAmB5J,EAAOp+C,GAClDo+C,MAAOA,EACPp+C,KAAMA,IAGDqC,MAQTsmD,EAAW11D,UAAU4yD,eAAiB,SAAU7lD,GAE9C,OADAA,EAAOqC,KAAKg5C,UAAUr7C,GACfqC,KAAKsN,OAAOyxC,eAAephD,IAYpC2oD,EAAW11D,UAAUi1D,cAAgB,SAAUC,EAAMzF,QACpC,IAAXA,IACFA,EAASrgD,KAAKqyC,OAGhB,IAAIzuC,EAAS5D,KAAKumD,YAAY12D,IAAIwwD,GAE9Bt9C,EAAQ/C,KAAKsN,OAAOzd,IAAIwwD,GAExB/iD,EAAYU,KAAKwJ,IAAI5D,EAAOjG,KAAMoF,EAAMpF,MACxCupD,EAAgBlnD,KAAKkU,UAAUwxC,eAAepoD,GAAawoD,EAAOliD,EAAOm4C,MAC7E,OAAO/7C,KAAKkU,UAAU2xC,cAAcqB,IAWtCZ,EAAW11D,UAAUu2D,mBAAqB,SAAU7pD,EAAWL,EAASqJ,GACtE,IAAI+kC,EAAQrrC,KAGRonD,EAAiBpnD,KAAKsN,OAAOzd,IAAIyN,GAErC0C,KAAKsN,OAAOqiC,eAAeryC,EAAWL,GAAS,SAAU8F,GACnDqkD,GAA2C,YAAzBA,EAAe75C,OAAuC,YAAhBxK,EAAMwK,OAChE89B,EAAM8b,mBAAmBnpD,KAAKwJ,IAAI4/C,EAAezpD,KAAML,GAAYyF,EAAMpF,KAAO0tC,EAAMkW,WAAYj7C,GAGpG8gD,EAAiBrkD,KAGnB,IAAI4Y,EAAQ,KAEZ,GAAIyrC,GAA2C,YAAzBA,EAAe75C,MAAqB,CACxD,IAAI85C,EAAerpD,KAAKwJ,IAAI4/C,EAAezpD,KAAML,GAE7C8oD,EAAapmD,KAAKkU,UAAUwxC,eAAe2B,GAE3C9Y,EAAO6X,EADQpmD,KAAKkU,UAAUwxC,eAAe0B,EAAezpD,MAE5DiG,EAAS5F,KAAK4B,KAAK2uC,GAAQA,EAE/B3qC,EAAS+pC,EAAG/pC,EAAQ,GAAK,EAAIA,EAG7B,IAFA,IAAI0jD,EAAetnD,KAAKkU,UAAU2xC,cAAcO,EAAaxiD,GAEtD0jD,EAAerqD,GAAS,CAC7B,IACEqJ,EAASghD,EAActpD,KAAK0J,MAAM1H,KAAK0lD,eAAe4B,KACtD,MAAOtf,GACPrsB,EAAQqsB,EACR,MAGFsf,GAAgBtnD,KAAKkU,UAAUyxC,mBAAmB,EAAG2B,IAIzD,GAAI3rC,EACF,MAAMA,EAGR,OAAO3b,MAOTsmD,EAAW11D,UAAU+6C,QAAU,WAQ7B,OAPAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsN,OAAOq+B,UAEZ3rC,KAAKumD,YAAY5a,UAEjB3rC,KAAKkU,UAAUy3B,UACR3rC,MAGFsmD,EAzXT,CA0XE,ICjXE,GAEJ,SAAUvY,GAGR,SAASwZ,IACP,IAAIlc,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgb,EAAMja,cAAe9F,UAAW,CAAC,WAAY,gBAAkBxnC,KAElHqrC,EAAM97C,KAAO,QAKb87C,EAAM/kC,SAAW+tC,GAKjBhJ,EAAMmc,YAAc,EAKpBnc,EAAM/9B,OAAS,IAAI,GAAc,WAMjC+9B,EAAMoc,WAAapc,EAAMqc,MAAMl3D,KAAK66C,GACpC,IAAIt5C,EAAUw6C,EAAqBgb,EAAMja,cAAe9F,UAAW,CAAC,WAAY,cAgBhF,OAfA6D,EAAM/kC,SAAWvU,EAAQuU,SACzB+kC,EAAMsc,YAAc,IAAI,GAAW,CACjCv1D,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnBmmC,MAAOtoD,EAAQsoD,QAEjBhP,EAAMmc,YAAc,EACpBnc,EAAMn3B,UAAYm3B,EAAMsc,YAAYzzC,UACpCigC,GAAS9I,EAAO,aAEhBA,EAAM/9B,OAAOwxC,eAAe,UAAW,GAGvCzT,EAAMj5C,QAAQg+C,GAAG,OAAQ/E,EAAMoc,YAExBpc,EAoQT,OA/SAlE,EAAUogB,EAAOxZ,GA8CjBwZ,EAAMja,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAgBgB,cAAe,CAClDhnC,SAAU+tC,GACVngC,UAAW,EACXmmC,MAAO,WAIX3qD,OAAOC,eAAe43D,EAAM32D,UAAW,QAAS,CAI9Cf,IAAK,WACH,OAAOmQ,KAAKsN,OAAOyxC,eAAe/+C,KAAKqyC,QAEzCziD,YAAY,EACZ4sB,cAAc,IAShB+qC,EAAM32D,UAAU8S,MAAQ,SAAU/F,EAAMiG,GAEtC0lC,EAAqBtpC,KAAK5N,SAE1B,IAAI6tD,EAAejgD,KAAKg5C,UAAUr7C,GAalC,OAZAqC,KAAK0pC,IAAI,QAASuW,GAE+B,YAA7CjgD,KAAKsN,OAAOyxC,eAAekB,KAC7BjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAEtCjgD,KAAK2nD,YAAYjkD,MAAMu8C,EAAcr8C,GAEjCq8C,EAAejgD,KAAKwnD,aACtBxnD,KAAK4wC,KAAK,QAASqP,EAAcr8C,IAI9B5D,MAeTunD,EAAM32D,UAAUmT,KAAO,SAAUpG,GAC/B,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAalC,OAZAqC,KAAK0pC,IAAI,OAAQuW,GAEjBjgD,KAAKsN,OAAOuhC,OAAOoR,GAEnBjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAEtCjgD,KAAK2nD,YAAY5jD,KAAKk8C,GAElBA,EAAejgD,KAAKwnD,aACtBxnD,KAAK4wC,KAAK,OAAQqP,GAGbjgD,MAQTunD,EAAM32D,UAAU61D,MAAQ,SAAU9oD,GAChC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAYlC,MAViD,YAA7CqC,KAAKsN,OAAOyxC,eAAekB,KAC7BjgD,KAAKsN,OAAOwxC,eAAe,SAAUmB,GAErCjgD,KAAK2nD,YAAYlB,MAAMxG,GAEnBA,EAAejgD,KAAKwnD,aACtBxnD,KAAK4wC,KAAK,QAASqP,IAIhBjgD,MAGTtQ,OAAOC,eAAe43D,EAAM32D,UAAW,QAAS,CAK9Cf,IAAK,WACH,OAAOmO,KAAK4B,KAAKI,KAAK0lD,eAAe1lD,KAAKqyC,SAE5Cl2C,IAAK,SAAUjM,GACb8P,KAAK2nD,YAAY5L,MAAQ7rD,GAE3BN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43D,EAAM32D,UAAW,UAAW,CAIhDf,IAAK,WACH,OAAOmQ,KAAK2nD,YAAY7L,SAE1B3/C,IAAK,SAAUpL,GACbiP,KAAK2nD,YAAY7L,QAAU/qD,GAE7BnB,YAAY,EACZ4sB,cAAc,IAQhB+qC,EAAM32D,UAAUo2D,iBAAmB,SAAUrpD,GAC3C,OAAOqC,KAAK2nD,YAAYX,iBAAiBrpD,IAS3C4pD,EAAM32D,UAAU41D,eAAiB,SAAUzK,EAAOp+C,GAGhD,OAFAqC,KAAK2nD,YAAYnB,eAAezK,EAAOp+C,GAEhCqC,MAYTunD,EAAM32D,UAAUi1D,cAAgB,SAAUC,EAAMzF,GAK9C,YAJe,IAAXA,IACFA,EAASrgD,KAAKqyC,OAGTryC,KAAK2nD,YAAY9B,cAAcC,EAAMzF,IAS9CkH,EAAM32D,UAAU80D,eAAiB,SAAU/nD,GACzC,OAAOqC,KAAK2nD,YAAYjC,eAAe/nD,IAQzC4pD,EAAM32D,UAAU02D,aAAe,SAAU1jD,EAAQD,GAC/C,IAAIs8C,EAAejgD,KAAKg5C,UAAUr1C,GAC9BiiD,EAAc5lD,KAAK0lD,eAAezF,GACtC,OAAOjgD,KAAK2nD,YAAY9B,cAAcD,EAAchiD,EAAQq8C,IAO9DsH,EAAM32D,UAAU82D,MAAQ,WACtB,IAAIrc,EAAQrrC,KAER1C,EAAY0C,KAAKwnD,YACjBvqD,EAAU+C,KAAKqyC,MACnBryC,KAAKwnD,YAAcvqD,EACnB+C,KAAK0pC,IAAI,OAAQpsC,EAAWL,GAExBK,IAAcL,IAEhB+C,KAAKsN,OAAOqiC,eAAeryC,EAAWL,GAAS,SAAU+qC,GACvD,OAAQA,EAAEz6B,OACR,IAAK,UACH,IAAI3J,EAASynC,EAAMsc,YAAYjC,eAAe1d,EAAErqC,MAEhD0tC,EAAMuF,KAAK,QAAS5I,EAAErqC,KAAMiG,GAE5B,MAEF,IAAK,UACY,IAAXokC,EAAErqC,MACJ0tC,EAAMuF,KAAK,OAAQ5I,EAAErqC,MAGvB,MAEF,IAAK,SACH0tC,EAAMuF,KAAK,QAAS5I,EAAErqC,UAO5BqC,KAAK2nD,YAAYR,mBAAmB7pD,EAAWL,GAAS,SAAUU,EAAMo+C,GACtE1Q,EAAM/kC,SAAS3I,EAAMo+C,QAe3BwL,EAAM32D,UAAU4yD,eAAiB,SAAU7lD,GACzC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAClC,OAAOqC,KAAKsN,OAAOyxC,eAAekB,IAOpCsH,EAAM32D,UAAU+6C,QAAU,WASxB,OARAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK5N,QAAQs+C,IAAI,OAAQ1wC,KAAKynD,YAE9BznD,KAAK2nD,YAAYhc,UAEjB3rC,KAAKsN,OAAOq+B,UAEL3rC,MAGFunD,EAhTT,CAiTE,IAGF,EAAQ1W,MAAM,ICvUd,IAAI,GAEJ,SAAU9C,GAOR,SAAS6Z,EAAcC,GACrB,IAAIxc,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAWjC,OATAqrC,EAAM97C,KAAO,gBAKb87C,EAAM4C,UAAY,IAAI,EAAS,CAC7BC,OAAQ,KAEV7C,EAAMoU,cAAgBoI,EACfxc,EA8BT,OAhDAlE,EAAUygB,EAAe7Z,GAyBzB6Z,EAAch3D,UAAUuL,IAAM,SAAUlM,EAAO0N,GAM7C,OALAqC,KAAKiuC,UAAUzxC,IAAI,CACjBvM,MAAOA,EACP0N,KAAMA,IAGDqC,MAOT4nD,EAAch3D,UAAUf,IAAM,SAAU8N,GACtC,IAAIoF,EAAQ/C,KAAKiuC,UAAUp+C,IAAI8N,GAE/B,OAAIoF,EACKA,EAAM9S,MAEN+P,KAAKy/C,eAITmI,EAjDT,CAkDE,GC/CE,GAEJ,SAAU7Z,GAGR,SAAS+Z,IACP,IAAIzc,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAIhE,OAFAqrC,EAAM97C,KAAO,QACb87C,EAAMiP,aAAe,IACdjP,EAmDT,OA1DAlE,EAAU2gB,EAAY/Z,GActB+Z,EAAWl3D,UAAUynD,KAAO,WAC1B,OAAOr4C,KAAK5N,QAAQsmD,UAAUqD,OAOhC+L,EAAWl3D,UAAU6oD,cAAgB,SAAUmC,GAC7C,OAAO57C,KAAKi6C,UAAY2B,GAO1BkM,EAAWl3D,UAAU6nD,gBAAkB,SAAUqD,GAC/C,OAAO99C,KAAK0B,MAAMo8C,GAAW,GAAK97C,KAAK67C,WAAa77C,KAAKi6C,YAO3D6N,EAAWl3D,UAAU+pD,cAAgB,SAAUoB,GAC7C,OAAOA,GAOT+L,EAAWl3D,UAAUopD,QAAU,WAC7B,OAAOh6C,KAAKouC,WAOd0Z,EAAWl3D,UAAUooD,UAAY,WAC/B,OAAOh5C,KAAKouC,UAAYpuC,KAAKi6C,WAAa,GAAKj6C,KAAK67C,YAG/CiM,EA3DT,CA4DE,IC7DF,IAAI,GAEJ,SAAU/Z,GAGR,SAASga,IACP,IAAI1c,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAahE,OAXAqrC,EAAM97C,KAAO,mBAKb87C,EAAM2c,MAAQ,KAKd3c,EAAMrpB,QAAU,EACTqpB,EAwYT,OAxZAlE,EAAU4gB,EAAkBha,GAyB5Bga,EAAiBn3D,UAAU4L,IAAM,SAAUuG,GACzCimC,EAAOY,EAAU7mC,EAAMpF,MAAO,oCAC9BqrC,EAAOY,EAAU7mC,EAAMtF,UAAW,yCAClCsF,EAAMpF,KAAOoF,EAAMpF,KAAKywC,UACxB,IAAI8T,EAAO,IAAI+F,GAAallD,EAAMpF,KAAMoF,EAAMpF,KAAOoF,EAAMtF,SAAUsF,GAUrE,IARmB,OAAf/C,KAAKgoD,MACPhoD,KAAKgoD,MAAQ9F,EAEbliD,KAAKgoD,MAAME,OAAOhG,GAGpBliD,KAAKgiB,UAEW,OAATkgC,GACLA,EAAKiG,eACLjG,EAAKkG,YAELpoD,KAAKqoD,WAAWnG,GAEhBA,EAAOA,EAAKt9C,OAGd,OAAO5E,MAQT+nD,EAAiBn3D,UAAU49C,OAAS,SAAUzrC,GAC5C,IAAIuzC,EAAKpK,EAET,GAAmB,OAAflsC,KAAKgoD,MAAgB,CACvB,IAAIM,EAAU,GAEdtoD,KAAKgoD,MAAMO,OAAOxlD,EAAMpF,KAAM2qD,GAE9B,IACE,IAAK,IAAIE,EAAY5f,EAAS0f,GAAUG,EAAcD,EAAU/nB,QAASgoB,EAAY/nB,KAAM+nB,EAAcD,EAAU/nB,OAAQ,CACzH,IAAIyhB,EAAOuG,EAAYx4D,MAEvB,GAAIiyD,EAAKn/C,QAAUA,EAAO,CACxB/C,KAAK0oD,YAAYxG,GAEjBliD,KAAKgiB,UACL,QAGJ,MAAOw0B,GACPF,EAAM,CACJ36B,MAAO66B,GAET,QACA,IACMiS,IAAgBA,EAAY/nB,OAASwL,EAAKsc,EAAU/R,SAASvK,EAAG/8C,KAAKq5D,GACzE,QACA,GAAIlS,EAAK,MAAMA,EAAI36B,QAKzB,OAAO3b,MAGTtQ,OAAOC,eAAeo4D,EAAiBn3D,UAAW,SAAU,CAK1Df,IAAK,WACH,OAAOmQ,KAAKgiB,SAEdpyB,YAAY,EACZ4sB,cAAc,IAOhBurC,EAAiBn3D,UAAUi+C,OAAS,SAAUC,GAC5C,IAAIzD,EAAQrrC,KAKZ,OAHAA,KAAK4vC,YAAYd,GAAO,SAAU/rC,GAChC,OAAOsoC,EAAMmD,OAAOzrC,MAEf/C,MAOT+nD,EAAiBn3D,UAAU+3D,SAAW,SAAUzG,GAC9CliD,KAAKgoD,MAAQ9F,EAEM,OAAfliD,KAAKgoD,QACPhoD,KAAKgoD,MAAMpjD,OAAS,OASxBmjD,EAAiBn3D,UAAUg4D,qBAAuB,SAAU1G,EAAM2G,GAC5C,OAAhB3G,EAAKt9C,QACHs9C,EAAK4G,cACP5G,EAAKt9C,OAAOmkD,KAAOF,EAEnB3G,EAAKt9C,OAAOokD,MAAQH,EAGtB7oD,KAAKqoD,WAAWnG,EAAKt9C,SAErB5E,KAAK2oD,SAASE,IASlBd,EAAiBn3D,UAAU83D,YAAc,SAAUxG,GACjD,GAAkB,OAAdA,EAAK6G,MAAgC,OAAf7G,EAAK8G,MAC7BhpD,KAAK4oD,qBAAqB1G,EAAM,WAC3B,GAAmB,OAAfA,EAAK8G,MACdhpD,KAAK4oD,qBAAqB1G,EAAMA,EAAK6G,WAChC,GAAkB,OAAd7G,EAAK6G,KACd/oD,KAAK4oD,qBAAqB1G,EAAMA,EAAK8G,WAChC,CACL,IACIH,OAAc,EACdI,EAAO,KAEX,GAJc/G,EAAKgH,aAIL,EACZ,GAAwB,OAApBhH,EAAK6G,KAAKC,OACZH,EAAc3G,EAAK6G,MACPC,MAAQ9G,EAAK8G,MACzBC,EAAOJ,MACF,CAGL,IAFAA,EAAc3G,EAAK6G,KAAKC,MAEK,OAAtBH,EAAYG,OACjBH,EAAcA,EAAYG,MAGxBH,EAAYjkD,SACdikD,EAAYjkD,OAAOokD,MAAQH,EAAYE,KACvCE,EAAOJ,EAAYjkD,OACnBikD,EAAYE,KAAO7G,EAAK6G,KACxBF,EAAYG,MAAQ9G,EAAK8G,YAGxB,GAAwB,OAApB9G,EAAK8G,MAAMD,MACpBF,EAAc3G,EAAK8G,OACPD,KAAO7G,EAAK6G,KACxBE,EAAOJ,MACF,CAGL,IAFAA,EAAc3G,EAAK8G,MAAMD,KAEG,OAArBF,EAAYE,MACjBF,EAAcA,EAAYE,KAGxBF,EAAYjkD,SACdikD,EAAYjkD,OAAOmkD,KAAOF,EAAYG,MACtCC,EAAOJ,EAAYjkD,OACnBikD,EAAYE,KAAO7G,EAAK6G,KACxBF,EAAYG,MAAQ9G,EAAK8G,OAIT,OAAhB9G,EAAKt9C,OACHs9C,EAAK4G,cACP5G,EAAKt9C,OAAOmkD,KAAOF,EAEnB3G,EAAKt9C,OAAOokD,MAAQH,EAGtB7oD,KAAK2oD,SAASE,GAGZI,GACFjpD,KAAKqoD,WAAWY,GAIpB/G,EAAKvW,WAOPoc,EAAiBn3D,UAAUu4D,YAAc,SAAUjH,GACjD,IAAIt9C,EAASs9C,EAAKt9C,OACdkkD,EAAc5G,EAAK4G,cAEnBM,EAAYlH,EAAK8G,MAEjBI,IACFlH,EAAK8G,MAAQI,EAAUL,KACvBK,EAAUL,KAAO7G,GAGJ,OAAXt9C,EACEkkD,EACFlkD,EAAOmkD,KAAOK,EAEdxkD,EAAOokD,MAAQI,EAGjBppD,KAAK2oD,SAASS,IAQlBrB,EAAiBn3D,UAAUy4D,aAAe,SAAUnH,GAClD,IAAIt9C,EAASs9C,EAAKt9C,OACdkkD,EAAc5G,EAAK4G,cAEnBM,EAAYlH,EAAK6G,KAEjBK,IACFlH,EAAK6G,KAAOK,EAAUJ,MACtBI,EAAUJ,MAAQ9G,GAGL,OAAXt9C,EACEkkD,EACFlkD,EAAOmkD,KAAOK,EAEdxkD,EAAOokD,MAAQI,EAGjBppD,KAAK2oD,SAASS,IAQlBrB,EAAiBn3D,UAAUy3D,WAAa,SAAUnG,GAChD,IAAIoH,EAAUpH,EAAKgH,aAEfI,EAAU,GAAKpH,EAAK6G,KAClB7G,EAAK6G,KAAKG,aAAe,EAC3BlpD,KAAKmpD,YAAYjH,EAAK6G,MAEtB/oD,KAAKqpD,aAAanH,GAEXoH,GAAW,GAAKpH,EAAK8G,QAC1B9G,EAAK8G,MAAME,aAAe,EAC5BlpD,KAAKqpD,aAAanH,EAAK8G,OAEvBhpD,KAAKmpD,YAAYjH,KAWvB6F,EAAiBn3D,UAAUf,IAAM,SAAU8N,GACzC,GAAmB,OAAfqC,KAAKgoD,MAAgB,CACvB,IAAIM,EAAU,GAId,GAFAtoD,KAAKgoD,MAAMO,OAAO5qD,EAAM2qD,GAEpBA,EAAQ1pD,OAAS,EAAG,CAGtB,IAFA,IAAI4I,EAAM8gD,EAAQ,GAETt5D,EAAI,EAAGA,EAAIs5D,EAAQ1pD,OAAQ5P,IAC9Bs5D,EAAQt5D,GAAGu6D,IAAM/hD,EAAI+hD,MACvB/hD,EAAM8gD,EAAQt5D,IAIlB,OAAOwY,EAAIzE,OAIf,OAAO,MAQTglD,EAAiBn3D,UAAU+L,QAAU,SAAU2J,GAC7C,GAAmB,OAAftG,KAAKgoD,MAAgB,CACvB,IAAIwB,EAAa,GAEjBxpD,KAAKgoD,MAAMyB,UAAS,SAAUvH,GAC5B,OAAOsH,EAAW5oD,KAAKshD,MAGzBsH,EAAW7sD,SAAQ,SAAUulD,GACvBA,EAAKn/C,OACPuD,EAAS47C,EAAKn/C,UAKpB,OAAO/C,MAUT+nD,EAAiBn3D,UAAUi/C,cAAgB,SAAUlyC,EAAM2I,GACzD,GAAmB,OAAftG,KAAKgoD,MAAgB,CACvB,IAAIM,EAAU,GAEdtoD,KAAKgoD,MAAMO,OAAO5qD,EAAM2qD,GAExBA,EAAQ3rD,SAAQ,SAAUulD,GACpBA,EAAKn/C,OACPuD,EAAS47C,EAAKn/C,UAKpB,OAAO/C,MAUT+nD,EAAiBn3D,UAAUg/C,YAAc,SAAUjyC,EAAM2I,GACvD,GAAmB,OAAftG,KAAKgoD,MAAgB,CACvB,IAAIM,EAAU,GAEdtoD,KAAKgoD,MAAM0B,YAAY/rD,EAAM2qD,GAE7BA,EAAQ3rD,SAAQ,SAAUulD,GACpBA,EAAKn/C,OACPuD,EAAS47C,EAAKn/C,UAKpB,OAAO/C,MAOT+nD,EAAiBn3D,UAAU+6C,QAAU,WAUnC,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAEX,OAAfA,KAAKgoD,OACPhoD,KAAKgoD,MAAMyB,UAAS,SAAUvH,GAC5B,OAAOA,EAAKvW,aAIhB3rC,KAAKgoD,MAAQ,KACNhoD,MAGF+nD,EAzZT,CA0ZE,GAiBEE,GAEJ,WACE,SAASA,EAAasB,EAAKI,EAAM5mD,GAE/B/C,KAAK4pD,MAAQ,KAEb5pD,KAAK6pD,OAAS,KAEd7pD,KAAK4E,OAAS,KAEd5E,KAAK8pD,OAAS,EACd9pD,KAAK+C,MAAQA,EAEb/C,KAAKupD,IAAMA,EAEXvpD,KAAK2pD,KAAOA,EAEZ3pD,KAAKwH,IAAMxH,KAAK2pD,KA+MlB,OAxMA1B,EAAar3D,UAAUs3D,OAAS,SAAUhG,GACpCA,EAAKqH,KAAOvpD,KAAKupD,IACD,OAAdvpD,KAAK+oD,KACP/oD,KAAK+oD,KAAO7G,EAEZliD,KAAK+oD,KAAKb,OAAOhG,GAEK,OAAfliD,KAAKgpD,MACdhpD,KAAKgpD,MAAQ9G,EAEbliD,KAAKgpD,MAAMd,OAAOhG,IAWtB+F,EAAar3D,UAAU23D,OAAS,SAAUwB,EAAOzB,GAG3CyB,EAAQ/pD,KAAKwH,MAKC,OAAdxH,KAAK+oD,MACP/oD,KAAK+oD,KAAKR,OAAOwB,EAAOzB,GAItBtoD,KAAKupD,KAAOQ,GAAS/pD,KAAK2pD,KAAOI,GACnCzB,EAAQ1nD,KAAKZ,MAKXA,KAAKupD,IAAMQ,GAKI,OAAf/pD,KAAKgpD,OACPhpD,KAAKgpD,MAAMT,OAAOwB,EAAOzB,KAW7BL,EAAar3D,UAAU84D,YAAc,SAAUK,EAAOzB,GAEhDtoD,KAAKupD,KAAOQ,IACdzB,EAAQ1nD,KAAKZ,MAEK,OAAdA,KAAK+oD,MACP/oD,KAAK+oD,KAAKW,YAAYK,EAAOzB,IAKd,OAAftoD,KAAKgpD,OACPhpD,KAAKgpD,MAAMU,YAAYK,EAAOzB,IASlCL,EAAar3D,UAAU64D,SAAW,SAAUnjD,GAC1CA,EAAStG,MAES,OAAdA,KAAK+oD,MACP/oD,KAAK+oD,KAAKU,SAASnjD,GAGF,OAAftG,KAAKgpD,OACPhpD,KAAKgpD,MAAMS,SAASnjD,IAQxB2hD,EAAar3D,UAAUu3D,aAAe,WAClB,OAAdnoD,KAAK+oD,MAAgC,OAAf/oD,KAAKgpD,MAC7BhpD,KAAK8pD,OAAS9rD,KAAKwJ,IAAIxH,KAAK+oD,KAAKe,OAAQ9pD,KAAKgpD,MAAMc,QAAU,EACtC,OAAf9pD,KAAKgpD,MACdhpD,KAAK8pD,OAAS9pD,KAAKgpD,MAAMc,OAAS,EACX,OAAd9pD,KAAK+oD,KACd/oD,KAAK8pD,OAAS9pD,KAAK+oD,KAAKe,OAAS,EAEjC9pD,KAAK8pD,OAAS,GAQlB7B,EAAar3D,UAAUw3D,UAAY,WACjCpoD,KAAKwH,IAAMxH,KAAK2pD,KAEE,OAAd3pD,KAAK+oD,OACP/oD,KAAKwH,IAAMxJ,KAAKwJ,IAAIxH,KAAKwH,IAAKxH,KAAK+oD,KAAKvhD,MAGvB,OAAfxH,KAAKgpD,QACPhpD,KAAKwH,IAAMxJ,KAAKwJ,IAAIxH,KAAKwH,IAAKxH,KAAKgpD,MAAMxhD,OAS7CygD,EAAar3D,UAAUs4D,WAAa,WAClC,IAAII,EAAU,EAUd,OARkB,OAAdtpD,KAAK+oD,MAAgC,OAAf/oD,KAAKgpD,MAC7BM,EAAUtpD,KAAK+oD,KAAKe,OAAS9pD,KAAKgpD,MAAMc,OACjB,OAAd9pD,KAAK+oD,KACdO,EAAUtpD,KAAK+oD,KAAKe,OAAS,EACL,OAAf9pD,KAAKgpD,QACdM,IAAYtpD,KAAKgpD,MAAMc,OAAS,IAG3BR,GAOTrB,EAAar3D,UAAUk4D,YAAc,WACnC,OAAuB,OAAhB9oD,KAAK4E,QAAmB5E,KAAK4E,OAAOmkD,OAAS/oD,MAGtDtQ,OAAOC,eAAes4D,EAAar3D,UAAW,OAAQ,CAIpDf,IAAK,WACH,OAAOmQ,KAAK4pD,OAEdztD,IAAK,SAAU+lD,GACbliD,KAAK4pD,MAAQ1H,EAEA,OAATA,IACFA,EAAKt9C,OAAS5E,MAGhBA,KAAKmoD,eACLnoD,KAAKooD,aAEPx4D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAes4D,EAAar3D,UAAW,QAAS,CAIrDf,IAAK,WACH,OAAOmQ,KAAK6pD,QAEd1tD,IAAK,SAAU+lD,GACbliD,KAAK6pD,OAAS3H,EAED,OAATA,IACFA,EAAKt9C,OAAS5E,MAGhBA,KAAKmoD,eACLnoD,KAAKooD,aAEPx4D,YAAY,EACZ4sB,cAAc,IAMhByrC,EAAar3D,UAAU+6C,QAAU,WAC/B3rC,KAAK4E,OAAS,KACd5E,KAAK4pD,MAAQ,KACb5pD,KAAK6pD,OAAS,KACd7pD,KAAK+C,MAAQ,MAGRklD,EA/NT,GCrbI,GAEJ,WAIE,SAAS+B,EAAetR,EAAW/L,GAIjC3sC,KAAK8mB,GAAKkjC,EAAeC,WACzB,IAAIl4D,EAAUrC,OAAO48C,OAAO0d,EAAe1c,cAAeX,GAC1D3sC,KAAK04C,UAAYA,EACjB14C,KAAKsG,SAAWvU,EAAQuU,SACxBtG,KAAKkqD,MAAQn4D,EAAQy+C,KACrBxwC,KAAKrC,KAAO5L,EAAQ4L,KAwCtB,OArCAqsD,EAAe1c,YAAc,WAC3B,MAAO,CACLhnC,SAAU+tC,GACV7D,MAAM,EACN7yC,KAAM,IASVqsD,EAAep5D,UAAUszC,OAAS,SAAUvmC,GACtCqC,KAAKsG,WACPtG,KAAKsG,SAAS3I,GAEVqC,KAAKkqD,OACPlqD,KAAK04C,UAAUh2B,MAAM1iB,KAAK8mB,MAShCkjC,EAAep5D,UAAU+6C,QAAU,WAEjC,OADA3rC,KAAKsG,cAAW/T,EACTyN,MAOTgqD,EAAeC,SAAW,EACnBD,EArDT,GCDI,GAEJ,SAAUjc,GAOR,SAASoc,EAAqBzR,EAAW/L,GACvC,IAAItB,EAAQ0C,EAAO5+C,KAAK6Q,KAAM04C,EAAW/L,IAAS3sC,KAMlDqrC,EAAM+e,YAAc,EAKpB/e,EAAMgf,SAAW,EAKjBhf,EAAMif,UAAYjf,EAAM1tC,KAKxB0tC,EAAMkf,cAAgBlf,EAAMmf,SAASh6D,KAAK66C,GAC1C,IAAIt5C,EAAUrC,OAAO48C,OAAO6d,EAAqB7c,cAAeX,GAahE,OAZAtB,EAAM5tC,SAAW,IAAI,GAAWi7C,EAAUtmD,QAASL,EAAQ0L,UAAU2wC,UACrE/C,EAAM4I,UAAY,IAAI,GAAWyE,EAAUtmD,QAASL,EAAQ25C,UAAU0C,UACtE/C,EAAMif,UAAYv4D,EAAQ4L,KAE1B0tC,EAAMqN,UAAUtI,GAAG,QAAS/E,EAAMkf,eAElClf,EAAMqN,UAAUtI,GAAG,YAAa/E,EAAMkf,eAEtClf,EAAMj5C,QAAUi5C,EAAMqN,UAAUtmD,QAEhCi5C,EAAMmf,WAECnf,EAyET,OAnHAlE,EAAUgjB,EAAsBpc,GA6ChCoc,EAAqB7c,YAAc,WACjC,OAAO59C,OAAO48C,OAAO,GAAI,GAAegB,cAAe,CACrD7vC,SAAU4rC,IACVqC,SAAU,EACV8E,MAAM,KAUV2Z,EAAqBv5D,UAAUszC,OAAS,SAAUvmC,GAEhDqC,KAAKyqD,cAAc9sD,GAGnBowC,EAAOn9C,UAAUszC,OAAO/0C,KAAK6Q,KAAMrC,IAOrCwsD,EAAqBv5D,UAAU65D,cAAgB,SAAU9sD,GAEvD,IAAIo+C,EAAQ/7C,KAAK04C,UAAUgN,eAAe/nD,GAEtCo+C,GAAS/7C,KAAKrC,MAAQo+C,GAAS/7C,KAAKsqD,WAAatqD,KAAKsqD,UAAYtqD,KAAKi0C,UAAYj0C,KAAKrC,KAAOqC,KAAKvC,WACtGuC,KAAKsqD,WAAatqD,KAAKi0C,UACvBj0C,KAAKoqD,WAAapqD,KAAKqqD,QACvBrqD,KAAKqqD,QAAUrqD,KAAK04C,UAAUgS,aAAa1qD,KAAKkkC,OAAO1zC,KAAKwP,MAAO,IAAI,GAAWA,KAAK5N,QAAS4N,KAAKsqD,WAAWtR,eAQpHmR,EAAqBv5D,UAAU45D,SAAW,SAAU7sD,GAClDqC,KAAK04C,UAAUh2B,MAAM1iB,KAAKoqD,YAC1BpqD,KAAK04C,UAAUh2B,MAAM1iB,KAAKqqD,SAC1BrqD,KAAKsqD,UAAYtqD,KAAKrC,KACtB,IAAIo+C,EAAQ/7C,KAAK04C,UAAUgN,eAAe/nD,GAEtCo+C,EAAQ/7C,KAAKrC,OACfqC,KAAKsqD,UAAYtqD,KAAKrC,KAAOK,KAAK4B,MAAMm8C,EAAQ/7C,KAAKrC,MAAQqC,KAAKi0C,WAAaj0C,KAAKi0C,WAGtFj0C,KAAKoqD,WAAapqD,KAAK04C,UAAUgS,aAAa1qD,KAAKkkC,OAAO1zC,KAAKwP,MAAO,IAAI,GAAWA,KAAK5N,QAAS4N,KAAKsqD,WAAWtR,aACnHh5C,KAAKsqD,WAAatqD,KAAKi0C,UACvBj0C,KAAKqqD,QAAUrqD,KAAK04C,UAAUgS,aAAa1qD,KAAKkkC,OAAO1zC,KAAKwP,MAAO,IAAI,GAAWA,KAAK5N,QAAS4N,KAAKsqD,WAAWtR,cAOlHmR,EAAqBv5D,UAAU+6C,QAAU,WAOvC,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK04C,UAAUh2B,MAAM1iB,KAAKoqD,YAC1BpqD,KAAK04C,UAAUh2B,MAAM1iB,KAAKqqD,SAC1BrqD,KAAK04C,UAAUhI,IAAI,QAAS1wC,KAAKuqD,eACjCvqD,KAAK04C,UAAUhI,IAAI,YAAa1wC,KAAKuqD,eAC9BvqD,MAGFmqD,EApHT,CAqHE,ICvFE,GAEJ,SAAUpc,GAGR,SAAS4c,IACP,IAAItf,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBoe,EAAUrd,cAAe9F,aAAexnC,KAE3FqrC,EAAM97C,KAAO,YAQb87C,EAAMqc,MAAQ,IAAI,IAAc,GAKhCrc,EAAMuf,WAAa,EAKnBvf,EAAMwf,SAAW,EAQjBxf,EAAMyf,iBAAmB,GAKzBzf,EAAM4C,UAAY,IAAI,EAKtB5C,EAAM0f,gBAAkB,IAAI,GAK5B1f,EAAM2f,eAAiB,GAKvB3f,EAAM4f,aAAe,EACrB,IAAIl5D,EAAUw6C,EAAqBoe,EAAUrd,cAAe9F,WAsB5D,OApBA6D,EAAM6f,KAAOn5D,EAAQo5D,IACrB9f,EAAM+f,OAAS,IAAI,GAAM,CACvB9kD,SAAU+kC,EAAMggB,aAAa76D,KAAK66C,GAClCj5C,QAASi5C,EAAMj5C,QACf8hB,UAAW,EACXmmC,MAAO,QAGThP,EAAMigB,mBAENjgB,EAAM2Q,IAAM3Q,EAAM+f,OAAOl3C,UACzBm3B,EAAM+f,OAAOl3C,UAAU4wC,WAAa/yD,EAAQo5D,IAE5C9f,EAAM2Q,IAAIjrC,eAAehf,EAAQiqD,IAAK,GAEtC7H,GAAS9I,EAAO,OAChBA,EAAMkgB,eAAiBx5D,EAAQkqD,cAE/B5Q,EAAMmgB,YAAcz5D,EAAQo5D,IAAM,EAE3B9f,EAmnBT,OA7rBAlE,EAAUwjB,EAAW5c,GA6ErB4c,EAAUrd,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAgBgB,cAAe,CAClD0O,IAAK,IACLvwC,QAAS,KACTC,UAAW,EACXy/C,IAAK,IACLM,MAAO,EACPC,iBAAkB,KAClBzP,cAAe,KAYnB0O,EAAU/5D,UAAUy6D,aAAe,SAAUM,EAAU5P,GAErD,GAAI/7C,KAAKirD,aAAe,GAAKlP,EAAQ/7C,KAAKkrD,MAAS,GACnDnP,GAA4B,EAAnB/7C,KAAKwrD,cAAqB,EAAG,CAEpC,IAAII,EAAW7P,GAA4B,EAAnB/7C,KAAKwrD,cAAuC,EAAnBxrD,KAAKwrD,aAElDK,EAAS7tD,KAAKioB,IAAI2lC,EAAW5tD,KAAK+nB,IAAM/lB,KAAKirD,aAEjDU,GAAY,IAAI,GAAW3rD,KAAK5N,QAA4B,EAAnB4N,KAAKwrD,YAAkB,GAAGxS,YAAc6S,EAI/E7rD,KAAK0nD,MAAM73D,IAAI87D,IACb5P,GAAS/7C,KAAK6qD,WAChB7qD,KAAK4wC,KAAK,UAAW+a,GAErB3rD,KAAKorD,OAAO5E,eAAexmD,KAAK4qD,WAAYe,GAE5C5P,EAAQ/7C,KAAK4qD,WACb5qD,KAAK4wC,KAAK,YAAa+a,EAAU3rD,KAAKorD,OAAOpE,iBAAiB2E,IAC9D3rD,KAAK4wC,KAAK,OAAQ+a,IAKtB3rD,KAAKiuC,UAAU4B,cAAckM,GAAO,SAAUh5C,GAC5C,OAAOA,EAAMmhC,OAAOynB,OAoBxBhB,EAAU/5D,UAAUk7D,SAAW,SAAUxlD,EAAU3I,GACjD,IAAIoF,EAAQ,IAAI,GAAe/C,KAAM,CACnCsG,SAAUA,EACV3I,KAAM,IAAI,GAAmBqC,KAAK5N,QAASuL,GAAMq8C,YAEnD,OAAOh6C,KAAK+rD,UAAUhpD,EAAO/C,KAAKiuC,YAoBpC0c,EAAU/5D,UAAUo7D,eAAiB,SAAU1lD,EAAUolC,EAAUpuC,EAAWG,QAC3D,IAAbA,IACFA,EAAW4rC,KAGb,IAAItmC,EAAQ,IAAI,GAAqB/C,KAAM,CACzCsG,SAAUA,EACV7I,SAAU,IAAI,GAAUuC,KAAK5N,QAASqL,GAAUu8C,UAChDtO,SAAU,IAAI,GAAU1rC,KAAK5N,QAASs5C,GAAUsO,UAChDr8C,KAAM,IAAI,GAAmBqC,KAAK5N,QAASkL,GAAW08C,YAIxD,OAAOh6C,KAAK+rD,UAAUhpD,EAAO/C,KAAK+qD,kBAUpCJ,EAAU/5D,UAAU85D,aAAe,SAAUpkD,EAAU3I,GACrD,IAAIoF,EAAQ,IAAI,GAAe/C,KAAM,CACnCsG,SAAUA,EACVkqC,MAAM,EACN7yC,KAAM,IAAI,GAAmBqC,KAAK5N,QAASuL,GAAMq8C,YAEnD,OAAOh6C,KAAK+rD,UAAUhpD,EAAO/C,KAAKiuC,YAQpC0c,EAAU/5D,UAAU8xB,MAAQ,SAAUupC,GACpC,GAAIjsD,KAAK8qD,iBAAiBj6D,eAAeo7D,GAAU,CACjD,IAAIC,EAAOlsD,KAAK8qD,iBAAiBmB,EAAQhwB,YAEzCiwB,EAAKC,SAAS3d,OAAO0d,EAAKnpD,OAC1BmpD,EAAKnpD,MAAM4oC,iBACJ3rC,KAAK8qD,iBAAiBmB,EAAQhwB,YAGvC,OAAOj8B,MAST2qD,EAAU/5D,UAAUm7D,UAAY,SAAUhpD,EAAOopD,GAM/C,OALAnsD,KAAK8qD,iBAAiB/nD,EAAM+jB,GAAGmV,YAAc,CAC3Cl5B,MAAOA,EACPopD,SAAUA,GAEZA,EAAS3vD,IAAIuG,GACNA,EAAM+jB,IAUf6jC,EAAU/5D,UAAUi+C,OAAS,SAAUC,GACrC,IAAIzD,EAAQrrC,UAEE,IAAV8uC,IACFA,EAAQ,GAGV,IAAIsd,EAAgBpsD,KAAKg6C,QAAQlL,GAUjC,OARA9uC,KAAKiuC,UAAU2B,YAAYwc,GAAe,SAAUrpD,GAClD,OAAOsoC,EAAM3oB,MAAM3f,EAAM+jB,OAG3B9mB,KAAK+qD,gBAAgBnb,YAAYwc,GAAe,SAAUrpD,GACxD,OAAOsoC,EAAM3oB,MAAM3f,EAAM+jB,OAGpB9mB,MAUT2qD,EAAU/5D,UAAU06D,iBAAmB,WACrC,IAAIjgB,EAAQrrC,KAEZA,KAAKorD,OAAOhb,GAAG,SAAS,SAAUzyC,EAAMiG,GACtCA,EAAS,IAAI,GAAWynC,EAAMj5C,QAASwR,GAAQo1C,YAE/C3N,EAAMuF,KAAK,QAASjzC,EAAMiG,MAG5B5D,KAAKorD,OAAOhb,GAAG,QAAQ,SAAUzyC,GAC/B0tC,EAAMuF,KAAK,OAAQjzC,MAGrBqC,KAAKorD,OAAOhb,GAAG,SAAS,SAAUzyC,GAChC0tC,EAAMuF,KAAK,QAASjzC,OAIxBjO,OAAOC,eAAeg7D,EAAU/5D,UAAW,QAAS,CAIlDf,IAAK,WACH,OAAOmQ,KAAKorD,OAAO5H,eAAexjD,KAAKqyC,QAEzCziD,YAAY,EACZ4sB,cAAc,IAWhBmuC,EAAU/5D,UAAU8S,MAAQ,SAAU/F,EAAMiG,GAC1C,IAAIyoD,EASJ,OAPIziB,EAAUhmC,KACZyoD,EAAcrsD,KAAKg6C,QAAQp2C,IAI7B5D,KAAKorD,OAAO1nD,MAAM/F,EAAM0uD,GAEjBrsD,MAUT2qD,EAAU/5D,UAAUmT,KAAO,SAAUpG,GAGnC,OAFAqC,KAAKorD,OAAOrnD,KAAKpG,GAEVqC,MAOT2qD,EAAU/5D,UAAU61D,MAAQ,SAAU9oD,GAGpC,OAFAqC,KAAKorD,OAAO3E,MAAM9oD,GAEXqC,MAST2qD,EAAU/5D,UAAU07D,OAAS,SAAU3uD,GASrC,OARAA,EAAOqC,KAAKg5C,UAAUr7C,GAEmB,YAArCqC,KAAKorD,OAAO5H,eAAe7lD,GAC7BqC,KAAK0D,MAAM/F,GAEXqC,KAAK+D,KAAKpG,GAGLqC,MAGTtQ,OAAOC,eAAeg7D,EAAU/5D,UAAW,gBAAiB,CAgB1Df,IAAK,WACH,OAAOmQ,KAAKurD,gBAEdpvD,IAAK,SAAUowD,GACTnwB,EAAQmwB,KACVA,EAAUA,EAAQ,GAAKA,EAAQ,GAAK,GAGtCvsD,KAAKurD,eAAiBgB,GAExB38D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,YAAa,CAItDf,IAAK,WACH,OAAO,IAAI,GAAUmQ,KAAK5N,QAAS4N,KAAK4qD,WAAY,KAAK5R,aAE3D78C,IAAK,SAAUqwD,GACbxsD,KAAK4qD,WAAa5qD,KAAKg6C,QAAQwS,IAEjC58D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,UAAW,CAIpDf,IAAK,WACH,OAAO,IAAI,GAAUmQ,KAAK5N,QAAS4N,KAAK6qD,SAAU,KAAK7R,aAEzD78C,IAAK,SAAUswD,GACbzsD,KAAK6qD,SAAW7qD,KAAKg6C,QAAQyS,IAE/B78D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,OAAQ,CAIjDf,IAAK,WACH,OAAOmQ,KAAK0nD,MAAM73D,IAAImQ,KAAKqyC,QAE7Bl2C,IAAK,SAAUqP,GACbxL,KAAK0nD,MAAMvrD,IAAIqP,EAAMxL,KAAKqyC,QAE5BziD,YAAY,EACZ4sB,cAAc,IAUhBmuC,EAAU/5D,UAAU87D,cAAgB,SAAUF,EAAeC,GAG3D,OAFAzsD,KAAK0L,UAAY8gD,EACjBxsD,KAAKyL,QAAUghD,EACRzsD,MAGTtQ,OAAOC,eAAeg7D,EAAU/5D,UAAW,QAAS,CAIlDf,IAAK,WACH,OAAOmQ,KAAKirD,cAEd9uD,IAAK,SAAU0vD,GAEb7rD,KAAKirD,aAAeY,GAEtBj8D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,mBAAoB,CAM7Df,IAAK,WACH,OAAO,IAAI,GAAWmQ,KAAK5N,QAAS4N,KAAKwrD,aAAazS,cAExD58C,IAAK,SAAU28C,GACb94C,KAAKwrD,YAAcxrD,KAAKg6C,QAAQlB,IAElClpD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,WAAY,CAKrDf,IAAK,WACH,IAAIwiD,EAAMryC,KAAKqyC,MAEX0J,EAAQ/7C,KAAKorD,OAAO1F,eAAerT,GAEvC,OAAO,IAAI,GAAWryC,KAAK5N,QAAS2pD,GAAOxC,yBAE7Cp9C,IAAK,SAAUyvD,GACb,IAAI7P,EAAQ/7C,KAAKg6C,QAAQ4R,GACzB5rD,KAAK+7C,MAAQA,GAEfnsD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,UAAW,CAKpDf,IAAK,WACH,OAAOmQ,KAAKorD,OAAOtP,SAErB3/C,IAAK,SAAUpL,GACb,IAAIshD,EAAMryC,KAAKqyC,MAEX0J,EAAQ/7C,KAAKorD,OAAOl3C,UAAUgyC,YAAYn1D,EAAGshD,GAEjDryC,KAAK+7C,MAAQA,GAEfnsD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,WAAY,CAKrDf,IAAK,WACH,GAAImQ,KAAKwL,KAAM,CACb,IAAI6mC,EAAMryC,KAAKqyC,MAIf,OAFYryC,KAAKorD,OAAO1F,eAAerT,GAEvBryC,KAAK4qD,aAAe5qD,KAAK6qD,SAAW7qD,KAAK4qD,YAEzD,OAAO,GAGXh7D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg7D,EAAU/5D,UAAW,QAAS,CAIlDf,IAAK,WACH,OAAOmQ,KAAKorD,OAAOrP,OAErB5/C,IAAK,SAAUjM,GACb,GAAI8P,KAAKorD,OAAOrP,QAAU7rD,EAAG,CAC3B,IAAImiD,EAAMryC,KAAKqyC,MAEf,GAAmB,YAAfryC,KAAKuN,MAAqB,CAC5B,IAAIwuC,EAAQ/7C,KAAKorD,OAAO1F,eAAerT,GAGnC10C,EAAOqC,KAAKorD,OAAOvF,cAAc7nD,KAAK4B,KAAKm8C,IAE/C/7C,KAAK4wC,KAAK,OAAQjzC,GAElBqC,KAAKorD,OAAO5E,eAAet2D,EAAGyN,GAG9BqC,KAAK4wC,KAAK,QAASjzC,EAAMqC,KAAKorD,OAAOpE,iBAAiBrpD,SAEtDqC,KAAKorD,OAAO5E,eAAet2D,EAAGmiD,KAIpCziD,YAAY,EACZ4sB,cAAc,IAQhBmuC,EAAU/5D,UAAU80D,eAAiB,SAAU/nD,GAC7C,OAAOK,KAAK0J,MAAM1H,KAAKorD,OAAO1F,eAAe/nD,KAS/CgtD,EAAU/5D,UAAUo2D,iBAAmB,SAAUrpD,GAC/C,OAAOqC,KAAKorD,OAAOpE,iBAAiBrpD,IAGtCjO,OAAOC,eAAeg7D,EAAU/5D,UAAW,MAAO,CAOhDf,IAAK,WACH,OAAOmQ,KAAKorD,OAAOl3C,UAAU4wC,YAE/B3oD,IAAK,SAAUgvD,GACbnrD,KAAKorD,OAAOl3C,UAAU4wC,WAAaqG,GAErCv7D,YAAY,EACZ4sB,cAAc,IAkBhBmuC,EAAU/5D,UAAU+nD,gBAAkB,SAAUG,GAG9C,GAFAA,EAAc94C,KAAKg6C,QAAQlB,GAER,YAAf94C,KAAKuN,MAEP,OAAO,EAEP,IAAI8kC,EAAMryC,KAAKqyC,MAGXsa,EAAiB7T,EADF94C,KAAK0lD,eAAerT,GACWyG,EAClD,OAAO94C,KAAKorD,OAAO9D,aAAaqF,EAAgBta,IAcpDsY,EAAU/5D,UAAUg8D,WAAa,SAAUjI,EAAQvrC,GACjD,IAAKA,EAAO,CAEV,IAAIi5B,EAAMryC,KAAKqyC,MAEf,GAAmC,IAA/BsS,EAAO5F,eAAe1M,GAAY,CACpC,IACIwa,EAAe,GAAK,GADd7sD,KAAKg8C,IAAI+C,eAAe1M,GACCryC,KAAKk8C,KACxC9iC,EAAQurC,EAAO5F,eAAe1M,GAAOwa,OAErCzzC,EAAQ,EAIZ,IAAI0zC,EAAc,IAAI,GAAK1zC,GAa3B,OAXApZ,KAAKg8C,IAAIxoD,QAAQs5D,GAEjBA,EAAYt5D,QAAQmxD,EAAOrF,QAE3Bt/C,KAAKgrD,eAAepqD,KAAK,CACvBg+C,QAAS+F,EAAO10D,MAChBmpB,MAAO0zC,EACPnI,OAAQA,IAGVA,EAAO10D,MAAQ,EACR+P,MAQT2qD,EAAU/5D,UAAUm8D,aAAe,SAAUpI,GAC3C,IAAK,IAAI31D,EAAIgR,KAAKgrD,eAAepsD,OAAS,EAAG5P,GAAK,EAAGA,IAAK,CACxD,IAAIg+D,EAAehtD,KAAKgrD,eAAeh8D,GAEnCg+D,EAAarI,SAAWA,IAC1BqI,EAAa5zC,MAAMuyB,UACnBqhB,EAAarI,OAAO10D,MAAQ+8D,EAAapO,QAEzC5+C,KAAKgrD,eAAe9pD,OAAOlS,EAAG,IAIlC,OAAOgR,MAOT2qD,EAAU/5D,UAAU+6C,QAAU,WAW5B,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKorD,OAAOzf,UAEZxK,GAASnhC,KAAM,OAEfA,KAAKiuC,UAAUtC,UAEf3rC,KAAK+qD,gBAAgBpf,UAEd3rC,MAGF2qD,EA9rBT,CA+rBE,IAGF,EAAQ9Z,MAAM,IAIdd,GAAc,SAAU39C,GACtBA,EAAQsmD,UAAY,IAAI,GAAU,CAChCtmD,QAASA,OAGb89C,GAAe,SAAU99C,GACvBA,EAAQsmD,UAAU/M,aC5uBpB,IAAI,GAEJ,SAAUoC,GAGR,SAASkf,IACP,IAAI5hB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB0gB,EAAM3f,cAAe9F,UAAW,CAAC,YAAa,eAAiBxnC,KAElHqrC,EAAM97C,KAAO,QACb,IAAIwC,EAAUw6C,EAAqB0gB,EAAM3f,cAAe9F,UAAW,CAAC,YAAa,aAE7E0lB,EAAoB7hB,EAAM2N,UAAUjnD,EAAQo7D,UAahD,OAXA9hB,EAAM+hB,UAAYpvD,KAAKwJ,IAAI0lD,EAAmB7hB,EAAM2N,UAAUjnD,EAAQsmB,YACtEgzB,EAAMgiB,WAAahiB,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS+mC,EAAMj5C,QAAQqyB,YAAYyoC,GAC1E7hB,EAAMhzB,UAAY,IAAI,GAAM,CAC1BjmB,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMgiB,WAAWh1C,UACxBgiC,MAAO,OACPpqD,MAAO8B,EAAQsmB,UACfxH,SAAU,EACVD,SAAUy6B,EAAM8hB,WAElBhZ,GAAS9I,EAAO,aACTA,EAkCT,OAvDAlE,EAAU8lB,EAAOlf,GAwBjBkf,EAAM3f,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDj1B,UAAW,EACX80C,SAAU,KAIdz9D,OAAOC,eAAes9D,EAAMr8D,UAAW,WAAY,CAKjDf,IAAK,WACH,OAAOmQ,KAAKotD,WAEdx9D,YAAY,EACZ4sB,cAAc,IAMhBywC,EAAMr8D,UAAU+6C,QAAU,WAMxB,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqtD,WAAW55D,aAEhBuM,KAAKqY,UAAUszB,UACR3rC,MAGFitD,EAxDT,CAyDE,ICvDE,GAEJ,SAAUlf,GAGR,SAASuf,IACP,IAAIjiB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB+gB,EAAOhgB,cAAe9F,UAAW,CAAC,aAAexnC,KAEpGqrC,EAAM97C,KAAO,SACb,IAAIwC,EAAUw6C,EAAqB+gB,EAAOhgB,cAAe9F,UAAW,CAAC,WAWrE,OAVA6D,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS,IAAI,GAAK,CACpClS,QAASi5C,EAAMj5C,QACf6W,KAAMlX,EAAQw7D,OACdlT,MAAO,aAEThP,EAAMkiB,OAASliB,EAAM/mC,OAAO2E,KAC5BkrC,GAAS9I,EAAO,UAChBA,EAAMmiB,eAAiBz7D,EAAQw7D,OAE/BliB,EAAMoiB,KAAO17D,EAAQ07D,KACdpiB,EA8CT,OA/DAlE,EAAUmmB,EAAQvf,GAoBlBuf,EAAOhgB,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDmgB,MAAM,EACNF,OAAQ,KAIZ79D,OAAOC,eAAe29D,EAAO18D,UAAW,OAAQ,CAS9Cf,IAAK,WACH,OAAOmQ,KAAKutD,OAAOt9D,SAAWo5C,KAEhCltC,IAAK,SAAUsxD,IACRztD,KAAKytD,MAAQA,GAChBztD,KAAKwtD,eAAiBxtD,KAAKutD,OAAOt9D,MAElC+P,KAAKutD,OAAOt9D,OAASo5C,KACZrpC,KAAKytD,OAASA,IACvBztD,KAAKutD,OAAOt9D,MAAQ+P,KAAKwtD,iBAG7B59D,YAAY,EACZ4sB,cAAc,IAMhB8wC,EAAO18D,UAAU+6C,QAAU,WAKzB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UACX3rC,KAAKutD,OAAO5hB,UACL3rC,MAGFstD,EAhET,CAiEE,IC1DE,GAEJ,SAAUvf,GAGR,SAAS2f,IACP,IAAIriB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmhB,EAAYpgB,cAAe9F,aAAexnC,KAE7FqrC,EAAM97C,KAAO,cACb87C,EAAM9mC,MAAQ,IAAI,GAAO,CACvBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAMjBi5C,EAAMkiB,OAASliB,EAAM9mC,MAAMgpD,OAC3B,IAAIx7D,EAAUw6C,EAAqBmhB,EAAYpgB,cAAe9F,WAI9D,OAHAob,GAAcvX,EAAM9mC,MAAO8mC,EAAM/mC,OAAQ+mC,EAAMj5C,QAAQ4/C,WAAW9oC,aAClEmiC,EAAMoiB,KAAO17D,EAAQ07D,KACrBpiB,EAAM2W,kBAAoB,CAAC3W,EAAM9mC,MAAO8mC,EAAMj5C,QAAQ4/C,WAAW9oC,YAAamiC,EAAM/mC,QAC7E+mC,EAiFT,OAtGAlE,EAAUumB,EAAa3f,GAwBvB2f,EAAYpgB,YAAc,WACxB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDmgB,MAAM,EACNF,OAAQ,KAIZ79D,OAAOC,eAAe+9D,EAAY98D,UAAW,OAAQ,CAQnDf,IAAK,WACH,OAAOmQ,KAAKuE,MAAMkpD,MAEpBtxD,IAAK,SAAUsxD,GACbztD,KAAKuE,MAAMkpD,KAAOA,GAEpB79D,YAAY,EACZ4sB,cAAc,IAqBhBkxC,EAAY98D,UAAUutC,MAAQ,WAG5B,IAFA,IAAIja,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,GAAMgH,UAAUhH,GAOvB,OAJAxgC,KAAKuE,MAAM9Q,aACXywB,EAAK7iB,QAAQrB,KAAKuE,OAClB2f,EAAKtjB,KAAKZ,KAAKsE,QACfs+C,GAAcngC,WAAM,EAAQsmB,EAAS7kB,IAC9BlkB,MAGTtQ,OAAOC,eAAe+9D,EAAY98D,UAAW,kBAAmB,CAI9Df,IAAK,WACH,OAAOmQ,KAAK5N,QAAQ4/C,WAAW9oC,YAAYsF,iBAE7C5e,YAAY,EACZ4sB,cAAc,IAMhBkxC,EAAY98D,UAAU+6C,QAAU,WAI9B,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKutD,OAAO5hB,UACL3rC,MAGF0tD,EAvGT,CAwGE,IAMF3d,GAAc,SAAU39C,GACtBA,EAAQ8W,YAAc,IAAI,GAAY,CACpC9W,QAASA,OAGb89C,GAAe,SAAU99C,GACvBA,EAAQ8W,YAAYyiC,aC5GtB,IAAI,GAEJ,SAAUoC,GAGR,SAAS4f,IACP,IAAItiB,EAAQ0C,EAAO5+C,KAAK6Q,OAASA,KAEjCqrC,EAAM97C,KAAO,mBAKb87C,EAAMuiB,SAAW,IAAI/5D,IAKrBw3C,EAAMwiB,cAAgB,EACtB,IAAI97D,EAAUw6C,EAAqBohB,EAAiBrgB,cAAe9F,UAAW,CAAC,OAAQ,SAAU,WAAY,QAS7G,OARA6D,EAAMgL,QAAUtkD,EAAQskD,QAExB3mD,OAAO8W,KAAKzU,EAAQ+7D,MAAMnxD,SAAQ,SAAUpN,GAC1C87C,EAAMwiB,gBACN,IAAI7yC,EAAMjpB,EAAQ+7D,KAAKv+D,GAEvB87C,EAAM7uC,IAAIjN,EAAMyrB,EAAKqwB,EAAM0iB,cAAcv9D,KAAK66C,EAAOt5C,EAAQ+pB,QAAS/pB,EAAQqpB,YAEzEiwB,EAkGT,OA3HAlE,EAAUwmB,EAAkB5f,GA4B5B4f,EAAiBrgB,YAAc,WAC7B,MAAO,CACL+I,QAAS,GACTj7B,QAASi5B,GACTv4B,OAAQu4B,GACRyZ,KAAM,KASVH,EAAiB/8D,UAAU8L,IAAM,SAAUnN,GACzC,OAAOyQ,KAAK4tD,SAASlxD,IAAInN,EAAK0sC,aAShC0xB,EAAiB/8D,UAAUf,IAAM,SAAUN,GAEzC,OADAy5C,EAAOhpC,KAAKtD,IAAInN,GAAO,yCAA2CA,GAC3DyQ,KAAK4tD,SAAS/9D,IAAIN,EAAK0sC,aAOhC0xB,EAAiB/8D,UAAUm9D,cAAgB,SAAUznD,GACnDtG,KAAK6tD,gBAEsB,IAAvB7tD,KAAK6tD,eAAuBvnD,GAC9BA,KAIJ5W,OAAOC,eAAeg+D,EAAiB/8D,UAAW,SAAU,CAI1Df,IAAK,WACH,OAAOuhB,MAAMC,KAAKrR,KAAK4tD,UAAUrtC,OAAM,SAAU2rB,GAC/C,IAAIC,EAAKtD,EAAOqD,EAAI,GACZC,EAAG,GAGX,OAFaA,EAAG,GAEFuI,WAGlB9kD,YAAY,EACZ4sB,cAAc,IAUhBmxC,EAAiB/8D,UAAU4L,IAAM,SAAUjN,EAAMyrB,EAAK1U,EAAU8U,GAe9D,YAdiB,IAAb9U,IACFA,EAAW+tC,SAGG,IAAZj5B,IACFA,EAAUi5B,IAGRpK,EAASjvB,GACXhb,KAAK4tD,SAASzxD,IAAI5M,EAAK0sC,WAAY,IAAI,GAAgBj8B,KAAKq2C,QAAUr7B,EAAK1U,EAAU8U,IAErFpb,KAAK4tD,SAASzxD,IAAI5M,EAAK0sC,WAAY,IAAI,GAAgBjhB,EAAK1U,EAAU8U,IAGjEpb,MAGT2tD,EAAiB/8D,UAAU+6C,QAAU,WASnC,OARAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK4tD,SAASjxD,SAAQ,SAAUZ,GAC9B,OAAOA,EAAO4vC,aAGhB3rC,KAAK4tD,SAASlrC,QAEP1iB,MAGF2tD,EA5HT,CA6HE,GCrJE,GAEJ,SAAU5f,GAGR,SAASigB,IACP,IAAI3iB,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAIhE,OAFAqrC,EAAM97C,KAAO,YACb87C,EAAMiP,aAAe,OACdjP,EAkET,OAzEAlE,EAAU6mB,EAAWjgB,GAcrBigB,EAAUp9D,UAAU8pD,kBAAoB,SAAUiB,GAChD,OAAO7D,GAAK/J,EAAOn9C,UAAU8pD,kBAAkBvrD,KAAK6Q,KAAM27C,KAO5DqS,EAAUp9D,UAAU+pD,cAAgB,SAAUoB,GAC5C,OAAOjE,GAAK/J,EAAOn9C,UAAU+pD,cAAcxrD,KAAK6Q,KAAM+7C,KAOxDiS,EAAUp9D,UAAU6oD,cAAgB,SAAUmC,GAC5C,OAAO9D,GAAK/J,EAAOn9C,UAAU6oD,cAActqD,KAAK6Q,KAAM47C,KAOxDoS,EAAUp9D,UAAU6nD,gBAAkB,SAAUqD,GAC9C,OAAOhE,GAAK/J,EAAOn9C,UAAU6nD,gBAAgBtpD,KAAK6Q,KAAM87C,KAS1DkS,EAAUp9D,UAAUspD,OAAS,WAC3B,OAAOl6C,KAAKouC,WASd4f,EAAUp9D,UAAUupD,YAAc,WAChC,OAAOnC,GAAKh4C,KAAKk6C,WAUnB8T,EAAUp9D,UAAUisD,UAAY,SAAUnR,GACxC,OAAO,IAAIsiB,EAAUhuD,KAAK5N,QAAS4N,KAAKk6C,SAAWxO,IAG9CsiB,EA1ET,CA2EE,ICnEF,IAAI,GAEJ,SAAUjgB,GAGR,SAASkgB,IACP,IAAI5iB,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KA8BhE,OA5BAqrC,EAAM97C,KAAO,OAKb87C,EAAM6iB,WAAa,IAOnB7iB,EAAM8iB,aAAe,KAKrB9iB,EAAMkF,QAAU,IAAI,EAKpBlF,EAAM+iB,eAAiB/iB,EAAMgjB,UAAU79D,KAAK66C,GAK5CA,EAAMijB,iBAAmB,EAClBjjB,EAgET,OAjGAlE,EAAU8mB,EAAMlgB,GA2ChBkgB,EAAKr9D,UAAUk7D,SAAW,SAAUxlD,EAAU3I,GAW5C,OAVAqC,KAAKuwC,QAAQ/zC,IAAI,CACf8J,SAAUA,EACV3I,KAAMqC,KAAKg5C,UAAUr7C,KAIK,IAAxBqC,KAAKuwC,QAAQ3xC,SACfoB,KAAKsuD,gBAAkBC,sBAAsBvuD,KAAKouD,iBAG7CpuD,MAQTiuD,EAAKr9D,UAAUi+C,OAAS,SAAUC,GAGhC,OAFA9uC,KAAKuwC,QAAQ1B,OAAO7uC,KAAKg5C,UAAUlK,IAE5B9uC,MAOTiuD,EAAKr9D,UAAUy9D,UAAY,WAGzB,IAFA,IAAIhc,EAAMryC,KAAK5N,QAAQ4e,YAEhBhR,KAAKuwC,QAAQ3xC,QAAUoB,KAAKuwC,QAAQ7B,OAAO/wC,KAAOqC,KAAKmuD,cAAgB9b,GAAK,CACjF,IAAIjD,EAAUpvC,KAAKuwC,QAAQlE,QAEvB+C,GAAWiD,EAAMjD,EAAQzxC,MAAQqC,KAAKkuD,YACxC9e,EAAQ9oC,WAIRtG,KAAKuwC,QAAQ3xC,OAAS,IACxBoB,KAAKsuD,gBAAkBC,sBAAsBvuD,KAAKouD,kBAItDH,EAAKr9D,UAAU+6C,QAAU,WAMvB,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuwC,QAAQ5E,UAEb6iB,qBAAqBxuD,KAAKsuD,iBACnBtuD,MAGFiuD,EAlGT,CAmGE,IAMFle,GAAc,SAAU39C,GACtBA,EAAQq8D,KAAO,IAAI,GAAK,CACtBr8D,QAASA,OAGb89C,GAAe,SAAU99C,GACvBA,EAAQq8D,KAAK9iB,a,WCzGX,GAEJ,SAAUoC,GAGR,SAAS2gB,EAAO38D,GACd,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAsC1C,OAhCAqrC,EAAM9mC,WAAQhS,EAKd84C,EAAM/9B,OAAS,IAAI,GAAc,WAKjC+9B,EAAMsjB,SAAU,EAKhBtjB,EAAMujB,WAAa,GAKnBvjB,EAAMwjB,aAAexa,GACrBhJ,EAAMyjB,YAAcza,GACpBhJ,EAAM/9B,OAAO4gC,OAAS,IACtB7C,EAAM/9B,OAAO6gC,YAAa,EAC1B9C,EAAM0jB,QAAU1jB,EAAM/mC,OAAS,IAAI,GAAO,CACxClS,QAASi5C,EAAMj5C,QACfq7D,KAAM17D,EAAQ07D,KACdF,OAAQx7D,EAAQw7D,SAElBliB,EAAMkiB,OAASliB,EAAM0jB,QAAQxB,OAC7BpZ,GAAS9I,EAAO,UAChBA,EAAM2jB,OAASj9D,EAAQi9D,OAChB3jB,EAsRT,OA/TAlE,EAAUunB,EAAQ3gB,GA4ClB2gB,EAAOphB,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDmgB,MAAM,EACNuB,OAAQ3a,GACRkZ,OAAQ,KAIZ79D,OAAOC,eAAe++D,EAAO99D,UAAW,QAAS,CAS/Cf,IAAK,WACH,OAAImQ,KAAK2uD,QAC8B,YAAjC3uD,KAAK5N,QAAQsmD,UAAUnrC,MAClBvN,KAAKsN,OAAOyxC,eAAe/+C,KAAK5N,QAAQsmD,UAAUoD,SAElD,UAGF97C,KAAKsN,OAAOyxC,eAAe/+C,KAAKqyC,QAG3CziD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe++D,EAAO99D,UAAW,OAAQ,CAQ9Cf,IAAK,WACH,OAAOmQ,KAAK+uD,QAAQtB,MAEtBtxD,IAAK,SAAUsxD,GACbztD,KAAK+uD,QAAQtB,KAAOA,GAEtB79D,YAAY,EACZ4sB,cAAc,IAOhBkyC,EAAO99D,UAAUq+D,oBAAsB,SAAUtxD,GAC/C,OAAIqC,KAAK2uD,QACAhxD,EAEAK,KAAKwJ,IAAI7J,EAAMqC,KAAK5N,QAAQ4e,cAavC09C,EAAO99D,UAAU8S,MAAQ,SAAU/F,EAAMiG,EAAQnG,GAC/C,IAAI4tC,EAAQrrC,KAERigD,EAAetW,EAAQhsC,IAASqC,KAAK2uD,QAAU3uD,KAAK5N,QAAQsmD,UAAUoD,QAAU97C,KAAKg5C,UAAUr7C,GAGnG,GAFAsiD,EAAejgD,KAAKivD,oBAAoBhP,GAEnCjgD,KAAK2uD,SAAwD,YAA7C3uD,KAAKsN,OAAOyxC,eAAekB,GAUzC,CAKL,GAJAjgD,KAAK0pC,IAAI,QAASuW,GAElBjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAElCjgD,KAAK2uD,QAAS,CAEhB,IAAIvf,EAAUpvC,KAAKsN,OAAOzd,IAAIowD,GAE1B7Q,IACFA,EAAQxrC,OAAS5D,KAAKg5C,UAAUnM,EAAWjpC,EAAQ,IACnDwrC,EAAQ3xC,SAAWA,EAAWuC,KAAKg5C,UAAUv7C,QAAYlL,GAG3D,IAAI28D,EAAQlvD,KAAK5N,QAAQsmD,UAAUoT,UAAS,SAAU57D,GACpDm7C,EAAM8jB,OAAOj/D,EAAG0T,EAAQnG,KACvBwiD,GAEHjgD,KAAK4uD,WAAWhuD,KAAKsuD,GAGgB,YAAjClvD,KAAK5N,QAAQsmD,UAAUnrC,OACzBvN,KAAK6uD,aAAa7uD,KAAKqyC,MAAOryC,KAAK5N,QAAQsmD,UAAUoD,cAGvD97C,KAAKmvD,OAAOlP,EAAcr8C,EAAQnG,GAGpC6rC,EAAqBtpC,KAAK5N,cApC1B42C,EAAOyE,EAAGwS,EAAcjgD,KAAKsN,OAAOzd,IAAIowD,GAActiD,MAAO,gEAE7DqC,KAAKsN,OAAOuhC,OAAOoR,GAEnBjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAEtCjgD,KAAK0pC,IAAI,UAAWuW,GACpBjgD,KAAKovD,QAAQnP,EAAcr8C,EAAQnG,GAgCrC,OAAOuC,MAaT0uD,EAAO99D,UAAUmT,KAAO,SAAUpG,GAChC,IAAIsiD,EAAetW,EAAQhsC,IAASqC,KAAK2uD,QAAU3uD,KAAK5N,QAAQsmD,UAAUoD,QAAU97C,KAAKg5C,UAAUr7C,GAGnG,GAFAsiD,EAAejgD,KAAKivD,oBAAoBhP,GAES,YAA7CjgD,KAAKsN,OAAOyxC,eAAekB,IAA+BrW,EAAU5pC,KAAKsN,OAAO2xC,aAAa,UAAWgB,IAAgB,CAG1H,GAFAjgD,KAAK0pC,IAAI,OAAQuW,GAEZjgD,KAAK2uD,QAEH,CACL,IAAIO,EAAQlvD,KAAK5N,QAAQsmD,UAAUoT,SAAS9rD,KAAKqvD,MAAM7+D,KAAKwP,MAAOigD,GAEnEjgD,KAAK4uD,WAAWhuD,KAAKsuD,QAJrBlvD,KAAKqvD,MAAMpP,GAObjgD,KAAKsN,OAAOuhC,OAAOoR,GAEnBjgD,KAAKsN,OAAOwxC,eAAe,UAAWmB,GAGxC,OAAOjgD,MAOT0uD,EAAO99D,UAAUw+D,QAAU,SAAUzxD,EAAMiG,EAAQnG,GASjD,OARAE,EAAOqC,KAAKg5C,UAAUr7C,GAEmB,YAArCqC,KAAKsN,OAAOyxC,eAAephD,KAC7BqC,KAAKsN,OAAOuhC,OAAOlxC,GAEnBqC,KAAKwqD,SAAS7sD,EAAMiG,EAAQnG,IAGvBuC,MAmBT0uD,EAAO99D,UAAU0+D,KAAO,WACtB,IAAIjkB,EAAQrrC,KAyCZ,OAvCKA,KAAK2uD,UACR3uD,KAAK2uD,SAAU,EAEf3uD,KAAK6uD,aAAe,SAAUlxD,EAAMiG,GAClC,GAAIA,EAAS,EAAG,CAEd,IAAI2rD,EAAalkB,EAAM/9B,OAAOzd,IAAI+T,GAGlC,GAAI2rD,GAAmC,YAArBA,EAAWhiD,OAAuBgiD,EAAW5xD,OAASiG,EAAQ,CAE9E,IAAI4rD,EAAc5rD,EAASynC,EAAM2N,UAAUuW,EAAW5xD,MAElDF,OAAW,EAEX8xD,EAAW9xD,WACbA,EAAW4tC,EAAM2N,UAAUuW,EAAW9xD,UAAY+xD,GAGpDnkB,EAAM8jB,OAAOxxD,EAAM0tC,EAAM2N,UAAUuW,EAAW3rD,QAAU4rD,EAAa/xD,MAK3EuC,KAAK8uD,YAAc,SAAUnxD,GAC3B,IAAIm+C,EAAUzQ,EAAMj5C,QAAQsmD,UAAUsO,iBAAiBhpD,KAAKwJ,IAAI7J,EAAO0tC,EAAMkW,WAAY,IAE5C,YAAzClW,EAAM/9B,OAAOyxC,eAAejD,IAC9BzQ,EAAMgkB,MAAM1xD,IAIhBqC,KAAK5N,QAAQsmD,UAAUtI,GAAG,QAASpwC,KAAK6uD,cACxC7uD,KAAK5N,QAAQsmD,UAAUtI,GAAG,YAAapwC,KAAK6uD,cAC5C7uD,KAAK5N,QAAQsmD,UAAUtI,GAAG,OAAQpwC,KAAK8uD,aACvC9uD,KAAK5N,QAAQsmD,UAAUtI,GAAG,QAASpwC,KAAK8uD,aACxC9uD,KAAK5N,QAAQsmD,UAAUtI,GAAG,UAAWpwC,KAAK8uD,cAGrC9uD,MAOT0uD,EAAO99D,UAAU6+D,OAAS,WACxB,IAAIpkB,EAAQrrC,KAoBZ,OAlBIA,KAAK2uD,UACP3uD,KAAK5N,QAAQsmD,UAAUhI,IAAI,OAAQ1wC,KAAK8uD,aACxC9uD,KAAK5N,QAAQsmD,UAAUhI,IAAI,QAAS1wC,KAAK8uD,aACzC9uD,KAAK5N,QAAQsmD,UAAUhI,IAAI,UAAW1wC,KAAK8uD,aAC3C9uD,KAAK5N,QAAQsmD,UAAUhI,IAAI,QAAS1wC,KAAK6uD,cACzC7uD,KAAK5N,QAAQsmD,UAAUhI,IAAI,YAAa1wC,KAAK6uD,eAG/C7uD,KAAK2uD,SAAU,EAEf3uD,KAAK4uD,WAAWjyD,SAAQ,SAAUmqB,GAChC,OAAOukB,EAAMj5C,QAAQsmD,UAAUh2B,MAAMoE,MAGvC9mB,KAAK4uD,WAAa,GAElB5uD,KAAKsN,OAAOuhC,OAAO,GAEZ7uC,MAOT0uD,EAAO99D,UAAU+6C,QAAU,WAUzB,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKgvD,OAAS3a,GACdr0C,KAAKyvD,SAELzvD,KAAK+uD,QAAQpjB,UAEb3rC,KAAKsN,OAAOq+B,UAEL3rC,MAGF0uD,EAhUT,CAiUE,ICjVE,GAEJ,SAAU3gB,GAGR,SAAS2hB,IACP,IAAIrkB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmjB,EAAiBpiB,cAAe9F,UAAW,CAAC,MAAO,aAAexnC,KAErHqrC,EAAM97C,KAAO,mBAKb87C,EAAMiZ,QAAUjZ,EAAMj5C,QAAQy+B,qBAC9Bwa,EAAM2W,kBAAoB,CAAC3W,EAAMiZ,SAKjCjZ,EAAMskB,gBAAiB,EACvBtkB,EAAMukB,gBAAiB,EACvB,IAAI79D,EAAUw6C,EAAqBmjB,EAAiBpiB,cAAe9F,UAAW,CAAC,MAAO,WAyBtF,OAxBAh0C,GAAQ63C,EAAMiZ,QAASjZ,EAAMgY,WAE7BhY,EAAMiZ,QAAQ93C,QAAU,WACtB,OAAO6+B,EAAM+Y,eAOf/Y,EAAM1/B,aAAe,IAAI,GAAM,CAC7BvZ,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMiZ,QAAQ34C,aACrB0uC,MAAO,WACPpqD,MAAO8B,EAAQ4Z,eAGjB0/B,EAAM7/B,KAAOzZ,EAAQyZ,KACrB6/B,EAAM3/B,UAAY3Z,EAAQ2Z,UAC1B2/B,EAAM5/B,QAAU1Z,EAAQ0Z,QACxB4/B,EAAMmJ,QAAU,IAAI,GAAgBziD,EAAQipB,IAAKjpB,EAAQ+pB,OAAQ/pB,EAAQqpB,SAEzEiwB,EAAM2W,kBAAkBphD,KAAKyqC,EAAMiZ,SAE5BjZ,EA2MT,OAtPAlE,EAAUuoB,EAAkB3hB,GA8C5B2hB,EAAiBpiB,YAAc,WAC7B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDtyB,IAAK,IAAI,GACTxP,MAAM,EACNC,QAAS,EACTC,UAAW,EACXoQ,OAAQu4B,GACRj5B,QAASi5B,GACT1oC,aAAc,KAIlBjc,OAAOC,eAAe+/D,EAAiB9+D,UAAW,SAAU,CAI1Df,IAAK,WACH,OAAOmQ,KAAKyjD,SAEdtnD,IAAK,SAAUjM,GACb8P,KAAKyjD,QAAUvzD,GAEjBN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+/D,EAAiB9+D,UAAW,UAAW,CAI3Df,IAAK,WACH,OAAOmQ,KAAK2jD,UAEdxnD,IAAK,SAAUjM,GACb8P,KAAK2jD,SAAWzzD,GAElBN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+/D,EAAiB9+D,UAAW,QAAS,CAIzDf,IAAK,WACH,OAAOmQ,KAAK6jD,QAEd1nD,IAAK,SAAUjM,GACb8P,KAAK6jD,OAAS3zD,GAEhBN,YAAY,EACZ4sB,cAAc,IAUhBkzC,EAAiB9+D,UAAU8S,MAAQ,SAAU/F,EAAMiG,EAAQnG,EAAUwL,QACtD,IAATA,IACFA,EAAO,GAGT+/B,EAAOhpC,KAAKjE,OAAO24C,OAAQ,0CAC3B,IAAIuL,EAAejgD,KAAKg5C,UAAUr7C,GAElCqC,KAAK8jD,WAAW7D,EAAch3C,GAI5BrF,EADE5D,KAAKwL,KACEqhC,EAAWjpC,EAAQ5D,KAAK0L,WAGxBmhC,EAAWjpC,EAAQ,GAI9B,IAAIisD,EAAiB7xD,KAAKwJ,IAAIxH,KAAKg5C,UAAUp1C,GAAS,GAEtD,GAAI5D,KAAKwL,KAAM,CAEb,IAAIC,EAAUzL,KAAKg5C,UAAUh5C,KAAKyL,UAAYzL,KAAKjE,OAAO0B,SACtDiO,EAAY1L,KAAKg5C,UAAUh5C,KAAK0L,WAChCokD,EAAerkD,EAAUC,EAEzBgiC,EAAImiB,EAAgBpkD,KACtBokD,GAAkBA,EAAiBnkD,GAAaokD,EAAepkD,GAI7DiiC,EAAGkiB,EAAgB7vD,KAAKjE,OAAO0B,YACjCoyD,EAAiB,GAerB,GAVA7vD,KAAKskD,QAAQvoD,OAASiE,KAAKjE,OAAOlM,MAClCmQ,KAAKskD,QAAQ74C,QAAUzL,KAAKg5C,UAAUh5C,KAAKyL,UAAYzL,KAAKjE,OAAO0B,SAE/DmwC,EAAGiiB,EAAgB7vD,KAAKjE,OAAO0B,YACjCuC,KAAK2vD,gBAAiB,EAEtB3vD,KAAKskD,QAAQ5gD,MAAMu8C,EAAc4P,IAI/BjmB,EAAUnsC,GAAW,CACvB,IAAIsyD,EAAc/vD,KAAKg5C,UAAUv7C,GAEjCsyD,EAAc/xD,KAAKwJ,IAAIuoD,EAAa,GACpC/vD,KAAK+D,KAAKk8C,EAAe8P,GAG3B,OAAO/vD,MAGT0vD,EAAiB9+D,UAAUwzD,YAAc,SAAUzmD,IAC5CqC,KAAK4vD,gBAAkB5vD,KAAK2vD,iBAC/B3vD,KAAK4vD,gBAAiB,EAEtB5vD,KAAKskD,QAAQvgD,KAAK/D,KAAKg5C,UAAUr7C,IAEjCqC,KAAKoM,aAIT1c,OAAOC,eAAe+/D,EAAiB9+D,UAAW,YAAa,CAI7Df,IAAK,WACH,OAAOmQ,KAAKskD,QAAQ54C,WAEtBvP,IAAK,SAAUuP,GACb1L,KAAKskD,QAAQ54C,UAAY1L,KAAKg5C,UAAUttC,IAE1C9b,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+/D,EAAiB9+D,UAAW,UAAW,CAI3Df,IAAK,WACH,OAAOmQ,KAAKskD,QAAQ74C,SAEtBtP,IAAK,SAAUsP,GACbzL,KAAKskD,QAAQ74C,QAAUzL,KAAKg5C,UAAUvtC,IAExC7b,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+/D,EAAiB9+D,UAAW,SAAU,CAI1Df,IAAK,WACH,OAAOmQ,KAAKw0C,SAEdr4C,IAAK,SAAUJ,GACbiE,KAAKw0C,QAAQr4C,IAAIJ,IAEnBnM,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+/D,EAAiB9+D,UAAW,OAAQ,CAIxDf,IAAK,WACH,OAAOmQ,KAAKskD,QAAQ94C,MAEtBrP,IAAK,SAAUqP,GACbxL,KAAKskD,QAAQ94C,KAAOA,EAEhBxL,KAAK2vD,gBACP3vD,KAAKikD,cAGTr0D,YAAY,EACZ4sB,cAAc,IAMhBkzC,EAAiB9+D,UAAU+6C,QAAU,WAUnC,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKskD,QAAQ93C,QAAU,KAEvBxM,KAAKskD,QAAQ7wD,aAEbuM,KAAKw0C,QAAQ7I,UAEb3rC,KAAK2L,aAAaggC,UACX3rC,MAGF0vD,EAvPT,CAwPE,IC9OE,GAEJ,SAAU3hB,GAGR,SAASiiB,IACP,IAAI3kB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqByjB,EAAM1iB,cAAe9F,UAAW,CAAC,WAAaxnC,KAEjGqrC,EAAM97C,KAAO,QAKb87C,EAAMiZ,QAAU,KAChB,IAAIvyD,EAAUw6C,EAAqByjB,EAAM1iB,cAAe9F,UAAW,CAAC,SAKpE,OAJA6D,EAAMh/B,cAAgBta,EAAQ4Z,aAC9B0/B,EAAMluC,KAAOpL,EAAQoL,KACrBkuC,EAAMoY,QAAU1xD,EAAQ2xD,OACxBrY,EAAMsY,SAAW5xD,EAAQ6xD,QAClBvY,EAqJT,OArKAlE,EAAU6oB,EAAOjiB,GAmBjBiiB,EAAM1iB,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCoW,OAAQ,EACRE,QAAS,EACTj4C,aAAc,EACdxO,KAAM,WAIVzN,OAAOC,eAAeqgE,EAAMp/D,UAAW,OAAQ,CAO7Cf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUgB,GAGb,GAFA6rC,EAAO7rC,KAAQ8yD,GAAe,wBAA0B9yD,GAEpD6C,KAAK2qC,QAAUxtC,IACjB6C,KAAK2qC,MAAQxtC,EAEM,YAAf6C,KAAKuN,OAAqB,CAC5B,IAAI8kC,EAAMryC,KAAKqyC,MAEfryC,KAAKqvD,MAAMhd,GAEXryC,KAAKmvD,OAAO9c,KAIlBziD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeqgE,EAAMp/D,UAAW,eAAgB,CAKrDf,IAAK,WACH,OAAOmQ,KAAKqM,eAEdlQ,IAAK,SAAU+zD,GACblwD,KAAKqM,cAAgB6jD,EAEjBlwD,KAAKskD,UACPtkD,KAAKskD,QAAQ34C,aAAa1b,MAAQigE,IAGtCtgE,YAAY,EACZ4sB,cAAc,IAMhBwzC,EAAMp/D,UAAUu+D,OAAS,SAAUxxD,GACjC,IAAI0tC,EAAQrrC,KAERjE,EAASk0D,GAAcjwD,KAAK2qC,OAChC3qC,KAAKskD,QAAU,IAAI,GAAiB,CAClCtpC,IAAKjf,EACL3J,QAAS4N,KAAK5N,QACdsxD,OAAQ1jD,KAAKyjD,QACbG,QAAS5jD,KAAK2jD,SACdn4C,MAAM,EACNgB,QAAS,WACP,OAAO6+B,EAAM2jB,OAAO3jB,IAEtB1/B,aAAc3L,KAAKqM,gBAClB7Y,QAAQwM,KAAKsE,QAEhBtE,KAAKskD,QAAQ5gD,MAAM1D,KAAKg5C,UAAUr7C,GAAOK,KAAKmyD,UAAYp0D,EAAO0B,SAAW,QAO9EuyD,EAAMp/D,UAAUy+D,MAAQ,SAAU1xD,GAC5BqC,KAAKskD,UACPtkD,KAAKskD,QAAQvgD,KAAK/D,KAAKg5C,UAAUr7C,IAEjCqC,KAAKskD,QAAU,OAInB50D,OAAOC,eAAeqgE,EAAMp/D,UAAW,SAAU,CAI/Cf,IAAK,WACH,OAAOmQ,KAAKyjD,SAEdtnD,IAAK,SAAUwB,GACbqC,KAAKyjD,QAAU9lD,EAEXqC,KAAKskD,UACPtkD,KAAKskD,QAAQZ,OAAS1jD,KAAKyjD,UAG/B7zD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeqgE,EAAMp/D,UAAW,UAAW,CAIhDf,IAAK,WACH,OAAOmQ,KAAK2jD,UAEdxnD,IAAK,SAAUwB,GACbqC,KAAK2jD,SAAWhmD,EAEZqC,KAAKskD,UACPtkD,KAAKskD,QAAQV,QAAU5jD,KAAK2jD,WAGhC/zD,YAAY,EACZ4sB,cAAc,IAGhBwzC,EAAMp/D,UAAU45D,SAAW,SAAU7sD,GAEnCqC,KAAKqvD,MAAM1xD,GAEXqC,KAAKmvD,OAAOxxD,IAOdqyD,EAAMp/D,UAAU+6C,QAAU,WAOxB,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE1BA,KAAKskD,SACPtkD,KAAKskD,QAAQ7wD,aAGRuM,MAGFgwD,EAtKT,CAuKE,IAaEI,GAAc,CAChBC,MAAO,KACPC,KAAM,KACNC,MAAO,MAQLN,GAAgB,CAClB,YACE,IAAKG,GAAYC,MAAO,CAGtB,IAFA,IAAIt0D,EAAS,GAEJy0D,EAAa,EAAGA,EArBZ,EAqBuCA,IAAc,CAChE,IAAIjtD,EAAU,IAAIzC,aAvBN,QAwBZ/E,EAAOy0D,GAAcjtD,EAGrB,IAFA,IAAIktD,EAAU,EAELzhE,EAAI,EAAGA,EA3BJ,OA2BuBA,IAAK,CACtC,IAAIuhE,EAAwB,EAAhBvyD,KAAKmyD,SAAe,EAChC5sD,EAAQvU,IAAMyhE,EAAU,IAAOF,GAAS,KACxCE,EAAUltD,EAAQvU,GAClBuU,EAAQvU,IAAM,KAIlBohE,GAAYC,OAAQ,IAAI,IAAkBtb,UAAUh5C,GAGtD,OAAOq0D,GAAYC,OAGrB,WACE,IAAKD,GAAYE,KAAM,CAGrB,IAFA,IAAIv0D,EAAS,GAEJy0D,EAAa,EAAGA,EA5CZ,EA4CuCA,IAAc,CAChE,IAAIjtD,EAAU,IAAIzC,aA9CN,QA+CZ/E,EAAOy0D,GAAcjtD,EACrB,IAAImtD,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EACTN,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAK,EAEnC,IAAK,IAAIhiE,EAAI,EAAGA,EAzDJ,OAyDuBA,IAAK,CACtC,IAAIuhE,EAAwB,EAAhBvyD,KAAKmyD,SAAe,EAChCO,EAAK,OAAUA,EAAa,SAARH,EACpBI,EAAK,OAAUA,EAAa,SAARJ,EACpBK,EAAK,KAAUA,EAAa,QAARL,EACpBM,EAAK,MAAUA,EAAa,SAARN,EACpBO,EAAK,IAAUA,EAAa,SAARP,EACpBQ,GAAM,MAASA,EAAa,QAARR,EACpBhtD,EAAQvU,GAAK0hE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAa,MAART,EAChDhtD,EAAQvU,IAAM,IAEdgiE,EAAa,QAART,GAITH,GAAYE,MAAO,IAAI,IAAkBvb,UAAUh5C,GAGrD,OAAOq0D,GAAYE,MAGrB,YACE,IAAKF,GAAYG,MAAO,CAGtB,IAFA,IAAIx0D,EAAS,GAEJy0D,EAAa,EAAGA,EAjFZ,EAiFuCA,IAAc,CAChE,IAAIjtD,EAAU,IAAIzC,aAnFN,QAoFZ/E,EAAOy0D,GAAcjtD,EAErB,IAAK,IAAIvU,EAAI,EAAGA,EAtFJ,OAsFuBA,IACjCuU,EAAQvU,GAAqB,EAAhBgP,KAAKmyD,SAAe,EAIrCC,GAAYG,OAAQ,IAAI,IAAkBxb,UAAUh5C,GAGtD,OAAOq0D,GAAYG,SCnRvB,SAAUxiB,GAGR,SAASkjB,IACP,IAAI5lB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB0kB,EAAU3jB,cAAe9F,UAAW,CAAC,aAAexnC,KAEvGqrC,EAAM97C,KAAO,YACb,IAAIwC,EAAUw6C,EAAqB0kB,EAAU3jB,cAAe9F,UAAW,CAAC,WAQxE,OAPA6D,EAAM0jB,QAAU1jB,EAAM/mC,OAAS,IAAI,GAAO,CACxClS,QAASi5C,EAAMj5C,QACfm7D,OAAQx7D,EAAQw7D,SAElBliB,EAAMkiB,OAASliB,EAAM0jB,QAAQxB,OAC7BpZ,GAAS9I,EAAO,UAChBA,EAAMoiB,KAAO17D,EAAQ07D,KACdpiB,EAdTlE,EAAU8pB,EAAWljB,GAiBrBkjB,EAAU3jB,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDmgB,MAAM,EACNF,OAAQ,KAaZ0D,EAAUrgE,UAAUsgE,KAAO,SAAUC,GACnC,OAAOxpB,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAIoxD,EAASz9C,EAAaqN,EAAQqwC,EAClC,OAAOnpB,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAOH,OANAU,EAAOioB,EAAUK,UAAW,8BAET,YAAftxD,KAAKuN,OACPvN,KAAKyN,QAGA,CAAC,EAENwjD,EAAUM,oBAEd,KAAK,EA+BH,OA9BAH,EAAUllB,EAAGnJ,OAET+G,EAASqnB,GACXnxD,KAAKwxD,QAAUJ,EAAQD,IAEvBnxD,KAAKwxD,QAAUJ,EAAQK,MAAK,SAAUC,GACpC,OAAOA,EAAOppB,QAAU6oB,GAAaO,EAAOC,WAAaR,MAGtDnxD,KAAKwxD,SAAWJ,EAAQxyD,OAAS,IACpCoB,KAAKwxD,QAAUJ,EAAQ,IAGzBpoB,EAAOY,EAAU5pC,KAAKwxD,SAAU,sBAAwBL,IAG1Dx9C,EAAc,CACZi+C,MAAO,CACLC,kBAAkB,EAClBtqD,WAAYvH,KAAK5N,QAAQmV,WACzBuqD,kBAAkB,EAClBC,qBAAqB,IAIrB/xD,KAAKwxD,UAEP79C,EAAYi+C,MAAMD,SAAW3xD,KAAKwxD,QAAQG,UAGrC,CAAC,EAENK,UAAUC,aAAaC,aAAav+C,IAExC,KAAK,EAWH,OAVAqN,EAASkrB,EAAGnJ,OAEP/iC,KAAK0zC,UACR1zC,KAAK0zC,QAAU1yB,EAGfxtB,GAFA69D,EAAkBrxD,KAAK5N,QAAQ20B,wBAAwB/F,GAE9BhhB,KAAKsE,QAC9BtE,KAAKmyD,aAAed,GAGf,CAAC,EAENrxD,cAUZixD,EAAUrgE,UAAU6c,MAAQ,WAc1B,OAbIzN,KAAK0zC,SAAW1zC,KAAKmyD,eACvBnyD,KAAK0zC,QAAQ/sB,iBAAiBhqB,SAAQ,SAAUy1D,GAC9CA,EAAMruD,UAGR/D,KAAK0zC,aAAUnhD,EAEfyN,KAAKmyD,aAAa1+D,aAElBuM,KAAKmyD,kBAAe5/D,GAGtByN,KAAKwxD,aAAUj/D,EACRyN,MAaTixD,EAAUM,iBAAmB,WAC3B,OAAO5pB,EAAU3nC,UAAM,OAAQ,GAAQ,WAErC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH,MAAO,CAAC,EAEN0pB,UAAUC,aAAaV,oBAE3B,KAAK,EAEH,MAAO,CAAC,EADKrlB,EAAGnJ,OAGHvT,QAAO,SAAUkiC,GAC5B,MAAuB,eAAhBA,EAAOvqC,iBAO1Bz3B,OAAOC,eAAeshE,EAAUrgE,UAAW,QAAS,CAKlDf,IAAK,WACH,OAAOmQ,KAAK0zC,SAAW1zC,KAAK0zC,QAAQ2e,OAAS,UAAY,WAE3DziE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeshE,EAAUrgE,UAAW,WAAY,CASrDf,IAAK,WACH,OAAImQ,KAAKwxD,QACAxxD,KAAKwxD,QAAQG,cAEpB,GAGJ/hE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeshE,EAAUrgE,UAAW,UAAW,CAMpDf,IAAK,WACH,OAAImQ,KAAKwxD,QACAxxD,KAAKwxD,QAAQc,aAEpB,GAGJ1iE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeshE,EAAUrgE,UAAW,QAAS,CAMlDf,IAAK,WACH,OAAImQ,KAAKwxD,QACAxxD,KAAKwxD,QAAQlpB,WAEpB,GAGJ14C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeshE,EAAUrgE,UAAW,OAAQ,CAWjDf,IAAK,WACH,OAAOmQ,KAAK+uD,QAAQtB,MAEtBtxD,IAAK,SAAUsxD,GACbztD,KAAK+uD,QAAQtB,KAAOA,GAEtB79D,YAAY,EACZ4sB,cAAc,IAGhBy0C,EAAUrgE,UAAU+6C,QAAU,WAQ5B,OAPAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKyN,QAELzN,KAAK+uD,QAAQpjB,UAEb3rC,KAAKutD,OAAO5hB,UACL3rC,MAGTtQ,OAAOC,eAAeshE,EAAW,YAAa,CAI5CphE,IAAK,WACH,OAAO+5C,EAAUooB,UAAUC,eAAiBroB,EAAUooB,UAAUC,aAAaC,eAE/EtiE,YAAY,EACZ4sB,cAAc,IAnQlB,CAsQE,ICtRK,SAAS+1C,GAAiBhnD,EAAU3M,GACzC,OAAO+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAIvC,EAAUrL,EACd,OAAO81C,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAWH,OAVA7qC,EAAWmB,EAAS2M,EAASnZ,QAAQmV,WACrCnV,EAAU,IAAI,GAAe,EAAGqL,EAAU8N,EAASnZ,QAAQmV,YACnD,IAAIgE,EAASs1B,YAAYnxC,OAAO48C,OAAO/gC,EAAS1b,MAAO,CAE7DqkB,UAAW,EAAIzW,EAEfwW,OAAQ,EACR7hB,QAASA,KACPqwD,gBACE/+C,MAAM,GACL,CAAC,EAENtR,EAAQsc,UAEZ,KAAK,EAEH,MAAO,CAAC,EADCw9B,EAAGnJ,OAGHz/B,eAAe,WCjBlC,IAAI,GAEJ,SAAUyqC,GAGR,SAASykB,IACP,IAAInnB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBimB,EAAmBllB,cAAe9F,UAAW,CAAC,YAAa,WAAaxnC,KAE3HqrC,EAAM97C,KAAO,qBAKb87C,EAAMonB,YAAcpnB,EAAMj5C,QAAQq1B,mBAClC4jB,EAAM2W,kBAAoB,CAAC3W,EAAMonB,aACjC,IAAI1gE,EAAUw6C,EAAqBimB,EAAmBllB,cAAe9F,UAAW,CAAC,YAAa,SAgB9F,OAfAh0C,GAAQ63C,EAAMonB,YAAapnB,EAAMgY,WACjChY,EAAMluC,KAAOpL,EAAQoL,KACrBkuC,EAAMn3B,UAAY,IAAI,GAAM,CAC1B9hB,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMonB,YAAYv+C,UACzBmmC,MAAO,YACPpqD,MAAO8B,EAAQmiB,YAEjBm3B,EAAMp3B,OAAS,IAAI,GAAM,CACvB7hB,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMonB,YAAYx+C,OACzBomC,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAEjBkgC,GAAS9I,EAAO,CAAC,YAAa,WACvBA,EAyET,OArGAlE,EAAUqrB,EAAoBzkB,GA+B9BykB,EAAmBllB,YAAc,WAC/B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDr5B,OAAQ,EACRC,UAAW,IACX/W,KAAM,UASVq1D,EAAmB5hE,UAAU8S,MAAQ,SAAU/F,GAC7C,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAOlC,OANAqC,KAAK0pC,IAAI,QAASuW,GAElBjgD,KAAK8jD,WAAW7D,GAEhBjgD,KAAKyyD,YAAY/uD,MAAMu8C,GAEhBjgD,MAGTwyD,EAAmB5hE,UAAUwzD,YAAc,SAAUzmD,GACnDqC,KAAKyyD,YAAY1uD,KAAKpG,IAQxB60D,EAAmB5hE,UAAU+2B,gBAAkB,SAAUD,GAGvD,OAFA1nB,KAAKyyD,YAAY9qC,gBAAgBD,GAE1B1nB,MAGTtQ,OAAOC,eAAe6iE,EAAmB5hE,UAAW,OAAQ,CAI1Df,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYt1D,MAE1BhB,IAAK,SAAUgB,GACb6C,KAAKyyD,YAAYt1D,KAAOA,GAE1BvN,YAAY,EACZ4sB,cAAc,IAMhBg2C,EAAmB5hE,UAAU+6C,QAAU,WAWrC,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAEX,YAAfA,KAAKuN,OACPvN,KAAK+D,OAGP/D,KAAKyyD,YAAYh/D,aAEjBuM,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UACL3rC,MAGFwyD,EAtGT,CAuGE,ICjGE,GAEJ,SAAUzkB,GAGR,SAAS2kB,IACP,IAAIrnB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmmB,EAAWplB,cAAe9F,UAAW,CAAC,YAAa,WAAaxnC,KAEnHqrC,EAAM97C,KAAO,aAKb87C,EAAMonB,YAAc,KACpB,IAAI1gE,EAAUw6C,EAAqBmmB,EAAWplB,cAAe9F,UAAW,CAAC,YAAa,SAsBtF,OArBA6D,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQmiB,YAEjBigC,GAAS9I,EAAO,aAChBA,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfioD,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAEjBkgC,GAAS9I,EAAO,UAChBA,EAAMsnB,UAAY5gE,EAAQ6gE,SAC1BvnB,EAAMwnB,cAAgB9gE,EAAQ+gE,aAC9BznB,EAAMV,MAAQ54C,EAAQoL,KAElBpL,EAAQ+gE,cAAiC,WAAjB/gE,EAAQoL,OAClCkuC,EAAMV,MAAQU,EAAM0nB,SAAWhhE,EAAQ+gE,aAAa72B,YAGtDoP,EAAM2nB,MAAQjhE,EAAQihE,MACf3nB,EAqaT,OAtcAlE,EAAUurB,EAAY3kB,GAoCtB2kB,EAAWplB,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr5B,OAAQ,EACRC,UAAW,IACX4+C,aAAc,EACdF,SAAU,GACVI,MAAO,EACP71D,KAAM,UAQVu1D,EAAW9hE,UAAUu+D,OAAS,SAAUxxD,GACtC,IAAI0tC,EAAQrrC,KAERigD,EAAejgD,KAAKg5C,UAAUr7C,GAE9Bs1D,EAAa,IAAI,GAAmB,CACtC7gE,QAAS4N,KAAK5N,QACdoa,QAAS,WACP,OAAO6+B,EAAM2jB,OAAO3jB,MAGxBrrC,KAAKyyD,YAAcQ,EAEfjzD,KAAKkzD,MACPlzD,KAAKyyD,YAAY9qC,gBAAgB3nB,KAAKkzD,OAEtClzD,KAAKyyD,YAAYt1D,KAAO6C,KAAK2qC,MAI/B3qC,KAAKyyD,YAAYj/D,QAAQwM,KAAKsE,QAE9BtE,KAAKkU,UAAU1gB,QAAQwM,KAAKyyD,YAAYv+C,WACxClU,KAAKiU,OAAOzgB,QAAQwM,KAAKyyD,YAAYx+C,QAErCjU,KAAKyyD,YAAY/uD,MAAMu8C,IAOzByS,EAAW9hE,UAAUy+D,MAAQ,SAAU1xD,GACrC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAE9BqC,KAAKyyD,aACPzyD,KAAKyyD,YAAY1uD,KAAKk8C,IAS1ByS,EAAW9hE,UAAU45D,SAAW,SAAU7sD,GACxC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GASlC,OARAqC,KAAK0pC,IAAI,UAAWuW,GAEhBjgD,KAAKyyD,aACPzyD,KAAKyyD,YAAYxO,aAGnBjkD,KAAKsN,OAAOuhC,OAAOoR,GAEZjgD,MAgBT0yD,EAAW9hE,UAAUuiE,cAAgB,WAEnC,OADAnzD,KAAK5N,QAAQsmD,UAAUkU,WAAW5sD,KAAKkU,WAChClU,MAQT0yD,EAAW9hE,UAAUwiE,gBAAkB,WAErC,OADApzD,KAAK5N,QAAQsmD,UAAUqU,aAAa/sD,KAAKkU,WAClClU,MAST0yD,EAAW9hE,UAAUyiE,uBAAyB,WAC5C,IAAIhoB,EAAQrrC,KAEZ,GAAmB,WAAfA,KAAK2qC,MAKP,OAJI2oB,EAAWZ,EAAWa,mBAAmB9B,MAAK,SAAU+B,GAC1D,OAAOA,EAAYR,QAAU3nB,EAAMooB,SjD3HhBC,EiD2HqCF,EAAYZ,SjD3HzCe,EiD2HmDtoB,EAAMsnB,UjD1HnFe,EAAO90D,SAAW+0D,EAAO/0D,QAAU80D,EAAOnzC,OAAM,SAAUnkB,EAASsC,GACxE,OAAOi1D,EAAOj1D,KAAWtC,MAFtB,IAAoBs3D,EAAQC,KiDgI7B,IAAIL,EAAWZ,EAAWa,mBAAmB9B,MAAK,SAAU+B,GAC1D,OAAOA,EAAYr2D,OAASkuC,EAAMV,OAAS6oB,EAAYR,QAAU3nB,EAAMooB,UAIzE,OADAzzD,KAAK6yD,cAAgBS,EAAWA,EAASR,aAAe9yD,KAAK6yD,cACtDS,GAIX5jE,OAAOC,eAAe+iE,EAAW9hE,UAAW,OAAQ,CAClDf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUgB,GACb6C,KAAK2qC,MAAQxtC,EACb,IAAIy2D,GAA4E,IAA9D,CAAC,OAAQ,SAAU,WAAY,YAAYhnB,QAAQzvC,GAErE,GAAoB,IAAhB6C,KAAKyzD,QAAgBG,EACvB5zD,KAAKkzD,WAAQ3gE,EACbyN,KAAK6yD,cAAgB,EAEI,OAArB7yD,KAAKyyD,cAEPzyD,KAAKyyD,YAAYt1D,KAAOA,OAErB,CAEL,IAAI02D,EAAQ7zD,KAAKqzD,yBAEjB,GAAIzpB,EAAUiqB,GAAQ,CACpB,IAAIjB,EAAWiB,EAAMjB,SACjBkB,EAAOD,EAAMC,KACjB9zD,KAAKkzD,MAAQY,EACb9zD,KAAK2yD,UAAYC,EAEQ,OAArB5yD,KAAKyyD,aACPzyD,KAAKyyD,YAAY9qC,gBAAgB3nB,KAAKkzD,WAEnC,CACL,IAAIhnB,EAAKrD,EAAO7oC,KAAK+zD,kBAAkB52D,EAAM6C,KAAKyzD,QAAS,GACvDhgD,EAAOy4B,EAAG,GACVx4B,EAAOw4B,EAAG,GAEVxkB,EAAe1nB,KAAK5N,QAAQs3B,mBAAmBjW,EAAMC,GACzD1T,KAAKkzD,MAAQxrC,EAEY,OAArB1nB,KAAKyyD,aACPzyD,KAAKyyD,YAAY9qC,gBAAgB3nB,KAAKkzD,OAIxCR,EAAWa,mBAAmB3yD,KAAK,CACjC8S,KAAMA,EACNo/C,aAAc9yD,KAAK6yD,cACnBD,SAAU5yD,KAAK2yD,UACfK,MAAOhzD,KAAKyzD,OACZhgD,KAAMA,EACNtW,KAAM6C,KAAK2qC,MACXmpB,KAAM9zD,KAAKkzD,QAGTR,EAAWa,mBAAmB30D,OAAS,KACzC8zD,EAAWa,mBAAmBlnB,WAKtCz8C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+iE,EAAW9hE,UAAW,WAAY,CACtDf,IAAK,WACH,OAAOmQ,KAAK2qC,MAAM9O,QAAQ77B,KAAK8yD,aAAa72B,WAAY,KAE1D9/B,IAAK,SAAU42D,GACT/yD,KAAK8yD,cAA+B,WAAf9yD,KAAK2qC,OAAmC,WAAbooB,EAClD/yD,KAAK7C,KAAO41D,EAAW/yD,KAAK8yD,aAE5B9yD,KAAK7C,KAAO41D,GAGhBnjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+iE,EAAW9hE,UAAW,eAAgB,CAC1Df,IAAK,WACH,OAAOmQ,KAAK6yD,eAEd12D,IAAK,SAAUrL,GACbo4C,EAAYp4C,EAAG,GACf,IAAIqM,EAAO6C,KAAK2qC,MACZqpB,EAAU,yCAAyCC,KAAKj0D,KAAK2qC,OAMjE,GAJIqpB,IACF72D,EAAO62D,EAAQ,IAGE,WAAfh0D,KAAK2qC,MAEL3qC,KAAK7C,KADG,IAANrM,EACUqM,EAEAA,EAAOrM,EAAEmrC,eAElB,CAEL,IAAIi4B,EAAiB,IAAIpzD,aAAahQ,GAEtCkP,KAAK2yD,UAAUh2D,SAAQ,SAAU+rC,EAAG15C,GAClC,OAAOklE,EAAellE,GAAK05C,KAG7B1oC,KAAK2yD,UAAYvhD,MAAMC,KAAK6iD,GAC5Bl0D,KAAK7C,KAAO6C,KAAK2qC,QAGrB/6C,YAAY,EACZ4sB,cAAc,IAQhBk2C,EAAW9hE,UAAUmjE,kBAAoB,SAAU52D,EAAM61D,GACvD,IACImB,EAAmB3qD,KACnBiK,EAAO,IAAI3S,aAAaqzD,GACxBzgD,EAAO,IAAI5S,aAAaqzD,GACxBrB,EAAe,EAEnB,GAAa,WAAT31D,GAKF,GAJA21D,EAAe9yD,KAAK2yD,UAAU/zD,OAAS,EACvCoB,KAAK6yD,cAAgB7yD,KAAK2yD,UAAU/zD,OACpCu1D,EAAmBrB,EAEW,IAA1B9yD,KAAK2yD,UAAU/zD,OACjB,MAAO,CAAC6U,EAAMC,OAEX,CACL,IAAIsgD,EAAU,yCAAyCC,KAAK92D,GAExD62D,GACFlB,EAAelY,SAASoZ,EAAQ,GAAI,IAAM,EAC1Ch0D,KAAK6yD,cAAgBjY,SAASoZ,EAAQ,GAAI,IAC1C72D,EAAO62D,EAAQ,GAEfG,EADArB,EAAe90D,KAAKwJ,IAAIsrD,EAAc,IAGtC9yD,KAAK6yD,cAAgB,EAGvB7yD,KAAK2yD,UAAY,GAGnB,IAAK,IAAIliE,EAAI,EAAGA,EAAI0jE,IAAoB1jE,EAAG,CACzC,IAAI2jE,EAAW,GAAK3jE,EAAIuN,KAAK+nB,IACzBd,OAAI,EAER,OAAQ9nB,GACN,IAAK,OACH8nB,EAAIx0B,GAAKqiE,EAAe,EAAI,EAC5B9yD,KAAK2yD,UAAUliE,EAAI,GAAKw0B,EACxB,MAEF,IAAK,SACHA,EAAQ,EAAJx0B,EAAQ,EAAI2jE,EAAW,EAC3Bp0D,KAAK2yD,UAAUliE,EAAI,GAAKw0B,EACxB,MAEF,IAAK,WACHA,EAAImvC,GAAgB,EAAJ3jE,EAAQ,GAAK,GAC7BuP,KAAK2yD,UAAUliE,EAAI,GAAKw0B,EACxB,MAEF,IAAK,WAEDA,EADM,EAAJx0B,EACO2jE,EAAWA,EAAhB,GAA6B3jE,EAAI,GAAK,EAAI,GAAK,EAAI,GAEnD,EAGNuP,KAAK2yD,UAAUliE,EAAI,GAAKw0B,EACxB,MAEF,IAAK,SACHA,EAAIjlB,KAAK2yD,UAAUliE,EAAI,GACvB,MAEF,QACE,MAAM,IAAI0c,UAAU,6BAA+BhQ,GAG7C,IAAN8nB,GACFxR,EAAKhjB,IAAMw0B,EAAIjnB,KAAKioB,IAAI+sC,EAAQviE,GAChCijB,EAAKjjB,GAAKw0B,EAAIjnB,KAAKgoB,IAAIgtC,EAAQviE,KAE/BgjB,EAAKhjB,GAAK,EACVijB,EAAKjjB,GAAK,GAId,MAAO,CAACgjB,EAAMC,IAOhBg/C,EAAW9hE,UAAUyjE,YAAc,SAAU5gD,EAAMC,EAAMs/C,GAIvD,IAHA,IAAIr6B,EAAM,EACNmI,EAAMrtB,EAAK7U,OAEN5P,EAAI,EAAGA,EAAI8xC,EAAK9xC,IACvB2pC,GAAOllB,EAAKzkB,GAAKgP,KAAKgoB,IAAIh3B,EAAIgkE,GAASt/C,EAAK1kB,GAAKgP,KAAKioB,IAAIj3B,EAAIgkE,GAGhE,OAAOr6B,GAQT+5B,EAAW9hE,UAAU0jE,gBAAkB,WASrC,IARA,IAAIpoB,EAAKrD,EAAO7oC,KAAK+zD,kBAAkB/zD,KAAK2qC,MAAO,GAAI,GACnDl3B,EAAOy4B,EAAG,GACVx4B,EAAOw4B,EAAG,GAEVt7B,EAAW,EACX2jD,EAAkB,EAAVv2D,KAAK+nB,GAGR/2B,EAAI,EAAGA,EAFI,GAEeA,IACjC4hB,EAAW5S,KAAKwJ,IAAIxH,KAAKq0D,YAAY5gD,EAAMC,EAAM1kB,EAH/B,GAGmDulE,GAAQ3jD,GAG/E,OAAOk9B,GAAO9tC,KAAKq0D,YAAY5gD,EAAMC,EAAM1T,KAAKyzD,QAAU7iD,GAAW,EAAG,IAG1ElhB,OAAOC,eAAe+iE,EAAW9hE,UAAW,WAAY,CACtDf,IAAK,WACH,OAAOmQ,KAAK2yD,UAAUnyD,MAAM,EAAGR,KAAK8yD,eAEtC32D,IAAK,SAAUy2D,GACb5yD,KAAK2yD,UAAYC,EACjB5yD,KAAK6yD,cAAgB7yD,KAAK2yD,UAAU/zD,OAEhCg0D,EAASh0D,SACXoB,KAAK7C,KAAO,WAGhBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+iE,EAAW9hE,UAAW,QAAS,CACnDf,IAAK,WACH,OAAOmQ,KAAKyzD,QAAU,IAAMz1D,KAAK+nB,KAEnC5pB,IAAK,SAAU62D,GACbhzD,KAAKyzD,OAAST,EAAQh1D,KAAK+nB,GAAK,IAEhC/lB,KAAK7C,KAAO6C,KAAK2qC,OAEnB/6C,YAAY,EACZ4sB,cAAc,IAGhBk2C,EAAW9hE,UAAU4jE,QAAU,SAAU51D,GAKvC,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAK/B8zD,EAAW9hE,UAAU+6C,QAAU,WAU7B,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAEL,OAArBA,KAAKyyD,aACPzyD,KAAKyyD,YAAY9mB,UAGnB3rC,KAAKkzD,WAAQ3gE,EACbyN,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UACL3rC,MAOT0yD,EAAWa,mBAAqB,GACzBb,EAvcT,CAwcE,ICvdE,GAEJ,SAAU3kB,GAGR,SAAS0mB,IACP,OAAO1mB,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBkoB,EAAennB,cAAe9F,UAAW,CAAC,eAAiBxnC,KAgBzH,OAnBAmnC,EAAUstB,EAAgB1mB,GAM1B0mB,EAAe7jE,UAAU4C,QAAU,SAAU0V,EAAaq5C,EAAWC,GAUnE,YATkB,IAAdD,IACFA,EAAY,QAGG,IAAbC,IACFA,EAAW,GAGbkC,GAAc1kD,KAAMkJ,EAAaq5C,EAAWC,GACrCxiD,MAGFy0D,EApBT,CAqBE,ICbE,GAEJ,SAAU1mB,GAGR,SAAS2mB,IACP,IAAIrpB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBmoB,EAAWpnB,cAAe9F,UAAW,CAAC,UAAW,cAAgBxnC,KAElIqrC,EAAM97C,KAAO,aAKb87C,EAAMspB,QAAUtpB,EAAMj5C,QAAQm6B,mBAK9B8e,EAAM9mC,MAAQ8mC,EAAMspB,QAKpBtpB,EAAM/mC,OAAS+mC,EAAMspB,QACrB,IAAI5iE,EAAUw6C,EAAqBmoB,EAAWpnB,cAAe9F,UAAW,CAAC,UAAW,WAQpF,OANIpL,EAAQrqC,EAAQ6iE,UAAY7iE,EAAQ6iE,mBAAmB9zD,aACzDuqC,EAAMvjC,MAAQhH,aAAauQ,KAAKtf,EAAQ6iE,SAC/B/qB,EAAW93C,EAAQ6iE,UAC5BvpB,EAAMwpB,OAAO9iE,EAAQ6iE,QAAS7iE,EAAQ6M,QAGjCysC,EAmFT,OAhHAlE,EAAUutB,EAAY3mB,GAgCtB2mB,EAAWpnB,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzC1uC,OAAQ,QAiBZ81D,EAAW9jE,UAAUikE,OAAS,SAAUD,EAASh2D,QAChC,IAAXA,IACFA,EAAS,MAKX,IAFA,IAAI2G,EAAQ,IAAIzE,aAAalC,GAEpB5P,EAAI,EAAG8xC,EAAMliC,EAAQ5P,EAAI8xC,EAAK9xC,IAAK,CAC1C,IAAI8lE,EAAa9lE,GAAK8xC,EAAM,GAAK,EAAI,EACrCv7B,EAAMvW,GAAK4lE,EAAQE,EAAY9lE,GAIjC,OADAgR,KAAK8H,MAAQvC,EACNvF,MAGTtQ,OAAOC,eAAe+kE,EAAW9jE,UAAW,QAAS,CAMnDf,IAAK,WACH,OAAOmQ,KAAK20D,QAAQ7sD,OAEtB3L,IAAK,SAAUy4D,GACb50D,KAAK20D,QAAQ7sD,MAAQ8sD,GAEvBhlE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+kE,EAAW9jE,UAAW,aAAc,CAKxDf,IAAK,WACH,OAAOmQ,KAAK20D,QAAQtrC,YAEtBltB,IAAK,SAAU44D,GAIb/rB,EAHuB,CAAC,OAAQ,KAAM,MAAM/4B,MAAK,SAAUmkC,GACzD,OAAOA,EAAI3kB,SAASslC,MAEG,qDACzB/0D,KAAK20D,QAAQtrC,WAAa0rC,GAE5BnlE,YAAY,EACZ4sB,cAAc,IAMhBk4C,EAAW9jE,UAAU+6C,QAAU,WAK7B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK20D,QAAQlhE,aAENuM,MAGF00D,EAjHT,CAkHE,IC7HE,GAEJ,SAAU3mB,GAGR,SAASinB,IACP,IAAI3pB,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAuBhE,OArBAqrC,EAAM97C,KAAO,cAKb87C,EAAM4pB,MAAQ,IAAI,GAAW,CAC3B7iE,QAASi5C,EAAMj5C,QACfwiE,QAAS,SAAUxvD,GACjB,OAAQA,EAAI,GAAK,KAOrBimC,EAAM9mC,MAAQ8mC,EAAM4pB,MAKpB5pB,EAAM/mC,OAAS+mC,EAAM4pB,MACd5pB,EAeT,OAzCAlE,EAAU6tB,EAAajnB,GAiCvBinB,EAAYpkE,UAAU+6C,QAAU,WAK9B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKi1D,MAAMtpB,UAEJ3rC,MAGFg1D,EA1CT,CA2CE,IC9BE,GAEJ,SAAUjnB,GAGR,SAASmnB,IACP,IAAI7pB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB2oB,EAAS5nB,cAAe9F,UAAW,CAAC,aAAexnC,KAEpHqrC,EAAM97C,KAAO,WAKb87C,EAAMmZ,UAAW,EACjB,IAAIzyD,EAAUw6C,EAAqB2oB,EAAS5nB,cAAe9F,UAAW,CAAC,UAUvE,OATA6D,EAAM8pB,MAAQ9pB,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS,IAAI,GAAK,CAClDlS,QAASi5C,EAAMj5C,QACfye,SAAU9e,EAAQ8e,SAClBD,SAAU7e,EAAQ6e,WAEpBy6B,EAAM+pB,OAAS/pB,EAAMiU,OAASjU,EAAM8pB,MAAMlsD,KAE1CoiC,EAAM+pB,OAAOrkD,eAAehf,EAAQ9B,MAAO,GAEpCo7C,EAiBT,OAtCAlE,EAAU+tB,EAAUnnB,GAwBpBmnB,EAAS5nB,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr9C,MAAO,KAIXilE,EAAStkE,UAAU+6C,QAAU,WAK3B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKm1D,MAAMxpB,UAEJ3rC,MAGFk1D,EAvCT,CAwCE,IC3BE,GAEJ,SAAUnnB,GAGR,SAASsnB,IACP,IAAIhqB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB8oB,EAAa/nB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,qBAAuBxnC,KAEvIqrC,EAAM97C,KAAO,eAKb87C,EAAMiqB,iBAAmB,IAAI,GAAY,CACvCljE,QAASi5C,EAAMj5C,UAMjBi5C,EAAMkqB,gBAAkB,IAAI,GAAK,CAC/BnjE,QAASi5C,EAAMj5C,UAEjB,IAAIL,EAAUw6C,EAAqB8oB,EAAa/nB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,mBA8BhG,OA7BA6D,EAAMmqB,SAAW,IAAI,GAAW,CAC9BpjE,QAASi5C,EAAMj5C,QACf6hB,OAAQliB,EAAQkiB,OAChBC,UAAWniB,EAAQmiB,UACnB86C,OAAQ,WACN,OAAO3jB,EAAM2jB,OAAO3jB,IAEtB2nB,MAAOjhE,EAAQihE,MACf71D,KAAMpL,EAAQoL,OAEhBkuC,EAAMn3B,UAAYm3B,EAAMmqB,SAASthD,UAAWm3B,EAAMp3B,OAASo3B,EAAMmqB,SAASvhD,OAC1Eo3B,EAAMoqB,WAAa,IAAI,GAAW,CAChCrjE,QAASi5C,EAAMj5C,QACf4gE,MAAOjhE,EAAQihE,MACf71D,KAAMpL,EAAQ2jE,iBAEhBrqB,EAAMsqB,YAAc,IAAI,GAAS,CAC/BvjE,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQ4jE,cAGjBtqB,EAAMn3B,UAAUiqB,MAAMkN,EAAMsqB,YAAatqB,EAAMoqB,WAAWvhD,WAE1Dm3B,EAAMoqB,WAAWt3B,MAAMkN,EAAMiqB,iBAAkBjqB,EAAMkqB,gBAAgBtsD,MAErEoiC,EAAMmqB,SAASr3B,MAAMkN,EAAMkqB,gBAAiBlqB,EAAM/mC,QAElD6vC,GAAS9I,EAAO,CAAC,YAAa,SAAU,gBACjCA,EA4IT,OA9LAlE,EAAUkuB,EAActnB,GAqDxBsnB,EAAa/nB,YAAc,WACzB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7CqoB,YAAa,EACbD,eAAgB,YAQpBL,EAAazkE,UAAUu+D,OAAS,SAAUxxD,GACxCqC,KAAKy1D,WAAW/xD,MAAM/F,GAEtBqC,KAAKw1D,SAAS9xD,MAAM/F,IAOtB03D,EAAazkE,UAAUy+D,MAAQ,SAAU1xD,GACvCqC,KAAKy1D,WAAW1xD,KAAKpG,GAErBqC,KAAKw1D,SAASzxD,KAAKpG,IAGrB03D,EAAazkE,UAAU45D,SAAW,SAAU7sD,GAC1CqC,KAAKy1D,WAAWrG,QAAQzxD,GAExBqC,KAAKw1D,SAASpG,QAAQzxD,IAGxBjO,OAAOC,eAAe0lE,EAAazkE,UAAW,OAAQ,CAIpDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAASr4D,MAEvBhB,IAAK,SAAUgB,GACb6C,KAAKw1D,SAASr4D,KAAOA,GAEvBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0lE,EAAazkE,UAAW,WAAY,CACxDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAASzC,UAEvB52D,IAAK,SAAU42D,GACb/yD,KAAKw1D,SAASzC,SAAWA,GAE3BnjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0lE,EAAazkE,UAAW,eAAgB,CAC5Df,IAAK,WACH,OAAOmQ,KAAKw1D,SAAS1C,cAEvB32D,IAAK,SAAU22D,GACb9yD,KAAKw1D,SAAS1C,aAAeA,GAE/BljE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0lE,EAAazkE,UAAW,iBAAkB,CAI9Df,IAAK,WACH,OAAOmQ,KAAKy1D,WAAWt4D,MAEzBhB,IAAK,SAAUgB,GACb6C,KAAKy1D,WAAWt4D,KAAOA,GAEzBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0lE,EAAazkE,UAAW,QAAS,CACrDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAASxC,OAEvB72D,IAAK,SAAU62D,GACbhzD,KAAKw1D,SAASxC,MAAQA,EACtBhzD,KAAKy1D,WAAWzC,MAAQA,GAE1BpjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0lE,EAAazkE,UAAW,WAAY,CACxDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAAS5C,UAEvBz2D,IAAK,SAAUy2D,GACb5yD,KAAKw1D,SAAS5C,SAAWA,GAE3BhjE,YAAY,EACZ4sB,cAAc,IAGhB64C,EAAazkE,UAAU4jE,QAAU,SAAU51D,GAKzC,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAS/By2D,EAAazkE,UAAU+6C,QAAU,WAe/B,OAdAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UACZ3rC,KAAK21D,YAAYhqB,UAEjB3rC,KAAKw1D,SAAS7pB,UAEd3rC,KAAKy1D,WAAW9pB,UAEhB3rC,KAAKu1D,gBAAgB5pB,UAErB3rC,KAAKs1D,iBAAiB3pB,UAEf3rC,MAGFq1D,EA/LT,CAgME,ICtME,GAEJ,SAAUtnB,GAGR,SAAS6nB,IACP,IAAIvqB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBqpB,EAAatoB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,qBAAuBxnC,KAEvIqrC,EAAM97C,KAAO,eAKb87C,EAAMkqB,gBAAkB,IAAI,GAAK,CAC/BnjE,QAASi5C,EAAMj5C,QACf6W,KAAM,IAER,IAAIlX,EAAUw6C,EAAqBqpB,EAAatoB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,mBAgDhG,OA/CA6D,EAAMmqB,SAAW,IAAI,GAAW,CAC9BpjE,QAASi5C,EAAMj5C,QACf6hB,OAAQliB,EAAQkiB,OAChBC,UAAW,EACX86C,OAAQ,WACN,OAAO3jB,EAAM2jB,OAAO3jB,IAEtB2nB,MAAOjhE,EAAQihE,MACf71D,KAAMpL,EAAQoL,OAEhBkuC,EAAMp3B,OAASo3B,EAAMmqB,SAASvhD,OAC9Bo3B,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQmiB,YAEjBm3B,EAAMoqB,WAAa,IAAI,GAAW,CAChCrjE,QAASi5C,EAAMj5C,QACf4gE,MAAOjhE,EAAQihE,MACf71D,KAAMpL,EAAQ2jE,iBAEhBrqB,EAAMsqB,YAAc,IAAI,GAAS,CAC/BvjE,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQ4jE,cAEjBtqB,EAAMwqB,gBAAkB,IAAI,GAAS,CACnCzjE,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQ8jE,kBAGjBxqB,EAAMn3B,UAAU1gB,QAAQ63C,EAAMmqB,SAASthD,WAEvCm3B,EAAMn3B,UAAUiqB,MAAMkN,EAAMsqB,YAAatqB,EAAMoqB,WAAWvhD,WAE1Dm3B,EAAMn3B,UAAUiqB,MAAMkN,EAAMwqB,gBAAiBxqB,EAAMkqB,iBAEnDlqB,EAAMoqB,WAAWjiE,QAAQ63C,EAAMkqB,gBAAgBtsD,MAE/CoiC,EAAMkqB,gBAAgB/hE,QAAQ63C,EAAMmqB,SAASthD,WAE7Cm3B,EAAMmqB,SAAShiE,QAAQ63C,EAAM/mC,QAE7B+mC,EAAMp3B,OAAOzgB,QAAQ63C,EAAMoqB,WAAWxhD,QAEtCkgC,GAAS9I,EAAO,CAAC,kBAAmB,YAAa,SAAU,gBACpDA,EA0IT,OAxMAlE,EAAUyuB,EAAc7nB,GAiExB6nB,EAAatoB,YAAc,WACzB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7CqoB,YAAa,EACbE,gBAAiB,EACjBH,eAAgB,YAQpBE,EAAahlE,UAAUu+D,OAAS,SAAUxxD,GACxCqC,KAAKy1D,WAAW/xD,MAAM/F,GAEtBqC,KAAKw1D,SAAS9xD,MAAM/F,IAOtBi4D,EAAahlE,UAAUy+D,MAAQ,SAAU1xD,GACvCqC,KAAKy1D,WAAW1xD,KAAKpG,GAErBqC,KAAKw1D,SAASzxD,KAAKpG,IAGrBi4D,EAAahlE,UAAU45D,SAAW,SAAU7sD,GAK1C,OAJAqC,KAAKy1D,WAAWrG,QAAQzxD,GAExBqC,KAAKw1D,SAASpG,QAAQzxD,GAEfqC,MAGTtQ,OAAOC,eAAeimE,EAAahlE,UAAW,OAAQ,CACpDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAASr4D,MAEvBhB,IAAK,SAAUgB,GACb6C,KAAKw1D,SAASr4D,KAAOA,GAEvBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeimE,EAAahlE,UAAW,WAAY,CACxDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAASzC,UAEvB52D,IAAK,SAAU42D,GACb/yD,KAAKw1D,SAASzC,SAAWA,GAE3BnjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeimE,EAAahlE,UAAW,eAAgB,CAC5Df,IAAK,WACH,OAAOmQ,KAAKw1D,SAAS1C,cAEvB32D,IAAK,SAAU22D,GACb9yD,KAAKw1D,SAAS1C,aAAeA,GAE/BljE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeimE,EAAahlE,UAAW,iBAAkB,CAI9Df,IAAK,WACH,OAAOmQ,KAAKy1D,WAAWt4D,MAEzBhB,IAAK,SAAUgB,GACb6C,KAAKy1D,WAAWt4D,KAAOA,GAEzBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeimE,EAAahlE,UAAW,QAAS,CACrDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAASxC,OAEvB72D,IAAK,SAAU62D,GACbhzD,KAAKw1D,SAASxC,MAAQA,EACtBhzD,KAAKy1D,WAAWzC,MAAQA,GAE1BpjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeimE,EAAahlE,UAAW,WAAY,CACxDf,IAAK,WACH,OAAOmQ,KAAKw1D,SAAS5C,UAEvBz2D,IAAK,SAAUy2D,GACb5yD,KAAKw1D,SAAS5C,SAAWA,GAE3BhjE,YAAY,EACZ4sB,cAAc,IAGhBo5C,EAAahlE,UAAU4jE,QAAU,SAAU51D,GAKzC,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAS/Bg3D,EAAahlE,UAAU+6C,QAAU,WAa/B,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkU,UAAUy3B,UACf3rC,KAAK21D,YAAYhqB,UAEjB3rC,KAAKw1D,SAAS7pB,UAEd3rC,KAAKy1D,WAAW9pB,UAEhB3rC,KAAKu1D,gBAAgB5pB,UAErB3rC,KAAK61D,gBAAgBlqB,UACd3rC,MAGF41D,EAzMT,CA0ME,ICpME,GAEJ,SAAU7nB,GAGR,SAAS+nB,IACP,IAAIzqB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBupB,EAAgBxoB,cAAe9F,UAAW,CAAC,YAAa,YAAcxnC,KAEzHqrC,EAAM97C,KAAO,kBAKb87C,EAAM0qB,WAAa,IAAI,GAAK,CAC1B3jE,QAASi5C,EAAMj5C,QACf6W,KAAM,IAMRoiC,EAAM2qB,QAAU,IAAI,GAAW,CAC7B5jE,QAASi5C,EAAMj5C,QACfwiE,QAAS,SAAUpiB,GACjB,OAAOA,GAAO,GAAK,EAAI,KAG3B,IAAIzgD,EAAUw6C,EAAqBupB,EAAgBxoB,cAAe9F,UAAW,CAAC,YAAa,UAwB3F,OAvBA6D,EAAM4qB,MAAQ,IAAI,GAAO,CACvB7jE,QAASi5C,EAAMj5C,QACfioD,MAAO,aACPpqD,MAAO8B,EAAQkkE,QAEjB5qB,EAAM6qB,UAAY,IAAI,GAAW,CAC/B9jE,QAASi5C,EAAMj5C,QACf6hB,OAAQliB,EAAQkiB,OAChBC,UAAWniB,EAAQmiB,UACnB86C,OAAQ,WACN,OAAO3jB,EAAM2jB,OAAO3jB,IAEtB2nB,MAAOjhE,EAAQihE,MACf71D,KAAM,aAERkuC,EAAMn3B,UAAYm3B,EAAM6qB,UAAUhiD,UAClCm3B,EAAMp3B,OAASo3B,EAAM6qB,UAAUjiD,OAE/Bo3B,EAAM6qB,UAAU/3B,MAAMkN,EAAM2qB,QAAS3qB,EAAM/mC,QAE3C+mC,EAAM4qB,MAAM93B,MAAMkN,EAAM0qB,WAAY1qB,EAAM2qB,SAE1C7hB,GAAS9I,EAAO,CAAC,QAAS,YAAa,WAChCA,EAmJT,OAnMAlE,EAAU2uB,EAAiB/nB,GAmD3B+nB,EAAgBxoB,YAAc,WAC5B,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr5B,OAAQ,EACRC,UAAW,IACX8+C,MAAO,EACP71D,KAAM,QACN84D,MAAO,MAQXH,EAAgBllE,UAAUu+D,OAAS,SAAUxxD,GAC3CA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKk2D,UAAUxyD,MAAM/F,GAErBqC,KAAK+1D,WAAW9sD,KAAK8H,eAAe,EAAGpT,IAOzCm4D,EAAgBllE,UAAUy+D,MAAQ,SAAU1xD,GAC1CA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKk2D,UAAUnyD,KAAKpG,GAIpBqC,KAAK+1D,WAAW9sD,KAAKuI,sBAAsB7T,GAE3CqC,KAAK+1D,WAAW9sD,KAAK8H,eAAe,EAAGpT,IAGzCm4D,EAAgBllE,UAAU45D,SAAW,SAAU7sD,GAC7CqC,KAAKk2D,UAAU9G,QAAQzxD,GAEvBqC,KAAK+1D,WAAW9sD,KAAKuI,sBAAsB7T,GAE3CqC,KAAK+1D,WAAW9sD,KAAK8H,eAAe,EAAGpT,IAGzCjO,OAAOC,eAAemmE,EAAgBllE,UAAW,QAAS,CAIxDf,IAAK,WACH,OAAOmQ,KAAKk2D,UAAUlD,OAExB72D,IAAK,SAAU62D,GACbhzD,KAAKk2D,UAAUlD,MAAQA,GAEzBpjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemmE,EAAgBllE,UAAW,OAAQ,CAIvDf,IAAK,WACH,MAAO,SAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemmE,EAAgBllE,UAAW,WAAY,CAI3Df,IAAK,WACH,MAAO,SAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemmE,EAAgBllE,UAAW,WAAY,CAI3Df,IAAK,WACH,MAAO,IAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemmE,EAAgBllE,UAAW,eAAgB,CAI/Df,IAAK,WACH,OAAO,GAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemmE,EAAgBllE,UAAW,cAAe,CAM9DuL,IAAK,SAAUgB,GACb6C,KAAKk2D,UAAU/4D,KAAOA,GAExBvN,YAAY,EACZ4sB,cAAc,IAGhBs5C,EAAgBllE,UAAU4jE,QAAU,SAAU51D,GAK5C,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAS/Bk3D,EAAgBllE,UAAU+6C,QAAU,WAWlC,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKk2D,UAAUvqB,UAEf3rC,KAAKi2D,MAAMtqB,UAEX3rC,KAAK+1D,WAAWpqB,UAEhB3rC,KAAKg2D,QAAQrqB,UAEN3rC,MAGF81D,EApMT,CAqME,ICnOE,GAEJ,SAAU/nB,GAGR,SAASooB,IACP,IAAI9qB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB4pB,EAAc7oB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,aAAexnC,KAEhIqrC,EAAM97C,KAAO,gBAKb87C,EAAM+qB,aAAe,GACrB,IAAIrkE,EAAUw6C,EAAqB4pB,EAAc7oB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,WAmBjG,OAlBA6D,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQmiB,YAEjBm3B,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfioD,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAEjBo3B,EAAMgrB,QAAUtkE,EAAQukE,OACxBjrB,EAAMV,MAAQ54C,EAAQoL,KACtBkuC,EAAMooB,OAAS1hE,EAAQihE,MACvB3nB,EAAMsnB,UAAY5gE,EAAQ6gE,SAC1BvnB,EAAMwnB,cAAgB9gE,EAAQ+gE,aAE9BznB,EAAMnzB,MAAQnmB,EAAQmmB,MACtBi8B,GAAS9I,EAAO,CAAC,YAAa,WACvBA,EA2PT,OAzRAlE,EAAUgvB,EAAepoB,GAiCzBooB,EAAc7oB,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7Cp1B,MAAO,EACPo+C,OAAQ,GACRn5D,KAAM,cAQVg5D,EAAcvlE,UAAUu+D,OAAS,SAAUxxD,GACzCA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAI9yD,MAAM/F,OAQrBw4D,EAAcvlE,UAAUy+D,MAAQ,SAAU1xD,GACxCA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAIzyD,KAAKpG,OAIpBw4D,EAAcvlE,UAAU45D,SAAW,SAAU7sD,GAC3CqC,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAIpH,QAAQzxD,OAQvBw4D,EAAcvlE,UAAU2lE,SAAW,SAAUn2D,GAC3C,IAAK,IAAIpR,EAAI,EAAGA,EAAIgR,KAAKo2D,aAAax3D,OAAQ5P,IAC5CoR,EAASJ,KAAKo2D,aAAapnE,GAAIA,IAInCU,OAAOC,eAAewmE,EAAcvlE,UAAW,OAAQ,CAIrDf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUgB,GACb6C,KAAK2qC,MAAQxtC,EAEb6C,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAIr5D,KAAOA,MAGtBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewmE,EAAcvlE,UAAW,SAAU,CAUvDf,IAAK,WACH,OAAOmQ,KAAKq2D,SAEdl6D,IAAK,SAAUm6D,GAGb,GAFAt2D,KAAKq2D,QAAUC,EAEXt2D,KAAKo2D,aAAax3D,OAAS,EAAG,CAChC,IAAI63D,GAAWH,EAAS,EACpBI,EAASJ,GAAUt2D,KAAKo2D,aAAax3D,OAAS,GAElDoB,KAAKu2D,UAAS,SAAUC,EAAKxnE,GAC3B,OAAOwnE,EAAIviD,OAAOhkB,MAAQwmE,EAAUC,EAAS1nE,OAInDY,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewmE,EAAcvlE,UAAW,QAAS,CAQtDf,IAAK,WACH,OAAOmQ,KAAKo2D,aAAax3D,QAE3BzC,IAAK,SAAU+b,GACb,IAAImzB,EAAQrrC,KAIZ,GAFAkpC,EAAYhxB,EAAO,GAEflY,KAAKo2D,aAAax3D,SAAWsZ,EAAO,CAEtClY,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAI7qB,aAGb3rC,KAAKo2D,aAAe,GAEpB,IAAK,IAAIpnE,EAAI,EAAGA,EAAIkpB,EAAOlpB,IAAK,CAC9B,IAAIwnE,EAAM,IAAI,GAAW,CACvBpkE,QAAS4N,KAAK5N,QACdm7D,QAAS,EAAY,IAARr1C,EACb/a,KAAM6C,KAAK2qC,MACXqoB,MAAOhzD,KAAKyzD,OAASzkE,EAAIkpB,EAAQ,IACjC46C,aAAc9yD,KAAK6yD,cACnB7D,OAAc,IAANhgE,EAAU,WAChB,OAAOq8C,EAAM2jB,OAAO3jB,IAClBgJ,KAGY,WAAdr0C,KAAK7C,OACPq5D,EAAI5D,SAAW5yD,KAAK2yD,WAGtB3yD,KAAKkU,UAAU1gB,QAAQgjE,EAAItiD,WAC3BlU,KAAKiU,OAAOzgB,QAAQgjE,EAAIviD,QACxBuiD,EAAIviD,OAAOmrC,YAAa,EACxBoX,EAAIhjE,QAAQwM,KAAKsE,QACjBtE,KAAKo2D,aAAapnE,GAAKwnE,EAIzBx2D,KAAKs2D,OAASt2D,KAAKq2D,QAEA,YAAfr2D,KAAKuN,OACPvN,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAI9yD,aAKnB9T,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewmE,EAAcvlE,UAAW,QAAS,CACtDf,IAAK,WACH,OAAOmQ,KAAKyzD,QAEdt3D,IAAK,SAAU62D,GACbhzD,KAAKyzD,OAAST,EAEdhzD,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAIxD,MAAQA,MAGvBpjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewmE,EAAcvlE,UAAW,WAAY,CACzDf,IAAK,WACH,OAAOmQ,KAAKo2D,aAAa,GAAGrD,UAE9B52D,IAAK,SAAU42D,GACb/yD,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAIzD,SAAWA,KAGxB/yD,KAAK2qC,MAAQ3qC,KAAKo2D,aAAa,GAAGj5D,MAEpCvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewmE,EAAcvlE,UAAW,WAAY,CACzDf,IAAK,WACH,OAAOmQ,KAAKo2D,aAAa,GAAGxD,UAE9Bz2D,IAAK,SAAUy2D,GACb5yD,KAAK2yD,UAAYC,EACjB5yD,KAAK6yD,cAAgB7yD,KAAK2yD,UAAU/zD,OAEhCg0D,EAASh0D,SACXoB,KAAK2qC,MAAQ,SAEb3qC,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAI5D,SAAWA,OAI5BhjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewmE,EAAcvlE,UAAW,eAAgB,CAC7Df,IAAK,WACH,OAAOmQ,KAAKo2D,aAAa,GAAGtD,cAE9B32D,IAAK,SAAU22D,GACb9yD,KAAK6yD,cAAgBC,EAErB9yD,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAI1D,aAAeA,KAG5B9yD,KAAK2qC,MAAQ3qC,KAAKo2D,aAAa,GAAGj5D,MAEpCvN,YAAY,EACZ4sB,cAAc,IAGhB25C,EAAcvlE,UAAU4jE,QAAU,SAAU51D,GAK1C,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAS/Bu3D,EAAcvlE,UAAU+6C,QAAU,WAUhC,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UAEZ3rC,KAAKu2D,UAAS,SAAUC,GACtB,OAAOA,EAAI7qB,aAGN3rC,MAGFm2D,EA1RT,CA2RE,IC1RE,GAEJ,SAAUpoB,GAGR,SAAS4oB,IACP,IAAItrB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBoqB,EAAcrpB,cAAe9F,UAAW,CAAC,YAAa,0BAA4BxnC,KAErIqrC,EAAM97C,KAAO,gBACb87C,EAAMurB,WAAa,MAMnBvrB,EAAMwrB,OAAS,IAAI,GAAS,CAC1BzkE,QAASi5C,EAAMj5C,QACfnC,MAAO,IAET,IAAI8B,EAAUw6C,EAAqBoqB,EAAcrpB,cAAe9F,UAAW,CAAC,YAAa,wBAyBzF,OAxBA6D,EAAMyrB,OAAS,IAAI,GAAgB,CACjC1kE,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQglE,sBAGrB1rB,EAAMyrB,OAAOE,YAAc,OAC3B3rB,EAAM0rB,oBAAsB1rB,EAAMyrB,OAAO5iD,UACzCm3B,EAAMoqB,WAAa,IAAI,GAAW,CAChCrjE,QAASi5C,EAAMj5C,QACf6hB,OAAQliB,EAAQkiB,OAChBC,UAAWniB,EAAQmiB,UACnB86C,OAAQ,WACN,OAAO3jB,EAAM2jB,OAAO3jB,IAEtB2nB,MAAOjhE,EAAQihE,QAEjB3nB,EAAMn3B,UAAYm3B,EAAMoqB,WAAWvhD,UACnCm3B,EAAMp3B,OAASo3B,EAAMoqB,WAAWxhD,OAEhCo3B,EAAMoqB,WAAWt3B,MAAMkN,EAAMwrB,OAAQxrB,EAAMyrB,OAAOb,OAElD5qB,EAAMyrB,OAAOtjE,QAAQ63C,EAAM/mC,QAE3B6vC,GAAS9I,EAAO,CAAC,sBAAuB,YAAa,WAC9CA,EAmIT,OA5KAlE,EAAUwvB,EAAe5oB,GA4CzB4oB,EAAcrpB,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr5B,OAAQ,EACRC,UAAW,IACX6iD,oBAAqB,GACrB/D,MAAO,EACP71D,KAAM,SAQVw5D,EAAc/lE,UAAUu+D,OAAS,SAAUxxD,GACzCA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKy1D,WAAW/xD,MAAM/F,GAEtBqC,KAAK82D,OAAOpzD,MAAM/F,IAOpBg5D,EAAc/lE,UAAUy+D,MAAQ,SAAU1xD,GACxCA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKy1D,WAAW1xD,KAAKpG,GAErBqC,KAAK82D,OAAO/yD,KAAKpG,IAOnBg5D,EAAc/lE,UAAU45D,SAAW,SAAU7sD,GAC3CqC,KAAKy1D,WAAWrG,QAAQzxD,GAExBqC,KAAK82D,OAAO1H,QAAQzxD,IAGtBjO,OAAOC,eAAegnE,EAAc/lE,UAAW,OAAQ,CAIrDf,IAAK,WACH,MAAO,OAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegnE,EAAc/lE,UAAW,WAAY,CAIzDf,IAAK,WACH,MAAO,OAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegnE,EAAc/lE,UAAW,WAAY,CAIzDf,IAAK,WACH,MAAO,IAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegnE,EAAc/lE,UAAW,eAAgB,CAI7Df,IAAK,WACH,OAAO,GAETD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegnE,EAAc/lE,UAAW,QAAS,CAItDf,IAAK,WACH,OAAOmQ,KAAKy1D,WAAWzC,OAEzB72D,IAAK,SAAU62D,GACbhzD,KAAKy1D,WAAWzC,MAAQA,GAE1BpjE,YAAY,EACZ4sB,cAAc,IAGhBm6C,EAAc/lE,UAAU4jE,QAAU,SAAU51D,GAK1C,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAS/B+3D,EAAc/lE,UAAU+6C,QAAU,WAShC,OARAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK82D,OAAOnrB,UAEZ3rC,KAAK62D,OAAOlrB,UAEZ3rC,KAAKy1D,WAAW9pB,UAET3rC,MAGF22D,EA7KT,CA8KE,ICrLEM,GAA0B,CAC5BC,GAAI,GACJC,IAAK,GACLC,GAAI,GACJnE,WAAY,GACZoE,MAAO,GACPC,IAAK,IAgBH,GAEJ,SAAUvpB,GAGR,SAASwpB,IACP,IAAIlsB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgrB,EAAejqB,cAAe9F,UAAW,CAAC,YAAa,WAAaxnC,KAEvHqrC,EAAM97C,KAAO,iBACb,IAAIwC,EAAUw6C,EAAqBgrB,EAAejqB,cAAe9F,UAAW,CAAC,YAAa,SAe1F,OAdA6D,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQmiB,YAEjBm3B,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfioD,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAEjBkgC,GAAS9I,EAAO,CAAC,YAAa,WAE9BA,EAAMlvC,IAAIpK,GAEHs5C,EA8YT,OAnaAlE,EAAUowB,EAAgBxpB,GAwB1BwpB,EAAejqB,YAAc,WAC3B,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,GAAaA,cAAe,GAAaA,cAAe,GAAcA,cAAe,GAAgBA,cAAe,GAAcA,gBAOnLiqB,EAAe3mE,UAAUu+D,OAAS,SAAUxxD,GAC1CqC,KAAKyyD,YAAY/uD,MAAM/F,IAOzB45D,EAAe3mE,UAAUy+D,MAAQ,SAAU1xD,GACzCqC,KAAKyyD,YAAY1uD,KAAKpG,IAGxB45D,EAAe3mE,UAAU45D,SAAW,SAAU7sD,GAG5C,OAFAqC,KAAKyyD,YAAYrD,QAAQzxD,GAElBqC,MAGTtQ,OAAOC,eAAe4nE,EAAe3mE,UAAW,OAAQ,CAmBtDf,IAAK,WACH,IAAIw7C,EAAQrrC,KAERs3C,EAAS,GAQb,MANI,CAAC,KAAM,KAAM,OAAOrnC,MAAK,SAAUnf,GACrC,OAAOu6C,EAAMmsB,cAAgB1mE,OAE7BwmD,EAASt3C,KAAKw3D,aAGTlgB,EAASt3C,KAAKyyD,YAAYt1D,MAEnChB,IAAK,SAAUgB,GACa,OAAtBA,EAAKs6D,OAAO,EAAG,IACjBz3D,KAAK03D,qBAAqB,MAE1B13D,KAAKyyD,YAAczyD,KAAKyyD,YACxBzyD,KAAKyyD,YAAYt1D,KAAOA,EAAKs6D,OAAO,IACL,OAAtBt6D,EAAKs6D,OAAO,EAAG,IACxBz3D,KAAK03D,qBAAqB,MAE1B13D,KAAKyyD,YAAczyD,KAAKyyD,YACxBzyD,KAAKyyD,YAAYt1D,KAAOA,EAAKs6D,OAAO,IACL,QAAtBt6D,EAAKs6D,OAAO,EAAG,IACxBz3D,KAAK03D,qBAAqB,OAE1B13D,KAAKyyD,YAAczyD,KAAKyyD,YACxBzyD,KAAKyyD,YAAYt1D,KAAOA,EAAKs6D,OAAO,IAClB,QAATt6D,GACT6C,KAAK03D,qBAAqB,OAE1B13D,KAAKyyD,YAAczyD,KAAKyyD,aACN,UAATt1D,EACT6C,KAAK03D,qBAAqB,UAE1B13D,KAAK03D,qBAAqB,cAE1B13D,KAAKyyD,YAAczyD,KAAKyyD,YACxBzyD,KAAKyyD,YAAYt1D,KAAOA,IAG5BvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,WAAY,CAM1Df,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYG,UAE1Bz2D,IAAK,SAAUy2D,GACR5yD,KAAK23D,YAAY33D,KAAKyyD,YAAa,UAAazyD,KAAK23D,YAAY33D,KAAKyyD,YAAa,SACtFzyD,KAAKyyD,YAAYG,SAAWA,IAGhChjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,eAAgB,CAC9Df,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYK,cAE1B32D,IAAK,SAAU22D,GACR9yD,KAAK23D,YAAY33D,KAAKyyD,YAAa,UAAazyD,KAAK23D,YAAY33D,KAAKyyD,YAAa,SACtFzyD,KAAKyyD,YAAYK,aAAeA,IAGpCljE,YAAY,EACZ4sB,cAAc,IAGhB+6C,EAAe3mE,UAAUuL,IAAM,SAAU+kC,GASvC,OAPIuG,QAAQ/qC,IAAIwkC,EAAO,SAAWA,EAAM/jC,OACtC6C,KAAK7C,KAAO+jC,EAAM/jC,MAIpB4wC,EAAOn9C,UAAUuL,IAAIhN,KAAK6Q,KAAMkhC,GAEzBlhC,MAOTu3D,EAAe3mE,UAAU8mE,qBAAuB,SAAUE,GACxD,IAAIvsB,EAAQrrC,KAEZ,GAAI43D,IAAY53D,KAAKw3D,YAAa,CAChCx3D,KAAKw3D,YAAcI,EACnB,IAAIC,EAAiBZ,GAAwBW,GAEzCvlB,EAAMryC,KAAKqyC,MAEf,GAAIryC,KAAKyyD,YAAa,CACpB,IAAIqF,EAAW93D,KAAKyyD,YACpBqF,EAAS/zD,KAAKsuC,GAEdryC,KAAK5N,QAAQua,YAAW,WACtB,OAAOmrD,EAASnsB,YACf3rC,KAAK+3D,WAGV/3D,KAAKyyD,YAAc,IAAIoF,EAAe,CACpCzlE,QAAS4N,KAAK5N,UAEhB4N,KAAKkU,UAAU1gB,QAAQwM,KAAKyyD,YAAYv+C,WACxClU,KAAKiU,OAAOzgB,QAAQwM,KAAKyyD,YAAYx+C,QAErCjU,KAAKyyD,YAAYj/D,QAAQwM,KAAKsE,QAE9BtE,KAAKyyD,YAAYzD,OAAS,WACxB,OAAO3jB,EAAM2jB,OAAO3jB,IAGH,YAAfrrC,KAAKuN,OACPvN,KAAKyyD,YAAY/uD,MAAM2uC,KAK7B3iD,OAAOC,eAAe4nE,EAAe3mE,UAAW,QAAS,CACvDf,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYO,OAE1B72D,IAAK,SAAU62D,GACbhzD,KAAKyyD,YAAYO,MAAQA,GAE3BpjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,aAAc,CAO5Df,IAAK,WACH,OAAOmQ,KAAKw3D,aAEdr7D,IAAK,SAAU67D,GAEb,IAAIjF,EAAW,OAEe,QAA1B/yD,KAAKyyD,YAAYt1D,MAA4C,UAA1B6C,KAAKyyD,YAAYt1D,OACtD41D,EAAW/yD,KAAKyyD,YAAYt1D,MAIhB,OAAV66D,EACFh4D,KAAK7C,KAAO,KAAO41D,EACA,OAAViF,EACTh4D,KAAK7C,KAAO,KAAO41D,EACA,QAAViF,EACTh4D,KAAK7C,KAAO,MAAQ41D,EACD,eAAViF,EACTh4D,KAAK7C,KAAO41D,EACO,UAAViF,EACTh4D,KAAK7C,KAAO,QACO,QAAV66D,IACTh4D,KAAK7C,KAAO,QAGhBvN,YAAY,EACZ4sB,cAAc,IAGhB+6C,EAAe3mE,UAAU+mE,YAAc,SAAUnB,EAAKI,GACpD,OAAOJ,aAAeS,GAAwBL,IAGhDlnE,OAAOC,eAAe4nE,EAAe3mE,UAAW,WAAY,CAS1Df,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYM,UAE1B52D,IAAK,SAAU42D,GACR/yD,KAAK23D,YAAY33D,KAAKyyD,YAAa,UAAazyD,KAAK23D,YAAY33D,KAAKyyD,YAAa,QAAuB,UAAbM,GAAqC,QAAbA,IACxH/yD,KAAKyyD,YAAYM,SAAWA,IAGhCnjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,QAAS,CASvDf,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,SAC9BzyD,KAAKyyD,YAAYwD,WAExB,GAGJrmE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,QAAS,CAKvDf,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,OAC9BzyD,KAAKyyD,YAAYv6C,WAExB,GAGJ/b,IAAK,SAAU+b,GACTlY,KAAK23D,YAAY33D,KAAKyyD,YAAa,QAAU3oB,EAAS5xB,KACxDlY,KAAKyyD,YAAYv6C,MAAQA,IAG7BtoB,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,SAAU,CAKxDf,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,OAC9BzyD,KAAKyyD,YAAY6D,YAExB,GAGJn6D,IAAK,SAAUm6D,GACTt2D,KAAK23D,YAAY33D,KAAKyyD,YAAa,QAAU3oB,EAASwsB,KACxDt2D,KAAKyyD,YAAY6D,OAASA,IAG9B1mE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,iBAAkB,CAKhEf,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,OAASzyD,KAAK23D,YAAY33D,KAAKyyD,YAAa,MAC1EzyD,KAAKyyD,YAAYiD,oBAExB,GAGJv5D,IAAK,SAAU87D,IACRj4D,KAAK23D,YAAY33D,KAAKyyD,YAAa,OAASzyD,KAAK23D,YAAY33D,KAAKyyD,YAAa,QAAUxoB,EAASguB,KACrGj4D,KAAKyyD,YAAYiD,eAAiBuC,IAGtCroE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,kBAAmB,CAKjEf,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,MAC9BzyD,KAAKyyD,YAAYoD,qBAExB,GAGJjmE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,cAAe,CAK7Df,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,OAASzyD,KAAK23D,YAAY33D,KAAKyyD,YAAa,MAC1EzyD,KAAKyyD,YAAYkD,iBAExB,GAGJ/lE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nE,EAAe3mE,UAAW,sBAAuB,CAOrEf,IAAK,WACH,OAAImQ,KAAK23D,YAAY33D,KAAKyyD,YAAa,OAC9BzyD,KAAKyyD,YAAYsE,yBAExB,GAGJnnE,YAAY,EACZ4sB,cAAc,IAGhB+6C,EAAe3mE,UAAU4jE,QAAU,SAAU51D,GAK3C,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,MAAO,CAAC,EAENqmB,GAAiBvyD,KAAMpB,WAK/B24D,EAAe3mE,UAAU+6C,QAAU,WAQjC,OAPAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKiU,OAAO03B,UACZ3rC,KAAKkU,UAAUy3B,UAEf3rC,KAAKyyD,YAAY9mB,UAEV3rC,MAGFu3D,EApaT,CAqaE,ICrbE,GAEJ,SAAUxpB,GAGR,SAASmqB,IACP,IAAI7sB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB2rB,EAAI5qB,cAAe9F,UAAW,CAAC,aAAexnC,KAmB/G,OAjBAqrC,EAAMmZ,UAAW,EACjBnZ,EAAM97C,KAAO,MAKb87C,EAAM8sB,KAAO,IAAI,GAAK,CACpB/lE,QAASi5C,EAAMj5C,UAEjBi5C,EAAM9mC,MAAQ8mC,EAAM8sB,KACpB9sB,EAAM/mC,OAAS+mC,EAAM8sB,KAKrB9sB,EAAM+sB,OAAS/sB,EAAMiU,OACrBsD,GAAcvX,EAAMoZ,gBAAiBpZ,EAAM8sB,MACpC9sB,EAiBT,OAvCAlE,EAAU+wB,EAAKnqB,GAyBfmqB,EAAI5qB,YAAc,WAChB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr9C,MAAO,KAIXioE,EAAItnE,UAAU+6C,QAAU,WAKtB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKm4D,KAAKxsB,UAEH3rC,MAGFk4D,EAxCT,CAyCE,IC/CE,GAEJ,SAAUnqB,GAGR,SAASsqB,IACP,IAAIhtB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB8rB,EAAM/qB,cAAe9F,UAAW,CAAC,MAAO,WAAaxnC,KAEtHqrC,EAAM97C,KAAO,QACb,IAAIwC,EAAUw6C,EAAqB8rB,EAAM/qB,cAAe9F,UAAW,CAAC,MAAO,QAc3E,OAbA6D,EAAM8pB,MAAQ9pB,EAAM9mC,MAAQ,IAAI,GAAS,CACvCnS,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQyV,IAAMzV,EAAQ0V,MAE/B4jC,EAAMitB,KAAOjtB,EAAM/mC,OAAS,IAAI,GAAI,CAClClS,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQ0V,MAEjB4jC,EAAMktB,KAAOxmE,EAAQ0V,IACrB4jC,EAAMmtB,KAAOzmE,EAAQyV,IAErB6jC,EAAM9mC,MAAM/Q,QAAQ63C,EAAM/mC,QAEnB+mC,EA2DT,OA/EAlE,EAAUkxB,EAAOtqB,GAuBjBsqB,EAAM/qB,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAegB,cAAe,CACjD9lC,IAAK,EACLC,IAAK,KAIT/X,OAAOC,eAAe0oE,EAAMznE,UAAW,MAAO,CAI5Cf,IAAK,WACH,OAAOmQ,KAAKu4D,MAEdp8D,IAAK,SAAUsL,GACbzH,KAAKu4D,KAAO9wD,EAEZzH,KAAKy4D,aAEP7oE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0oE,EAAMznE,UAAW,MAAO,CAI5Cf,IAAK,WACH,OAAOmQ,KAAKw4D,MAEdr8D,IAAK,SAAUqL,GACbxH,KAAKw4D,KAAOhxD,EAEZxH,KAAKy4D,aAEP7oE,YAAY,EACZ4sB,cAAc,IAMhB67C,EAAMznE,UAAU6nE,UAAY,WAC1Bz4D,KAAKs4D,KAAKroE,MAAQ+P,KAAKu4D,KACvBv4D,KAAKm1D,MAAMllE,MAAQ+P,KAAKw4D,KAAOx4D,KAAKu4D,MAGtCF,EAAMznE,UAAU+6C,QAAU,WAOxB,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKs4D,KAAK3sB,UAEV3rC,KAAKm1D,MAAMxpB,UAEJ3rC,MAGFq4D,EAhFT,CAiFE,ICxFE,GAEJ,SAAUtqB,GAGR,SAAS2qB,IACP,IAAIrtB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBmsB,EAAKprB,cAAe9F,cAAgBxnC,KAqBrG,OAnBAqrC,EAAM97C,KAAO,OAKb87C,EAAM72B,MAAQ,IAAI,GAAK,CACrBpiB,QAASi5C,EAAMj5C,UAMjBi5C,EAAM/mC,OAAS+mC,EAAM72B,MAKrB62B,EAAM9mC,WAAQhS,EACdiB,GAAQ63C,EAAMj5C,QAAQmgD,YAAY,GAAIlH,EAAM72B,OACrC62B,EAcT,OAtCAlE,EAAUuxB,EAAM3qB,GA+BhB2qB,EAAK9nE,UAAU+6C,QAAU,WAIvB,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BvM,GAAWuM,KAAK5N,QAAQmgD,YAAY,GAAIvyC,KAAKwU,OACtCxU,MAGF04D,EAvCT,CAwCE,IC5BE,GAEJ,SAAU3qB,GAGR,SAAS4qB,IACP,IAAIttB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBosB,EAAIrrB,cAAe9F,UAAW,CAAC,YAAa,MAAO,UAAYxnC,KAElHqrC,EAAM97C,KAAO,MAKb87C,EAAMutB,cAAgB,EAKtBvtB,EAAMkP,OAAS,SAKflP,EAAMqU,SAAU,EAMhBrU,EAAM2U,UAAY,GAAMpvD,UAAUovD,UAElC3U,EAAMwU,QAAU,GAAMjvD,UAAUivD,QAEhCxU,EAAMyU,IAAM,GAAMlvD,UAAUkvD,IAE5BzU,EAAMwtB,YAAc,GAAMjoE,UAAUioE,YACpC,IAAI9mE,EAAUw6C,EAAqBosB,EAAIrrB,cAAe9F,UAAW,CAAC,YAAa,MAAO,QA0CtF,OAxCA6D,EAAMonB,YAAc,IAAI,GAAW,CACjCrgE,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnB/W,KAAMpL,EAAQoL,OAEhBkuC,EAAMn3B,UAAYm3B,EAAMonB,YAAYv+C,UACpCm3B,EAAMytB,eAAiB,IAAI,GAAK,CAC9B1mE,QAASi5C,EAAMj5C,QACf6W,KAAMlX,EAAQgnE,UACd1e,MAAO,gBAEThP,EAAM0tB,UAAY1tB,EAAMytB,eAAe7vD,KACvCoiC,EAAM2tB,eAAiB,IAAI,GAAO,CAChC5mE,QAASi5C,EAAMj5C,QACfioD,MAAO,aACPpqD,MAAO,IAETo7C,EAAM4tB,OAAS,IAAI,GAAK,CACtB7mE,QAASi5C,EAAMj5C,UAEjBi5C,EAAM6tB,KAAO,IAAI,GAAY,CAC3B9mE,QAASi5C,EAAMj5C,UAEjBi5C,EAAM8tB,QAAU9tB,EAAM/mC,OAAS,IAAI,GAAM,CACvClS,QAASi5C,EAAMj5C,QACfoV,IAAKzV,EAAQyV,IACbC,IAAK1V,EAAQ0V,MAEf4jC,EAAMgP,MAAQtoD,EAAQsoD,MACtBhP,EAAM5jC,IAAM1V,EAAQ0V,IACpB4jC,EAAM7jC,IAAMzV,EAAQyV,IAEpB6jC,EAAMonB,YAAYt0B,MAAMkN,EAAM6tB,KAAM7tB,EAAMytB,eAAgBztB,EAAM8tB,SAEhE9tB,EAAM4tB,OAAOzlE,QAAQ63C,EAAM6tB,MAE3B7tB,EAAM2tB,eAAexlE,QAAQ63C,EAAM6tB,MAEnC/kB,GAAS9I,EAAO,CAAC,YAAa,cAC9BA,EAAM2nB,MAAQjhE,EAAQihE,MACf3nB,EAmMT,OA9QAlE,EAAUwxB,EAAK5qB,GA8Ef4qB,EAAIrrB,YAAc,WAChB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDyrB,UAAW,EACX7kD,UAAW,KACX1M,IAAK,EACLC,IAAK,EACLurD,MAAO,EACP71D,KAAM,OACNk9C,MAAO,YASXse,EAAI/nE,UAAU8S,MAAQ,SAAU/F,GAO9B,OANAA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKg5D,eAAejoD,eAAe,EAAGpT,GAEtCqC,KAAKyyD,YAAY/uD,MAAM/F,GAEhBqC,MAQT24D,EAAI/nE,UAAUmT,KAAO,SAAUpG,GAO7B,OANAA,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKg5D,eAAejoD,eAAe/Q,KAAK44D,cAAej7D,GAEvDqC,KAAKyyD,YAAY1uD,KAAKpG,GAEfqC,MAYT24D,EAAI/nE,UAAU0+D,KAAO,WAKnB,OAJAtvD,KAAKyyD,YAAYnD,OAEjBtvD,KAAKyyD,YAAYU,gBAEVnzD,MAOT24D,EAAI/nE,UAAU6+D,OAAS,WAKrB,OAJAzvD,KAAKyyD,YAAYhD,SAEjBzvD,KAAKyyD,YAAYW,kBAEVpzD,MAGTtQ,OAAOC,eAAegpE,EAAI/nE,UAAW,MAAO,CAI1Cf,IAAK,WACH,OAAOmQ,KAAK6/C,QAAQ7/C,KAAKm5D,QAAQ1xD,MAEnCtL,IAAK,SAAUsL,GACbA,EAAMzH,KAAKggD,UAAUv4C,GACrBzH,KAAKm5D,QAAQ1xD,IAAMA,GAErB7X,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegpE,EAAI/nE,UAAW,MAAO,CAI1Cf,IAAK,WACH,OAAOmQ,KAAK6/C,QAAQ7/C,KAAKm5D,QAAQ3xD,MAEnCrL,IAAK,SAAUqL,GACbA,EAAMxH,KAAKggD,UAAUx4C,GACrBxH,KAAKm5D,QAAQ3xD,IAAMA,GAErB5X,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegpE,EAAI/nE,UAAW,OAAQ,CAI3Cf,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYt1D,MAE1BhB,IAAK,SAAUgB,GACb6C,KAAKyyD,YAAYt1D,KAAOA,EACxB6C,KAAK44D,cAAgB54D,KAAKyyD,YAAY6B,kBACtCt0D,KAAKg5D,eAAe/oE,MAAQ+P,KAAK44D,eAEnChpE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegpE,EAAI/nE,UAAW,QAAS,CAI5Cf,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYO,OAE1B72D,IAAK,SAAU62D,GACbhzD,KAAKyyD,YAAYO,MAAQA,EACzBhzD,KAAK44D,cAAgB54D,KAAKyyD,YAAY6B,kBACtCt0D,KAAKg5D,eAAe/oE,MAAQ+P,KAAK44D,eAEnChpE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegpE,EAAI/nE,UAAW,QAAS,CAI5Cf,IAAK,WACH,OAAOmQ,KAAKu6C,QAEdp+C,IAAK,SAAUq2C,GACb,IAAI4mB,EAAap5D,KAAKyH,IAClB4xD,EAAar5D,KAAKwH,IAEtBxH,KAAKu6C,OAAS/H,EACdxyC,KAAKyH,IAAM2xD,EACXp5D,KAAKwH,IAAM6xD,GAEbzpE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegpE,EAAI/nE,UAAW,QAAS,CAI5Cf,IAAK,WACH,OAAOmQ,KAAKyyD,YAAYllD,OAE1B3d,YAAY,EACZ4sB,cAAc,IAQhBm8C,EAAI/nE,UAAU4C,QAAU,SAAU0uD,EAAMK,EAAWC,GAOjD,OANIN,aAAgB,IAASA,aAAgB,MAC3CliD,KAAK0/C,QAAUwC,EAAKxC,QACpB1/C,KAAKq6C,MAAQ6H,EAAK7H,OAGpBqK,GAAc1kD,KAAMkiD,EAAMK,EAAWC,GAC9BxiD,MAGT24D,EAAI/nE,UAAU+6C,QAAU,WAgBtB,OAfAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKyyD,YAAY9mB,UAEjB3rC,KAAKg5D,eAAertB,UAEpB3rC,KAAKi5D,OAAOttB,UAEZ3rC,KAAKm5D,QAAQxtB,UAEb3rC,KAAKk5D,KAAKvtB,UAEV3rC,KAAK84D,eAAentB,UAEpB3rC,KAAK+4D,UAAUptB,UACR3rC,MAGF24D,EA/QT,CAgRE,ICvSK,SAASW,GAAM7xD,EAAKD,QACb,IAARA,IACFA,EAAM6hC,KAGR,IAAIkwB,EAAW,IAAIpoE,QACnB,OAAO,SAAU2M,EAAQ07D,GACvB/xB,QAAQ93C,eAAemO,EAAQ07D,EAAa,CAC1Ch9C,cAAc,EACd5sB,YAAY,EACZC,IAAK,WACH,OAAO0pE,EAAS1pE,IAAImQ,OAEtB7D,IAAK,SAAUs9D,GACbvwB,EAAYuwB,EAAUhyD,EAAKD,GAC3B+xD,EAASp9D,IAAI6D,KAAMy5D,OAUpB,SAASC,GAAUjyD,EAAKD,QACjB,IAARA,IACFA,EAAM6hC,KAGR,IAAIkwB,EAAW,IAAIpoE,QACnB,OAAO,SAAU2M,EAAQ07D,GACvB/xB,QAAQ93C,eAAemO,EAAQ07D,EAAa,CAC1Ch9C,cAAc,EACd5sB,YAAY,EACZC,IAAK,WACH,OAAO0pE,EAAS1pE,IAAImQ,OAEtB7D,IAAK,SAAUs9D,GACbvwB,EAAYlpC,KAAKg5C,UAAUygB,GAAWhyD,EAAKD,GAC3C+xD,EAASp9D,IAAI6D,KAAMy5D,OC3B3B,IAAI,GAEJ,SAAU1rB,GAGR,SAAS4rB,IACP,IAAItuB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBotB,EAAOrsB,cAAe9F,UAAW,CAAC,MAAO,aAAexnC,KAE3GqrC,EAAM97C,KAAO,SAKb87C,EAAMuuB,eAAiB,IAAIvxD,IAC3B,IAAItW,EAAUw6C,EAAqBotB,EAAOrsB,cAAe9F,UAAW,CAAC,MAAO,WAc5E,OAbA6D,EAAMmJ,QAAU,IAAI,GAAgB,CAClC14B,OAAQuvB,EAAMwuB,QAAQrpE,KAAK66C,EAAOt5C,EAAQ+pB,QAC1CV,QAASrpB,EAAQqpB,QACjB2qB,QAASh0C,EAAQg0C,QACjB/qB,IAAKjpB,EAAQipB,MAEfqwB,EAAMyuB,UAAY/nE,EAAQ+nE,UAC1BzuB,EAAMqc,MAAQ31D,EAAQyZ,KACtB6/B,EAAMuf,WAAa74D,EAAQ2Z,UAC3B2/B,EAAMwf,SAAW94D,EAAQ0Z,QACzB4/B,EAAMh/B,cAAgBta,EAAQ4Z,aAC9B0/B,EAAMqY,OAAS3xD,EAAQ2xD,OACvBrY,EAAMuY,QAAU7xD,EAAQ6xD,QACjBvY,EA+YT,OAxaAlE,EAAUwyB,EAAQ5rB,GA4BlB4rB,EAAOrsB,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCwsB,WAAW,EACXpW,OAAQ,EACRE,QAAS,EACTp4C,MAAM,EACNC,QAAS,EACTC,UAAW,EACXoQ,OAAQu4B,GACRj5B,QAASi5B,GACT1oC,aAAc,EACdo6B,SAAS,KAcb4zB,EAAO/oE,UAAU2jD,KAAO,SAAUv5B,GAChC,OAAO2sB,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH,MAAO,CAAC,EAENtoC,KAAKw0C,QAAQD,KAAKv5B,IAEtB,KAAK,EAKH,OAJAkxB,EAAGnJ,OAEH/iC,KAAK65D,UAEE,CAAC,EAEN75D,cAUZ25D,EAAO/oE,UAAUipE,QAAU,SAAUvzD,QAClB,IAAbA,IACFA,EAAW+tC,IAGb/tC,IAEItG,KAAK85D,WACP95D,KAAK0D,SAQTi2D,EAAO/oE,UAAUmpE,aAAe,SAAUv/C,GAExCxa,KAAKgvD,OAAOhvD,MAEZA,KAAK45D,eAAev3D,OAAOmY,GAEM,IAA7Bxa,KAAK45D,eAAexzD,MAAepG,KAAK2uD,SAAsD,YAA3C3uD,KAAKsN,OAAOyxC,eAAe/+C,KAAKqyC,QACrFryC,KAAKsN,OAAOwxC,eAAe,UAAW9+C,KAAKqyC,QAc/CsnB,EAAO/oE,UAAU8S,MAAQ,SAAU/F,EAAMiG,EAAQnG,GAG/C,OAFAswC,EAAOn9C,UAAU8S,MAAMvU,KAAK6Q,KAAMrC,EAAMiG,EAAQnG,GAEzCuC,MAOT25D,EAAO/oE,UAAUu+D,OAAS,SAAU7xD,EAAWsG,EAAQnG,GAGnDmG,EADE5D,KAAK0nD,MACE7a,EAAWjpC,EAAQ5D,KAAK4qD,YAGxB/d,EAAWjpC,EAAQ,GAI9B,IAAIisD,EAAiB7vD,KAAKg5C,UAAUp1C,GAEhC5D,KAAK2uD,UACPkB,GAAkB7vD,KAAKqM,eAIzB,IAAI2tD,EAAev8D,EACnBA,EAAWovC,EAAWpvC,EAAUO,KAAKwJ,IAAIxH,KAAKw0C,QAAQ/2C,SAAWoyD,EAAgB,IACjF,IAAI1J,EAAmBnmD,KAAKg5C,UAAUv7C,GAEtC0oD,GAAsCnmD,KAAKqM,cAE3C/O,EAAY0C,KAAKg5C,UAAU17C,GAE3B,IAAIkd,EAAS,IAAI,GAAiB,CAChCQ,IAAKhb,KAAKw0C,QACVpiD,QAAS4N,KAAK5N,QACdsxD,OAAQ1jD,KAAK0jD,OACbE,QAAS5jD,KAAK4jD,QACdp4C,KAAMxL,KAAK0nD,MACXj8C,QAASzL,KAAK6qD,SACdn/C,UAAW1L,KAAK4qD,WAChBp+C,QAASxM,KAAK+5D,aAAavpE,KAAKwP,MAChC2L,aAAc3L,KAAKqM,gBAClB7Y,QAAQwM,KAAKsE,QAEXtE,KAAK0nD,OAAU1nD,KAAK2uD,UAEvB3uD,KAAKsN,OAAOuhC,OAAOvxC,EAAY6oD,GAG/BnmD,KAAKsN,OAAOwxC,eAAe,UAAWxhD,EAAY6oD,EAAkB,CAClE8T,aAAa,KAKjBj6D,KAAK45D,eAAep9D,IAAIge,GAGpBxa,KAAK0nD,OAAS/d,EAAQqwB,GACxBx/C,EAAO9W,MAAMpG,EAAWuyD,GAGxBr1C,EAAO9W,MAAMpG,EAAWuyD,EAAgB1J,EAAmBnmD,KAAKg5C,UAAUh5C,KAAK4jD,WAQnF+V,EAAO/oE,UAAUy+D,MAAQ,SAAU1xD,GACjC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAElCqC,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpC,OAAOA,EAAOzW,KAAKk8C,OAYvB0Z,EAAO/oE,UAAUw+D,QAAU,SAAUzxD,EAAMiG,EAAQnG,GAGjD,OAFAswC,EAAOn9C,UAAUw+D,QAAQjgE,KAAK6Q,KAAMrC,EAAMiG,EAAQnG,GAE3CuC,MAGT25D,EAAO/oE,UAAU45D,SAAW,SAAU7sD,EAAMiG,EAAQnG,GAClDuC,KAAKqvD,MAAM1xD,GAEXqC,KAAKmvD,OAAOxxD,EAAMiG,EAAQnG,IAgB5Bk8D,EAAO/oE,UAAUspE,KAAO,SAAUt2D,EAAQD,GACxC,IAAIs8C,EAAejgD,KAAKg5C,UAAUr1C,GAElC,GAAiD,YAA7C3D,KAAKsN,OAAOyxC,eAAekB,GAA6B,CAC1D,IAAI4P,EAAiB7vD,KAAKg5C,UAAUp1C,GAEpC5D,KAAKqvD,MAAMpP,GAGXjgD,KAAKmvD,OAAOlP,EAAc4P,GAG5B,OAAO7vD,MAeT25D,EAAO/oE,UAAU87D,cAAgB,SAAUhhD,EAAWD,GAGpD,OAFAzL,KAAK0L,UAAYA,EACjB1L,KAAKyL,QAAUA,EACRzL,MAGTtQ,OAAOC,eAAegqE,EAAO/oE,UAAW,YAAa,CAInDf,IAAK,WACH,OAAOmQ,KAAK4qD,YAEdzuD,IAAK,SAAUuP,GACb1L,KAAK4qD,WAAal/C,EAEd1L,KAAKjE,OAAO24C,QACdxL,EAAYlpC,KAAKg5C,UAAUttC,GAAY,EAAG1L,KAAKjE,OAAO0B,UAIxDuC,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpCA,EAAO9O,UAAYA,MAGvB9b,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegqE,EAAO/oE,UAAW,UAAW,CAIjDf,IAAK,WACH,OAAOmQ,KAAK6qD,UAEd1uD,IAAK,SAAUsP,GACbzL,KAAK6qD,SAAWp/C,EAEZzL,KAAKjE,OAAO24C,QACdxL,EAAYlpC,KAAKg5C,UAAUvtC,GAAU,EAAGzL,KAAKjE,OAAO0B,UAItDuC,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpCA,EAAO/O,QAAUA,MAGrB7b,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegqE,EAAO/oE,UAAW,SAAU,CAIhDf,IAAK,WACH,OAAOmQ,KAAKw0C,SAEdr4C,IAAK,SAAUJ,GACbiE,KAAKw0C,QAAQr4C,IAAIJ,IAEnBnM,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegqE,EAAO/oE,UAAW,OAAQ,CAI9Cf,IAAK,WACH,OAAOmQ,KAAK0nD,OAEdvrD,IAAK,SAAUqP,GAEb,GAAIxL,KAAK0nD,QAAUl8C,IAInBxL,KAAK0nD,MAAQl8C,EAEbxL,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpCA,EAAOhP,KAAOA,KAGZA,GAAM,CAER,IAAIk7C,EAAY1mD,KAAKsN,OAAO2xC,aAAa,UAAWj/C,KAAKqyC,OAErDqU,GACF1mD,KAAKsN,OAAOuhC,OAAO6X,EAAU/oD,QAInC/N,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegqE,EAAO/oE,UAAW,eAAgB,CAKtDf,IAAK,WACH,OAAOmQ,KAAKqM,eAEdlQ,IAAK,SAAU+zD,GACblwD,KAAKqM,cAAgB6jD,EACrB,IAAI7d,EAAMryC,KAAKqyC,MAEXqU,EAAY1mD,KAAKsN,OAAO2xC,aAAa,UAAW5M,GAEhDqU,GAAaA,EAAUuT,cACzBj6D,KAAKsN,OAAOuhC,OAAO6X,EAAU/oD,MAE7BqC,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpC,OAAOA,EAAOypC,iBAKlBjkD,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpCA,EAAO7O,aAAaoF,eAAem/C,EAAM7d,OAG7CziD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegqE,EAAO/oE,UAAW,UAAW,CAIjDf,IAAK,WACH,OAAOmQ,KAAKw0C,QAAQzO,SAEtB5pC,IAAK,SAAU05C,GACb71C,KAAKw0C,QAAQzO,QAAU8P,GAEzBjmD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegqE,EAAO/oE,UAAW,SAAU,CAIhDf,IAAK,WACH,OAAOmQ,KAAKw0C,QAAQE,QAEtB9kD,YAAY,EACZ4sB,cAAc,IAGhBm9C,EAAO/oE,UAAU+6C,QAAU,WAYzB,OAXAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAG9BA,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpC,OAAOA,EAAOmxB,aAGhB3rC,KAAK45D,eAAel3C,QAEpB1iB,KAAKw0C,QAAQ7I,UAEN3rC,MAGTqnC,EAAW,CAACqyB,GAAU,IAAKC,EAAO/oE,UAAW,cAAU,GAEvDy2C,EAAW,CAACqyB,GAAU,IAAKC,EAAO/oE,UAAW,eAAW,GAEjD+oE,EAzaT,CA0aE,IC/aE,ICCJ,SAAU5rB,GAGR,SAASosB,IACP,IAAI9uB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB4tB,EAAQ7sB,cAAe9F,UAAW,CAAC,OAAQ,UAAW,UAAYxnC,KAErHqrC,EAAM97C,KAAO,UAKb87C,EAAM9mC,WAAQhS,EAKd84C,EAAM+uB,SAAW,IAAIvmE,IACrB,IAAI9B,EAAUw6C,EAAqB4tB,EAAQ7sB,cAAe9F,UAAW,CAAC,OAAQ,UAAW,QAqBzF,OAhBA6D,EAAM0jB,QAAU1jB,EAAM/mC,OAAS,IAAI,GAAO,CACxClS,QAASi5C,EAAMj5C,QACfm7D,OAAQx7D,EAAQw7D,SAElBliB,EAAMkiB,OAASliB,EAAM0jB,QAAQxB,OAC7BpZ,GAAS9I,EAAO,UAChBA,EAAMuiB,SAAW,IAAI,GAAiB,CACpCE,KAAM/7D,EAAQ+7D,KACdhyC,OAAQ/pB,EAAQ+pB,OAChBu6B,QAAStkD,EAAQskD,QACjBj7B,QAASrpB,EAAQqpB,UAGnBiwB,EAAMoiB,KAAO17D,EAAQ07D,KACrBpiB,EAAMoY,QAAU1xD,EAAQ2xD,OACxBrY,EAAMsY,SAAW5xD,EAAQ6xD,QAClBvY,EArCTlE,EAAUgzB,EAASpsB,GAwCnBosB,EAAQ7sB,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzC+I,QAAS,GACTqN,OAAQ,EACRE,QAAS,EACT6J,MAAM,EACN3xC,OAAQu4B,GACRj5B,QAASi5B,GACTyZ,KAAM,GACNP,OAAQ,KAIZ79D,OAAOC,eAAewqE,EAAQvpE,UAAW,OAAQ,CAI/Cf,IAAK,WACH,OAAOmQ,KAAK+uD,QAAQtB,MAEtBtxD,IAAK,SAAUsxD,GACbztD,KAAK+uD,QAAQtB,KAAOA,GAEtB79D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewqE,EAAQvpE,UAAW,SAAU,CAIjDf,IAAK,WACH,OAAOmQ,KAAKyjD,SAEdtnD,IAAK,SAAUunD,GACb1jD,KAAKyjD,QAAUC,EAEf1jD,KAAKo6D,SAASz9D,SAAQ,SAAU09D,GAC9BA,EAAO3W,OAASA,MAGpB9zD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewqE,EAAQvpE,UAAW,UAAW,CAIlDf,IAAK,WACH,OAAOmQ,KAAK2jD,UAEdxnD,IAAK,SAAUynD,GACb5jD,KAAK2jD,SAAWC,EAEhB5jD,KAAKo6D,SAASz9D,SAAQ,SAAU09D,GAC9BA,EAAOzW,QAAUA,MAGrBh0D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAewqE,EAAQvpE,UAAW,QAAS,CAIhDf,IAAK,WAQH,OAPcuhB,MAAMC,KAAKrR,KAAKo6D,UAAUnqD,MAAK,SAAUi8B,GACrD,IAAIC,EAAKtD,EAAOqD,EAAI,GACZC,EAAG,GAGX,MAAwB,YAFXA,EAAG,GAEF5+B,SAEC,UAAY,WAE/B3d,YAAY,EACZ4sB,cAAc,IAOhB29C,EAAQvpE,UAAU8L,IAAM,SAAUnN,GAChC,OAAOyQ,KAAK4tD,SAASlxD,IAAInN,IAQ3B4qE,EAAQvpE,UAAUypE,OAAS,SAAU9qE,GAGnC,GAFAy5C,EAAOhpC,KAAKtD,IAAInN,GAAO,2BAA6BA,EAAO,2BAEtDyQ,KAAKo6D,SAAS19D,IAAInN,GAAO,CAC5B,IAAI8qE,EAAS,IAAI,GAAO,CACtBjoE,QAAS4N,KAAK5N,QACdsxD,OAAQ1jD,KAAKyjD,QACbG,QAAS5jD,KAAK2jD,SACd3oC,IAAKhb,KAAK4tD,SAAS/9D,IAAIN,KACtBiE,QAAQwM,KAAKsE,QAEhBtE,KAAKo6D,SAASj+D,IAAI5M,EAAM8qE,GAG1B,OAAOr6D,KAAKo6D,SAASvqE,IAAIN,IAG3BG,OAAOC,eAAewqE,EAAQvpE,UAAW,SAAU,CAIjDf,IAAK,WACH,OAAOmQ,KAAK4tD,SAASlZ,QAEvB9kD,YAAY,EACZ4sB,cAAc,IAShB29C,EAAQvpE,UAAU4L,IAAM,SAAUjN,EAAMyrB,EAAK1U,GAK3C,OAJA0iC,GAAQhpC,KAAK4tD,SAASlxD,IAAInN,GAAO,yDAEjCyQ,KAAK4tD,SAASpxD,IAAIjN,EAAMyrB,EAAK1U,GAEtBtG,MAQTm6D,EAAQvpE,UAAU0pE,QAAU,SAAU38D,GAKpC,OAJAqC,KAAKo6D,SAASz9D,SAAQ,SAAU09D,GAC9B,OAAOA,EAAOt2D,KAAKpG,MAGdqC,MAGTm6D,EAAQvpE,UAAU+6C,QAAU,WAa1B,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+uD,QAAQpjB,UAEb3rC,KAAKutD,OAAO5hB,UAEZ3rC,KAAKo6D,SAASz9D,SAAQ,SAAU09D,GAC9B,OAAOA,EAAO1uB,aAGhB3rC,KAAK4tD,SAASjiB,UAEP3rC,MAxMX,CA4ME,ICzMF,SAAU+tC,GAGR,SAASwsB,IACP,IAAIlvB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBguB,EAAYjtB,cAAe9F,UAAW,CAAC,MAAO,aAAexnC,KAEhHqrC,EAAM97C,KAAO,cAKb87C,EAAMuf,WAAa,EAKnBvf,EAAMwf,SAAW,EAKjBxf,EAAMuuB,eAAiB,GACvB,IAAI7nE,EAAUw6C,EAAqBguB,EAAYjtB,cAAe9F,UAAW,CAAC,MAAO,WA2BjF,OA1BA6D,EAAMtvC,OAAS,IAAI,GAAgB,CACjC+f,OAAQ/pB,EAAQ+pB,OAChBV,QAASrpB,EAAQqpB,QACjB2qB,QAASh0C,EAAQg0C,QACjB/qB,IAAKjpB,EAAQipB,MAEfqwB,EAAM+f,OAAS,IAAI,GAAM,CACvBh5D,QAASi5C,EAAMj5C,QACfkU,SAAU+kC,EAAMmvB,MAAMhqE,KAAK66C,GAC3Bn3B,UAAW,EAAIniB,EAAQ0oE,YAEzBpvB,EAAMh/B,cAAgBta,EAAQ4Z,aAC9B0/B,EAAMqvB,WAAa3oE,EAAQ0oE,UAC3BpvB,EAAMsvB,SAAW5oE,EAAQ6oE,QACzBvvB,EAAMp3B,OAASliB,EAAQkiB,OAEvBo3B,EAAMuvB,QAAU7oE,EAAQ6oE,QACxBvvB,EAAM7/B,KAAOzZ,EAAQyZ,KACrB6/B,EAAM1/B,aAAe5Z,EAAQ4Z,aAC7B0/B,EAAMovB,UAAY1oE,EAAQ0oE,UAC1BpvB,EAAM3/B,UAAY3Z,EAAQ2Z,UAC1B2/B,EAAM5/B,QAAU1Z,EAAQ0Z,QACxB4/B,EAAMtF,QAAUh0C,EAAQg0C,QAExBsF,EAAM+f,OAAOhb,GAAG,OAAQ/E,EAAMwvB,QAAQrqE,KAAK66C,IAEpCA,EAhDTlE,EAAUozB,EAAaxsB,GAmDvBwsB,EAAYjtB,YAAc,WACxB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCxxB,OAAQu4B,GACRj5B,QAASi5B,GACTumB,QAAS,GACTH,UAAW,GACX9uD,aAAc,EACdsI,OAAQ,EACRzI,MAAM,EACNE,UAAW,EACXD,QAAS,EACTs6B,SAAS,KAQbw0B,EAAY3pE,UAAUu+D,OAAS,SAAUxxD,EAAMiG,EAAQnG,GACrDmG,EAASipC,EAAWjpC,EAAQ,GAC5BA,EAAS5D,KAAKg5C,UAAUp1C,GACxBjG,EAAOqC,KAAKg5C,UAAUr7C,GAEtB,IAAI88D,EAAY,EAAIz6D,KAAKorD,OAAOl3C,UAAU6qC,eAAephD,GAEzDqC,KAAKorD,OAAO1nD,MAAM/F,EAAMiG,EAAS62D,GAE7Bh9D,GACFuC,KAAK+D,KAAKpG,EAAOqC,KAAKg5C,UAAUv7C,KAYpC88D,EAAY3pE,UAAUw+D,QAAU,SAAUzxD,EAAMiG,EAAQnG,GAGtD,OAFAswC,EAAOn9C,UAAUw+D,QAAQjgE,KAAK6Q,KAAMrC,EAAMiG,EAAQnG,GAE3CuC,MAGTu6D,EAAY3pE,UAAU45D,SAAW,SAAU7sD,EAAMiG,EAAQnG,GACvDuC,KAAKqvD,MAAM1xD,GAEXqC,KAAKmvD,OAAOxxD,EAAMiG,EAAQnG,IAO5B88D,EAAY3pE,UAAUy+D,MAAQ,SAAU1xD,GACtCqC,KAAKorD,OAAOrnD,KAAKpG,IAOnB48D,EAAY3pE,UAAUiqE,QAAU,SAAUl9D,GAExCqC,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpCA,EAAOopC,QAAU,EACjBppC,EAAOzW,KAAKpG,MAGdqC,KAAKgvD,OAAOhvD,OAOdu6D,EAAY3pE,UAAU4pE,MAAQ,SAAU78D,GACtC,IAAI0tC,EAAQrrC,KAGR+7C,EAAQ/7C,KAAKorD,OAAO1F,eAAe/nD,GAInCiG,EAASm4C,GAFG,EAAI/7C,KAAKorD,OAAOl3C,UAAU6qC,eAAephD,IAKzD,GAFAqC,KAAK0pC,IAAI,SAAU9lC,IAEd5D,KAAKwL,MAAQ5H,EAAS5D,KAAKjE,OAAO0B,SACrCuC,KAAK+D,KAAKpG,OADZ,CAMA,IAAI+lD,EAAS9/C,EAAS5D,KAAK26D,SAAW,EAAI36D,KAAK26D,SAE3CngD,EAAS,IAAI,GAAiB,CAChCpoB,QAAS4N,KAAK5N,QACd4oB,IAAKhb,KAAKjE,OACV2nD,OAAQA,EACRE,QAAS5jD,KAAK26D,SACdnvD,KAAMxL,KAAKwL,KACXE,UAAW1L,KAAK4qD,WAChBn/C,QAASzL,KAAK6qD,SAEdl/C,aAAcisC,GAAyB53C,KAAKiU,OAAS,OACpDzgB,QAAQwM,KAAKsE,QAChBkW,EAAO9W,MAAM/F,EAAMqC,KAAK06D,WAAa3e,GACrCvhC,EAAOzW,KAAKpG,EAAOqC,KAAK06D,WAAa16D,KAAK2L,cAE1C3L,KAAK45D,eAAeh5D,KAAK4Z,GAGzBA,EAAOhO,QAAU,WACf,IAAI9N,EAAQ2sC,EAAMuuB,eAAehtB,QAAQpyB,IAE1B,IAAX9b,GACF2sC,EAAMuuB,eAAe14D,OAAOxC,EAAO,MAKzChP,OAAOC,eAAe4qE,EAAY3pE,UAAW,eAAgB,CAI3Df,IAAK,WACH,OAAOmQ,KAAKqM,eAEdlQ,IAAK,SAAU+zD,GACbhnB,EAAYgnB,EAAM,MAClBlwD,KAAKqM,cAAgB6jD,EACrBlwD,KAAKy6D,UAAYz6D,KAAK06D,YAExB9qE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4qE,EAAY3pE,UAAW,YAAa,CAIxDf,IAAK,WACH,OAAOmQ,KAAK4qD,YAEdzuD,IAAK,SAAUwB,GACTqC,KAAKjE,OAAO24C,QACdxL,EAAYlpC,KAAKg5C,UAAUr7C,GAAO,EAAGqC,KAAKjE,OAAO0B,UAGnDuC,KAAK4qD,WAAa5qD,KAAKg5C,UAAUr7C,IAEnC/N,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4qE,EAAY3pE,UAAW,UAAW,CAItDf,IAAK,WACH,OAAOmQ,KAAK6qD,UAEd1uD,IAAK,SAAUwB,GACTqC,KAAKjE,OAAO24C,QACdxL,EAAYlpC,KAAKg5C,UAAUr7C,GAAO,EAAGqC,KAAKjE,OAAO0B,UAGnDuC,KAAK6qD,SAAW7qD,KAAKg5C,UAAUr7C,IAEjC/N,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4qE,EAAY3pE,UAAW,UAAW,CAItDf,IAAK,WACH,OAAOmQ,KAAKjE,OAAOgqC,SAErB5pC,IAAK,SAAU05C,GACb71C,KAAKjE,OAAOgqC,QAAU8P,GAExBjmD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4qE,EAAY3pE,UAAW,YAAa,CAKxDf,IAAK,WACH,OAAOmQ,KAAK06D,YAEdv+D,IAAK,SAAUiK,GACbpG,KAAK06D,WAAa16D,KAAKg5C,UAAU5yC,GAEjCpG,KAAKorD,OAAOl3C,UAAUnD,eAAe/Q,KAAKqM,cAAgBrM,KAAK06D,WAAY16D,KAAKqyC,QAElFziD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4qE,EAAY3pE,UAAW,UAAW,CAItDf,IAAK,WACH,OAAOmQ,KAAK26D,UAEdx+D,IAAK,SAAUwB,GACbqC,KAAK26D,SAAW36D,KAAKg5C,UAAUr7C,IAEjC/N,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4qE,EAAY3pE,UAAW,SAAU,CAIrDf,IAAK,WACH,OAAOmQ,KAAKjE,OAAO24C,QAErB9kD,YAAY,EACZ4sB,cAAc,IAGhB+9C,EAAY3pE,UAAU+6C,QAAU,WAW9B,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKjE,OAAO4vC,UAEZ3rC,KAAKorD,OAAOzf,UAEZ3rC,KAAK45D,eAAej9D,SAAQ,SAAU6d,GACpC,OAAOA,EAAOmxB,aAGT3rC,MAjSX,CAqSE,IFvSF,SAAU+tC,GAGR,SAAS+sB,IACP,IAAIzvB,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KA2BhE,OAzBAqrC,EAAM97C,KAAO,MAKb87C,EAAM0vB,KAAO,IAAI,GAAW,CAC1B3oE,QAASi5C,EAAMj5C,QACfwiE,QAAS,SAAUpiB,GACjB,OAAIx0C,KAAK6vC,IAAI2E,GAAO,KACX,EAEAx0C,KAAK6vC,IAAI2E,MAQtBnH,EAAM9mC,MAAQ8mC,EAAM0vB,KAKpB1vB,EAAM/mC,OAAS+mC,EAAM0vB,KACd1vB,EAeT,OA7CAlE,EAAU2zB,EAAK/sB,GAqCf+sB,EAAIlqE,UAAU+6C,QAAU,WAKtB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+6D,KAAKpvB,UAEH3rC,MAGF86D,EA9CT,CA+CE,KGvDE,GAEJ,SAAU/sB,GAGR,SAASitB,IACP,IAAI3vB,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAuBhE,OArBAqrC,EAAM97C,KAAO,cAKb87C,EAAM4pB,MAAQ,IAAI,GAAW,CAC3B7iE,QAASi5C,EAAMj5C,QACfwiE,QAAS,SAAUxvD,GACjB,OAAqB,EAAdpH,KAAK6vC,IAAIzoC,GAAS,KAO7BimC,EAAM9mC,MAAQ8mC,EAAM4pB,MAKpB5pB,EAAM/mC,OAAS+mC,EAAM4pB,MACd5pB,EAeT,OAzCAlE,EAAU6zB,EAAajtB,GAiCvBitB,EAAYpqE,UAAU+6C,QAAU,WAK9B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKi1D,MAAMtpB,UAEJ3rC,MAGFg7D,EA1CT,CA2CE,ICzCE,GAEJ,SAAUjtB,GAGR,SAASktB,IACP,IAAI5vB,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAiBhE,OAfAqrC,EAAM97C,KAAO,SAKb87C,EAAM6vB,UAAY,IAAI,GAAS,CAC7B9oE,QAASi5C,EAAMj5C,QACfnC,OAAQ,IAMVo7C,EAAM9mC,MAAQ8mC,EAAM6vB,UACpB7vB,EAAM/mC,OAAS+mC,EAAM6vB,UACd7vB,EAgBT,OApCAlE,EAAU8zB,EAAQltB,GA4BlBktB,EAAOrqE,UAAU+6C,QAAU,WAKzB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKk7D,UAAUvvB,UAER3rC,MAGFi7D,EArCT,CAsCE,IC3BE,GAEJ,SAAUltB,GAGR,SAASotB,IACP,IAAI9vB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB4uB,EAAS7tB,cAAe9F,UAAW,CAAC,aAAexnC,KA0BpH,OAxBAqrC,EAAMmZ,UAAW,EACjBnZ,EAAM97C,KAAO,WAKb87C,EAAM8sB,KAAO,IAAI,GAAK,CACpB/lE,QAASi5C,EAAMj5C,UAEjBi5C,EAAM9mC,MAAQ8mC,EAAM8sB,KACpB9sB,EAAM/mC,OAAS+mC,EAAM8sB,KAKrB9sB,EAAM+vB,KAAO,IAAI,GAAO,CACtBhpE,QAASi5C,EAAMj5C,UAMjBi5C,EAAMgwB,WAAahwB,EAAMiU,OACzBsD,GAAcvX,EAAMoZ,gBAAiBpZ,EAAM+vB,KAAM/vB,EAAM8sB,MAChD9sB,EAmBT,OAhDAlE,EAAUg0B,EAAUptB,GAgCpBotB,EAAS7tB,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr9C,MAAO,KAIXkrE,EAASvqE,UAAU+6C,QAAU,WAO3B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKo7D,KAAKzvB,UAEV3rC,KAAKm4D,KAAKxsB,UAEH3rC,MAGFm7D,EAjDT,CAkDE,IChEE,GAEJ,SAAUptB,GAGR,SAASutB,IACP,IAAIjwB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB+uB,EAAgBhuB,cAAe9F,cAAgBxnC,KAqBhH,OAnBAqrC,EAAM97C,KAAO,kBACb87C,EAAM2qB,QAAU3qB,EAAM/mC,OAAS,IAAI,GAAW,CAC5ClS,QAASi5C,EAAMj5C,QACfwM,OAAQ,IACRg2D,QAAS,SAAUpiB,GACjB,OAAIA,GAAO,EACF,EAEA,KAIbnH,EAAMwrB,OAASxrB,EAAM9mC,MAAQ,IAAI,GAAS,CACxCnS,QAASi5C,EAAMj5C,QACfnC,MAAO,MAGTo7C,EAAMwrB,OAAOrjE,QAAQ63C,EAAM2qB,SAEpB3qB,EAaT,OArCAlE,EAAUm0B,EAAiBvtB,GA2B3ButB,EAAgB1qE,UAAU+6C,QAAU,WAOlC,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK62D,OAAOlrB,UAEZ3rC,KAAKg2D,QAAQrqB,UAEN3rC,MAGFs7D,EAtCT,CAuCE,ICvCE,GAEJ,SAAUvtB,GAGR,SAASwtB,IACP,IAAIlwB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBgvB,EAAYjuB,cAAe9F,UAAW,CAAC,aAAexnC,KAEvHqrC,EAAM97C,KAAO,cACb87C,EAAMmZ,UAAW,EACjB,IAAIzyD,EAAUw6C,EAAqBgvB,EAAYjuB,cAAe9F,UAAW,CAAC,UAa1E,OAZA6D,EAAMmwB,UAAYnwB,EAAM9mC,MAAQ,IAAI,GAAS,CAC3CnS,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQ9B,QAEjBo7C,EAAMowB,KAAOpwB,EAAM/mC,OAAS,IAAI,GAAgB,CAC9ClS,QAASi5C,EAAMj5C,UAEjBi5C,EAAMqwB,WAAarwB,EAAMiU,OAASjU,EAAMmwB,UAAUH,WAClDlnB,GAAS9I,EAAO,cAEhBA,EAAMmwB,UAAUhoE,QAAQ63C,EAAMowB,MAEvBpwB,EAoBT,OAxCAlE,EAAUo0B,EAAaxtB,GAuBvBwtB,EAAYjuB,YAAc,WACxB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCr9C,MAAO,KAIXsrE,EAAY3qE,UAAU+6C,QAAU,WAQ9B,OAPAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKy7D,KAAK9vB,UAEV3rC,KAAKw7D,UAAU7vB,UAEf3rC,KAAK07D,WAAW/vB,UACT3rC,MAGFu7D,EAzCT,CA0CE,IC9CE,GAEJ,SAAUxtB,GAGR,SAAS4tB,IACP,IAAItwB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBovB,EAAIruB,cAAe9F,UAAW,CAAC,aAAexnC,KAE/GqrC,EAAM97C,KAAO,MACb,IAAIwC,EAAUw6C,EAAqBovB,EAAIruB,cAAe9F,UAAW,CAAC,UAOlE,OANA6D,EAAMuwB,gBAAkBvwB,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS,IAAI,GAAW,CAClElS,QAASi5C,EAAMj5C,QACfwiE,QAASvpB,EAAMwwB,SAAS9pE,EAAQ9B,OAChC2O,OAAQ,OAEVysC,EAAMywB,UAAY/pE,EAAQ9B,MACnBo7C,EA+CT,OA5DAlE,EAAUw0B,EAAK5tB,GAgBf4tB,EAAIruB,YAAc,WAChB,OAAO59C,OAAO48C,OAAO,GAAegB,cAAe,CACjDr9C,MAAO,KASX0rE,EAAI/qE,UAAUirE,SAAW,SAAUE,GACjC,OAAO,SAAUvpB,GACf,OAAOx0C,KAAKqB,IAAIrB,KAAK6vC,IAAI2E,GAAMupB,KAInCrsE,OAAOC,eAAegsE,EAAI/qE,UAAW,QAAS,CAI5Cf,IAAK,WACH,OAAOmQ,KAAK87D,WAEd3/D,IAAK,SAAU4/D,GACb/7D,KAAK87D,UAAYC,EAEjB/7D,KAAK47D,gBAAgB/G,OAAO70D,KAAK67D,SAAS77D,KAAK87D,aAEjDlsE,YAAY,EACZ4sB,cAAc,IAMhBm/C,EAAI/qE,UAAU+6C,QAAU,WAKtB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK47D,gBAAgBjwB,UAEd3rC,MAGF27D,EA7DT,CA8DE,ICjEE,GAEJ,SAAU5tB,GAGR,SAASiuB,IACP,IAAI3wB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqByvB,EAAS1uB,cAAe9F,UAAW,CAAC,MAAO,MAAO,gBAAkBxnC,KAErIqrC,EAAM97C,KAAO,WACb,IAAIwC,EAAUw6C,EAAqByvB,EAAS1uB,cAAe9F,UAAW,CAAC,MAAO,MAAO,aAQrF,OAPA6D,EAAM9mC,MAAQ8mC,EAAM4wB,KAAO,IAAI,GAAI,CACjC7pE,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQgqE,WAGjB1wB,EAAM4wB,KAAKzoE,QAAQ63C,EAAM8pB,OAElB9pB,EAiCT,OA/CAlE,EAAU60B,EAAUjuB,GAiBpBiuB,EAAS1uB,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAMgB,cAAe,CACxCyuB,SAAU,KAIdrsE,OAAOC,eAAeqsE,EAASprE,UAAW,WAAY,CAMpDf,IAAK,WACH,OAAOmQ,KAAKi8D,KAAKhsE,OAEnBkM,IAAK,SAAU8B,GACb+B,KAAKi8D,KAAKhsE,MAAQgO,GAEpBrO,YAAY,EACZ4sB,cAAc,IAGhBw/C,EAASprE,UAAU+6C,QAAU,WAK3B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKi8D,KAAKtwB,UAEH3rC,MAGFg8D,EAhDT,CAiDE,IC7BE,ICxBJ,SAAUjuB,GAGR,SAASmuB,IACP,IAAI7wB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB,GAAOe,cAAe9F,UAAW,CAAC,QAAS,YAAcxnC,KAE5GqrC,EAAM97C,KAAO,eAKb87C,EAAMmZ,UAAW,EACjB,IAAIzyD,EAAUw6C,EAAqB,GAAOe,cAAe9F,UAAW,CAAC,QAAS,UAyB9E,OAxBA6D,EAAM8wB,SAAWpqE,EAAQ9B,MACzBo7C,EAAMsjB,QAAUtjB,EAAMj5C,QAAQsmD,UAAUsT,eAAe3gB,EAAM+wB,QAAQ5rE,KAAK66C,GAAQ,MAClFA,EAAMgxB,gBAAkBhxB,EAAMixB,aAAa9rE,KAAK66C,GAEhDA,EAAMj5C,QAAQsmD,UAAUtI,GAAG,QAAS/E,EAAMgxB,iBAE1ChxB,EAAMj5C,QAAQsmD,UAAUtI,GAAG,QAAS/E,EAAMgxB,iBAE1ChxB,EAAMj5C,QAAQsmD,UAAUtI,GAAG,OAAQ/E,EAAMgxB,iBAGzChxB,EAAMoZ,gBAAgBhxD,aAEtB43C,EAAMoZ,gBAAgB1gD,KAAK,GAG3BsnC,EAAMoZ,gBAAkBpZ,EAAM/mC,OAAS,IAAI,GAAmB,CAC5DlS,QAASi5C,EAAMj5C,QACfwR,OAAQ7R,EAAQ9B,MAChBoqD,MAAOtoD,EAAQsoD,QACd32C,MAAM,GAET2nC,EAAMt6B,eAAehf,EAAQ9B,MAAO,GAE7Bo7C,EApCTlE,EAAU+0B,EAAcnuB,GA2CxBmuB,EAAatrE,UAAUwrE,QAAU,SAAUz+D,GACzC,IAAI60C,EAAMzE,EAAOn9C,UAAUmuD,eAAe5vD,KAAK6Q,KAAMA,KAAK5N,QAAQsmD,UAAUoD,SAGxE97C,KAAKm8D,WAAa3pB,IACpBxyC,KAAKm8D,SAAW3pB,EAEhBxyC,KAAKykD,gBAAgB7gD,OAAOmN,eAAeyhC,EAAK70C,KAQpDu+D,EAAatrE,UAAU0rE,aAAe,SAAU3+D,GAC9C,IAAI60C,EAAMzE,EAAOn9C,UAAUmuD,eAAe5vD,KAAK6Q,KAAMA,KAAK5N,QAAQsmD,UAAUoD,SAE5E97C,KAAKm8D,SAAW3pB,EAEhBxyC,KAAKykD,gBAAgB7gD,OAAOqN,oBAAoBtT,GAEhDqC,KAAKykD,gBAAgB7gD,OAAOmN,eAAeyhC,EAAK70C,IAGlDu+D,EAAatrE,UAAUmuD,eAAiB,SAAUphD,GAChD,IAAIsiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASuL,GAAMq7C,YAC9D,OAAOjL,EAAOn9C,UAAUmuD,eAAe5vD,KAAK6Q,KAAMigD,IAGpDic,EAAatrE,UAAUmgB,eAAiB,SAAU9gB,EAAO0N,GACvD,IAAIsiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASuL,GAAMq7C,YAI9D,OAFAjL,EAAOn9C,UAAUmgB,eAAe5hB,KAAK6Q,KAAM/P,EAAOgwD,GAE3CjgD,MAGTk8D,EAAatrE,UAAU8gB,wBAA0B,SAAUzhB,EAAO0N,GAChE,IAAIsiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASuL,GAAMq7C,YAI9D,OAFAjL,EAAOn9C,UAAU8gB,wBAAwBviB,KAAK6Q,KAAM/P,EAAOgwD,GAEpDjgD,MAGTk8D,EAAatrE,UAAU6gB,6BAA+B,SAAUxhB,EAAO0N,GACrE,IAAIsiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASuL,GAAMq7C,YAI9D,OAFAjL,EAAOn9C,UAAU6gB,6BAA6BtiB,KAAK6Q,KAAM/P,EAAOgwD,GAEzDjgD,MAGTk8D,EAAatrE,UAAUghB,gBAAkB,SAAU3hB,EAAOqN,EAAWS,GACnE,IAAIkiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASkL,GAAW07C,YAInE,OAFAjL,EAAOn9C,UAAUghB,gBAAgBziB,KAAK6Q,KAAM/P,EAAOgwD,EAAcliD,GAE1DiC,MAGTk8D,EAAatrE,UAAU4gB,sBAAwB,SAAUlU,GACvD,IAAI2iD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASkL,GAAW07C,YAInE,OAFAjL,EAAOn9C,UAAU4gB,sBAAsBriB,KAAK6Q,KAAMigD,GAE3CjgD,MAGTk8D,EAAatrE,UAAU+gB,oBAAsB,SAAUnU,EAAQF,EAAWG,EAAU0jD,GAClF,IAAIlB,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASkL,GAAW07C,YAKnE,OAJAv7C,EAAWuC,KAAKg5C,UAAUv7C,GAE1BswC,EAAOn9C,UAAU+gB,oBAAoBxiB,KAAK6Q,KAAMxC,EAAQyiD,EAAcxiD,EAAU0jD,GAEzEnhD,MAGTk8D,EAAatrE,UAAUqgB,oBAAsB,SAAUtT,GACrD,IAAIsiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASuL,GAAMq7C,YAI9D,OAFAjL,EAAOn9C,UAAUqgB,oBAAoB9hB,KAAK6Q,KAAMigD,GAEzCjgD,MAGTk8D,EAAatrE,UAAUgwD,aAAe,SAAUjjD,GAC9C,IAAIsiD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASuL,GAAMq7C,YAI9D,OAFAjL,EAAOn9C,UAAUgwD,aAAazxD,KAAK6Q,KAAMigD,GAElCjgD,MAGTk8D,EAAatrE,UAAUkwD,kBAAoB,SAAU7wD,EAAO8wD,EAAUzjD,GACpE,IAAI2iD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASkL,GAAW07C,YAInE,OAFAjL,EAAOn9C,UAAUkwD,kBAAkB3xD,KAAK6Q,KAAM/P,EAAO8wD,EAAUd,GAExDjgD,MAGTk8D,EAAatrE,UAAUowD,aAAe,SAAU/wD,EAAO8wD,EAAUzjD,GAC/D,IAAI2iD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASkL,GAAW07C,YAInE,OAFAjL,EAAOn9C,UAAUowD,aAAa7xD,KAAK6Q,KAAM/P,EAAO8wD,EAAUd,GAEnDjgD,MAGTk8D,EAAatrE,UAAUqwD,aAAe,SAAUhxD,EAAO8wD,EAAUzjD,GAC/D,IAAI2iD,EAAe,IAAI,GAAmBjgD,KAAK5N,QAASkL,GAAW07C,YAInE,OAFAjL,EAAOn9C,UAAUqwD,aAAa9xD,KAAK6Q,KAAM/P,EAAO8wD,EAAUd,GAEnDjgD,MAGTk8D,EAAatrE,UAAU+6C,QAAU,WAU/B,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK5N,QAAQsmD,UAAUh2B,MAAM1iB,KAAK2uD,SAClC3uD,KAAK5N,QAAQsmD,UAAUhI,IAAI,QAAS1wC,KAAKq8D,iBACzCr8D,KAAK5N,QAAQsmD,UAAUhI,IAAI,QAAS1wC,KAAKq8D,iBACzCr8D,KAAK5N,QAAQsmD,UAAUhI,IAAI,OAAQ1wC,KAAKq8D,iBAExCr8D,KAAKykD,gBAAgB9Y,UAEd3rC,MA7KX,CAiLE,IDvJF,SAAU+tC,GAGR,SAASwuB,IACP,IAAIlxB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgwB,EAASjvB,cAAe9F,UAAW,CAAC,SAAU,QAAS,UAAW,cAAgBxnC,KAErIqrC,EAAM97C,KAAO,WAKb87C,EAAMmxB,KAAO,IAAI,GAAO,CACtBpqE,QAASi5C,EAAMj5C,QACfnC,MAAO,IAMTo7C,EAAM/mC,OAAS+mC,EAAMmxB,KAKrBnxB,EAAM9mC,WAAQhS,EACd,IAAIR,EAAUw6C,EAAqBgwB,EAASjvB,cAAe9F,UAAW,CAAC,SAAU,QAAS,UAAW,YAQrG,OAPA6D,EAAMnyB,OAASnnB,EAAQmnB,OACvBmyB,EAAMoxB,MAAQ1qE,EAAQ0qE,MACtBpxB,EAAMqxB,QAAU3qE,EAAQ2qE,QACxBrxB,EAAMhyB,QAAUtnB,EAAQsnB,QACxBgyB,EAAMsxB,YAAc5qE,EAAQ4qE,YAC5BtxB,EAAMuxB,aAAe7qE,EAAQ6qE,aAC7BvxB,EAAMwxB,WAAa9qE,EAAQ8qE,WACpBxxB,EA2YT,OA3aAlE,EAAUo1B,EAAUxuB,GAmCpBwuB,EAASjvB,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDp0B,OAAQ,IACRyjD,YAAa,SACbF,MAAO,GACPI,WAAY,cACZxjD,QAAS,EACTujD,aAAc,cACdF,QAAS,MAIbhtE,OAAOC,eAAe4sE,EAAS3rE,UAAW,QAAS,CAKjDf,IAAK,WACH,OAAOmQ,KAAK++C,eAAe/+C,KAAKqyC,QAElCziD,YAAY,EACZ4sB,cAAc,IAShB+/C,EAAS3rE,UAAUksE,UAAY,SAAUh1D,EAAOi1D,GAC9C,GAAI9yB,EAASniC,GACX,OAAOA,EAGP,IAAIk1D,OAAY,EAEhB,IAAKA,KAAaC,GAChB,GAAIA,GAAeD,GAAWD,KAAej1D,EAC3C,OAAOk1D,EAKX,OAAOl1D,GAWXy0D,EAAS3rE,UAAUssE,UAAY,SAAU3tE,EAAMwtE,EAAWj1D,GAExD,GAAImiC,EAASniC,IAAU2/B,QAAQ/qC,IAAIugE,GAAgBn1D,GAAQ,CACzD,IAAIq1D,EAAWF,GAAen1D,GAE1BiiC,EAASozB,GACE,gBAAT5tE,IACFyQ,KAAKzQ,GAAQ4tE,EAASJ,IAGxB/8D,KAAKzQ,GAAQ4tE,MAEV,KAAI/gC,EAAQt0B,IAAmB,gBAATvY,EAG3B,MAAM,IAAI4D,MAAM,4BAA8B2U,GAF9C9H,KAAKzQ,GAAQuY,IAMjBpY,OAAOC,eAAe4sE,EAAS3rE,UAAW,cAAe,CA0BvDf,IAAK,WACH,OAAOmQ,KAAK88D,UAAU98D,KAAKo9D,aAAc,OAE3CjhE,IAAK,SAAU2L,GACb9H,KAAKk9D,UAAU,eAAgB,KAAMp1D,IAEvClY,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4sE,EAAS3rE,UAAW,eAAgB,CAYxDf,IAAK,WACH,OAAOmQ,KAAK88D,UAAU98D,KAAKq9D,cAAe,QAE5ClhE,IAAK,SAAU2L,GACb9H,KAAKk9D,UAAU,gBAAiB,MAAOp1D,IAEzClY,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4sE,EAAS3rE,UAAW,aAAc,CAYtDf,IAAK,WACH,OAAOmQ,KAAKs9D,aAEdnhE,IAAK,SAAU2L,GACbkhC,EAAO,CAAC,SAAU,eAAe/4B,MAAK,SAAU5gB,GAC9C,OAAOA,IAAMyY,KACX,2BAA6BA,GACjC9H,KAAKs9D,YAAcx1D,GAErBlY,YAAY,EACZ4sB,cAAc,IAchB+/C,EAAS3rE,UAAU2sE,cAAgB,SAAU5/D,EAAM6/D,QAChC,IAAbA,IACFA,EAAW,GAGbx9D,KAAK0pC,IAAI,gBAAiB/rC,EAAM6/D,GAChC7/D,EAAOqC,KAAKg5C,UAAUr7C,GACtB,IACIub,EADiBlZ,KAAKg5C,UAAUh5C,KAAKkZ,QAErCujD,EAAQz8D,KAAKg5C,UAAUh5C,KAAKy8D,OAE5BgB,EAAez9D,KAAK++C,eAAephD,GAEnC8/D,EAAe,IAKjBvkD,GAFwB,EAAIukD,IADX,EAAIvkD,IAOvB,GAAIA,EAASlZ,KAAKuhD,WAChBvhD,KAAKw8D,KAAKhrD,sBAAsB7T,GAGhCqC,KAAKw8D,KAAKzrD,eAAeysD,EAAU7/D,QAC9B,GAA0B,WAAtBqC,KAAKo9D,aACdp9D,KAAKw8D,KAAKxb,aAAawc,EAAUtkD,EAAQvb,QACpC,GAA0B,gBAAtBqC,KAAKo9D,aACdp9D,KAAKw8D,KAAKvb,aAAauc,EAAUtkD,EAAQvb,OACpC,CACLqC,KAAKw8D,KAAKvrD,oBAAoBtT,GAI9B,IAFA,IAAImK,EAAQ9H,KAAKo9D,aAERpuE,EAAI,EAAGA,EAAI8Y,EAAMlJ,OAAQ5P,IAEhC,GAAI8Y,EAAM9Y,EAAI,IAAMyuE,GAAgBA,GAAgB31D,EAAM9Y,GAAI,EAC5D8Y,EAAQ9H,KAAKo9D,aAAa58D,MAAMxR,IAE1B,GAAKyuE,EACX,MAIJz9D,KAAKw8D,KAAK7qD,oBAAoB7J,EAAOnK,EAAMub,EAAQskD,GAIrD,GAAIf,GAASz8D,KAAK08D,QAAU,EAAG,CAC7B,IAAIgB,EAAaF,EAAWx9D,KAAK08D,QAC7BiB,EAAahgE,EAAOub,EACxBlZ,KAAK0pC,IAAI,QAASi0B,GAEO,WAArB39D,KAAKs9D,YACPt9D,KAAKw8D,KAAK9qD,wBAAwBgsD,EAAYjB,EAAQkB,GAEtD39D,KAAKw8D,KAAKtb,+BAA+Bwc,EAAYC,EAAYlB,GAIrE,OAAOz8D,MAgBTu8D,EAAS3rE,UAAUgtE,eAAiB,SAAUjgE,GAC5CqC,KAAK0pC,IAAI,iBAAkB/rC,GAC3BA,EAAOqC,KAAKg5C,UAAUr7C,GACtB,IAAI8/D,EAAez9D,KAAK++C,eAAephD,GAEvC,GAAI8/D,EAAe,EAAG,CACpB,IAAIpkD,EAAUrZ,KAAKg5C,UAAUh5C,KAAKqZ,SAE9BA,EAAUrZ,KAAKuhD,WACjBvhD,KAAKw8D,KAAKzrD,eAAe,EAAGpT,GACI,WAAvBqC,KAAKq9D,cACdr9D,KAAKw8D,KAAKxb,aAAa,EAAG3nC,EAAS1b,GACH,gBAAvBqC,KAAKq9D,cACdr9D,KAAKw8D,KAAKvb,aAAa,EAAG5nC,EAAS1b,IAEnCqrC,EAAO5M,EAAQp8B,KAAKq9D,eAAgB,mEAEpCr9D,KAAKw8D,KAAKvrD,oBAAoBtT,GAE9BqC,KAAKw8D,KAAK7qD,oBAAoB3R,KAAKq9D,cAAe1/D,EAAM0b,EAASokD,IAIrE,OAAOz9D,MAQTu8D,EAAS3rE,UAAUmuD,eAAiB,SAAUphD,GAC5C,OAAOqC,KAAKw8D,KAAKzd,eAAephD,IAgBlC4+D,EAAS3rE,UAAUitE,qBAAuB,SAAUpgE,EAAUE,EAAM6/D,GAQlE,YAPiB,IAAbA,IACFA,EAAW,GAGb7/D,EAAOqC,KAAKg5C,UAAUr7C,GACtBqC,KAAKu9D,cAAc5/D,EAAM6/D,GACzBx9D,KAAK49D,eAAejgE,EAAOqC,KAAKg5C,UAAUv7C,IACnCuC,MAOTu8D,EAAS3rE,UAAUi+C,OAAS,SAAUC,GAGpC,OAFA9uC,KAAKw8D,KAAKhrD,sBAAsBxR,KAAKg5C,UAAUlK,IAExC9uC,MAOTu8D,EAAS3rE,UAAU4C,QAAU,SAAU0V,EAAag6C,EAAcC,GAUhE,YATqB,IAAjBD,IACFA,EAAe,QAGG,IAAhBC,IACFA,EAAc,GAGhBuB,GAAc1kD,KAAMkJ,EAAag6C,EAAcC,GACxCnjD,MASTu8D,EAAS3rE,UAAU4jE,QAAU,SAAU51D,GAKrC,YAJe,IAAXA,IACFA,EAAS,MAGJ+oC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAIvC,EAAUrL,EAAS0rE,EAAeC,EAAkBC,EAAaC,EAAeC,EACpF,OAAOh2B,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAiBH,OAhBA7qC,EAAWmB,EAASoB,KAAK5N,QAAQmV,WACjCnV,EAAU,IAAI,GAAe,EAAGqL,EAAUuC,KAAK5N,QAAQmV,YACvDu2D,EAAgB99D,KAAKg5C,UAAUh5C,KAAKkZ,QAAUlZ,KAAKg5C,UAAUh5C,KAAKy8D,OAClEsB,EAAmBD,EAAgB99D,KAAKg5C,UAAUh5C,KAAKqZ,SAEvD4kD,EAAgBF,GADhBC,EAAiC,GAAnBD,IAEdG,EAAQ,IAAIl+D,KAAK6gC,YAAYnxC,OAAO48C,OAAOtsC,KAAKnQ,MAAO,CACrDqpB,OAAQzb,EAAWuC,KAAKg5C,UAAUh5C,KAAKkZ,QAAU+kD,EACjDxB,MAAOh/D,EAAWuC,KAAKg5C,UAAUh5C,KAAKy8D,OAASwB,EAC/C5kD,QAAS5b,EAAWuC,KAAKg5C,UAAUh5C,KAAKqZ,SAAW4kD,EACnD7rE,QAASA,MAGLoqE,KAAK/Z,gBAEXyb,EAAML,qBAAqBpgE,GAAYqgE,EAAgBE,GAAeC,EAAe,GAC9E,CAAC,EAEN7rE,EAAQsc,UAEZ,KAAK,EAEH,MAAO,CAAC,EADCw9B,EAAGnJ,OAGHz/B,eAAe,YAMlCi5D,EAAS3rE,UAAU+6C,QAAU,WAK3B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKw8D,KAAK7wB,UAEH3rC,MAGTqnC,EAAW,CAACqyB,GAAU,IAAK6C,EAAS3rE,UAAW,cAAU,GAEzDy2C,EAAW,CAACqyB,GAAU,IAAK6C,EAAS3rE,UAAW,aAAS,GAExDy2C,EAAW,CAACiyB,GAAM,EAAG,IAAKiD,EAAS3rE,UAAW,eAAW,GAEzDy2C,EAAW,CAACqyB,GAAU,IAAK6C,EAAS3rE,UAAW,eAAW,GAEnD2rE,EA5aT,CA6aE,KAOEU,GAAiB,WACnB,IACIjuE,EACAoY,EAEA+2D,EAAc,GAElB,IAAKnvE,EAAI,EAAGA,EANG,IAMWA,IACxBmvE,EAAYnvE,GAAKgP,KAAKioB,IAAIj3B,EAAI,KAAkBgP,KAAK+nB,GAAK,IAI5D,IAAIq4C,EAAc,GAGlB,IAAKpvE,EAAI,EAAGA,EAAIqvE,IAAcrvE,IAAK,CACjCoY,EAAIpY,EAAI,IACR,IAAIsvE,EAAWtgE,KAAKioB,IAAI7e,GAAe,EAAVpJ,KAAK+nB,IAJd,IAI0C/nB,KAAK+nB,GAAK,GAAK,EAC7Eq4C,EAAYpvE,GAAKsvE,EAAW,GAAS,IAAJl3D,EAGnCg3D,EAAYC,KAAgB,EAE5B,IAAIE,EAAc,GAGlB,IAAKvvE,EAAI,EAAGA,EAzBG,IAyBWA,IACxBuvE,EAAYvvE,GAAKgP,KAAK4B,KAAK5Q,EAAI,IAHrB,KAOZ,IAAIwvE,EAAY,GAEhB,IAAKxvE,EAAI,EAAGA,EAhCG,IAgCWA,IACxBoY,EAAIpY,EAAI,IACRwvE,EAAUxvE,GAAK,IAAO,EAAIgP,KAAKgoB,IAAIhoB,KAAK+nB,GAAK3e,IAI/C,IA2BsBU,EA3BlB22D,EAAc,GAElB,IAAKzvE,EAAI,EAAGA,EAxCG,IAwCWA,IAAK,CAC7BoY,EAAIpY,EAAI,IACR,IAAI2sD,EAAwB,EAAjB39C,KAAKqB,IAAI+H,EAAG,GAAS,GAC5BorC,EAAMx0C,KAAKgoB,IAAI21B,EAAO39C,KAAK+nB,GAAK,EAAI3e,GACxCq3D,EAAYzvE,GAAKgP,KAAK6vC,IAAI2E,GAAO,EAAIprC,IAOvC,SAASs3D,EAAY52D,GAGnB,IAFA,IAAI62D,EAAM,IAAIvtD,MAAMtJ,EAAMlJ,QAEjB4G,EAAI,EAAGA,EAAIsC,EAAMlJ,OAAQ4G,IAChCm5D,EAAIn5D,GAAK,EAAIsC,EAAMtC,GAGrB,OAAOm5D,EAeT,MAAO,CACLC,OAAQ,CACNC,GAAIH,EAAYD,GAChBK,IAAKL,GAEPM,OAAQ,CACNF,GAAIV,EACJW,KAfkBh3D,EAeAq2D,EAdbr2D,EAAMtH,MAAM,GAAGulC,YAgBtBi5B,YAAa,cACbC,OAAQ,SACRC,OAAQ,CACNL,GAAIT,EACJU,IAAKJ,EAAYN,IAEnBe,KAAM,CACJN,GAAIL,EACJM,IAAKJ,EAAYF,IAEnBz2B,KAAM,CACJ82B,GAAIN,EACJO,IAAKJ,EAAYH,KA/FF,GEhdjB,GAEJ,SAAUxwB,GAGR,SAASqxB,IACP,IAAI/zB,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6yB,EAAW9xB,cAAe9F,aAAexnC,KAO5FqrC,EAAMyf,iBAAmB,GAKzBzf,EAAMsjB,SAAU,EAChBtjB,EAAMg0B,wBAA0Bh0B,EAAMkyB,cACtClyB,EAAMi0B,yBAA2Bj0B,EAAMuyB,eACvC,IAAI7rE,EAAUw6C,EAAqB6yB,EAAW9xB,cAAe9F,WAO7D,OANA6D,EAAM0jB,QAAU1jB,EAAM/mC,OAAS,IAAI,GAAO,CACxClS,QAASi5C,EAAMj5C,QACfm7D,OAAQx7D,EAAQw7D,SAElBliB,EAAMkiB,OAASliB,EAAM0jB,QAAQxB,OAC7BpZ,GAAS9I,EAAO,UACTA,EA2HT,OApJAlE,EAAUi4B,EAAYrxB,GA4BtBqxB,EAAW9xB,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDigB,OAAQ,KAmBZ6R,EAAWxuE,UAAU0+D,KAAO,WAS1B,OARKtvD,KAAK2uD,UACR3uD,KAAK2uD,SAAU,EAEf3uD,KAAKu/D,YAAY,gBAAiB,GAElCv/D,KAAKu/D,YAAY,iBAAkB,IAG9Bv/D,MASTo/D,EAAWxuE,UAAU2uE,YAAc,SAAU/8B,EAAQg9B,GACnD,IAAIn0B,EAAQrrC,KAERy/D,EAAiBz/D,KAAK,aAAewiC,GAAUxiC,KAAKwiC,GAExDxiC,KAAKwiC,GAAU,WAGb,IAFA,IAAIte,EAAO,GAEFsc,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCtc,EAAKsc,GAAMgH,UAAUhH,GAGvB,IAAI7iC,EAAOumB,EAAKs7C,GAEZ14C,EAAKukB,EAAMj5C,QAAQsmD,UAAUoT,UAAS,SAAU57D,GAClDg0B,EAAKs7C,GAAgBtvE,EACrBuvE,EAAeh9C,MAAM4oB,EAAOnnB,KAC3BvmB,GAEH0tC,EAAMyf,iBAAiBlqD,KAAKkmB,KAQhCs4C,EAAWxuE,UAAU6+D,OAAS,WAC5B,IAAIpkB,EAAQrrC,KAcZ,OAZAA,KAAK8qD,iBAAiBnuD,SAAQ,SAAUmqB,GACtC,OAAOukB,EAAMj5C,QAAQsmD,UAAUh2B,MAAMoE,MAGvC9mB,KAAK8qD,iBAAmB,GAEpB9qD,KAAK2uD,UACP3uD,KAAK2uD,SAAU,EACf3uD,KAAKu9D,cAAgBv9D,KAAKq/D,wBAC1Br/D,KAAK49D,eAAiB59D,KAAKs/D,0BAGtBt/D,MAgBTo/D,EAAWxuE,UAAUitE,qBAAuB,SAAUthB,EAAM9+C,EAAUE,EAAM6/D,GAC1E,IAAIvd,EAAejgD,KAAKg5C,UAAUr7C,GAC9BwoD,EAAmBnmD,KAAKg5C,UAAUv7C,GAGtC,OAFAuC,KAAKu9D,cAAchhB,EAAM0D,EAAcud,GACvCx9D,KAAK49D,eAAe3d,EAAekG,GAC5BnmD,MAQTo/D,EAAWxuE,UAAU+6C,QAAU,WAO7B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+uD,QAAQpjB,UAEb3rC,KAAKyvD,SACLzvD,KAAK8qD,iBAAmB,GACjB9qD,MAGFo/D,EArJT,CAsJE,ICvJE,GAEJ,SAAUrxB,GAGR,SAAS2xB,IACP,IAAIr0B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmzB,EAAWpyB,cAAe9F,aAAexnC,KAExFjO,EAAUw6C,EAAqBmzB,EAAWpyB,cAAe9F,WAG7D,OAFA6D,EAAMs0B,WAAa5tE,EAAQ4tE,WAC3Bt0B,EAAMu0B,UAAY7tE,EAAQ6tE,UACnBv0B,EAmFT,OA3FAlE,EAAUu4B,EAAY3xB,GAWtB2xB,EAAWpyB,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7Cr5B,OAAQ,EACR2rD,UAAWvrB,GACXsrB,WAAY,KAehBD,EAAW9uE,UAAU2sE,cAAgB,SAAUhhB,EAAM5+C,EAAM6/D,QACxC,IAAbA,IACFA,EAAW,GAGbx9D,KAAK0pC,IAAI,gBAAiB6S,EAAM5+C,EAAM6/D,GACtC,IAAI1hB,EAAU97C,KAAKg5C,UAAUr7C,GAK7B,OAHAqC,KAAK6/D,uBAAuB/jB,EAAS0hB,GAErCx9D,KAAK8/D,QAAQvjB,EAAMT,GACZ97C,MAaT0/D,EAAW9uE,UAAUgtE,eAAiB,SAAUjgE,GAC9CqC,KAAK0pC,IAAI,iBAAkB/rC,GAC3B,IAAIm+C,EAAU97C,KAAKg5C,UAAUr7C,GAI7B,OAFAqC,KAAK+/D,wBAAwBjkB,GAEtB97C,MAeT0/D,EAAW9uE,UAAUkvE,QAAU,SAAUvjB,EAAM5+C,GAC7C,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GAC9BqiE,EAAoBzjB,aAAgB,GAAiBA,EAAKpC,cAAgBoC,EAE9E,GAAIv8C,KAAK2/D,WAAa,GAAK3/D,KAAKigE,eAAehgB,GAAgB,IAAM,CACnE,IAAIigB,EAAWlgE,KAAKg5C,UAAUh5C,KAAK2/D,YACnC3/D,KAAKkU,UAAU4sC,kBAAkBkf,EAAmBE,EAAUjgB,QAE9DjgD,KAAKkU,UAAUnD,eAAeivD,EAAmB/f,GAGnD,OAAOjgD,MAGTqnC,EAAW,CAACqyB,GAAU,IAAKgG,EAAW9uE,UAAW,kBAAc,GAExD8uE,EA5FT,CA6FE,IChFE,GAEJ,SAAU3xB,GAGR,SAASoyB,IACP,IAAI90B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB4zB,EAAkB7yB,cAAe9F,UAAW,CAAC,SAAU,QAAS,UAAW,cAAgBxnC,KAc9I,OAZAqrC,EAAM97C,KAAO,oBACb87C,EAAMgY,UAAY,IAAI,GAAK,CACzBjxD,QAASi5C,EAAMj5C,QACf6W,KAAM,IAERoiC,EAAM/mC,OAAS+mC,EAAMgY,UACrBhY,EAAM9mC,MAAQ8mC,EAAMgY,UAEpBhY,EAAMmxB,KAAKhpE,QAAQ63C,EAAMgY,UAAUp6C,MAEnCoiC,EAAM/mC,OAAS+mC,EAAMgY,UACrBhY,EAAM9mC,MAAQ8mC,EAAMgY,UACbhY,EAeT,OAhCAlE,EAAUg5B,EAAmBpyB,GAwB7BoyB,EAAkBvvE,UAAU+6C,QAAU,WAKpC,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqjD,UAAU1X,UAER3rC,MAGFmgE,EAjCT,CAkCE,ICvCE,GAEJ,SAAUpyB,GAGR,SAASqyB,IACP,IAAI/0B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6zB,EAAM9yB,cAAe9F,aAAexnC,KAEvFqrC,EAAM97C,KAAO,QACb,IAAIwC,EAAUw6C,EAAqB6zB,EAAM9yB,cAAe9F,WAiBxD,OAhBA6D,EAAM4nB,WAAa,IAAI,GAAevjE,OAAO48C,OAAO,CAClDl6C,QAASi5C,EAAMj5C,QACf6hB,OAAQliB,EAAQkiB,OAChB+6C,OAAQ,WACN,OAAO3jB,EAAMu0B,UAAUv0B,KAExBt5C,EAAQkhE,aACX5nB,EAAMn3B,UAAYm3B,EAAM4nB,WAAW/+C,UACnCm3B,EAAMp3B,OAASo3B,EAAM4nB,WAAWh/C,OAChCo3B,EAAMg1B,SAAW,IAAI,GAAkB3wE,OAAO48C,OAAO,CACnDl6C,QAASi5C,EAAMj5C,SACdL,EAAQsuE,WAEXh1B,EAAM4nB,WAAW90B,MAAMkN,EAAMg1B,SAAUh1B,EAAM/mC,QAE7C6vC,GAAS9I,EAAO,CAAC,aAAc,YAAa,SAAU,aAC/CA,EA8DT,OArFAlE,EAAUi5B,EAAOryB,GA0BjBqyB,EAAM9yB,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7C+yB,SAAU3wE,OAAO48C,OAAOU,EAAe,GAASM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACxGp0B,OAAQ,KACRujD,MAAO,GACPpjD,QAAS,EACTqjD,QAAS,KAEXzJ,WAAYvjE,OAAO48C,OAAOU,EAAe,GAAeM,cAAevE,EAASr5C,OAAO8W,KAAK,GAAO8mC,eAAgB,CAAC,YAAa,YAAa,CAC5InwC,KAAM,gBAWZijE,EAAMxvE,UAAUivE,uBAAyB,SAAUliE,EAAM6/D,GAKvD,GAHAx9D,KAAKqgE,SAAS9C,cAAc5/D,EAAM6/D,GAClCx9D,KAAKizD,WAAWvvD,MAAM/F,GAEQ,IAA1BqC,KAAKqgE,SAAS3D,QAAe,CAC/B,IAAI4D,EAAiBtgE,KAAKg5C,UAAUh5C,KAAKqgE,SAASnnD,QAC9CqnD,EAAgBvgE,KAAKg5C,UAAUh5C,KAAKqgE,SAAS5D,OACjDz8D,KAAKizD,WAAWlvD,KAAKpG,EAAO2iE,EAAiBC,KASjDH,EAAMxvE,UAAUmvE,wBAA0B,SAAUpiE,GAClDqC,KAAKqgE,SAASzC,eAAejgE,GAC7BqC,KAAKizD,WAAWlvD,KAAKpG,EAAOqC,KAAKg5C,UAAUh5C,KAAKqgE,SAAShnD,WAG3D+mD,EAAMxvE,UAAUqvE,eAAiB,SAAUtiE,GAEzC,OADAA,EAAOqC,KAAKg5C,UAAUr7C,GACfqC,KAAKqgE,SAASthB,eAAephD,IAOtCyiE,EAAMxvE,UAAU+6C,QAAU,WAKxB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKizD,WAAWtnB,UAChB3rC,KAAKqgE,SAAS10B,UACP3rC,MAGFogE,EAtFT,CAuFE,IC/FE,GAEJ,SAAUryB,GAGR,SAASyyB,IACP,IAAIn1B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBi0B,EAAgBlzB,cAAe9F,aAAexnC,KAEjGqrC,EAAM97C,KAAO,kBACb,IAAIwC,EAAUw6C,EAAqBi0B,EAAgBlzB,cAAe9F,WAuClE,OAtCA6D,EAAMmqB,SAAW,IAAI,GAAM,CACzBpjE,QAASi5C,EAAMj5C,QACf6gE,WAAYlhE,EAAQkhE,WACpBoN,SAAUtuE,EAAQsuE,SAClBT,UAAW,WACT,OAAOv0B,EAAMu0B,UAAUv0B,IAEzBkiB,QAAS,KAEXliB,EAAMoqB,WAAa,IAAI,GAAM,CAC3BrjE,QAASi5C,EAAMj5C,QACf6gE,WAAYlhE,EAAQ0uE,WACpBJ,SAAUtuE,EAAQ2uE,mBAClBnT,QAAS,KAEXliB,EAAM4nB,WAAa5nB,EAAMmqB,SAASvC,WAClC5nB,EAAMg1B,SAAWh1B,EAAMmqB,SAAS6K,SAChCh1B,EAAMo1B,WAAap1B,EAAMoqB,WAAWxC,WACpC5nB,EAAMq1B,mBAAqBr1B,EAAMoqB,WAAW4K,SAC5Ch1B,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,cAEThP,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQkiB,OACfomC,MAAO,UAEThP,EAAMsqB,YAAc,IAAI,GAAS,CAC/BvjE,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQ4jE,YACf9kD,SAAU,IAEZw6B,EAAMkqB,gBAAkB,IAAI,GAAK,CAC/BnjE,QAASi5C,EAAMj5C,QACf6W,KAAM,IAERkrC,GAAS9I,EAAO,CAAC,YAAa,cAAe,aAAc,WAAY,aAAc,qBAAsB,WACpGA,EA0ET,OAvHAlE,EAAUq5B,EAAiBzyB,GAgD3ByyB,EAAgBlzB,YAAc,WAC5B,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7CqoB,YAAa,EACb1C,WAAYvjE,OAAO48C,OAAOU,EAAe,GAAeM,cAAevE,EAASr5C,OAAO8W,KAAK,GAAO8mC,eAAgB,CAAC,YAAa,YAAa,CAC5InwC,KAAM,SAERkjE,SAAU3wE,OAAO48C,OAAOU,EAAe,GAASM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACxGp0B,OAAQ,IACRujD,MAAO,IACPC,QAAS,EACTrjD,QAAS,KAEXonD,WAAY/wE,OAAO48C,OAAOU,EAAe,GAAeM,cAAevE,EAASr5C,OAAO8W,KAAK,GAAO8mC,eAAgB,CAAC,YAAa,YAAa,CAC5InwC,KAAM,WAERujE,mBAAoBhxE,OAAO48C,OAAOU,EAAe,GAASM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CAClHp0B,OAAQ,GACRujD,MAAO,EACPC,QAAS,EACTrjD,QAAS,QASfmnD,EAAgB5vE,UAAUivE,uBAAyB,SAAUliE,EAAM6/D,GAEjEx9D,KAAKw1D,SAASqK,uBAAuBliE,EAAM6/D,GAG3Cx9D,KAAKy1D,WAAWoK,uBAAuBliE,EAAM6/D,IAO/CgD,EAAgB5vE,UAAUmvE,wBAA0B,SAAUpiE,GAO5D,OALAqC,KAAKw1D,SAASuK,wBAAwBpiE,GAGtCqC,KAAKy1D,WAAWsK,wBAAwBpiE,GAEjCqC,MAGTwgE,EAAgB5vE,UAAUqvE,eAAiB,SAAUtiE,GAEnD,OADAA,EAAOqC,KAAKg5C,UAAUr7C,GACfqC,KAAKqgE,SAASthB,eAAephD,IAGtC6iE,EAAgB5vE,UAAU+6C,QAAU,WAalC,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKw1D,SAAS7pB,UAEd3rC,KAAKy1D,WAAW9pB,UAEhB3rC,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UACZ3rC,KAAK21D,YAAYhqB,UAEjB3rC,KAAKu1D,gBAAgB5pB,UAEd3rC,MAGFwgE,EAxHT,CAyHE,ICvHE,ICAJ,SAAUzyB,GAGR,SAAS4yB,IACP,IAAIt1B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBo0B,EAAQrzB,cAAe9F,aAAexnC,KAiBzF,OAfAqrC,EAAM97C,KAAO,UACb87C,EAAMiqB,iBAAmB,IAAI,GAAY,CACvCljE,QAASi5C,EAAMj5C,UAGjBi5C,EAAMn3B,UAAU1gB,QAAQ63C,EAAMmqB,SAASthD,WAEvCm3B,EAAMn3B,UAAUiqB,MAAMkN,EAAMsqB,YAAatqB,EAAMoqB,WAAWvhD,WAE1Dm3B,EAAMp3B,OAAO4uC,IAAIxX,EAAMmqB,SAASvhD,OAAQo3B,EAAMoqB,WAAWxhD,QAEzDo3B,EAAMoqB,WAAWt3B,MAAMkN,EAAMiqB,iBAAkBjqB,EAAMkqB,gBAAgBtsD,MAErEoiC,EAAMmqB,SAASr3B,MAAMkN,EAAMkqB,gBAAiBlqB,EAAM/mC,QAE3C+mC,EApBTlE,EAAUw5B,EAAS5yB,GAuBnB4yB,EAAQ/vE,UAAU+6C,QAAU,WAK1B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKs1D,iBAAiB3pB,UAEf3rC,MA7BX,CAiCE,ID/BF,SAAU+tC,GAGR,SAAS6yB,IACP,IAAIv1B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBq0B,EAAOtzB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,cAAgBxnC,KAE1HqrC,EAAM97C,KAAO,SACb87C,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAEjBi5C,EAAMw1B,SAAW,GACjB,IAAI9uE,EAAUw6C,EAAqBq0B,EAAOtzB,cAAe9F,UAAW,CAAC,YAAa,OAAQ,YAyB1F,OAxBA6D,EAAMw1B,SAAW,GACjBx1B,EAAMr3B,EAAI,IAAI,GAAO,CACnB5hB,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQiiB,IAEjBq3B,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQmiB,YAEjBm3B,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfioD,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAEjBo3B,EAAMpiC,KAAO,IAAI,GAAO,CACtB7W,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQkX,OAEjBoiC,EAAMV,MAAQ54C,EAAQoL,KACtBkuC,EAAMy1B,QAAU/uE,EAAQ+uE,QACxB3sB,GAAS9I,EAAO,CAAC,SAAU,YAAa,OAAQ,MACzCA,EA2IT,OAjLAlE,EAAUy5B,EAAQ7yB,GAyClB6yB,EAAOtzB,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDt5B,EAAG,EACHC,OAAQ,EACRC,UAAW,IACXjL,KAAM,EACN63D,SAAU,GACV3jE,KAAM,aAIVzN,OAAOC,eAAeixE,EAAOhwE,UAAW,OAAQ,CAK9Cf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUgB,GAEb6rC,GAAgC,IADpB,CAAC,UAAW,WAAY,WAAY,WAAY,YAAa,QAAS,UAAW,WAChF4D,QAAQzvC,GAAc,wBAA0BA,GAC7D6C,KAAK2qC,MAAQxtC,EAEb6C,KAAK6gE,SAASlkE,SAAQ,SAAU6yB,GAC9B,OAAOA,EAAOryB,KAAOA,MAGzBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeixE,EAAOhwE,UAAW,UAAW,CAMjDf,IAAK,WACH,OAAOmQ,KAAK+gE,UAEd5kE,IAAK,SAAU2kE,GACb,IAAIE,EAAal3B,EAASg3B,GAAWA,EAAUlmB,SAASkmB,EAAS,IAC7DG,EAAgB,EAAE,IAAK,IAAK,IAAK,IACjCC,EAAiBD,EAAcr0B,QAAQo0B,GAE3Ch4B,GAA2B,IAApBk4B,EAAuB,uBAAyBD,EAAc/kC,KAAK,OAC1EglC,GAAkB,EAClBlhE,KAAK+gE,SAAWC,EAChBhhE,KAAKuE,MAAM9Q,aAEXuM,KAAK6gE,SAASlkE,SAAQ,SAAU6yB,GAC9B,OAAOA,EAAO/7B,gBAGhBuM,KAAK6gE,SAAW,IAAIzvD,MAAM8vD,GAE1B,IAAK,IAAIhpD,EAAQ,EAAGA,EAAQgpD,EAAgBhpD,IAAS,CACnD,IAAIsX,EAASxvB,KAAK5N,QAAQoxB,qBAC1BgM,EAAOryB,KAAO6C,KAAK2qC,MACnB3qC,KAAKkU,UAAU1gB,QAAQg8B,EAAOtb,WAC9BlU,KAAKiU,OAAOzgB,QAAQg8B,EAAOvb,QAC3BjU,KAAKgU,EAAExgB,QAAQg8B,EAAOxb,GACtBhU,KAAKiJ,KAAKzV,QAAQg8B,EAAOvmB,MACzBjJ,KAAK6gE,SAAS3oD,GAASsX,EAGzBxvB,KAAKgiD,kBAAoBhiD,KAAK6gE,SAC9Bje,GAAcngC,WAAM,EAAQsmB,EAAS,CAAC/oC,KAAKuE,OAAQvE,KAAKgiD,kBAAmB,CAAChiD,KAAKsE,WAEnF1U,YAAY,EACZ4sB,cAAc,IAShBokD,EAAOhwE,UAAUkkB,qBAAuB,SAAUgsB,GAChD,IAAIuK,EAAQrrC,UAEA,IAAR8gC,IACFA,EAAM,KASR,IALA,IAAIqgC,EAAgB,IAAIrgE,aAAaggC,GAAK5tC,KAAI,WAC5C,OAAO,KAELkuE,EAAa,IAAItgE,aAAaggC,GAEzB9xC,EAAI,EAAGA,EAAI8xC,EAAK9xC,IAAK,CAC5B,IACI2sD,EAAc,MADP39C,KAAKqB,IAAIrQ,EAAI8xC,EAAK,GACI,GACjCsgC,EAAWpyE,GAAK2sD,EAGlB,IAAI0lB,EAAY,IAAIvgE,aAAaggC,GAC7BwgC,EAAc,IAAIxgE,aAAaggC,GAenC,OAbA9gC,KAAK6gE,SAASlkE,SAAQ,WACpB,IAAI4kE,EAAcl2B,EAAMj5C,QAAQoxB,qBAEhC+9C,EAAYpkE,KAAOkuC,EAAMV,MACzB42B,EAAYvtD,EAAE/jB,MAAQo7C,EAAMr3B,EAAE/jB,MAC9BsxE,EAAYrtD,UAAUjkB,MAAQo7C,EAAMn3B,UAAUjkB,MAC9CsxE,EAAYt4D,KAAKhZ,MAAQo7C,EAAMpiC,KAAKhZ,MACpCsxE,EAAYzsD,qBAAqBssD,EAAYC,EAAWC,GACxDD,EAAU1kE,SAAQ,SAAU61C,EAAKxjD,GAC/BmyE,EAAcnyE,IAAMwjD,QAIjB2uB,GAOTP,EAAOhwE,UAAU+6C,QAAU,WAYzB,OAXAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK6gE,SAASlkE,SAAQ,SAAU6yB,GAC9BA,EAAO/7B,gBAGT0tC,GAASnhC,KAAM,CAAC,SAAU,YAAa,OAAQ,MAC/CA,KAAKkU,UAAUy3B,UACf3rC,KAAKgU,EAAE23B,UACP3rC,KAAKiU,OAAO03B,UACZ3rC,KAAKiJ,KAAK0iC,UACH3rC,MAGF4gE,EAlLT,CAmLE,KEpLE,GAEJ,SAAU7yB,GAGR,SAASyzB,IACP,IAAIn2B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBi1B,EAAkBl0B,cAAe9F,UAAW,CAAC,SAAU,QAAS,UAAW,cAAgBxnC,KAE9IqrC,EAAM97C,KAAO,oBACb,IAAIwC,EAAUw6C,EAAqBi1B,EAAkBl0B,cAAe9F,UAAW,CAAC,SAAU,QAAS,UAAW,YAe9G,OAdA6D,EAAMo2B,SAAW1vE,EAAQ2vE,QACzBr2B,EAAMs2B,eAAiBt2B,EAAM8O,YAAYpoD,EAAQ6vE,eACjDv2B,EAAMywB,UAAYzwB,EAAM9mC,MAAQ,IAAI,GAAI,CACtCnS,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQgqE,WAEjB1wB,EAAMwrB,OAASxrB,EAAM/mC,OAAS,IAAI,GAAM,CACtClS,QAASi5C,EAAMj5C,QACfqV,IAAK4jC,EAAMs2B,eACXn6D,IAAK6jC,EAAMs2B,eAAiB3jE,KAAKqB,IAAI,EAAGgsC,EAAMo2B,YAGhDp2B,EAAMmxB,KAAKr+B,MAAMkN,EAAMywB,UAAWzwB,EAAMwrB,QAEjCxrB,EAyET,OA9FAlE,EAAUq6B,EAAmBzzB,GAwB7ByzB,EAAkBl0B,YAAc,WAC9B,OAAO59C,OAAO48C,OAAO,GAASgB,cAAe,CAC3Cs0B,cAAe,IACf7F,SAAU,EACV2F,QAAS,KAIbhyE,OAAOC,eAAe6xE,EAAkB5wE,UAAW,gBAAiB,CAKlEf,IAAK,WACH,OAAOmQ,KAAK2hE,gBAEdxlE,IAAK,SAAUsL,GACb,IAAIk0C,EAAO37C,KAAKm6C,YAAY1yC,GAC5ByhC,EAAYyS,EAAM,GAClB37C,KAAK2hE,eAAiBhmB,EACtB37C,KAAK62D,OAAOpvD,IAAMzH,KAAK2hE,eAEvB3hE,KAAK0hE,QAAU1hE,KAAKyhE,UAEtB7xE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6xE,EAAkB5wE,UAAW,UAAW,CAK5Df,IAAK,WACH,OAAOmQ,KAAKyhE,UAEdtlE,IAAK,SAAUulE,GACbx4B,EAAYw4B,EAAS,GACrB1hE,KAAKyhE,SAAWC,EAChB1hE,KAAK62D,OAAOrvD,IAAMxH,KAAK2hE,eAAiB3jE,KAAKqB,IAAI,EAAGqiE,IAEtD9xE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6xE,EAAkB5wE,UAAW,WAAY,CAI7Df,IAAK,WACH,OAAOmQ,KAAK87D,UAAU7rE,OAExBkM,IAAK,SAAU4/D,GACb/7D,KAAK87D,UAAU7rE,MAAQ8rE,GAEzBnsE,YAAY,EACZ4sB,cAAc,IAMhBglD,EAAkB5wE,UAAU+6C,QAAU,WAOpC,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK87D,UAAUnwB,UAEf3rC,KAAK62D,OAAOlrB,UAEL3rC,MAGFwhE,EA/FT,CAgGE,IC1FE,GAEJ,SAAUzzB,GAGR,SAAS8zB,IACP,IAAIx2B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBs1B,EAAUv0B,cAAe9F,aAAexnC,KAE3FqrC,EAAM97C,KAAO,YACb,IAAIwC,EAAUw6C,EAAqBs1B,EAAUv0B,cAAe9F,WA0B5D,OAzBA6D,EAAM4nB,WAAa,IAAI,GAAevjE,OAAO48C,OAAOv6C,EAAQkhE,WAAY,CACtE7gE,QAASi5C,EAAMj5C,QACf6hB,OAAQliB,EAAQkiB,OAChB+6C,OAAQ,WACN,OAAO3jB,EAAMu0B,UAAUv0B,OAG3BA,EAAMn3B,UAAYm3B,EAAM4nB,WAAW/+C,UACnCm3B,EAAMp3B,OAASo3B,EAAM4nB,WAAWh/C,OAChCo3B,EAAM7b,OAAS,IAAI,GAAO9/B,OAAO48C,OAAOv6C,EAAQy9B,OAAQ,CACtDp9B,QAASi5C,EAAMj5C,WAEjBi5C,EAAMy2B,eAAiB,IAAI,GAAkBpyE,OAAO48C,OAAOv6C,EAAQ+vE,eAAgB,CACjF1vE,QAASi5C,EAAMj5C,WAEjBi5C,EAAMg1B,SAAW,IAAI,GAAkB3wE,OAAO48C,OAAOv6C,EAAQsuE,SAAU,CACrEjuE,QAASi5C,EAAMj5C,WAGjBi5C,EAAM4nB,WAAW90B,MAAMkN,EAAM7b,OAAQ6b,EAAMg1B,SAAUh1B,EAAM/mC,QAG3D+mC,EAAMy2B,eAAetuE,QAAQ63C,EAAM7b,OAAOtb,WAE1CigC,GAAS9I,EAAO,CAAC,aAAc,YAAa,SAAU,SAAU,iBAAkB,aAC3EA,EA+ET,OA/GAlE,EAAU06B,EAAW9zB,GAmCrB8zB,EAAUv0B,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7C+yB,SAAU3wE,OAAO48C,OAAOU,EAAe,GAASM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACxGp0B,OAAQ,KACRujD,MAAO,GACPpjD,QAAS,EACTqjD,QAAS,KAEXltC,OAAQ9/B,OAAO48C,OAAOU,EAAe,GAAOM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACpGt5B,EAAG,EACH8sD,SAAU,GACV3jE,KAAM,YAER2kE,eAAgBpyE,OAAO48C,OAAOU,EAAe,GAAkBM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACvHp0B,OAAQ,GACR0oD,cAAe,IACfnF,MAAO,GACPV,SAAU,EACV2F,QAAS,EACTroD,QAAS,EACTqjD,QAAS,KAEXzJ,WAAYvjE,OAAO48C,OAAOU,EAAe,GAAeM,cAAe59C,OAAO8W,KAAK,GAAO8mC,gBAAiB,CACzGnwC,KAAM,gBAWZ0kE,EAAUjxE,UAAUivE,uBAAyB,SAAUliE,EAAM6/D,GAS3D,QARiB,IAAbA,IACFA,EAAW,GAGbx9D,KAAKqgE,SAAS9C,cAAc5/D,EAAM6/D,GAClCx9D,KAAK8hE,eAAevE,cAAc5/D,GAClCqC,KAAKizD,WAAWvvD,MAAM/F,GAEQ,IAA1BqC,KAAKqgE,SAAS3D,QAAe,CAC/B,IAAI4D,EAAiBtgE,KAAKg5C,UAAUh5C,KAAKqgE,SAASnnD,QAC9CqnD,EAAgBvgE,KAAKg5C,UAAUh5C,KAAKqgE,SAAS5D,OACjDz8D,KAAKizD,WAAWlvD,KAAKpG,EAAO2iE,EAAiBC,KASjDsB,EAAUjxE,UAAUmvE,wBAA0B,SAAUpiE,GACtDqC,KAAKqgE,SAASzC,eAAejgE,GAC7BqC,KAAK8hE,eAAelE,eAAejgE,GACnCqC,KAAKizD,WAAWlvD,KAAKpG,EAAOqC,KAAKg5C,UAAUh5C,KAAKqgE,SAAShnD,WAG3DwoD,EAAUjxE,UAAUqvE,eAAiB,SAAUtiE,GAE7C,OADAA,EAAOqC,KAAKg5C,UAAUr7C,GACfqC,KAAKqgE,SAASthB,eAAephD,IAGtCkkE,EAAUjxE,UAAU+6C,QAAU,WAO5B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKizD,WAAWtnB,UAChB3rC,KAAKqgE,SAAS10B,UACd3rC,KAAK8hE,eAAen2B,UACpB3rC,KAAKwvB,OAAOmc,UACL3rC,MAGF6hE,EAhHT,CAiHE,IC/HEE,ICGJ,SAAUh0B,GAGR,SAASi0B,IACP,IAAI32B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBy1B,EAAS10B,cAAe9F,aAAexnC,KAE1FqrC,EAAM97C,KAAO,WACb,IAAIwC,EAAUw6C,EAAqBy1B,EAAS10B,cAAe9F,WAyD3D,OAxDA6D,EAAM42B,OAAS,IAAI,GAAUvyE,OAAO48C,OAAOv6C,EAAQkwE,OAAQ,CACzD7vE,QAASi5C,EAAMj5C,QACfwtE,UAAW,WACT,OAAOv0B,EAAMu0B,UAAUv0B,OAG3BA,EAAM62B,OAAS,IAAI,GAAUxyE,OAAO48C,OAAOv6C,EAAQmwE,OAAQ,CACzD9vE,QAASi5C,EAAMj5C,WAEjBi5C,EAAMsqB,YAAc,IAAI,GAAS,CAC/BvjE,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQ4jE,cAEjBtqB,EAAM82B,SAAW,IAAI,GAAI,CACvBjuD,UAAWniB,EAAQqwE,YACnBhwE,QAASi5C,EAAMj5C,QACfqV,KAAM,GACND,IAAK,KAGP6jC,EAAM82B,SAASz+D,QAEf2nC,EAAM+2B,YAAc/2B,EAAM82B,SAASjuD,UACnCm3B,EAAMg3B,aAAe,IAAI,GAAK,CAC5BjwE,QAASi5C,EAAMj5C,QACfioD,MAAO,cACPpxC,KAAMlX,EAAQuwE,gBAEhBj3B,EAAMi3B,cAAgBj3B,EAAMg3B,aAAap5D,KACzCoiC,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO,MAETo7C,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfioD,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAGjBo3B,EAAMn3B,UAAU1gB,QAAQ63C,EAAM42B,OAAO/tD,WAErCm3B,EAAMn3B,UAAUiqB,MAAMkN,EAAMsqB,YAAatqB,EAAM62B,OAAOhuD,WAEtDm3B,EAAM82B,SAAS3uE,QAAQ63C,EAAMg3B,cAE7Bh3B,EAAMg3B,aAAaxf,IAAIxX,EAAM42B,OAAOhuD,OAAQo3B,EAAM62B,OAAOjuD,QAEzDo3B,EAAMp3B,OAAO4uC,IAAIxX,EAAM42B,OAAOhuD,OAAQo3B,EAAM62B,OAAOjuD,QAEnDo3B,EAAM42B,OAAOzuE,QAAQ63C,EAAM/mC,QAE3B+mC,EAAM62B,OAAO1uE,QAAQ63C,EAAM/mC,QAE3B6vC,GAAS9I,EAAO,CAAC,SAAU,SAAU,YAAa,gBAAiB,gBAC5DA,EA/DTlE,EAAU66B,EAAUj0B,GAkEpBi0B,EAASpxE,UAAUqvE,eAAiB,SAAUtiE,GAE5C,OADAA,EAAOqC,KAAKg5C,UAAUr7C,GACfqC,KAAKiiE,OAAO5B,SAASthB,eAAephD,GAAQqC,KAAKkiE,OAAO7B,SAASthB,eAAephD,IAGzFqkE,EAAS10B,YAAc,WACrB,OAAOrB,EAAU,GAAWqB,cAAe,CACzCg1B,cAAe,GACfF,YAAa,EACbzM,YAAa,IACbsM,OAAQh2B,EAAUe,EAAe,GAAUM,cAAe59C,OAAO8W,KAAK,GAAW8mC,gBAAiB,CAChGw0B,eAAgB,CACd5oD,OAAQ,IACRujD,MAAO,EACPC,QAAS,EACTrjD,QAAS,IAEXgnD,SAAU,CACRnnD,OAAQ,IACRujD,MAAO,EACPC,QAAS,EACTrjD,QAAS,MAGb6oD,OAAQj2B,EAAUe,EAAe,GAAUM,cAAe59C,OAAO8W,KAAK,GAAW8mC,gBAAiB,CAChGw0B,eAAgB,CACd5oD,OAAQ,IACRujD,MAAO,EACPC,QAAS,EACTrjD,QAAS,IAEXgnD,SAAU,CACRnnD,OAAQ,IACRujD,MAAO,EACPC,QAAS,EACTrjD,QAAS,SAUjB2oD,EAASpxE,UAAUivE,uBAAyB,SAAUliE,EAAM6/D,GAE1Dx9D,KAAKiiE,OAAOpC,uBAAuBliE,EAAM6/D,GAGzCx9D,KAAKkiE,OAAOrC,uBAAuBliE,EAAM6/D,IAO3CwE,EAASpxE,UAAUmvE,wBAA0B,SAAUpiE,GAOrD,OALAqC,KAAKiiE,OAAOlC,wBAAwBpiE,GAGpCqC,KAAKkiE,OAAOnC,wBAAwBpiE,GAE7BqC,MAGTgiE,EAASpxE,UAAU+6C,QAAU,WAe3B,OAdAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKiiE,OAAOt2B,UACZ3rC,KAAKkiE,OAAOv2B,UACZ3rC,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UAEZ3rC,KAAKmiE,SAASx2B,UAEd3rC,KAAKoiE,YAAYz2B,UAEjB3rC,KAAKqiE,aAAa12B,UAElB3rC,KAAK21D,YAAYhqB,UACV3rC,MArJX,CAyJE,IC1JF,SAAU+tC,GAGR,SAASw0B,IACP,IAAIl3B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBg2B,EAAQj1B,cAAe9F,aAAexnC,KAEzFqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBg2B,EAAQj1B,cAAe9F,WAoB1D,OAnBA6D,EAAMwqB,gBAAkB,IAAI,GAAS,CACnCzjE,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQ8jE,kBAGjBxqB,EAAMn3B,UAAU1gB,QAAQ63C,EAAMmqB,SAASthD,WAEvCm3B,EAAMn3B,UAAUiqB,MAAMkN,EAAMsqB,YAAatqB,EAAMoqB,WAAWvhD,WAE1Dm3B,EAAMn3B,UAAUiqB,MAAMkN,EAAMwqB,gBAAiBxqB,EAAMkqB,iBAEnDlqB,EAAMp3B,OAAO4uC,IAAIxX,EAAMmqB,SAASvhD,OAAQo3B,EAAMoqB,WAAWxhD,QAEzDo3B,EAAMoqB,WAAWjiE,QAAQ63C,EAAMkqB,gBAAgBtsD,MAE/CoiC,EAAMkqB,gBAAgB/hE,QAAQ63C,EAAMmqB,SAASthD,WAE7Cm3B,EAAMmqB,SAAShiE,QAAQ63C,EAAM/mC,QAEtB+mC,EA1BTlE,EAAUo7B,EAASx0B,GA6BnBw0B,EAAQj1B,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAgBgB,cAAe,CAClDuoB,gBAAiB,MAIrB0M,EAAQ3xE,UAAU+6C,QAAU,WAI1B,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK61D,gBAAgBlqB,UACd3rC,MAxCX,CA4CE,IF9CiB,CAAC,EAAK,MAAO,MAAO,MAAO,KAAO,QGbjD,IHwBJ,SAAU+tC,GAGR,SAASy0B,IACP,IAAIn3B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBi2B,EAAWl1B,cAAe9F,aAAexnC,KAE5FqrC,EAAM97C,KAAO,aAKb87C,EAAM+qB,aAAe,GAKrB/qB,EAAMo3B,iBAAmB,GACzB,IAAI1wE,EAAUw6C,EAAqBi2B,EAAWl1B,cAAe9F,WAC7D6D,EAAMp3B,OAAS,IAAI,GAAO,CACxB7hB,QAASi5C,EAAMj5C,QACfioD,MAAO,QACPpqD,MAAO8B,EAAQkiB,SAEjBo3B,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,cAEThP,EAAMq3B,WAAa,IAAI,GAAK,CAC1BtwE,QAASi5C,EAAMj5C,QACf6W,KAAM,IACLzV,QAAQ63C,EAAM/mC,QACjB+mC,EAAMs3B,UAAY,IAAI,GAAO,CAE3B3uD,EAAG,EACH5hB,QAASi5C,EAAMj5C,QACf+K,KAAM,aACL3J,QAAQ63C,EAAMq3B,YAEjB,IAAK,IAAI1zE,EAAI,EAAGA,EAAI+yE,GAAanjE,OAAQ5P,IAAK,CAC5C,IAAIwnE,EAAM,IAAI,GAAa,CACzBpkE,QAASi5C,EAAMj5C,QACfujE,YAAa5jE,EAAQ4jE,YACrBE,gBAAiB9jE,EAAQ8jE,gBACzBH,eAAgB,SAChB1G,OAAc,IAANhgE,EAAU,WAChB,OAAOq8C,EAAMu0B,UAAUv0B,IACrBgJ,GACJl3C,KAAM,WAERq5D,EAAIhjE,QAAQ63C,EAAMs3B,WAClBt3B,EAAM+qB,aAAapnE,GAAKwnE,EACxB,IAAIoM,EAAO,IAAI,GAAS,CACtBxwE,QAASi5C,EAAMj5C,QACfnC,MAAO8xE,GAAa/yE,KAEtBq8C,EAAMo3B,iBAAiBzzE,GAAK4zE,EAE5Bv3B,EAAMn3B,UAAUiqB,MAAMykC,EAAMpM,EAAItiD,WAEhCm3B,EAAMp3B,OAAOzgB,QAAQgjE,EAAIviD,QAwB3B,OArBAo3B,EAAMw3B,kBAAoB,IAAI,GAAM,CAClCzwE,QAASi5C,EAAMj5C,QACfoV,IAAK,IACLC,IAAK4jC,EAAM8O,YAAYpoD,EAAQ+wE,aAEjCz3B,EAAMg1B,SAAW,IAAI,GAAS,CAC5BnnD,OAAQnnB,EAAQsuE,SAASnnD,OACzByjD,YAAa,SACbvqE,QAASi5C,EAAMj5C,QACfqqE,MAAO1qE,EAAQsuE,SAAS5D,MACxBpjD,QAAStnB,EAAQsuE,SAAShnD,QAC1BqjD,QAAS,IAGXrxB,EAAMg1B,SAASliC,MAAMkN,EAAMw3B,kBAAmBx3B,EAAMs3B,UAAUzuD,WAE9Dm3B,EAAMg1B,SAAS7sE,QAAQ63C,EAAMq3B,WAAWz5D,MAGxCoiC,EAAMo2B,SAAW1vE,EAAQ2vE,QACzBr2B,EAAMq2B,QAAU3vE,EAAQ2vE,QACjBr2B,EAlFTlE,EAAUq7B,EAAYz0B,GAqFtBy0B,EAAWl1B,YAAc,WACvB,OAAOrB,EAAU,GAAWqB,cAAe,CACzC+yB,SAAU3wE,OAAO48C,OAAOU,EAAe,GAASM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACxGp0B,OAAQ,KACRujD,MAAO,IACPpjD,QAAS,KAEXs8C,YAAa,IACbE,gBAAiB,GACjB6L,QAAS,IACToB,UAAW,OAUfN,EAAW5xE,UAAUivE,uBAAyB,SAAUliE,EAAM6/D,GAC5D,IAAInyB,EAAQrrC,KAkBZ,YAhBiB,IAAbw9D,IACFA,EAAW,GAGbx9D,KAAKqgE,SAAS9C,cAAc5/D,EAAM6/D,GAElCx9D,KAAKo2D,aAAaz5D,SAAQ,SAAU65D,GAClC,OAAOA,EAAI9yD,MAAM/F,MAGW,IAA1BqC,KAAKqgE,SAAS3D,SAChB18D,KAAKo2D,aAAaz5D,SAAQ,SAAU65D,GAClCA,EAAIzyD,KAAKpG,EAAO0tC,EAAM2N,UAAU3N,EAAMg1B,SAASnnD,QAAUmyB,EAAM2N,UAAU3N,EAAMg1B,SAAS5D,WAIrFz8D,MAQTwiE,EAAW5xE,UAAUmvE,wBAA0B,SAAUpiE,GACvD,IAAI0tC,EAAQrrC,KAQZ,OANAA,KAAKqgE,SAASzC,eAAejgE,GAE7BqC,KAAKo2D,aAAaz5D,SAAQ,SAAU65D,GAClC,OAAOA,EAAIzyD,KAAKpG,EAAO0tC,EAAM2N,UAAU3N,EAAMg1B,SAAShnD,aAGjDrZ,MAGTwiE,EAAW5xE,UAAUqvE,eAAiB,SAAUtiE,GAE9C,OADAA,EAAOqC,KAAKg5C,UAAUr7C,GACfqC,KAAKqgE,SAASthB,eAAephD,IAGtCjO,OAAOC,eAAe6yE,EAAW5xE,UAAW,kBAAmB,CAO7Df,IAAK,WACH,OAAOmQ,KAAKo2D,aAAa,GAAGP,gBAAgB5lE,OAE9CkM,IAAK,SAAUq2C,GACbxyC,KAAKo2D,aAAaz5D,SAAQ,SAAU65D,GAClC,OAAOA,EAAIX,gBAAgB5lE,MAAQuiD,MAGvC5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6yE,EAAW5xE,UAAW,cAAe,CAOzDf,IAAK,WACH,OAAOmQ,KAAKo2D,aAAa,GAAGT,YAAY1lE,OAE1CkM,IAAK,SAAUq2C,GACbxyC,KAAKo2D,aAAaz5D,SAAQ,SAAU65D,GAClC,OAAOA,EAAIb,YAAY1lE,MAAQuiD,MAGnC5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6yE,EAAW5xE,UAAW,YAAa,CAOvDf,IAAK,WACH,OAAOmQ,KAAK6iE,kBAAkBp7D,KAEhCtL,IAAK,SAAUq2C,GACbxyC,KAAK6iE,kBAAkBp7D,IAAMzH,KAAKm6C,YAAY3H,GAC9CxyC,KAAK0hE,QAAU1hE,KAAKyhE,UAEtB7xE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6yE,EAAW5xE,UAAW,UAAW,CAOrDf,IAAK,WACH,OAAOmQ,KAAKyhE,UAEdtlE,IAAK,SAAUq2C,GACbxyC,KAAKyhE,SAAWjvB,EAChBxyC,KAAK6iE,kBAAkBr7D,IAAMxH,KAAK6iE,kBAAkBp7D,IAAMzJ,KAAKqB,IAAI,EAAGmzC,IAExE5iD,YAAY,EACZ4sB,cAAc,IAGhBgmD,EAAW5xE,UAAU+6C,QAAU,WAsB7B,OArBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKo2D,aAAaz5D,SAAQ,SAAU65D,GAClC,OAAOA,EAAI7qB,aAGb3rC,KAAKyiE,iBAAiB9lE,SAAQ,SAAUomE,GACtC,OAAOA,EAASp3B,aAGlB3rC,KAAKkU,UAAUy3B,UACf3rC,KAAKiU,OAAO03B,UAEZ3rC,KAAK6iE,kBAAkBl3B,UAEvB3rC,KAAK0iE,WAAW/2B,UAEhB3rC,KAAKqgE,SAAS10B,UAEd3rC,KAAK2iE,UAAUh3B,UAER3rC,MAnPX,CAuPE,II5PF,SAAU+tC,GAGR,SAASi1B,IACP,IAAI33B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBy2B,EAAc11B,cAAe9F,aAAexnC,KAE/FqrC,EAAM97C,KAAO,gBAKb87C,EAAMs0B,WAAa,EACnB,IAAI5tE,EAAUw6C,EAAqBy2B,EAAc11B,cAAe9F,WAIhE,OAHA6D,EAAM43B,WAAalxE,EAAQkxE,WAC3B53B,EAAMq2B,QAAU3vE,EAAQ2vE,QACxBvtB,GAAS9I,EAAO,CAAC,aAAc,aACxBA,EAfTlE,EAAU67B,EAAej1B,GAkBzBi1B,EAAc11B,YAAc,WAC1B,OAAOrB,EAAU,GAAWqB,cAAe,GAAMA,cAAe,CAC9D+yB,SAAU,CACRnnD,OAAQ,KACRyjD,YAAa,cACbF,MAAO,GACPpjD,QAAS,IACTqjD,QAAS,KAEXgF,QAAS,GACTzO,WAAY,CACV91D,KAAM,QAER8lE,WAAY,OAIhBD,EAAcpyE,UAAUkvE,QAAU,SAAUvjB,EAAM5+C,GAChD,IAAIm+C,EAAU97C,KAAKg5C,UAAUr7C,GACzBulE,EAAQljE,KAAKm6C,YAAYoC,aAAgB,GAAiBA,EAAKpC,cAAgBoC,GAC/E4mB,EAAUD,EAAQljE,KAAK0hE,QAG3B,OAFA1hE,KAAKizD,WAAW/+C,UAAUnD,eAAeoyD,EAASrnB,GAClD97C,KAAKizD,WAAW/+C,UAAUzC,6BAA6ByxD,EAAOpnB,EAAU97C,KAAKg5C,UAAUh5C,KAAKijE,aACrFjjE,MAGTgjE,EAAcpyE,UAAU+6C,QAAU,WAGhC,OAFAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAEvBA,MAGTqnC,EAAW,CAACiyB,GAAM,IAAK0J,EAAcpyE,UAAW,eAAW,GAE3Dy2C,EAAW,CAACqyB,GAAU,IAAKsJ,EAAcpyE,UAAW,kBAAc,GArDpE,CAwDE,ICxDF,SAAUm9C,GAGR,SAASq1B,IACP,IAAI/3B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB62B,EAAW91B,cAAe9F,aAAexnC,KAE5FqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqB62B,EAAW91B,cAAe9F,WAU7D,OATA6D,EAAMg4B,MAAQ,IAAI,GAAM3zE,OAAO48C,OAAO,CACpCl6C,QAASi5C,EAAMj5C,SACdL,EAAQsxE,QACXh4B,EAAMg1B,SAAW,IAAI,GAAkB3wE,OAAO48C,OAAO,CACnDl6C,QAASi5C,EAAMj5C,SACdL,EAAQsuE,WAEXh1B,EAAMg4B,MAAMllC,MAAMkN,EAAMg1B,SAAUh1B,EAAM/mC,QAEjC+mC,EAhBTlE,EAAUi8B,EAAYr1B,GAmBtBq1B,EAAW91B,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7C+yB,SAAU3wE,OAAO48C,OAAOU,EAAe,GAASM,cAAe59C,OAAO8W,KAAK,GAAc8mC,gBAAiB,CACxGmvB,MAAO,GACPC,QAAS,IAEX2G,MAAO3zE,OAAO48C,OAAOU,EAAe,GAAMM,cAAe59C,OAAO8W,KAAK,GAAO8mC,gBAAiB,CAC3FnwC,KAAM,aAaZimE,EAAWxyE,UAAU2sE,cAAgB,SAAU5/D,EAAM6/D,GAenD,YAdiB,IAAbA,IACFA,EAAW,GAGb7/D,EAAOqC,KAAKg5C,UAAUr7C,GAEtBqC,KAAKqgE,SAAS9C,cAAc5/D,EAAM6/D,GAElCx9D,KAAKqjE,MAAM3/D,MAAM/F,GAEa,IAA1BqC,KAAKqgE,SAAS3D,SAChB18D,KAAKqjE,MAAMt/D,KAAKpG,EAAOqC,KAAKg5C,UAAUh5C,KAAKqgE,SAASnnD,QAAUlZ,KAAKg5C,UAAUh5C,KAAKqgE,SAAS5D,QAGtFz8D,MAOTojE,EAAWxyE,UAAUgtE,eAAiB,SAAUjgE,GAI9C,OAHAA,EAAOqC,KAAKg5C,UAAUr7C,GACtBqC,KAAKqgE,SAASzC,eAAejgE,GAC7BqC,KAAKqjE,MAAMt/D,KAAKpG,EAAOqC,KAAKg5C,UAAUh5C,KAAKqgE,SAAShnD,UAC7CrZ,MAGTojE,EAAWxyE,UAAU0+D,KAAO,WAK1B,OAJAtvD,KAAKu/D,YAAY,gBAAiB,GAElCv/D,KAAKu/D,YAAY,iBAAkB,GAE5Bv/D,MAGTojE,EAAWxyE,UAAUitE,qBAAuB,SAAUpgE,EAAUE,EAAM6/D,GASpE,YARiB,IAAbA,IACFA,EAAW,GAGb7/D,EAAOqC,KAAKg5C,UAAUr7C,GACtBF,EAAWuC,KAAKg5C,UAAUv7C,GAC1BuC,KAAKu9D,cAAc5/D,EAAM6/D,GACzBx9D,KAAK49D,eAAejgE,EAAOF,GACpBuC,MAGTojE,EAAWxyE,UAAU+6C,QAAU,WAK7B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqjE,MAAM13B,UACX3rC,KAAKqgE,SAAS10B,UACP3rC,MA9FX,CAkGE,IFnHF,SAAU+tC,GAGR,SAASu1B,EAAiBvxE,GACxB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAE1CqrC,EAAM97C,KAAO,mBAKb87C,EAAMk4B,eAAiB,GAKvBl4B,EAAMr4B,iBAAmBqhC,GACzB,IAAIrJ,EAAU/vB,IAAIC,gBAAgB,IAAIH,KAAK,CAACswB,EAAMh4B,iBAAkB,CAClElW,KAAM,qBAGJ5N,EAAO87C,EAAMm4B,oBAajB,OAVAn4B,EAAMj5C,QAAQ0H,sBAAsBkxC,EAASz7C,GAAMme,MAAK,WAEjD29B,EAAMo4B,WACTp4B,EAAMq4B,SAAWr4B,EAAMj5C,QAAQ2/C,uBAAuBxiD,EAAM87C,EAAMk4B,gBAClEl4B,EAAMq4B,SAAS1wD,iBAAmBq4B,EAAMr4B,iBAAiBxiB,KAAK66C,GAE9DA,EAAMs4B,QAAQt4B,EAAMq4B,cAIjBr4B,EAaT,OA9CAlE,EAAUm8B,EAAkBv1B,GAoC5Bu1B,EAAiB1yE,UAAU+6C,QAAU,WAOnC,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE1BA,KAAK0jE,UACP1jE,KAAK0jE,SAASjwE,aAGTuM,MAGFsjE,EA/CT,CAgDE,KGrCE,GAEJ,SAAUv1B,GAGR,SAAS61B,IACP,IAAIv4B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBq3B,EAAmBt2B,cAAe9F,UAAW,CAAC,YAAa,gBAAkBxnC,KAEhIqrC,EAAM97C,KAAO,qBAKb87C,EAAMk4B,eAAiB,CACrBn7D,eAAgB,EAChB8J,gBAAiB,EACjBpJ,aAAc,GAEhB,IAAI/W,EAAUw6C,EAAqBq3B,EAAmBt2B,cAAe9F,UAAW,CAAC,YAAa,cAC9F6D,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAGjB,IAAIyxE,EAAYx4B,EAAMj5C,QAAQyyB,aAmB9B,OAjBAwmB,EAAMhzB,UAAY,IAAI,GAAM,CAC1BjmB,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQsmB,UACfgiC,MAAO,OACPxpC,SAAU,EACVD,SAAU,EACV69B,MAAOo1B,EAAU56D,KACjBu2C,WAAW,IAEbnU,EAAMy3B,UAAY,IAAI,GAAM,CAC1B1wE,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQ+wE,UACfzoB,MAAO,cACP5L,MAAOo1B,EAAU56D,KACjBu2C,WAAW,IAEbrL,GAAS9I,EAAO,CAAC,YAAa,cACvBA,EA6CT,OAvFAlE,EAAUy8B,EAAoB71B,GA6C9B61B,EAAmBhzE,UAAU4yE,kBAAoB,WAC/C,MAAO,wBAGTI,EAAmBhzE,UAAUyiB,cAAgB,WAC3C,MAEE,+BAAkCrT,KAAKwjE,oBAAsB,snEAQjEI,EAAmBt2B,YAAc,WAC/B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDj1B,UAAW,GACXyqD,UAAW,MAIfc,EAAmBhzE,UAAU+yE,QAAU,SAAUzhB,GAC/CU,GAAc5iD,KAAKuE,MAAO29C,EAAMliD,KAAKsE,QAErC,IAAI+T,EAAY6pC,EAAKh8C,WAAWrW,IAAI,aACpCmQ,KAAKqY,UAAUqpC,SAASrpC,GAExB,IAAI3R,EAAWw7C,EAAKh8C,WAAWrW,IAAI,YACnCmQ,KAAK8iE,UAAUphB,SAASh7C,IAG1Bk9D,EAAmBhzE,UAAU+6C,QAAU,WAOrC,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UACX3rC,KAAKsE,OAAOqnC,UACZ3rC,KAAKqY,UAAUszB,UACf3rC,KAAK8iE,UAAUn3B,UACR3rC,MAGF4jE,EAxFT,CAyFE,IC7FE,GAEJ,SAAU71B,GAGR,SAAS+1B,IACP,IAAIz4B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBu3B,EAAcx2B,cAAe9F,UAAW,CAAC,YAAa,WAAaxnC,KAEtHqrC,EAAM97C,KAAO,gBACb,IAAIwC,EAAUw6C,EAAqBu3B,EAAcx2B,cAAe9F,UAAW,CAAC,YAAa,SAYzF,OAXA6D,EAAM92B,WAAaxiB,EAAQmiB,UAC3Bm3B,EAAMV,MAAQ54C,EAAQoL,KACtBkuC,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAGjBi5C,EAAM04B,gBAEC14B,EAiHT,OAnIAlE,EAAU28B,EAAe/1B,GAqBzB+1B,EAAcx2B,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDp5B,UAAW,IACX/W,KAAM,aAQV2mE,EAAclzE,UAAUmzE,cAAgB,WACtC,IAAI14B,EAAQrrC,KAERgkE,EAAYhkE,KAAKikE,QACjBtoB,EAAO37C,KAAKm6C,YAAYn6C,KAAKuU,YAC7BrkB,EAAI,GAAK,EAAI8N,KAAK+nB,GAAK41B,GAE3B,GAAmB,YAAf37C,KAAK2qC,MAAqB,CAC5B,IAAIu5B,EAAK,GAAKh0E,EAAI8P,KAAK5N,QAAQmV,YAC3BopD,EAAKuT,EAAK,EACdlkE,KAAKikE,QAAUjkE,KAAK5N,QAAQ+rB,gBAAgB,CAAC+lD,EAAI,GAAI,CAAC,EAAGvT,QACpD,CACDA,EAAK,GAAKzgE,EAAI8P,KAAK5N,QAAQmV,YAAc,EAC7CvH,KAAKikE,QAAUjkE,KAAK5N,QAAQ+rB,gBAAgB,CAAC,GAAI,GAAI,CAAC,EAAGwyC,IAG3D3wD,KAAKuE,MAAM45B,MAAMn+B,KAAKikE,QAASjkE,KAAKsE,QAEhC0/D,GAEFhkE,KAAK5N,QAAQua,YAAW,WACjB0+B,EAAMo4B,WACTp4B,EAAM9mC,MAAM9Q,WAAWuwE,GAEvBA,EAAUvwE,gBAEXuM,KAAK+3D,YAIZroE,OAAOC,eAAem0E,EAAclzE,UAAW,YAAa,CAI1Df,IAAK,WACH,OAAOmQ,KAAKuU,YAEdpY,IAAK,SAAUgoE,GACbnkE,KAAKuU,WAAa4vD,EAElBnkE,KAAK+jE,iBAEPn0E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAem0E,EAAclzE,UAAW,OAAQ,CAIrDf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUjM,GACb8P,KAAK2qC,MAAQz6C,EAEb8P,KAAK+jE,iBAEPn0E,YAAY,EACZ4sB,cAAc,IAShBsnD,EAAclzE,UAAUkkB,qBAAuB,SAAUgsB,QAC3C,IAARA,IACFA,EAAM,KAKR,IAFA,IAAIsgC,EAAa,IAAItgE,aAAaggC,GAEzB9xC,EAAI,EAAGA,EAAI8xC,EAAK9xC,IAAK,CAC5B,IACI2sD,EAAc,MADP39C,KAAKqB,IAAIrQ,EAAI8xC,EAAK,GACI,GACjCsgC,EAAWpyE,GAAK2sD,EAGlB,IAAI0lB,EAAY,IAAIvgE,aAAaggC,GAC7BwgC,EAAc,IAAIxgE,aAAaggC,GAInC,OAFA9gC,KAAKikE,QAAQnvD,qBAAqBssD,EAAYC,EAAWC,GAElDD,GAGTyC,EAAclzE,UAAU+6C,QAAU,WAQhC,OAPAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UACX3rC,KAAKsE,OAAOqnC,UAEZ3rC,KAAKikE,QAAQxwE,aAENuM,MAGF8jE,EApIT,CAqIE,IC3IE,GAEJ,SAAU/1B,GAGR,SAASq2B,IACP,IAAI/4B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB63B,EAAkB92B,cAAe9F,UAAW,CAAC,YAAa,YAAa,gBAAkBxnC,KAE5IqrC,EAAM97C,KAAO,oBACb,IAAIwC,EAAUw6C,EAAqB63B,EAAkB92B,cAAe9F,UAAW,CAAC,YAAa,YAAa,cAgB1G,OAfA6D,EAAMg5B,YAAch5B,EAAM/mC,OAAS,IAAI,GAAmB,CACxDlS,QAASi5C,EAAMj5C,QACfimB,UAAWtmB,EAAQsmB,UACnByqD,UAAW/wE,EAAQ+wE,YAErBz3B,EAAMhzB,UAAYgzB,EAAMg5B,YAAYhsD,UACpCgzB,EAAMy3B,UAAYz3B,EAAMg5B,YAAYvB,UACpCz3B,EAAMi5B,SAAWj5B,EAAM9mC,MAAQ,IAAI,GAAc,CAC/CnS,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQwyE,UACnBpnE,KAAM,YAGRkuC,EAAMi5B,SAAS9wE,QAAQ63C,EAAMg5B,aAEtBh5B,EAmCT,OAzDAlE,EAAUi9B,EAAmBr2B,GAyB7Bq2B,EAAkB92B,YAAc,WAC9B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDi3B,UAAW,IACXlsD,UAAW,GACXyqD,UAAW,MAIfpzE,OAAOC,eAAey0E,EAAkBxzE,UAAW,YAAa,CAI9Df,IAAK,WACH,OAAOmQ,KAAKskE,SAASpwD,WAEvB/X,IAAK,SAAUgoE,GACbnkE,KAAKskE,SAASpwD,UAAYiwD,GAE5Bv0E,YAAY,EACZ4sB,cAAc,IAGhB4nD,EAAkBxzE,UAAU+6C,QAAU,WAOpC,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqkE,YAAY14B,UAEjB3rC,KAAKskE,SAAS34B,UAEP3rC,MAGFokE,EA1DT,CA2DE,IC7CE,ICRJ,SAAUr2B,GAGR,SAASy2B,IACP,IAAIn5B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBi4B,EAAWl3B,cAAe9F,aAAexnC,KAE5FqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqBi4B,EAAWl3B,cAAe9F,WAkB7D,OAjBA6D,EAAMo5B,OAAS,IAAI,GAAM,CACvBryE,QAASi5C,EAAMj5C,QACf+K,KAAM,SAERkuC,EAAMq5B,YAAc3yE,EAAQ2yE,YAC5Br5B,EAAMs5B,MAAQ,IAAI,GAAkB,CAClCvyE,QAASi5C,EAAMj5C,QACfmyE,UAAWxyE,EAAQwyE,UACnBzB,UAAW/wE,EAAQ+wE,YAErBz3B,EAAMy3B,UAAY/wE,EAAQ+wE,UAC1Bz3B,EAAMhyB,QAAUtnB,EAAQsnB,QAExBgyB,EAAMo5B,OAAOjxE,QAAQ63C,EAAMs5B,OAE3Bt5B,EAAMs5B,MAAMnxE,QAAQ63C,EAAM/mC,QAEnB+mC,EAxBTlE,EAAUq9B,EAAYz2B,GA2BtBy2B,EAAWl3B,YAAc,WACvB,OAAOrB,EAAU,GAAWqB,cAAe,CACzCo3B,YAAa,EACbH,UAAW,IACXzB,UAAW,GACXzpD,QAAS,KAIb3pB,OAAOC,eAAe60E,EAAW5zE,UAAW,YAAa,CAMvDf,IAAK,WACH,OAAOmQ,KAAK2kE,MAAMJ,WAEpBpoE,IAAK,SAAUgoE,GACbnkE,KAAK2kE,MAAMJ,UAAYJ,GAEzBv0E,YAAY,EACZ4sB,cAAc,IAGhBgoD,EAAW5zE,UAAU2sE,cAAgB,SAAUhhB,EAAM5+C,GACnD,IAAIg+C,EAAO37C,KAAKm6C,YAAYoC,GAC5B5+C,EAAOqC,KAAKg5C,UAAUr7C,GACtB,IAAIinE,EAAc,EAAIjpB,EAYtB,OAVA37C,KAAK2kE,MAAMtsD,UAAUtH,eAAe6zD,EAAajnE,GAEjDqC,KAAKykE,OAAO/gE,MAAM/F,GAElBqC,KAAKykE,OAAO1gE,KAAKpG,EAAOinE,EAAc5kE,KAAK0kE,aAE3C1kE,KAAK2kE,MAAM7B,UAAUtxD,sBAAsB7T,GAE3CqC,KAAK2kE,MAAM7B,UAAU/xD,eAAe/Q,KAAK8iE,UAAWnlE,GAE7CqC,MAOTwkE,EAAW5zE,UAAUgtE,eAAiB,SAAUjgE,GAG9C,OAFAqC,KAAK2kE,MAAM7B,UAAU9hB,aAAa,EAAGhhD,KAAKqZ,QAAS1b,GAE5CqC,MAGTwkE,EAAW5zE,UAAU+6C,QAAU,WAO7B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKykE,OAAO94B,UAEZ3rC,KAAK2kE,MAAMh5B,UAEJ3rC,MAxFX,CA4FE,ICtFF,SAAU+tC,GAGR,SAAS82B,IACP,IAAIx5B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBs4B,EAAUv3B,cAAe9F,UAAW,CAAC,QAAS,cAAgBxnC,KAEjHqrC,EAAM97C,KAAO,YAKb87C,EAAMy5B,iBAAmB,GAKzBz5B,EAAM05B,cAAgB,GAKtB15B,EAAM25B,QAAU,GAKhB35B,EAAM45B,YAAc,EAKpB55B,EAAM65B,qBAAuB,EAC7B,IAAInzE,EAAUw6C,EAAqBs4B,EAAUv3B,cAAe9F,UAAW,CAAC,QAAS,YAEjFwB,GAAQc,EAAS/3C,EAAQozE,OAAQ,oEACjC,IAAI34B,EAAWz6C,EAAQozE,MAAM73B,cAC7BjC,EAAMt5C,QAAUrC,OAAO48C,OAAOE,EAAUz6C,EAAQA,SAChDs5C,EAAM85B,MAAQpzE,EAAQozE,MACtB95B,EAAM+5B,aAAerzE,EAAQqzE,aAE7B/5B,EAAMg6B,YAAch6B,EAAMi6B,yBAE1B,IAAI5mE,EAAQ2sC,EAAM25B,QAAQp4B,QAAQvB,EAAMg6B,aAMxC,OAJAh6B,EAAM25B,QAAQ9jE,OAAOxC,EAAO,GAG5B2sC,EAAM45B,WAAa55B,EAAMj5C,QAAQygD,YAAYxH,EAAMk6B,gBAAgB/0E,KAAK66C,GAAQ,GACzEA,EA/CTlE,EAAU09B,EAAW92B,GAkDrB82B,EAAUv3B,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7C83B,aAAc,GACdrzE,QAAS,GACTozE,MAAO,MAIXz1E,OAAOC,eAAek1E,EAAUj0E,UAAW,eAAgB,CAIzDf,IAAK,WACH,OAAOmQ,KAAK+kE,cAAcnmE,QAE5BhP,YAAY,EACZ4sB,cAAc,IAOhBqoD,EAAUj0E,UAAU40E,oBAAsB,SAAUL,GAClDnlE,KAAK8kE,iBAAiBlkE,KAAKukE,GAG3B,IAAIM,EAAmBzlE,KAAK+kE,cAAczkE,WAAU,SAAU0nC,GAC5D,OAAOA,EAAEm9B,QAAUA,KAGrBnlE,KAAK+kE,cAAc7jE,OAAOukE,EAAkB,IAS9CZ,EAAUj0E,UAAU00E,uBAAyB,WAE3C,GAAItlE,KAAK8kE,iBAAiBlmE,OACxB,OAAOoB,KAAK8kE,iBAAiBz4B,QACxB,GAAIrsC,KAAKglE,QAAQpmE,OAASoB,KAAKolE,aAAc,CAElD,IAAID,EAAQ,IAAInlE,KAAKmlE,MAAMz1E,OAAO48C,OAAOtsC,KAAKjO,QAAS,CACrDK,QAAS4N,KAAK5N,QACdwtE,UAAW5/D,KAAKwlE,oBAAoBh1E,KAAKwP,SAM3C,OAJAmlE,EAAM3xE,QAAQwM,KAAKsE,QAEnBtE,KAAKglE,QAAQpkE,KAAKukE,GAEXA,EAEP57B,EAAK,0CAQTs7B,EAAUj0E,UAAU20E,gBAAkB,WAGpC,GAFAvlE,KAAKklE,qBAAuBlnE,KAAKwJ,IAAgC,IAA5BxH,KAAKklE,qBAA6BllE,KAAK0lE,cAExE1lE,KAAK8kE,iBAAiBlmE,QAAUoB,KAAKglE,QAAQpmE,OAASZ,KAAK4B,KAAKI,KAAKklE,qBAAuB,GAAI,CAElG,IAAIS,EAAa3lE,KAAK8kE,iBAAiBz4B,QAEnC3tC,EAAQsB,KAAKglE,QAAQp4B,QAAQ+4B,GAEjC3lE,KAAKglE,QAAQ9jE,OAAOxC,EAAO,GAEtBsB,KAAK5N,QAAQ0Z,WAChB65D,EAAWh6B,YASjBk5B,EAAUj0E,UAAUg1E,eAAiB,SAAUC,EAAOloE,EAAM6/D,GAC1D,IAAInyB,EAAQrrC,KAEZ6lE,EAAMlpE,SAAQ,SAAU4/C,GACtB,IAAIupB,EAAW,IAAI,GAAUz6B,EAAMj5C,QAASmqD,GAAMrC,SAE9CirB,EAAQ95B,EAAMi6B,yBAEdH,IACFA,EAAM5H,cAAchhB,EAAM5+C,EAAM6/D,GAEhCnyB,EAAM05B,cAAcnkE,KAAK,CACvBq3C,KAAM6tB,EACNX,MAAOA,EACPY,UAAU,IAGZ16B,EAAM3B,IAAI,gBAAiB6S,EAAM5+C,QASvCknE,EAAUj0E,UAAUo1E,gBAAkB,SAAUH,EAAOloE,GACrD,IAAI0tC,EAAQrrC,KAEZ6lE,EAAMlpE,SAAQ,SAAU4/C,GACtB,IAAIupB,EAAW,IAAI,GAAUz6B,EAAMj5C,QAASmqD,GAAMrC,SAE9Cn3C,EAAQsoC,EAAM05B,cAActT,MAAK,SAAUvlB,GAC7C,IAAI+L,EAAO/L,EAAG+L,KACV8tB,EAAW75B,EAAG65B,SAClB,OAAO9tB,IAAS6tB,IAAaC,KAG3BhjE,IAEFA,EAAMoiE,MAAMvH,eAAejgE,GAE3BoF,EAAMgjE,UAAW,EAEjB16B,EAAM3B,IAAI,iBAAkB6S,EAAM5+C,QAUxCknE,EAAUj0E,UAAUq1E,eAAiB,SAAU9oE,EAAM0oE,EAAOloE,EAAM6/D,GAChE,IAAInyB,EAAQrrC,KAEZgpC,GAAQhpC,KAAKyjE,SAAU,8BAEnB9lE,GAAQqC,KAAKqyC,MAEF,WAATl1C,EACF6C,KAAK4lE,eAAeC,EAAOloE,EAAM6/D,GAEjCx9D,KAAKgmE,gBAAgBH,EAAOloE,GAI9BqC,KAAK5N,QAAQua,YAAW,WACtB0+B,EAAM46B,eAAe9oE,EAAM0oE,EAAOloE,EAAM6/D,KACvC7/D,EAAOqC,KAAKqyC,QAenBwyB,EAAUj0E,UAAU2sE,cAAgB,SAAUsI,EAAOloE,EAAM6/D,GACpDpsD,MAAMgrB,QAAQypC,KACjBA,EAAQ,CAACA,IAGX,IAAI5lB,EAAejgD,KAAKg5C,UAAUr7C,GAIlC,OAFAqC,KAAKimE,eAAe,SAAUJ,EAAO5lB,EAAcud,GAE5Cx9D,MAiBT6kE,EAAUj0E,UAAUgtE,eAAiB,SAAUiI,EAAOloE,GAC/CyT,MAAMgrB,QAAQypC,KACjBA,EAAQ,CAACA,IAGX,IAAI5lB,EAAejgD,KAAKg5C,UAAUr7C,GAIlC,OAFAqC,KAAKimE,eAAe,UAAWJ,EAAO5lB,GAE/BjgD,MAeT6kE,EAAUj0E,UAAUitE,qBAAuB,SAAUgI,EAAOpoE,EAAUE,EAAM6/D,GAC1E,IAAIvd,EAAejgD,KAAKg5C,UAAUr7C,GAGlC,GAFAqC,KAAKu9D,cAAcsI,EAAO5lB,EAAcud,GAEpCphC,EAAQ3+B,GAAW,CACrBurC,EAAO5M,EAAQypC,GAAQ,gEACvBA,EAAQA,EAER,IAAK,IAAI72E,EAAI,EAAGA,EAAI62E,EAAMjnE,OAAQ5P,IAAK,CACrC,IAAIM,EAAImO,EAASO,KAAKyJ,IAAIzY,EAAGyO,EAASmB,OAAS,IAE/CoqC,GADIk9B,EAAkBlmE,KAAKg5C,UAAU1pD,IACZ,EAAG,uCAC5B0Q,KAAK49D,eAAeiI,EAAM72E,GAAIixD,EAAeimB,QAE1C,CACL,IAAIA,EACJl9B,GADIk9B,EAAkBlmE,KAAKg5C,UAAUv7C,IACZ,EAAG,uCAC5BuC,KAAK49D,eAAeiI,EAAO5lB,EAAeimB,GAG5C,OAAOlmE,MAGT6kE,EAAUj0E,UAAU0+D,KAAO,WAKzB,OAJAtvD,KAAKu/D,YAAY,gBAAiB,GAElCv/D,KAAKu/D,YAAY,iBAAkB,GAE5Bv/D,MAgBT6kE,EAAUj0E,UAAUuL,IAAM,SAAUpK,GAElC,IAAIygB,EAAmBw6B,EAAej7C,EAAS,CAAC,YAAa,YAU7D,OARAiO,KAAKjO,QAAUk6C,EAAUjsC,KAAKjO,QAASygB,GAEvCxS,KAAKglE,QAAQroE,SAAQ,SAAUwoE,GAC7B,OAAOA,EAAMhpE,IAAIqW,MAGnBxS,KAAKqlE,YAAYlpE,IAAIqW,GAEdxS,MAGT6kE,EAAUj0E,UAAUf,IAAM,WACxB,OAAOmQ,KAAKqlE,YAAYx1E,OAQ1Bg1E,EAAUj0E,UAAUu1E,WAAa,WAC/B,IAAI9zB,EAAMryC,KAAKqyC,MAQf,OANAryC,KAAK+kE,cAAcpoE,SAAQ,SAAUuvC,GACvBA,EAAGi5B,MACTvH,eAAevrB,MAGvBryC,KAAK+kE,cAAgB,GACd/kE,MAGT6kE,EAAUj0E,UAAU+6C,QAAU,WAY5B,OAXAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqlE,YAAY15B,UAEjB3rC,KAAKglE,QAAQroE,SAAQ,SAAU+rC,GAC7B,OAAOA,EAAEiD,aAGX3rC,KAAK+kE,cAAgB,GACrB/kE,KAAK8kE,iBAAmB,GACxB9kE,KAAK5N,QAAQwgD,cAAc5yC,KAAKilE,YACzBjlE,MA3WX,CA+WE,ICrWF,SAAU+tC,GAGR,SAASq4B,IACP,IAAI/6B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB65B,EAAQ94B,cAAe9F,UAAW,CAAC,OAAQ,SAAU,WAAY,UAAYxnC,KAEhIqrC,EAAM97C,KAAO,UAKb87C,EAAMuuB,eAAiB,IAAI/lE,IAC3B,IAAI9B,EAAUw6C,EAAqB65B,EAAQ94B,cAAe9F,UAAW,CAAC,OAAQ,SAAU,WAAY,QAChG6+B,EAAS,GA6Bb,OA5BA32E,OAAO8W,KAAKzU,EAAQ+7D,MAAMnxD,SAAQ,SAAU4/C,GAC1C,IAAIG,EAAa9B,SAAS2B,EAAM,IAGhC,GAFAvT,EAAOkB,EAAOqS,IAASzS,EAAS4S,IAAewD,SAASxD,GAAa,4CAA8CH,GAE/GrS,EAAOqS,GAAO,CAEhB,IAAI+pB,EAAM,IAAI,GAAej7B,EAAMj5C,QAASmqD,GAAMrC,SAClDmsB,EAAOC,GAAOv0E,EAAQ+7D,KAAKvR,QAClBzS,EAAS4S,IAAewD,SAASxD,KAE1C2pB,EAAO3pB,GAAc3qD,EAAQ+7D,KAAKpR,OAGtCrR,EAAMuiB,SAAW,IAAI,GAAiB,CACpCE,KAAMuY,EACNvqD,OAAQ/pB,EAAQ+pB,OAChBu6B,QAAStkD,EAAQskD,QACjBj7B,QAASrpB,EAAQqpB,UAEnBiwB,EAAMnyB,OAASnnB,EAAQmnB,OACvBmyB,EAAMhyB,QAAUtnB,EAAQsnB,QACxBgyB,EAAMvjC,MAAQ/V,EAAQ+V,MAElBujC,EAAMuiB,SAASlZ,QAEjB7pC,QAAQC,UAAU4C,KAAK3b,EAAQ+pB,QAG1BuvB,EAzCTlE,EAAUi/B,EAASr4B,GA4CnBq4B,EAAQ94B,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAWgB,cAAe,CAC7Cp0B,OAAQ,EACRm9B,QAAS,GACTvuC,MAAO,cACPgU,OAAQu4B,GACRj5B,QAASi5B,GACTh7B,QAAS,GACTy0C,KAAM,MAQVsY,EAAQx1E,UAAU21E,aAAe,SAAUtuB,GAKzC,IAHA,IACIvM,EAAW,EAERA,EAHY,IAGa,CAE9B,GAAI1rC,KAAK4tD,SAASlxD,IAAIu7C,EAAOvM,GAC3B,OAAQA,EACH,GAAI1rC,KAAK4tD,SAASlxD,IAAIu7C,EAAOvM,GAClC,OAAOA,EAGTA,IAGF,MAAM,IAAIv4C,MAAM,kCAAoC8kD,IAStDmuB,EAAQx1E,UAAU2sE,cAAgB,SAAUsI,EAAOloE,EAAM6/D,GACvD,IAAInyB,EAAQrrC,KAoDZ,YAlDiB,IAAbw9D,IACFA,EAAW,GAGbx9D,KAAK0pC,IAAI,gBAAiBm8B,EAAOloE,EAAM6/D,GAElCpsD,MAAMgrB,QAAQypC,KACjBA,EAAQ,CAACA,IAGXA,EAAMlpE,SAAQ,SAAU4/C,GACtB,IAAItE,EAAO,IAAI,GAAe5M,EAAMj5C,QAASmqD,GAAMrC,SAE/CssB,EAAan7B,EAAMk7B,aAAatuB,GAEhCwuB,EAAcxuB,EAAOuuB,EAErBzqE,EAASsvC,EAAMuiB,SAAS/9D,IAAI42E,GAE5B96D,EAAeisC,GAAyB4uB,GAExChsD,EAAS,IAAI,GAAiB,CAChCQ,IAAKjf,EACL3J,QAASi5C,EAAMj5C,QACf0V,MAAOujC,EAAMvjC,MACb47C,OAAQrY,EAAMnyB,OACd0qC,QAASvY,EAAMhyB,QACf1N,aAAcA,IACbnY,QAAQ63C,EAAM/mC,QACjBkW,EAAO9W,MAAM/F,EAAM,EAAG5B,EAAO0B,SAAWkO,EAAc6xD,GAEjDphC,EAAQiP,EAAMuuB,eAAe/pE,IAAIooD,KACpC5M,EAAMuuB,eAAez9D,IAAI87C,EAAM,IAGjC5M,EAAMuuB,eAAe/pE,IAAIooD,GAAMr3C,KAAK4Z,GAGpCA,EAAOhO,QAAU,WACf,GAAI6+B,EAAMuuB,gBAAkBvuB,EAAMuuB,eAAel9D,IAAIu7C,GAAO,CAC1D,IAAI7L,EAAUf,EAAMuuB,eAAe/pE,IAAIooD,GAEnCv5C,EAAQ0tC,EAAQQ,QAAQpyB,IAEb,IAAX9b,GACF0tC,EAAQlrC,OAAOxC,EAAO,QAKvBsB,MAQTomE,EAAQx1E,UAAUgtE,eAAiB,SAAUiI,EAAOloE,GAClD,IAAI0tC,EAAQrrC,KAsBZ,OApBAA,KAAK0pC,IAAI,iBAAkBm8B,EAAOloE,GAE7ByT,MAAMgrB,QAAQypC,KACjBA,EAAQ,CAACA,IAGXA,EAAMlpE,SAAQ,SAAU4/C,GACtB,IAAItE,EAAO,IAAI,GAAe5M,EAAMj5C,QAASmqD,GAAMrC,SAEnD,GAAI7O,EAAMuuB,eAAel9D,IAAIu7C,IAAS5M,EAAMuuB,eAAe/pE,IAAIooD,GAAMr5C,OAAQ,CAC3E,IAAIwtC,EAAUf,EAAMuuB,eAAe/pE,IAAIooD,GAEvCt6C,EAAO0tC,EAAM2N,UAAUr7C,GACvByuC,EAAQzvC,SAAQ,SAAU6d,GACxBA,EAAOzW,KAAKpG,MAGd0tC,EAAMuuB,eAAez9D,IAAI87C,EAAM,QAG5Bj4C,MAQTomE,EAAQx1E,UAAUu1E,WAAa,SAAUxoE,GACvC,IAAIsiD,EAAejgD,KAAKg5C,UAAUr7C,GASlC,OAPAqC,KAAK45D,eAAej9D,SAAQ,SAAUyvC,GACpC,KAAOA,EAAQxtC,QAAQ,CACRwtC,EAAQC,QACdtoC,KAAKk8C,OAITjgD,MAGTomE,EAAQx1E,UAAU0+D,KAAO,WAKvB,OAJAtvD,KAAKu/D,YAAY,gBAAiB,GAElCv/D,KAAKu/D,YAAY,iBAAkB,GAE5Bv/D,MAWTomE,EAAQx1E,UAAUitE,qBAAuB,SAAUgI,EAAOpoE,EAAUE,EAAM6/D,GACxE,IAAInyB,EAAQrrC,UAEK,IAAbw9D,IACFA,EAAW,GAGb,IAAIvd,EAAejgD,KAAKg5C,UAAUr7C,GAclC,OAbAqC,KAAKu9D,cAAcsI,EAAO5lB,EAAcud,GAEpCphC,EAAQ3+B,IACVurC,EAAO5M,EAAQypC,GAAQ,iDACvBA,EAAMlpE,SAAQ,SAAU4/C,EAAM79C,GAC5B,IAAIpP,EAAImO,EAASO,KAAKyJ,IAAI/I,EAAOjB,EAASmB,OAAS,IAEnDysC,EAAMuyB,eAAerhB,EAAM0D,EAAe5U,EAAM2N,UAAU1pD,QAG5D0Q,KAAK49D,eAAeiI,EAAO5lB,EAAejgD,KAAKg5C,UAAUv7C,IAGpDuC,MAUTomE,EAAQx1E,UAAU4L,IAAM,SAAU+/C,EAAMvhC,EAAK1U,GAG3C,GAFA0iC,EAAOkB,EAAOqS,IAAS2D,SAAS3D,GAAO,iCAAmCA,GAEtErS,EAAOqS,GAAO,CAEhB,IAAI+pB,EAAM,IAAI,GAAetmE,KAAK5N,QAASmqD,GAAMrC,SAEjDl6C,KAAK4tD,SAASpxD,IAAI8pE,EAAKtrD,EAAK1U,QAG5BtG,KAAK4tD,SAASpxD,IAAI+/C,EAAMvhC,EAAK1U,GAG/B,OAAOtG,MAGTtQ,OAAOC,eAAey2E,EAAQx1E,UAAW,SAAU,CAIjDf,IAAK,WACH,OAAOmQ,KAAK4tD,SAASlZ,QAEvB9kD,YAAY,EACZ4sB,cAAc,IAMhB4pD,EAAQx1E,UAAU+6C,QAAU,WAa1B,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK4tD,SAASjiB,UAEd3rC,KAAK45D,eAAej9D,SAAQ,SAAUyvC,GACpCA,EAAQzvC,SAAQ,SAAU6d,GACxB,OAAOA,EAAOmxB,gBAIlB3rC,KAAK45D,eAAel3C,QAEb1iB,MAGTqnC,EAAW,CAACqyB,GAAU,IAAK0M,EAAQx1E,UAAW,cAAU,GAExDy2C,EAAW,CAACqyB,GAAU,IAAK0M,EAAQx1E,UAAW,eAAW,GA9R3D,CAiSE,IHvSF,SAAUm9C,GAGR,SAAS24B,IACP,IAAIr7B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBm6B,EAAUp5B,cAAe9F,UAAW,CAAC,WAAY,YAAcxnC,KAElHqrC,EAAM97C,KAAO,YAKb87C,EAAM/9B,OAAS,IAAI,GAAc,WAKjC+9B,EAAMs7B,aAAe,EACrB,IAAI50E,EAAUw6C,EAAqBm6B,EAAUp5B,cAAe9F,UAAW,CAAC,WAAY,UAepF,OAdA6D,EAAMqc,MAAQ31D,EAAQyZ,KACtB6/B,EAAM/kC,SAAWvU,EAAQuU,SACzB+kC,EAAMp7C,MAAQ8B,EAAQ9B,MACtBo7C,EAAMuf,WAAavf,EAAM2O,QAAQjoD,EAAQ2Z,WACzC2/B,EAAMwf,SAAWxf,EAAM2O,QAAQjoD,EAAQ0Z,SACvC4/B,EAAMh/B,cAAgBta,EAAQ4Z,aAC9B0/B,EAAMu7B,aAAe70E,EAAQ80E,YAC7Bx7B,EAAMy7B,UAAY/0E,EAAQg1E,SAC1B17B,EAAMoiB,KAAO17D,EAAQ07D,KACrBpiB,EAAMh/B,cAAgBta,EAAQ4Z,aAC9B0/B,EAAM/9B,OAAO6gC,YAAa,EAE1B9C,EAAM27B,oBAEC37B,EA0VT,OAzXAlE,EAAUu/B,EAAW34B,GAkCrB24B,EAAUp5B,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAgBgB,cAAe,CAClDhnC,SAAU+tC,GACV0yB,UAAU,EACVv7D,MAAM,EACNC,QAAS,KACTC,UAAW,EACX+hD,MAAM,EACN9hD,aAAc,EACdk7D,YAAa,EACb52E,MAAO,QAUXy2E,EAAU91E,UAAUo2E,kBAAoB,SAAUl4B,GAChD,IAAIzD,EAAQrrC,UAEE,IAAV8uC,IACFA,GAAS,GAIX9uC,KAAKsN,OAAOsiC,YAAYd,GAAO,SAAU/rC,GACvC,IAAItF,EAEJ,GAAoB,YAAhBsF,EAAMwK,MAAqB,EACX,IAAdxK,EAAM+jB,IACRukB,EAAMj5C,QAAQsmD,UAAUh2B,MAAM3f,EAAM+jB,IAGtC,IAAImgD,EAAYlkE,EAAMpF,KAAOK,KAAK0J,MAAM2jC,EAAMmkB,YAAcnkB,EAAMh/B,eAElE,IAAoB,IAAhBg/B,EAAMqc,OAAkB5d,EAASuB,EAAMqc,QAAUrc,EAAMqc,MAAQ,EAAG,CACpEjqD,EAAW4rC,IAEPS,EAASuB,EAAMqc,SACjBjqD,EAAW4tC,EAAMqc,MAAQrc,EAAM67B,oBAGjC,IAAI73B,EAAYhE,EAAM/9B,OAAOqhC,SAASs4B,GAEpB,OAAd53B,IACF5xC,EAAWO,KAAKyJ,IAAIhK,EAAU4xC,EAAU1xC,KAAOspE,IAG7CxpE,IAAa4rC,MAEfgC,EAAM/9B,OAAOwxC,eAAe,UAAWmoB,EAAYxpE,EAAW,EAAG,CAC/DqpB,IAAK,IAGPrpB,EAAW,IAAI,GAAW4tC,EAAMj5C,QAASqL,IAG3C,IAAIiuC,EAAW,IAAI,GAAWL,EAAMj5C,QAASi5C,EAAM67B,oBACnDnkE,EAAM+jB,GAAKukB,EAAMj5C,QAAQsmD,UAAUsT,eAAe3gB,EAAMmvB,MAAMhqE,KAAK66C,GAAQK,EAAU,IAAI,GAAWL,EAAMj5C,QAAS60E,GAAYxpE,QAE/HsF,EAAM+jB,GAAKukB,EAAMj5C,QAAQsmD,UAAUoT,SAASzgB,EAAMmvB,MAAMhqE,KAAK66C,GAAQ,IAAI,GAAWA,EAAMj5C,QAAS60E,SAM3Gv3E,OAAOC,eAAe+2E,EAAU91E,UAAW,QAAS,CAIlDf,IAAK,WACH,OAAOmQ,KAAKsN,OAAOyxC,eAAe/+C,KAAK5N,QAAQsmD,UAAUqD,QAE3DnsD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,cAAe,CAIxDf,IAAK,WACH,OAAOmQ,KAAK2mE,cAEdxqE,IAAK,SAAUyH,GACb5D,KAAK2mE,aAAe/iE,GAEtBhU,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,cAAe,CAIxDf,IAAK,WACH,OAAOmQ,KAAK4mE,cAEdzqE,IAAK,SAAUgrE,GACbnnE,KAAK4mE,aAAeO,GAEtBv3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,WAAY,CASrDf,IAAK,WACH,OAAOmQ,KAAK8mE,WAEd3qE,IAAK,SAAUirE,GACbpnE,KAAK8mE,UAAYM,GAEnBx3E,YAAY,EACZ4sB,cAAc,IAOhBkqD,EAAU91E,UAAU8S,MAAQ,SAAU/F,GACpC,IAAIo+C,EAAQ/7C,KAAKg6C,QAAQr8C,GAYzB,MAV0C,YAAtCqC,KAAKsN,OAAOyxC,eAAehD,KAC7B/7C,KAAKsN,OAAO9Q,IAAI,CACdsqB,IAAK,EACLvZ,MAAO,UACP5P,KAAMo+C,IAGR/7C,KAAKgnE,kBAAkBjrB,IAGlB/7C,MAQT0mE,EAAU91E,UAAUmT,KAAO,SAAUpG,GACnCqC,KAAK6uC,OAAOlxC,GACZ,IAAIo+C,EAAQ/7C,KAAKg6C,QAAQr8C,GAEzB,GAA0C,YAAtCqC,KAAKsN,OAAOyxC,eAAehD,GAAsB,CACnD/7C,KAAKsN,OAAOwxC,eAAe,UAAW/C,EAAO,CAC3Cj1B,IAAK,IAGP,IAAIkoB,EAAgBhvC,KAAKsN,OAAOshC,UAAUmN,GAEtCsrB,EAAgBtrB,EAEE,OAAlB/M,IACFq4B,EAAgBr4B,EAAcrxC,MAGhCqC,KAAKgnE,kBAAkBK,GAGzB,OAAOrnE,MAQT0mE,EAAU91E,UAAUi+C,OAAS,SAAUlxC,GACrC,IAAI0tC,EAAQrrC,KAEZrC,EAAOkvC,EAAWlvC,GAAO0rC,KACzB,IAAI0S,EAAQ/7C,KAAKg6C,QAAQr8C,GAQzB,OANAqC,KAAKsN,OAAOsiC,YAAYmM,GAAO,SAAUh5C,GACvCsoC,EAAMj5C,QAAQsmD,UAAUh2B,MAAM3f,EAAM+jB,OAGtC9mB,KAAKsN,OAAOuhC,OAAOkN,GAEZ/7C,MAST0mE,EAAU91E,UAAU4pE,MAAQ,SAAU78D,GACpC,IAAIo+C,EAAQ/7C,KAAK5N,QAAQsmD,UAAUgN,eAAe/nD,GAElD,IAAKqC,KAAKytD,MAA8C,YAAtCztD,KAAKsN,OAAOyxC,eAAehD,GAAsB,CACjE,GAAI/7C,KAAK6mE,YAAc,GAAK7oE,KAAKmyD,SAAWnwD,KAAK6mE,YAC/C,OAGF,GAAI7mE,KAAK+mE,SAAU,CACjB,IAAIK,EAAY,IAEXp9B,EAAUhqC,KAAK+mE,YAClBK,EAAYpnE,KAAKg5C,UAAUh5C,KAAK+mE,WAGlCppE,IAAyB,EAAhBK,KAAKmyD,SAAe,GAAKiX,EAGpCpnE,KAAKsG,SAAS3I,EAAMqC,KAAK/P,SAQ7By2E,EAAU91E,UAAUs2E,iBAAmB,WACrC,OAAOlpE,KAAK0J,OAAO1H,KAAK6qD,SAAW7qD,KAAK4qD,YAAc5qD,KAAKqM,gBAG7D3c,OAAOC,eAAe+2E,EAAU91E,UAAW,OAAQ,CAWjDf,IAAK,WACH,OAAOmQ,KAAK0nD,OAEdvrD,IAAK,SAAUqP,GACbxL,KAAK0nD,MAAQl8C,EAEbxL,KAAKgnE,qBAEPp3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,eAAgB,CASzDf,IAAK,WACH,OAAOmQ,KAAKqM,eAEdlQ,IAAK,SAAU+zD,GACblwD,KAAKqM,cAAgB6jD,EAErBlwD,KAAKgnE,qBAEPp3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,UAAW,CAKpDf,IAAK,WACH,OAAO,IAAI,GAAWmQ,KAAK5N,QAAS4N,KAAK6qD,UAAU7R,aAErD78C,IAAK,SAAUsP,GACbzL,KAAK6qD,SAAW7qD,KAAKg6C,QAAQvuC,GAEzBzL,KAAK0nD,OACP1nD,KAAKgnE,qBAGTp3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,YAAa,CAItDf,IAAK,WACH,OAAO,IAAI,GAAWmQ,KAAK5N,QAAS4N,KAAK4qD,YAAY5R,aAEvD78C,IAAK,SAAUuP,GACb1L,KAAK4qD,WAAa5qD,KAAKg6C,QAAQtuC,GAE3B1L,KAAK0nD,OACP1nD,KAAKgnE,qBAGTp3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+2E,EAAU91E,UAAW,WAAY,CAMrDf,IAAK,WACH,GAAImQ,KAAK0nD,MAAO,CACd,IAAI3L,EAAQ/7C,KAAK5N,QAAQsmD,UAAUqD,MAE/BurB,EAAYtnE,KAAKsN,OAAOzd,IAAIksD,GAEhC,GAAkB,OAAdurB,GAA0C,YAApBA,EAAU/5D,MAAqB,CACvD,IAAIuiD,EAAe9vD,KAAKknE,mBAGxB,OADgBnrB,EAAQurB,EAAU3pE,MAAQmyD,EACxBA,EAElB,OAAO,EAGT,OAAO,GAGXlgE,YAAY,EACZ4sB,cAAc,IAGhBkqD,EAAU91E,UAAU+6C,QAAU,WAO5B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK6uC,SAEL7uC,KAAKsN,OAAOq+B,UAEL3rC,MAGF0mE,EA1XT,CA2XE,KIrYE,GAEJ,SAAU34B,GAGR,SAASw5B,IACP,IAAIl8B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBg7B,EAAKj6B,cAAe9F,UAAW,CAAC,WAAY,eAAiBxnC,KAEhHqrC,EAAM97C,KAAO,OACb,IAAIwC,EAAUw6C,EAAqBg7B,EAAKj6B,cAAe9F,UAAW,CAAC,WAAY,aAY/E,OAXA6D,EAAMm8B,OAAS,IAAI,GAAU,CAC3Bp1E,QAASi5C,EAAMj5C,QACfkU,SAAU+kC,EAAMmvB,MAAMhqE,KAAK66C,GAC3B7/B,MAAM,EACNC,QAAS1Z,EAAQ25C,SACjB//B,aAAc5Z,EAAQ4Z,aACtBk7D,YAAa90E,EAAQ80E,cAEvBx7B,EAAM/kC,SAAWvU,EAAQuU,SAEzB+kC,EAAMo8B,WAAa11E,EAAQ01E,WACpBp8B,EAiLT,OAnMAlE,EAAUogC,EAAMx5B,GAqBhBw5B,EAAKj6B,YAAc,WACjB,OAAO59C,OAAO48C,OAAO,GAAgBgB,cAAe,CAClD5B,SAAU,KACVplC,SAAU+tC,GACV1oC,aAAc,EACd87D,WAAYp+B,IACZw9B,YAAa,EACbpZ,MAAM,EACNsZ,UAAU,KASdQ,EAAK32E,UAAU8S,MAAQ,SAAU/F,GAG/B,OAFAqC,KAAKwnE,OAAO9jE,MAAM/F,GAEXqC,MAQTunE,EAAK32E,UAAUmT,KAAO,SAAUpG,GAG9B,OAFAqC,KAAKwnE,OAAOzjE,KAAKpG,GAEVqC,MAQTunE,EAAK32E,UAAUi+C,OAAS,SAAUlxC,GAGhC,OAFAqC,KAAKwnE,OAAO34B,OAAOlxC,GAEZqC,MAQTunE,EAAK32E,UAAU4pE,MAAQ,SAAU78D,GAC/BqC,KAAKsG,SAAS3I,IAGhBjO,OAAOC,eAAe43E,EAAK32E,UAAW,QAAS,CAI7Cf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAOj6D,OAErB3d,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,WAAY,CAIhDf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAO5b,UAErBh8D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,WAAY,CAOhDf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAO/7D,SAErBtP,IAAK,SAAUuvC,GACb1rC,KAAKwnE,OAAO/7D,QAAUigC,GAExB97C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,eAAgB,CAKpDf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAO77D,cAErBxP,IAAK,SAAU+zD,GACblwD,KAAKwnE,OAAO77D,aAAeukD,GAE7BtgE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,WAAY,CAKhDf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAOT,UAErB5qE,IAAK,SAAUirE,GACbpnE,KAAKwnE,OAAOT,SAAWK,GAEzBx3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,cAAe,CAInDf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAOX,aAErB1qE,IAAK,SAAUgrE,GACbnnE,KAAKwnE,OAAOX,YAAcM,GAE5Bv3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,OAAQ,CAI5Cf,IAAK,WACH,OAAOmQ,KAAKwnE,OAAO/Z,MAErBtxD,IAAK,SAAUsxD,GACbztD,KAAKwnE,OAAO/Z,KAAOA,GAErB79D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe43E,EAAK32E,UAAW,aAAc,CAIlDf,IAAK,WACH,OAAyB,IAArBmQ,KAAKwnE,OAAOh8D,KACP69B,IAEArpC,KAAKwnE,OAAOh8D,MAGvBrP,IAAK,SAAUurE,GAEX1nE,KAAKwnE,OAAOh8D,KADVk8D,IAAUr+B,KAGOq+B,GAGvB93E,YAAY,EACZ4sB,cAAc,IAGhB+qD,EAAK32E,UAAU+6C,QAAU,WAKvB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKwnE,OAAO77B,UAEL3rC,MAGFunE,EApMT,CAqME,IC7LE,GAEJ,SAAUx5B,GAGR,SAAS45B,IACP,IAAIt8B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBo7B,EAAKr6B,cAAe9F,UAAW,CAAC,WAAY,aAAexnC,KAE9GqrC,EAAM97C,KAAO,OAKb87C,EAAM/9B,OAAS,IAAI,GAAc,WAKjC+9B,EAAMkF,QAAU,IAAIloC,IACpB,IAAItW,EAAUw6C,EAAqBo7B,EAAKr6B,cAAe9F,UAAW,CAAC,WAAY,WAW/E,OATA6D,EAAM/9B,OAAO6gC,YAAa,EAE1Bp8C,EAAQ61E,OAAOjrE,SAAQ,SAAUoG,GAC3Bq5B,EAAQr5B,GACVsoC,EAAM7uC,IAAIuG,EAAM,GAAIA,EAAM,IAE1BsoC,EAAM7uC,IAAIuG,MAGPsoC,EA8cT,OAzeAlE,EAAUwgC,EAAM55B,GA8BhB45B,EAAKr6B,YAAc,WACjB,OAAO59C,OAAO48C,OAAO,GAAUgB,cAAe,CAC5Cs6B,OAAQ,MAUZD,EAAK/2E,UAAU8S,MAAQ,SAAU/F,EAAMiG,GACrC,IAAIynC,EAAQrrC,KAER+7C,EAAQ/7C,KAAKg6C,QAAQr8C,GAEzB,GAA0C,YAAtCqC,KAAKsN,OAAOyxC,eAAehD,GAAsB,CACnDn4C,EAASipC,EAAWjpC,EAAQ5D,KAAK0nD,MAAQ1nD,KAAK4qD,WAAa,GAGzDhnD,EADE5D,KAAK0nD,MACE7a,EAAWjpC,EAAQ5D,KAAK4qD,YAExB/d,EAAWjpC,EAAQ,GAG9B,IAAIikE,EAAmB7nE,KAAKg6C,QAAQp2C,GAEpC5D,KAAKsN,OAAO9Q,IAAI,CACdsqB,IAAK,EACLljB,OAAQikE,EACRt6D,MAAO,UACP5P,KAAMo+C,IAGR/7C,KAAKu2D,UAAS,SAAUxzD,GACtBsoC,EAAMy8B,WAAW/kE,EAAOg5C,EAAO8rB,MAInC,OAAO7nE,MAWT2nE,EAAK/2E,UAAUk3E,WAAa,SAAU/kE,EAAOg5C,EAAOn4C,GAClDm4C,GAASn4C,EAEL5D,KAAK0nD,MACH3kD,EAAMysD,aAAexvD,KAAK4qD,YAAc7nD,EAAMysD,YAAcxvD,KAAK6qD,UAC/D9nD,EAAMysD,YAAc5rD,IAEtBm4C,GAAS/7C,KAAKknE,oBAGhBnkE,EAAMW,MAAM,IAAI,GAAW1D,KAAK5N,QAAS2pD,KAChCh5C,EAAMysD,YAAcxvD,KAAK4qD,YAAc7nD,EAAMysD,aAAe5rD,IACrEb,EAAMyI,MAAO,EACbzI,EAAMW,MAAM,IAAI,GAAW1D,KAAK5N,QAAS2pD,KAElCh5C,EAAMysD,aAAe5rD,GAC9Bb,EAAMW,MAAM,IAAI,GAAW1D,KAAK5N,QAAS2pD,KAI7CrsD,OAAOC,eAAeg4E,EAAK/2E,UAAW,cAAe,CACnDf,IAAK,WACH,OAAOmQ,KAAK2mE,cAEdxqE,IAAK,SAAUyH,GACb,IAAIynC,EAAQrrC,KAEZA,KAAK2mE,aAAe/iE,EAEpB5D,KAAKu2D,UAAS,SAAUxzD,GACtBA,EAAMysD,aAAenkB,EAAMs7B,iBAG/B/2E,YAAY,EACZ4sB,cAAc,IAOhBmrD,EAAK/2E,UAAUmT,KAAO,SAAUpG,GAC9B,IAAIo+C,EAAQ/7C,KAAKg6C,QAAQr8C,GAUzB,OARAqC,KAAKsN,OAAOuhC,OAAOkN,GAEnB/7C,KAAKsN,OAAOwxC,eAAe,UAAW/C,GAEtC/7C,KAAKu2D,UAAS,SAAUxzD,GACtBA,EAAMgB,KAAKpG,MAGNqC,MAkBT2nE,EAAK/2E,UAAUm3E,GAAK,SAAUpqE,EAAM1N,GAQlC,IAPA,IAAI+3E,EAAc,IAAI,GAAmBhoE,KAAK5N,QAASuL,GAAMq8C,UACzD2R,EAAW,IAAI,GAAW3rD,KAAK5N,QAAS,GAAG4mD,YAE3C54C,EAAWJ,KAAKuwC,QAAQ/yC,SAExBgjB,EAASpgB,EAASqgC,QAEdjgB,EAAOkgB,MAAM,CACnB,IAAI0O,EAAU5uB,EAAOvwB,MAErB,GAAI+N,KAAK6vC,IAAIm6B,EAAc54B,EAAQogB,aAAe7D,EAKhD,OAJI/hB,EAAU35C,KACZm/C,EAAQn/C,MAAQA,GAGXm/C,EAGT5uB,EAASpgB,EAASqgC,OAIpB,OAAImJ,EAAU35C,IACZ+P,KAAKxD,IAAImB,EAAM1N,GAER+P,KAAK+nE,GAAGpqE,IAER,MAIXgqE,EAAK/2E,UAAU4L,IAAM,SAAUmB,EAAM1N,GAE/B0N,aAAgBjO,QAAU+3C,QAAQ/qC,IAAIiB,EAAM,UAE9CA,GADA1N,EAAQ0N,GACKA,MAGf,IACIoF,EADAg5C,EAAQ/7C,KAAKg6C,QAAQr8C,GA+BzB,OA5BI1N,aAAiB,IACnB8S,EAAQ9S,GACFqW,SAAWtG,KAAKw6D,MAAMhqE,KAAKwP,MAEjC+C,EAAQ,IAAI,GAAU,CACpBuD,SAAUtG,KAAKw6D,MAAMhqE,KAAKwP,MAC1B5N,QAAS4N,KAAK5N,QACdnC,MAAOA,IAKX8S,EAAMysD,YAAczT,EAEpBh5C,EAAM5G,IAAI,CACR4qE,SAAU/mE,KAAK+mE,SACfv7D,KAAMxL,KAAKwL,KACXC,QAASzL,KAAKyL,QACdC,UAAW1L,KAAK0L,UAChBC,aAAc3L,KAAK2L,aACnBk7D,YAAa7mE,KAAK6mE,cAGpB7mE,KAAKuwC,QAAQ/zC,IAAIuG,GAGjB/C,KAAKioE,cAAcllE,GAEZ/C,MAOT2nE,EAAK/2E,UAAUq3E,cAAgB,SAAUllE,GACvC,IAAIsoC,EAAQrrC,KAEZA,KAAKsN,OAAO3Q,SAAQ,SAAU4yD,GACH,YAArBA,EAAWhiD,MACb89B,EAAMy8B,WAAW/kE,EAAOwsD,EAAW5xD,KAAM4xD,EAAW3rD,QAGpDb,EAAMgB,KAAK,IAAI,GAAWsnC,EAAMj5C,QAASm9D,EAAW5xD,WAK1DgqE,EAAK/2E,UAAU49C,OAAS,SAAU7wC,EAAM1N,GACtC,IAAIo7C,EAAQrrC,KAoBZ,OAjBI+pC,EAASpsC,IAASA,EAAK9M,eAAe,UAExC8M,GADA1N,EAAQ0N,GACKA,MAGfA,EAAOqC,KAAKg6C,QAAQr8C,GAEpBqC,KAAKuwC,QAAQ5zC,SAAQ,SAAUoG,GACzBA,EAAMysD,cAAgB7xD,IACpBgsC,EAAQ15C,IAAU25C,EAAU35C,IAAU8S,EAAM9S,QAAUA,KACxDo7C,EAAMkF,QAAQluC,OAAOU,GAErBA,EAAM4oC,cAKL3rC,MAOT2nE,EAAK/2E,UAAU8xB,MAAQ,WAOrB,OANA1iB,KAAKu2D,UAAS,SAAUxzD,GACtB,OAAOA,EAAM4oC,aAGf3rC,KAAKuwC,QAAQ7tB,QAEN1iB,MAQT2nE,EAAK/2E,UAAUi+C,OAAS,SAAUC,GAOhC,OANA9uC,KAAKu2D,UAAS,SAAUxzD,GACtB,OAAOA,EAAM8rC,OAAOC,MAGtB9uC,KAAKsN,OAAOuhC,OAAO7uC,KAAKg6C,QAAQlL,IAEzB9uC,MAOT2nE,EAAK/2E,UAAU2lE,SAAW,SAAUjwD,GAWlC,OAVItG,KAAKuwC,SACPvwC,KAAKuwC,QAAQ5zC,SAAQ,SAAUoG,GACzBA,aAAiB4kE,EACnB5kE,EAAMwzD,SAASjwD,GAEfA,EAASvD,MAKR/C,MAST2nE,EAAK/2E,UAAUs3E,QAAU,SAAUC,EAAMl4E,GACvC+P,KAAKu2D,UAAS,SAAUxzD,GACtBA,EAAMolE,GAAQl4E,MASlB03E,EAAK/2E,UAAU4pE,MAAQ,SAAU78D,EAAM1N,GAChC+P,KAAKytD,MACRztD,KAAKsG,SAAS3I,EAAM1N,IAUxB03E,EAAK/2E,UAAUw3E,mBAAqB,SAAUrlE,GACxC/C,KAAK0nD,QAAU3kD,EAAMysD,YAAcxvD,KAAK4qD,YAAc7nD,EAAMysD,aAAexvD,KAAK6qD,UAClF9nD,EAAM8rC,OAAO,GACY,YAAhB9rC,EAAMwK,OAEfvN,KAAKioE,cAAcllE,IAIvBrT,OAAOC,eAAeg4E,EAAK/2E,UAAW,cAAe,CACnDf,IAAK,WACH,OAAOmQ,KAAK4mE,cAEdzqE,IAAK,SAAUgrE,GACbnnE,KAAK4mE,aAAeO,EAEpBnnE,KAAKkoE,QAAQ,cAAef,IAE9Bv3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg4E,EAAK/2E,UAAW,WAAY,CAChDf,IAAK,WACH,OAAOmQ,KAAK8mE,WAEd3qE,IAAK,SAAUirE,GACbpnE,KAAK8mE,UAAYM,EAEjBpnE,KAAKkoE,QAAQ,WAAYd,IAE3Bx3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg4E,EAAK/2E,UAAW,OAAQ,CAe5Cf,IAAK,WACH,OAAOmQ,KAAK0nD,OAEdvrD,IAAK,SAAUqP,GACb,IAAI6/B,EAAQrrC,KAEZA,KAAK0nD,MAAQl8C,EAEbxL,KAAKu2D,UAAS,SAAUxzD,GACtBA,EAAM2I,UAAY2/B,EAAM3/B,UACxB3I,EAAM0I,QAAU4/B,EAAM5/B,QACtB1I,EAAMyI,KAAOA,EAEb6/B,EAAM+8B,mBAAmBrlE,OAG7BnT,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg4E,EAAK/2E,UAAW,UAAW,CAK/Cf,IAAK,WACH,OAAO,IAAI,GAAWmQ,KAAK5N,QAAS4N,KAAK6qD,UAAU7R,aAErD78C,IAAK,SAAUsP,GACb,IAAI4/B,EAAQrrC,KAEZA,KAAK6qD,SAAW7qD,KAAKg6C,QAAQvuC,GAEzBzL,KAAK0nD,OACP1nD,KAAKu2D,UAAS,SAAUxzD,GACtBA,EAAM0I,QAAUA,EAEhB4/B,EAAM+8B,mBAAmBrlE,OAI/BnT,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg4E,EAAK/2E,UAAW,YAAa,CAKjDf,IAAK,WACH,OAAO,IAAI,GAAWmQ,KAAK5N,QAAS4N,KAAK4qD,YAAY5R,aAEvD78C,IAAK,SAAUuP,GACb,IAAI2/B,EAAQrrC,KAEZA,KAAK4qD,WAAa5qD,KAAKg6C,QAAQtuC,GAE3B1L,KAAK0nD,OACP1nD,KAAKu2D,UAAS,SAAUxzD,GACtBA,EAAM2I,UAAY2/B,EAAM3/B,UAExB2/B,EAAM+8B,mBAAmBrlE,OAI/BnT,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg4E,EAAK/2E,UAAW,eAAgB,CAIpDf,IAAK,WACH,OAAOmQ,KAAKqM,eAEdlQ,IAAK,SAAU+zD,GACblwD,KAAKqM,cAAgB6jD,EAErBlwD,KAAKkoE,QAAQ,eAAgBhY,IAE/BtgE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg4E,EAAK/2E,UAAW,SAAU,CAI9Cf,IAAK,WACH,OAAOmQ,KAAKuwC,QAAQnqC,MAEtBxW,YAAY,EACZ4sB,cAAc,IAGhBmrD,EAAK/2E,UAAU+6C,QAAU,WAIvB,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK0iB,QACE1iB,MAGF2nE,EA1eT,CA2eE,ICngBF,SAASU,GAAa7qE,GACpB,IAAIkB,EACJ,OAAOwpC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQ,EACRwtC,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAM5pC,EAAQlB,EAAOoB,QAGrBF,EAAQ4pE,GAAiB5pE,EAAOlB,GACzB,CAAC,EAENA,EAAOkB,KAN4B,CAAC,EAEpC,GAMJ,KAAK,EAIH,OAHAwtC,EAAGnJ,OAEHrkC,IACO,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAAS6pE,GAAe/qE,GACtB,IAAIkB,EACJ,OAAOwpC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQlB,EAAOoB,OAAS,EACxBstC,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAM5pC,GAAS,GAGfA,EAAQ4pE,GAAiB5pE,EAAOlB,GACzB,CAAC,EAENA,EAAOkB,KANiB,CAAC,EAEzB,GAMJ,KAAK,EAIH,OAHAwtC,EAAGnJ,OAEHrkC,IACO,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAAS8pE,GAAYhrE,EAAQirE,GAC3B,OAAOvgC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAIH,MAAO,CAAC,EAENM,EAAS6/B,EAAIjrE,KAEjB,KAAK,EAGH,OAFA0uC,EAAGnJ,OAEI,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAASulC,GAAiB5pE,EAAOlB,GAC/B,OAAOswC,EAAMpvC,EAAO,EAAGlB,EAAOoB,OAAS,GAOzC,SAAS8pE,GAAqBlrE,EAAQmrE,GACpC,IAAIjqE,EACJ,OAAOwpC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQiqE,EAAc,EAAInrE,EAAOoB,OAAS,EAC1CstC,EAAG5D,MAAQ,EAEb,KAAK,EAKH,OADA5pC,EAAQ4pE,GAAiB5pE,EAAOlB,GACzB,CAAC,EAENA,EAAOkB,IAEX,KAAK,EAiBH,OAhBAwtC,EAAGnJ,OAEC4lC,IACFjqE,GAEalB,EAAOoB,OAAS,IAC3B+pE,GAAc,KAGhBjqE,GAEa,IACXiqE,GAAc,GAIX,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAASC,GAAOprE,GACd,IAAIkB,EAAOmqE,EACX,OAAO3gC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQ,EACRmqE,EAAY,EACZ38B,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAM5pC,EAAQlB,EAAOoB,QAGrBF,EAAQ4pE,GAAiB5pE,EAAOlB,GACzB,CAAC,EAENA,EAAOkB,KAN4B,CAAC,EAEpC,GAMJ,KAAK,EAKH,OAJAwtC,EAAGnJ,OAEH8lC,IACAnqE,GAASmqE,EAAY,EAAI,GAAK,EACvB,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAASC,GAAStrE,GAChB,IAAIkB,EAAOmqE,EACX,OAAO3gC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQlB,EAAOoB,OAAS,EACxBiqE,EAAY,EACZ38B,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAM5pC,GAAS,GAGfA,EAAQ4pE,GAAiB5pE,EAAOlB,GACzB,CAAC,EAENA,EAAOkB,KANiB,CAAC,EAEzB,GAMJ,KAAK,EAKH,OAJAwtC,EAAGnJ,OAEH8lC,IACAnqE,GAASmqE,EAAY,GAAK,EAAI,EACvB,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAASE,GAAUvrE,GACjB,IAAIwrE,EACJ,OAAO9gC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAKH,OADA0gC,EAAchrE,KAAK0B,MAAM1B,KAAKmyD,SAAW3yD,EAAOoB,QACzC,CAAC,EAENpB,EAAOwrE,IAEX,KAAK,EAGH,OAFA98B,EAAGnJ,OAEI,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAASkmC,GAAWzrE,GAClB,IAAI0rE,EAAMl6E,EAAGm6E,EAASzqE,EACtB,OAAOwpC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAGH,IAFA4gC,EAAO,GAEFl6E,EAAI,EAAGA,EAAIwO,EAAOoB,OAAQ5P,IAC7Bk6E,EAAKtoE,KAAK5R,GAGZk9C,EAAG5D,MAAQ,EAEb,KAAK,EACH,OAAM4gC,EAAKtqE,OAAS,GAGpBuqE,EAAUD,EAAKhoE,OAAOlD,KAAK0B,MAAMwpE,EAAKtqE,OAASZ,KAAKmyD,UAAW,GAC/DzxD,EAAQ4pE,GAAiBa,EAAQ,GAAI3rE,GAC9B,CAAC,EAENA,EAAOkB,KAPsB,CAAC,EAE9B,GAOJ,KAAK,EAGH,OAFAwtC,EAAGnJ,OAEI,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAWhB,SAASqmC,GAAW5rE,GAClB,IAAIkB,EACJ,OAAOwpC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EACH5pC,EAAQV,KAAK0B,MAAM1B,KAAKmyD,SAAW3yD,EAAOoB,QAC1CstC,EAAG5D,MAAQ,EAEb,KAAK,EAgBH,OAXc,IAAV5pC,EACFA,IACSA,IAAUlB,EAAOoB,OAAS,GAE1BZ,KAAKmyD,SAAW,GADzBzxD,IAKAA,IAGK,CAAC,EAENlB,EAAOkB,IAEX,KAAK,EAGH,OAFAwtC,EAAGnJ,OAEI,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,OAeT,SAASsmC,GAAiB7rE,EAAQ8rE,EAAS5qE,GAWhD,YARgB,IAAZ4qE,IACFA,EAAU,WAGE,IAAV5qE,IACFA,EAAQ,GAGHwpC,EAAYloC,MAAM,SAAUmsC,GACjC,OAAQA,EAAG7D,OACT,KAAK,EAKH,OAHAU,EAAOxrC,EAAOoB,OAAS,EAAG,iDACrB0qE,GAGH,IAAK,KACH,MAAO,CAAC,EAEN,GAEJ,IAAK,OACH,MAAO,CAAC,EAEN,GAEJ,IAAK,SACH,MAAO,CAAC,EAEN,GAEJ,IAAK,SACH,MAAO,CAAC,EAEN,GAEJ,IAAK,cACH,MAAO,CAAC,EAEN,GAEJ,IAAK,gBACH,MAAO,CAAC,EAEN,IAEJ,IAAK,SACH,MAAO,CAAC,EAEN,IAEJ,IAAK,aACH,MAAO,CAAC,EAEN,IAEJ,IAAK,aACH,MAAO,CAAC,EAEN,IAGN,MAAO,CAAC,EAEN,IAEJ,KAAK,EACH,MAAO,CAAC,EAEN1gC,EAAS4/B,GAAYhrE,EAAQ6qE,MAEjC,KAAK,EACHl8B,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,EAEb,KAAK,EACH,MAAO,CAAC,EAENM,EAAS4/B,GAAYhrE,EAAQ+qE,MAEjC,KAAK,EACHp8B,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,EAEb,KAAK,EACH,MAAO,CAAC,EAENM,EAAS8/B,GAAqBlrE,GAAQ,KAE1C,KAAK,EACH2uC,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,EAEb,KAAK,EACH,MAAO,CAAC,EAENM,EAAS8/B,GAAqBlrE,GAAQ,KAE1C,KAAK,EACH2uC,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,EAEb,KAAK,EACH,MAAO,CAAC,EAENM,EAAS4/B,GAAYhrE,EAAQorE,MAEjC,KAAK,GACHz8B,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,GAEb,KAAK,GACH,MAAO,CAAC,EAENM,EAAS4/B,GAAYhrE,EAAQsrE,MAEjC,KAAK,GACH38B,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,GAEb,KAAK,GACH,MAAO,CAAC,EAENM,EAASmgC,GAAUvrE,KAEvB,KAAK,GACH2uC,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,GAEb,KAAK,GACH,MAAO,CAAC,EAENM,EAAS4/B,GAAYhrE,EAAQyrE,MAEjC,KAAK,GACH98B,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,GAEb,KAAK,GACH,MAAO,CAAC,EAENM,EAASwgC,GAAW5rE,KAExB,KAAK,GACH2uC,EAAGpJ,OAEHoJ,EAAG7D,MAAQ,GAEb,KAAK,GACH,MAAO,CAAC,QCngBhB,SAAUyF,GAGR,SAASw7B,IACP,IAAIl+B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBg9B,EAAQj8B,cAAe9F,UAAW,CAAC,WAAY,SAAU,cAAgBxnC,KAE5HqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBg9B,EAAQj8B,cAAe9F,UAAW,CAAC,WAAY,SAAU,YAK5F,OAJA6D,EAAM/kC,SAAWvU,EAAQuU,SACzB+kC,EAAMm+B,QAAUz3E,EAAQyL,OACxB6tC,EAAMo+B,SAAWJ,GAAiBt3E,EAAQyL,OAAQzL,EAAQu3E,SAC1Dj+B,EAAMV,MAAQ54C,EAAQu3E,QACfj+B,EAXTlE,EAAUoiC,EAASx7B,GAcnBw7B,EAAQj8B,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAKgB,cAAe,CACvCg8B,QAAS,KACT9rE,OAAQ,GACR8I,SAAU+tC,MAQdk1B,EAAQ34E,UAAU4pE,MAAQ,SAAU78D,GAClC,IAAI1N,EAAQ+P,KAAKypE,SAAShpC,OAE1BzgC,KAAK2B,OAAS1R,EAAMA,MACpB+P,KAAKsG,SAAS3I,EAAMqC,KAAK2B,SAG3BjS,OAAOC,eAAe45E,EAAQ34E,UAAW,SAAU,CAIjDf,IAAK,WACH,OAAOmQ,KAAKwpE,SAEdrtE,IAAK,SAAUq2C,GACbxyC,KAAKwpE,QAAUh3B,EAEfxyC,KAAKspE,QAAUtpE,KAAK2qC,OAEtB/6C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe45E,EAAQ34E,UAAW,QAAS,CAIhDf,IAAK,WACH,OAAOmQ,KAAK2B,QAEd/R,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe45E,EAAQ34E,UAAW,UAAW,CAIlDf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUmtE,GACbtpE,KAAK2qC,MAAQ2+B,EACbtpE,KAAKypE,SAAWJ,GAAiBrpE,KAAKwpE,QAASxpE,KAAK2qC,QAEtD/6C,YAAY,EACZ4sB,cAAc,KAvElB,CA0EE,IClEF,SAAUuxB,GAGR,SAAS27B,IACP,IAAIr+B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBm9B,EAASp8B,cAAe9F,UAAW,CAAC,WAAY,SAAU,kBAAoBxnC,KAEjIqrC,EAAM97C,KAAO,WAKb87C,EAAMs+B,MAAQ,IAAI,GAAK,CACrBrjE,SAAU+kC,EAAMu+B,aAAap5E,KAAK66C,GAClCj5C,QAASi5C,EAAMj5C,UAMjBi5C,EAAMkF,QAAU,GAKhBlF,EAAMw+B,aAAe,GACrB,IAAI93E,EAAUw6C,EAAqBm9B,EAASp8B,cAAe9F,UAAW,CAAC,WAAY,SAAU,gBAY7F,OAXA6D,EAAMy+B,aAAez+B,EAAM2O,QAAQjoD,EAAQ+mD,aAC3CzN,EAAMu8B,OAAS71E,EAAQ61E,OAEvBv8B,EAAM7/B,KAAOzZ,EAAQyZ,KACrB6/B,EAAM3/B,UAAY3Z,EAAQ2Z,UAC1B2/B,EAAM5/B,QAAU1Z,EAAQ0Z,QACxB4/B,EAAM1/B,aAAe5Z,EAAQ4Z,aAC7B0/B,EAAMw7B,YAAc90E,EAAQ80E,YAC5Bx7B,EAAM07B,SAAWh1E,EAAQg1E,SACzB17B,EAAMoiB,KAAO17D,EAAQ07D,KACrBpiB,EAAM1/B,aAAe5Z,EAAQ4Z,aACtB0/B,EApCTlE,EAAUuiC,EAAU37B,GAuCpB27B,EAASp8B,YAAc,WACrB,OAAO59C,OAAO48C,OAAOU,EAAe,GAAUM,cAAe,CAAC,UAAW,CACvEs6B,OAAQ,GACRp8D,MAAM,EACNC,QAAS,EACTC,UAAW,EACXotC,YAAa,QAQjB4wB,EAAS94E,UAAUg5E,aAAe,SAAUjsE,EAAM1N,GAClC,OAAVA,GACF+P,KAAKsG,SAAS3I,EAAM1N,IAIxBP,OAAOC,eAAe+5E,EAAS94E,UAAW,SAAU,CAIlDf,IAAK,WACH,OAAOmQ,KAAKuwC,SAEdp0C,IAAK,SAAUpL,GACbiP,KAAK0iB,QACL1iB,KAAK6pE,aAAe94E,EACpBiP,KAAKuwC,QAAUvwC,KAAK+pE,gBAAgB/pE,KAAK6pE,cAEzC7pE,KAAKgqE,kBAEPp6E,YAAY,EACZ4sB,cAAc,IAQhBktD,EAAS94E,UAAU8S,MAAQ,SAAU/F,EAAMiG,GAGzC,OAFA5D,KAAK2pE,MAAMjmE,MAAM/F,EAAMiG,EAAS5D,KAAKiqE,WAAWrmE,GAAUA,GAEnD5D,MAQT0pE,EAAS94E,UAAUmT,KAAO,SAAUpG,GAGlC,OAFAqC,KAAK2pE,MAAM5lE,KAAKpG,GAETqC,MAGTtQ,OAAOC,eAAe+5E,EAAS94E,UAAW,cAAe,CAMvDf,IAAK,WACH,OAAO,IAAI,GAAWmQ,KAAK5N,QAAS4N,KAAK8pE,cAAc9wB,aAEzDppD,YAAY,EACZ4sB,cAAc,IAMhBktD,EAAS94E,UAAUm5E,gBAAkB,SAAUxkE,GAC7C,IAAI8lC,EAAQrrC,KAEZ,OAAO,IAAIw8B,MAAMj3B,EAAO,CACtB1V,IAAK,SAAUiO,EAAQnN,GAErB,OAAOmN,EAAOnN,IAEhBwL,IAAK,SAAU2B,EAAQnN,EAAUV,GAc/B,OAbIg6C,EAASt5C,IAAauvD,SAAStF,SAASjqD,EAAU,MAChDyrC,EAAQnsC,GACV6N,EAAOnN,GAAY06C,EAAM0+B,gBAAgB95E,GAK3C6N,EAAOnN,GAAYV,EAGrBo7C,EAAM2+B,kBAGC,MASbN,EAAS94E,UAAUo5E,eAAiB,WAClChqE,KAAK2pE,MAAMjnD,QAEX1iB,KAAKkqE,oBAAoBlqE,KAAK6pE,aAAc7pE,KAAK8pE,aAAc9pE,KAAKwvD,aAGpExvD,KAAKyL,QAAUzL,KAAKyL,SAOtBi+D,EAAS94E,UAAUs5E,oBAAsB,SAAUC,EAAUrxB,EAAa0W,GACxE,IAAInkB,EAAQrrC,KAEZmqE,EAASxtE,SAAQ,SAAU1M,EAAOyO,GAChC,IAAI0rE,EAAc1rE,EAAQo6C,EAAc0W,EAExC,GAAIpzB,EAAQnsC,GACVo7C,EAAM6+B,oBAAoBj6E,EAAO6oD,EAAc7oD,EAAM2O,OAAQwrE,OACxD,CACL,IAAI9sE,EAAY,IAAI,GAAW+tC,EAAMj5C,QAASg4E,EAAa,KAAKpxB,YAEhE3N,EAAMs+B,MAAMntE,IAAIc,EAAWrN,QAWjCy5E,EAAS94E,UAAUq5E,WAAa,SAAUvrE,GACxC,OAAO,IAAI,GAAWsB,KAAK5N,QAASsM,EAAQsB,KAAK8pE,aAAe9pE,KAAKwvD,aAAaxW,aAOpF0wB,EAAS94E,UAAU8xB,MAAQ,WAGzB,OAFA1iB,KAAK2pE,MAAMjnD,QAEJ1iB,MAGT0pE,EAAS94E,UAAU+6C,QAAU,WAK3B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK2pE,MAAMh+B,UAEJ3rC,MAGTtQ,OAAOC,eAAe+5E,EAAS94E,UAAW,OAAQ,CAIhDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAMn+D,MAEpBrP,IAAK,SAAUlN,GACb+Q,KAAK2pE,MAAMn+D,KAAOvc,GAEpBW,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,YAAa,CAIrDf,IAAK,WACH,OAAOmQ,KAAK4qD,YAEdzuD,IAAK,SAAUuC,GACbsB,KAAK4qD,WAAalsD,EAClBsB,KAAK2pE,MAAMj+D,UAAY1L,KAAKiqE,WAAWvrE,IAEzC9O,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,UAAW,CAInDf,IAAK,WACH,OAAOmQ,KAAK6qD,UAEd1uD,IAAK,SAAUuC,GACbsB,KAAK6qD,SAAWnsD,EAGdsB,KAAK2pE,MAAMl+D,QADC,IAAV/M,EACmBsB,KAAKiqE,WAAWjqE,KAAK6pE,aAAajrE,QAElCoB,KAAKiqE,WAAWvrE,IAGzC9O,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,cAAe,CACvDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAMna,aAEpBrzD,IAAK,SAAUuH,GACb1D,KAAK2pE,MAAMna,YAAc9rD,GAE3B9T,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,eAAgB,CACxDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAMh+D,cAEpBxP,IAAK,SAAU+zD,GACblwD,KAAK2pE,MAAMh+D,aAAeukD,GAE5BtgE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,cAAe,CACvDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAM9C,aAEpB1qE,IAAK,SAAUgrE,GACbnnE,KAAK2pE,MAAM9C,YAAcM,GAE3Bv3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,WAAY,CACpDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAM/d,UAEpBh8D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,WAAY,CACpDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAM5C,UAEpB5qE,IAAK,SAAUirE,GACbpnE,KAAK2pE,MAAM5C,SAAWK,GAExBx3E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+5E,EAAS94E,UAAW,SAAU,CAIlDf,IAAK,WACH,OAAOmQ,KAAK2pE,MAAM/qE,QAEpBhP,YAAY,EACZ4sB,cAAc,IAjTlB,CAoTE,ID9TF,IEmBI,GAEJ,SAAUuxB,GAGR,SAASs8B,IACP,IAAIh/B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB89B,EAAU/8B,cAAe9F,UAAW,CAAC,YAAcxnC,KAEpHqrC,EAAM97C,KAAO,YAKb87C,EAAMi/B,QAAUj/B,EAAMj5C,QAAQ63B,qBAK9BohB,EAAMk/B,OAASl/B,EAAMj5C,QAAQwtC,sBAAsB,GAMnDyL,EAAMm/B,KAAO,IAAI,GAAY,CAC3Bp4E,QAASi5C,EAAMj5C,UAMjBi5C,EAAMrmB,EAAI,IAAI,GAAK,CACjB5yB,QAASi5C,EAAMj5C,QACf6W,KAAM,IAMRoiC,EAAMpmB,EAAI,IAAI,GAAK,CACjB7yB,QAASi5C,EAAMj5C,QACf6W,KAAM,IAMRoiC,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM2W,kBAAoB,CAAC3W,EAAMrmB,EAAGqmB,EAAMpmB,GAC1C,IAAIlzB,EAAUw6C,EAAqB89B,EAAU/8B,cAAe9F,UAAW,CAAC,SA0BxE,OAzBA6D,EAAMo/B,KAAO,IAAI,GAAO,CACtBr4E,QAASi5C,EAAMj5C,QACfioD,MAAO,cACPpqD,MAAO8B,EAAQ04E,OAEjBt2B,GAAS9I,EAAO,QAEhBA,EAAMj5C,QAAQmgD,YAAY,GAAG/+C,QAAQ63C,EAAMi/B,SAE3Cj/B,EAAMi/B,QAAQ92E,QAAQ63C,EAAMk/B,QAK5Bl/B,EAAMi/B,QAAQxhE,aAAe,EAC7BuiC,EAAMi/B,QAAQvhE,iBAAmB,WACjCvV,GAAQ63C,EAAMk/B,OAAQl/B,EAAMrmB,EAAE/b,KAAM,GACpCzV,GAAQ63C,EAAMk/B,OAAQl/B,EAAMpmB,EAAEhc,KAAM,GAEpCoiC,EAAMo/B,KAAKtsC,MAAMkN,EAAMm/B,KAAMn/B,EAAMi/B,QAAQr+C,KAE3Cof,EAAMrmB,EAAExxB,QAAQ63C,EAAM/mC,QAEtB+mC,EAAMpmB,EAAEzxB,QAAQ63C,EAAM/mC,QAEf+mC,EA0BT,OApGAlE,EAAUkjC,EAAWt8B,GA6ErBs8B,EAAU/8B,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDm9B,KAAM,MAIVJ,EAAUz5E,UAAU+6C,QAAU,WAc5B,OAbAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKglB,EAAE2mB,UACP3rC,KAAKilB,EAAE0mB,UACP3rC,KAAKsE,OAAOqnC,UACZ3rC,KAAKyqE,KAAK9+B,UAEV3rC,KAAKwqE,KAAK7+B,UAEV3rC,KAAKsqE,QAAQ72E,aAEbuM,KAAKuqE,OAAO92E,aAELuM,MAGFqqE,EArGT,CAsGE,IC/HE,GAEJ,SAAUt8B,GAGR,SAAS28B,EAAO34E,GACd,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAoD1C,OAlDAqrC,EAAM97C,KAAO,SAKb87C,EAAMs/B,QAAU,IAAI,GAAU,CAC5Bv4E,QAASi5C,EAAMj5C,UAQjBi5C,EAAMu/B,IAAMv/B,EAAMs/B,QAAQF,KAK1Bp/B,EAAMw/B,WAAa,IAAI,GAAK,CAC1Bz4E,QAASi5C,EAAMj5C,UAMjBi5C,EAAMy/B,aAAe,IAAI,GAAK,CAC5B14E,QAASi5C,EAAMj5C,UAMjBi5C,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAMjBi5C,EAAM/mC,OAAS+mC,EAAMs/B,QAErBt/B,EAAM9mC,MAAMs+C,IAAIxX,EAAMs/B,QAAQ3lD,EAAGqmB,EAAMw/B,YAEvCx/B,EAAMy/B,aAAat3E,QAAQ63C,EAAMs/B,QAAQ1lD,GAEzComB,EAAMu/B,IAAI75D,eAAehf,EAAQ64E,IAAK,GAEtCv/B,EAAM2W,kBAAoB,CAAC3W,EAAMy/B,aAAcz/B,EAAMw/B,YACrD12B,GAAS9I,EAAO,OACTA,EAgCT,OAvFAlE,EAAUujC,EAAQ38B,GA0DlB28B,EAAOp9B,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDs9B,IAAK,KAQTF,EAAO95E,UAAUm6E,cAAgB,SAAUC,GAKzC,OAHAhrE,KAAKgiD,kBAAkBphD,KAAKoqE,GAE5BhrE,KAAK6qE,WAAW1sC,MAAM6sC,EAAQhrE,KAAK8qE,cAC5B9qE,MAGT0qE,EAAO95E,UAAU+6C,QAAU,WAQzB,OAPAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK2qE,QAAQh/B,UAEb3rC,KAAK6qE,WAAWl/B,UAChB3rC,KAAK8qE,aAAan/B,UAClB3rC,KAAK4qE,IAAIj/B,UACF3rC,MAGF0qE,EAxFT,CAyFE,IC9FE,GAEJ,SAAU38B,GAGR,SAASk9B,EAAUl5E,GACjB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAY1C,OAVAqrC,EAAM97C,KAAO,YACb87C,EAAM6/B,KAAO,IAAI,GAAI,CACnB94E,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnB6kD,UAAWhnE,EAAQo5E,QAErB9/B,EAAM8/B,MAAQ9/B,EAAM6/B,KAAKnS,UACzB1tB,EAAMn3B,UAAYm3B,EAAM6/B,KAAKh3D,UAC7Bm3B,EAAMluC,KAAOpL,EAAQoL,KACrBg3C,GAAS9I,EAAO,CAAC,YAAa,UACvBA,EA+ET,OA9FAlE,EAAU8jC,EAAWl9B,GAkBrBk9B,EAAU39B,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCp5B,UAAW,EACX/W,KAAM,OACNguE,MAAO,KAQXF,EAAUr6E,UAAU8S,MAAQ,SAAU/F,GAGpC,OAFAqC,KAAKkrE,KAAKxnE,MAAM/F,GAETqC,MAOTirE,EAAUr6E,UAAUmT,KAAO,SAAUpG,GAGnC,OAFAqC,KAAKkrE,KAAKnnE,KAAKpG,GAERqC,MAOTirE,EAAUr6E,UAAU0+D,KAAO,WAGzB,OAFAtvD,KAAKkrE,KAAK5b,OAEHtvD,MAOTirE,EAAUr6E,UAAU6+D,OAAS,WAG3B,OAFAzvD,KAAKkrE,KAAKzb,SAEHzvD,MAGTtQ,OAAOC,eAAes7E,EAAUr6E,UAAW,OAAQ,CAQjDf,IAAK,WACH,OAAOmQ,KAAKkrE,KAAK/tE,MAEnBhB,IAAK,SAAUgB,GACb6C,KAAKkrE,KAAK/tE,KAAOA,GAEnBvN,YAAY,EACZ4sB,cAAc,IAGhByuD,EAAUr6E,UAAU+6C,QAAU,WAO5B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkrE,KAAKv/B,UAEV3rC,KAAKkU,UAAUy3B,UACf3rC,KAAKmrE,MAAMx/B,UACJ3rC,MAGFirE,EA/FT,CAgGE,IC1FE,ICGJ,SAAUl9B,GAGR,SAASq9B,IACP,IAAI//B,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6+B,EAAW99B,cAAe9F,UAAW,CAAC,YAAa,gBAAiB,cAAgBxnC,KAEvIqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqB6+B,EAAW99B,cAAe9F,UAAW,CAAC,YAAa,gBAAiB,YAWvG,OAVA6D,EAAM7b,OAAS,IAAI,GAAO9/B,OAAO48C,OAAOv6C,EAAQy9B,OAAQ,CACtDp9B,QAASi5C,EAAMj5C,WAGjBi5C,EAAM0/B,cAAc1/B,EAAM7b,QAE1B6b,EAAM6/B,KAAK13E,QAAQ63C,EAAM7b,OAAOtb,WAEhCm3B,EAAMq2B,QAAU3vE,EAAQ2vE,QACxBr2B,EAAMu2B,cAAgB7vE,EAAQ6vE,cACvBv2B,EAjBTlE,EAAUikC,EAAYr9B,GAoBtBq9B,EAAW99B,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAUgB,cAAe,CAC5Cs0B,cAAe,IACfF,QAAS,IACTlyC,OAAQ,CACNryB,KAAM,UACN2jE,SAAU,GACV9sD,EAAG,MAKTtkB,OAAOC,eAAey7E,EAAWx6E,UAAW,gBAAiB,CAI3Df,IAAK,WACH,OAAOmQ,KAAKkrE,KAAKzjE,KAEnBtL,IAAK,SAAUw/C,GACb37C,KAAKkrE,KAAKzjE,IAAMzH,KAAKm6C,YAAYwB,GAEjC37C,KAAK0hE,QAAU1hE,KAAKyhE,UAEtB7xE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAey7E,EAAWx6E,UAAW,UAAW,CAIrDf,IAAK,WACH,OAAOmQ,KAAKyhE,UAEdtlE,IAAK,SAAUkvE,GACbrrE,KAAKyhE,SAAW4J,EAChBrrE,KAAKkrE,KAAK1jE,IAAMxH,KAAKkrE,KAAKzjE,IAAMzJ,KAAKqB,IAAI,EAAGgsE,IAE9Cz7E,YAAY,EACZ4sB,cAAc,IAGhB4uD,EAAWx6E,UAAU+6C,QAAU,WAI7B,OAHAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKwvB,OAAOmc,UACL3rC,MAnEX,CAuEE,IDxEF,SAAU+tC,GAGR,SAASu9B,IACP,IAAIjgC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB++B,EAAOh+B,cAAe9F,UAAW,CAAC,WAAaxnC,KAEhHqrC,EAAM97C,KAAO,SAKb87C,EAAMi/B,QAAUj/B,EAAMj5C,QAAQ63B,qBAC9BohB,EAAM9mC,MAAQ8mC,EAAMi/B,QACpBj/B,EAAM/mC,OAAS+mC,EAAMi/B,QACrB,IAAIv4E,EAAUw6C,EAAqB++B,EAAOh+B,cAAe9F,UAAW,CAAC,QAerE,OAdA6D,EAAMpf,IAAM,IAAI,GAAM,CACpB75B,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQr+C,IACrBh8B,MAAO8B,EAAQk6B,IACfpb,UAAW,EACXD,SAAU,IAKZy6B,EAAMi/B,QAAQxhE,aAAe/W,EAAQ+W,aACrCuiC,EAAMi/B,QAAQvhE,iBAAmB,WAEjCorC,GAAS9I,EAAO,OACTA,EAmBT,OA/CAlE,EAAUmkC,EAAQv9B,GA+BlBu9B,EAAOh+B,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDrhB,IAAK,EACLnjB,aAAc,KAIlBwiE,EAAO16E,UAAU+6C,QAAU,WAMzB,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsqE,QAAQ72E,aAEbuM,KAAKisB,IAAI0f,UACF3rC,MAGFsrE,EAhDT,CAiDE,KEnDE,ICEJ,SAAUv9B,GAGR,SAASw9B,IACP,IAAIlgC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBg/B,EAAWj+B,cAAe9F,UAAW,CAAC,gBAAkBxnC,KAE3GqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqBg/B,EAAWj+B,cAAe9F,UAAW,CAAC,cAYzE,OAXA6D,EAAMi/B,QAAU,IAAI,GAAO,CACzBl4E,QAASi5C,EAAMj5C,QACf0W,aAAc/W,EAAQ+W,eAGxBuiC,EAAM0/B,cAAc1/B,EAAMi/B,SAE1Bj/B,EAAM6/B,KAAK13E,QAAQ63C,EAAMi/B,QAAQr+C,KAEjCof,EAAM6/B,KAAKzjE,KAAO,EAClB4jC,EAAM6/B,KAAK1jE,IAAM,EACV6jC,EAlBTlE,EAAUokC,EAAYx9B,GAqBtBw9B,EAAWj+B,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAUgB,cAAe,CAC5CxkC,aAAc,KAIlByiE,EAAW36E,UAAU+6C,QAAU,WAK7B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsqE,QAAQ3+B,UAEN3rC,MAjCX,CAqCE,IDrCF,SAAU+tC,GAGR,SAASy9B,IACP,IAAIngC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBi/B,EAASl+B,cAAe9F,UAAW,CAAC,gBAAkBxnC,KAEzGqrC,EAAM97C,KAAO,WACb,IAAIwC,EAAUw6C,EAAqBi/B,EAASl+B,cAAe9F,UAAW,CAAC,cAavE,OAZA6D,EAAM0vB,KAAO1vB,EAAM9mC,MAAQ,IAAI,GAAI,CACjCnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAMi5B,SAAWj5B,EAAM/mC,OAAS,IAAI,GAAc,CAChDlS,QAASi5C,EAAMj5C,QACf8hB,UAAW,EAAIm3B,EAAM2N,UAAUjnD,EAAQ05E,WACvCtuE,KAAM,YAGRkuC,EAAM0vB,KAAKvnE,QAAQ63C,EAAMi5B,UAEzBj5B,EAAMqgC,WAAa35E,EAAQ05E,UACpBpgC,EAkCT,OArDAlE,EAAUqkC,EAAUz9B,GAsBpBy9B,EAASl+B,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDm+B,UAAW,OAIf/7E,OAAOC,eAAe67E,EAAS56E,UAAW,YAAa,CAIrDf,IAAK,WACH,OAAOmQ,KAAK0rE,YAEdvvE,IAAK,SAAUsvE,GACbzrE,KAAK0rE,WAAaD,EAClBzrE,KAAKskE,SAASpwD,UAAY,EAAIlU,KAAKg5C,UAAUh5C,KAAKyrE,YAEpD77E,YAAY,EACZ4sB,cAAc,IAGhBgvD,EAAS56E,UAAU+6C,QAAU,WAO3B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+6D,KAAKpvB,UAEV3rC,KAAKskE,SAAS34B,UAEP3rC,MAGFwrE,EAtDT,CAuDE,KETE,ICrCJ,SAAUz9B,GAGR,SAAS49B,IACP,IAAItgC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBo/B,EAAQr+B,cAAe9F,UAAW,CAAC,gBAAiB,UAAW,kBAAoBxnC,KAEtIqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBo/B,EAAQr+B,cAAe9F,UAAW,CAAC,gBAAiB,UAAW,gBA4ClG,OA3CA6D,EAAMugC,UAAY,IAAI,GAAS,CAC7Bx5E,QAASi5C,EAAMj5C,QACfq5E,UAAW15E,EAAQ85E,WAErBxgC,EAAMygC,YAAc,IAAI,GAAS,CAC/B15E,QAASi5C,EAAMj5C,QACfqV,IAAK,EACLD,IAAK,EACLu0D,SAAU,KAEZ1wB,EAAMs2B,eAAiBt2B,EAAM8O,YAAYpoD,EAAQ6vE,eACjDv2B,EAAMo2B,SAAW1vE,EAAQ2vE,QACzBr2B,EAAM0gC,YAAc,IAAI,GAAK,CAC3B35E,QAASi5C,EAAMj5C,UAEjBi5C,EAAM2gC,UAAY,IAAI,GAAO,CAC3B55E,QAASi5C,EAAMj5C,QACf0uE,SAAU,GACV5sD,UAAW,EACXF,EAAGjiB,EAAQiiB,IAEbq3B,EAAM4gC,SAAW,IAAI,GAAO,CAC1B75E,QAASi5C,EAAMj5C,QACf+K,KAAM,YAERkuC,EAAM4gC,SAAShjE,KAAKhZ,MAAQ8B,EAAQkX,KACpCoiC,EAAMpiC,KAAOoiC,EAAM4gC,SAAShjE,KAC5BoiC,EAAMr3B,EAAIq3B,EAAM2gC,UAAUh4D,EAE1Bq3B,EAAMw/B,WAAW1sC,MAAMkN,EAAM0gC,YAAa1gC,EAAMugC,UAAWvgC,EAAMygC,aAEjEzgC,EAAMygC,YAAYt4E,QAAQ63C,EAAM2gC,UAAU93D,WAE1Cm3B,EAAMygC,YAAYt4E,QAAQ63C,EAAM4gC,SAAS/3D,WAGzCm3B,EAAMw/B,WAAW1sC,MAAMkN,EAAM2gC,UAAW3gC,EAAM4gC,SAAU5gC,EAAMy/B,cAG9Dz/B,EAAM6gC,iBAEN7gC,EAAM8gC,YAAcp6E,EAAQo6E,YAC5Bh4B,GAAS9I,EAAO,CAAC,OAAQ,MAClBA,EAlDTlE,EAAUwkC,EAAS59B,GAqDnB49B,EAAQr+B,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCs0B,cAAe,IACfF,QAAS,EACTyK,YAAa,EACbn4D,EAAG,EACH/K,KAAM,EACN4iE,SAAU,MAIdn8E,OAAOC,eAAeg8E,EAAQ/6E,UAAW,UAAW,CAIlDf,IAAK,WACH,OAAOmQ,KAAKyhE,UAEdtlE,IAAK,SAAUulE,GACb1hE,KAAKyhE,SAAWC,EAEhB1hE,KAAKksE,kBAEPt8E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg8E,EAAQ/6E,UAAW,WAAY,CAInDf,IAAK,WACH,OAAOmQ,KAAK4rE,UAAUH,WAExBtvE,IAAK,SAAU0vE,GACb7rE,KAAK4rE,UAAUH,UAAYI,GAE7Bj8E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg8E,EAAQ/6E,UAAW,gBAAiB,CAIxDf,IAAK,WACH,OAAOmQ,KAAK2hE,gBAEdxlE,IAAK,SAAUiwE,GACbpsE,KAAK2hE,eAAiB3hE,KAAKm6C,YAAYiyB,GAEvCpsE,KAAKksE,kBAEPt8E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeg8E,EAAQ/6E,UAAW,cAAe,CAItDf,IAAK,WACH,OAAO6nD,GAAS,EAAI13C,KAAK+rE,YAAY9iE,KAAKhZ,QAE5CkM,IAAK,SAAUgwE,GACbnsE,KAAK+rE,YAAY9iE,KAAKhZ,MAAQ,EAAIunD,GAAS20B,IAE7Cv8E,YAAY,EACZ4sB,cAAc,IAMhBmvD,EAAQ/6E,UAAUs7E,eAAiB,WACjClsE,KAAK8rE,YAAYrkE,IAAMzH,KAAK2hE,eAC5B3hE,KAAK8rE,YAAYtkE,IAAMxJ,KAAKyJ,IAAIzH,KAAK2hE,eAAiB3jE,KAAKqB,IAAI,EAAGW,KAAKyhE,UAAWzhE,KAAK5N,QAAQmV,WAAa,IAG9GokE,EAAQ/6E,UAAU+6C,QAAU,WAa1B,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK4rE,UAAUjgC,UAEf3rC,KAAK8rE,YAAYngC,UAEjB3rC,KAAKgsE,UAAUrgC,UAEf3rC,KAAKisE,SAAStgC,UAEd3rC,KAAK+rE,YAAYpgC,UAEV3rC,MA/IX,CAmJE,IDxJF,SAAU+tC,GAGR,SAASs+B,IACP,IAAIhhC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB8/B,EAAW/+B,cAAe9F,UAAW,CAAC,WAAaxnC,KAEtGqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqB8/B,EAAW/+B,cAAe9F,UAAW,CAAC,SASzE,OARA6D,EAAMihC,mBAAqB,IAAI,GAAkB,CAC/Cl6E,QAASi5C,EAAMj5C,QACfm6E,KAAMx6E,EAAQw6E,OAGhBlhC,EAAM0/B,cAAc1/B,EAAMihC,oBAE1BjhC,EAAMkhC,KAAOlhC,EAAMihC,mBAAmBC,KAC/BlhC,EAfTlE,EAAUklC,EAAYt+B,GAkBtBs+B,EAAW/+B,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCi/B,KAAM,EACNC,mBAAoB,MAIxBH,EAAWz7E,UAAU+6C,QAAU,WAK7B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKssE,mBAAmB3gC,UAEjB3rC,MA/BX,CAmCE,IASF,SAAU+tC,GAGR,SAAS0+B,IACP,IAAIphC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBkgC,EAAkBn/B,cAAe9F,aAAexnC,KAEnGqrC,EAAM97C,KAAO,oBACb87C,EAAMk4B,eAAiB,CACrBn7D,eAAgB,EAChB8J,gBAAiB,GAEnB,IAAIngB,EAAUw6C,EAAqBkgC,EAAkBn/B,cAAe9F,WACpE6D,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAGjB,IAAIyxE,EAAYx4B,EAAMj5C,QAAQyyB,aAW9B,OATAwmB,EAAMkhC,KAAO,IAAI,GAAM,CACrBn6E,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQw6E,KACflyB,MAAO,WACPxpC,SAAU,EACVD,SAAU,GACV69B,MAAOo1B,EAAU56D,KACjBu2C,WAAW,IAENnU,EAoCT,OAjEAlE,EAAUslC,EAAmB1+B,GAgC7B0+B,EAAkBn/B,YAAc,WAC9B,OAAO59C,OAAO48C,OAAO,GAAiBgB,cAAe,CACnDi/B,KAAM,MAIVE,EAAkB77E,UAAU4yE,kBAAoB,WAC9C,MAAO,eAGTiJ,EAAkB77E,UAAUyiB,cAAgB,WAC1C,MAEE,6BAAgCrT,KAAKwjE,oBAAsB,y/BAI/DiJ,EAAkB77E,UAAU+yE,QAAU,SAAUzhB,GAC9CU,GAAc5iD,KAAKuE,MAAO29C,EAAMliD,KAAKsE,QAErC,IAAIioE,EAAOrqB,EAAKh8C,WAAWrW,IAAI,QAC/BmQ,KAAKusE,KAAK7qB,SAAS6qB,IAGrBE,EAAkB77E,UAAU+6C,QAAU,WAMpC,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UACX3rC,KAAKsE,OAAOqnC,UACZ3rC,KAAKusE,KAAK5gC,UACH3rC,MAGFysE,EAlET,CAmEE,KEzHE,ICSJ,SAAU1+B,GAGR,SAAS2+B,IACP,IAAIrhC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmgC,EAAUp/B,cAAe9F,UAAW,CAAC,YAAcxnC,KAEtGqrC,EAAM97C,KAAO,YACb,IAAIwC,EAAUw6C,EAAqBmgC,EAAUp/B,cAAe9F,UAAW,CAAC,UAWxE,OAVA6D,EAAMspB,QAAU,IAAI,GAAW,CAC7BviE,QAASi5C,EAAMj5C,QACfwM,OAAQ,OAEVysC,EAAMshC,OAAS56E,EAAQ66E,MAEvBvhC,EAAM0/B,cAAc1/B,EAAMspB,SAE1BtpB,EAAMuhC,MAAQ76E,EAAQ66E,MACtBvhC,EAAMhiB,WAAat3B,EAAQs3B,WACpBgiB,EAjBTlE,EAAUulC,EAAW3+B,GAoBrB2+B,EAAUp/B,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCs/B,MAAO,EACPvjD,WAAY,UAWhBqjD,EAAU97E,UAAUi8E,gBAAkB,SAAUznE,EAAG0nE,EAAQC,GACzD,OAAIA,EAAKrwE,IAAIowE,KAES,IAAXA,EACTC,EAAK5wE,IAAI2wE,EAAQ,GACG,IAAXA,EACTC,EAAK5wE,IAAI2wE,EAAQ1nE,GAEjB2nE,EAAK5wE,IAAI2wE,EAAQ,EAAI1nE,EAAIpF,KAAK6sE,gBAAgBznE,EAAG0nE,EAAS,EAAGC,GAAQ/sE,KAAK6sE,gBAAgBznE,EAAG0nE,EAAS,EAAGC,KANlGA,EAAKl9E,IAAIi9E,IAYpBp9E,OAAOC,eAAe+8E,EAAU97E,UAAW,QAAS,CAWlDf,IAAK,WACH,OAAOmQ,KAAK2sE,QAEdxwE,IAAK,SAAUywE,GACb,IAAIvhC,EAAQrrC,KAEZA,KAAK2sE,OAASC,EAEd5sE,KAAK20D,QAAQE,QAAO,SAAUzvD,GAC5B,OAAOimC,EAAMwhC,gBAAgBznE,EAAGwnE,EAAO,IAAI/4E,SAG/CjE,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+8E,EAAU97E,UAAW,aAAc,CAIvDf,IAAK,WACH,OAAOmQ,KAAK20D,QAAQtrC,YAEtBltB,IAAK,SAAU44D,GACb/0D,KAAK20D,QAAQtrC,WAAa0rC,GAE5BnlE,YAAY,EACZ4sB,cAAc,IAGhBkwD,EAAU97E,UAAU+6C,QAAU,WAK5B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK20D,QAAQhpB,UAEN3rC,MA9FX,CAkGE,IDzGF,SAAU+tC,GAGR,SAASi/B,IACP,IAAI3hC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBygC,EAAM1/B,cAAe9F,UAAW,CAAC,eAAiBxnC,KAErGqrC,EAAM97C,KAAO,QACb,IAAIwC,EAAUw6C,EAAqBygC,EAAM1/B,cAAe9F,UAAW,CAAC,aAGpE,OAFA6D,EAAM4hC,UAAY5hC,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS+mC,EAAMj5C,QAAQwtC,sBAAsB7tC,EAAQs4C,UAC3FgB,EAAM2W,kBAAoB,CAAC3W,EAAM4hC,WAC1B5hC,EAiBT,OA1BAlE,EAAU6lC,EAAOj/B,GAYjBi/B,EAAM1/B,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDjD,SAAU,KAId2iC,EAAMp8E,UAAU+6C,QAAU,WAKxB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKitE,UAAUx5E,aAERuM,MAGFgtE,EA3BT,CA4BE,KE3BE,GAEJ,SAAUj/B,GAGR,SAASm/B,IACP,IAAI7hC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB2gC,EAAM5/B,cAAe9F,UAAW,CAAC,eAAiBxnC,KAErGqrC,EAAM97C,KAAO,QACb,IAAIwC,EAAUw6C,EAAqB2gC,EAAM5/B,cAAe9F,UAAW,CAAC,aAEpE,OADA6D,EAAM8hC,QAAU9hC,EAAM/mC,OAAS+mC,EAAM9mC,MAAQ8mC,EAAMj5C,QAAQuxB,oBAAoB5xB,EAAQs4C,UAChFgB,EAiBT,OAzBAlE,EAAU+lC,EAAOn/B,GAWjBm/B,EAAM5/B,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDjD,SAAU,KAId6iC,EAAMt8E,UAAU+6C,QAAU,WAKxB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKmtE,QAAQ15E,aAENuM,MAGFktE,EA1BT,CA2BE,ICjCE,GAEJ,SAAUn/B,GAGR,SAASq/B,EAAar7E,GACpB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KA+B1C,OA7BAqrC,EAAM97C,KAAO,eACb87C,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAGjBi5C,EAAM9mC,MAAMuE,aAAe,EAC3BuiC,EAAM9mC,MAAMwE,iBAAmB,WAC/BsiC,EAAMs/B,QAAUt/B,EAAM/mC,OAAS,IAAI,GAAU,CAC3ClS,QAASi5C,EAAMj5C,QACfq4E,KAAM14E,EAAQ64E,MAEhBv/B,EAAMu/B,IAAMv/B,EAAMs/B,QAAQF,KAC1Bp/B,EAAMk/B,OAAS,IAAI,GAAM,CACvBn4E,QAASi5C,EAAMj5C,QACfi4C,SAAU,IAEZgB,EAAMgiC,OAAS,IAAI,GAAM,CACvBj7E,QAASi5C,EAAMj5C,QACfi4C,SAAU,IAGZgB,EAAM9mC,MAAM/Q,QAAQ63C,EAAMk/B,QAG1Bl/B,EAAM9mC,MAAM/Q,QAAQ63C,EAAMs/B,QAAQ3lD,GAElCqmB,EAAMgiC,OAAO75E,QAAQ63C,EAAMs/B,QAAQ1lD,GAEnCkvB,GAAS9I,EAAO,CAAC,QACVA,EAuDT,OAzFAlE,EAAUimC,EAAcr/B,GAyCxBq/B,EAAax8E,UAAU08E,kBAAoB,WAGzC,IAFA,IAAI3qB,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,GAGxBxgC,KAAKuqE,OAAO/2E,QAAQmvD,EAAM,GAAI,EAAG,GAEjCC,GAAcngC,WAAM,EAAQsmB,EAAS4Z,IACrCnvD,GAAQmvD,EAAMA,EAAM/jD,OAAS,GAAIoB,KAAKqtE,OAAQ,EAAG,IAOnDD,EAAax8E,UAAU28E,mBAAqB,WAG1C,IAFA,IAAI5qB,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,GAGxBxgC,KAAKuqE,OAAO/2E,QAAQmvD,EAAM,GAAI,EAAG,GAEjCC,GAAcngC,WAAM,EAAQsmB,EAAS4Z,IACrCnvD,GAAQmvD,EAAMA,EAAM/jD,OAAS,GAAIoB,KAAKqtE,OAAQ,EAAG,IAGnDD,EAAa9/B,YAAc,WACzB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDs9B,IAAK,KAITwC,EAAax8E,UAAU+6C,QAAU,WAS/B,OARAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK2qE,QAAQh/B,UAEb3rC,KAAKuqE,OAAO5+B,UAEZ3rC,KAAKqtE,OAAO1hC,UAEL3rC,MAGFotE,EA1FT,CA2FE,ICnFE,GAEJ,SAAUr/B,GAGR,SAASy/B,EAAqBz7E,GAC5B,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAwC1C,OAtCAqrC,EAAM3kC,SAAW,IAAI,GAAO,CAC1BtU,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQ2U,SACf2zC,MAAO,gBAEThP,EAAMoiC,WAAa,IAAI,GAAK,CAC1Br7E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMqiC,WAAa,IAAI,GAAK,CAC1Bt7E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMsiC,eAAiB,IAAI,GAAM,CAC/Bv7E,QAASi5C,EAAMj5C,QACfi4C,SAAU,IAEZgB,EAAMuiC,eAAiB,IAAI,GAAM,CAC/Bx7E,QAASi5C,EAAMj5C,QACfi4C,SAAU,IAGZgB,EAAMgiC,OAAO75E,QAAQ63C,EAAMsiC,gBAE3BtiC,EAAMuiC,eAAep6E,QAAQ63C,EAAMk/B,QAGnCl/B,EAAMsiC,eAAen6E,QAAQ63C,EAAMoiC,WAAY,EAAG,GAElDpiC,EAAMoiC,WAAWj6E,QAAQ63C,EAAMuiC,eAAgB,EAAG,GAGlDviC,EAAMsiC,eAAen6E,QAAQ63C,EAAMqiC,WAAY,EAAG,GAElDriC,EAAMqiC,WAAWl6E,QAAQ63C,EAAMuiC,eAAgB,EAAG,GAGlDviC,EAAM3kC,SAASm8C,IAAIxX,EAAMoiC,WAAWxkE,KAAMoiC,EAAMqiC,WAAWzkE,MAE3DkrC,GAAS9I,EAAO,CAAC,aACVA,EAyBT,OApEAlE,EAAUqmC,EAAsBz/B,GA8ChCy/B,EAAqBlgC,YAAc,WACjC,OAAO59C,OAAO48C,OAAO,GAAagB,cAAe,CAC/C5mC,SAAU,MAId8mE,EAAqB58E,UAAU+6C,QAAU,WAavC,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK0G,SAASilC,UAEd3rC,KAAKytE,WAAW9hC,UAEhB3rC,KAAK0tE,WAAW/hC,UAEhB3rC,KAAK2tE,eAAehiC,UAEpB3rC,KAAK4tE,eAAejiC,UAEb3rC,MAGFwtE,EArET,CAsEE,ICpFE,ICaJ,SAAUz/B,GAGR,SAAS8/B,IACP,IAAIxiC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBshC,EAAOvgC,cAAe9F,UAAW,CAAC,YAAa,YAAa,YAAcxnC,KAE7HqrC,EAAM97C,KAAO,SACb,IAAIwC,EAAUw6C,EAAqBshC,EAAOvgC,cAAe9F,UAAW,CAAC,YAAa,YAAa,UAyC/F,OAxCA6D,EAAMyiC,OAAS/7E,EAAQo5E,MACvB9/B,EAAM7yB,WAAazmB,EAAQsmB,UAAY,IACvCgzB,EAAM0iC,MAAQ,IAAI,GAAI,CACpB37E,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnBzM,IAAK,EACLD,IAAK,IAEP6jC,EAAM2iC,MAAQ,IAAI,GAAI,CACpB57E,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnBzM,IAAK,EACLD,IAAK,EACLwrD,MAAO,MAET3nB,EAAM4iC,YAAc,IAAI,GAAM,CAC5B77E,QAASi5C,EAAMj5C,UAEjBi5C,EAAM6iC,YAAc,IAAI,GAAM,CAC5B97E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMn3B,UAAYm3B,EAAM0iC,MAAM75D,UAC9BigC,GAAS9I,EAAO,CAAC,cAEjBA,EAAM0iC,MAAM75D,UAAU1gB,QAAQ63C,EAAM2iC,MAAM95D,WAG1Cm3B,EAAMiiC,kBAAkBjiC,EAAM4iC,aAE9B5iC,EAAMkiC,mBAAmBliC,EAAM6iC,aAG/B7iC,EAAM0iC,MAAMv6E,QAAQ63C,EAAM4iC,YAAY51D,WAEtCgzB,EAAM2iC,MAAMx6E,QAAQ63C,EAAM6iC,YAAY71D,WAGtCgzB,EAAM8/B,MAAQ9/B,EAAMyiC,OACpBziC,EAAMluC,KAAOpL,EAAQoL,KACrBkuC,EAAMirB,OAASvkE,EAAQukE,OAChBjrB,EA/CTlE,EAAU0mC,EAAQ9/B,GAkDlB8/B,EAAOvgC,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAqBgB,cAAe,CACvDp5B,UAAW,IACXmE,UAAW,IACX8yD,MAAO,GACPhuE,KAAM,OACNm5D,OAAQ,IACR5vD,SAAU,EACVkkE,IAAK,MAITl7E,OAAOC,eAAek+E,EAAOj9E,UAAW,QAAS,CAK/Cf,IAAK,WACH,OAAOmQ,KAAK8tE,QAEd3xE,IAAK,SAAUgvE,GACbnrE,KAAK8tE,OAAS3C,EACd,IAAIgD,EAAYnuE,KAAKwY,WAAa2yD,EAClCnrE,KAAK+tE,MAAMtmE,IAAMzJ,KAAKwJ,IAAIxH,KAAKwY,WAAa21D,EAAW,GACvDnuE,KAAK+tE,MAAMvmE,IAAMxH,KAAKwY,WAAa21D,EACnCnuE,KAAKguE,MAAMvmE,IAAMzJ,KAAKwJ,IAAIxH,KAAKwY,WAAa21D,EAAW,GACvDnuE,KAAKguE,MAAMxmE,IAAMxH,KAAKwY,WAAa21D,GAErCv+E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAek+E,EAAOj9E,UAAW,YAAa,CAMnDf,IAAK,WACH,OAAyB,IAAlBmQ,KAAKwY,YAEdrc,IAAK,SAAUkc,GACbrY,KAAKwY,WAAaH,EAAY,IAC9BrY,KAAKmrE,MAAQnrE,KAAK8tE,QAEpBl+E,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAek+E,EAAOj9E,UAAW,OAAQ,CAI9Cf,IAAK,WACH,OAAOmQ,KAAK+tE,MAAM5wE,MAEpBhB,IAAK,SAAUgB,GACb6C,KAAK+tE,MAAM5wE,KAAOA,EAClB6C,KAAKguE,MAAM7wE,KAAOA,GAEpBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAek+E,EAAOj9E,UAAW,SAAU,CAKhDf,IAAK,WACH,OAAOmQ,KAAKguE,MAAMhb,MAAQhzD,KAAK+tE,MAAM/a,OAEvC72D,IAAK,SAAUm6D,GACbt2D,KAAK+tE,MAAM/a,MAAQ,GAAKsD,EAAS,EACjCt2D,KAAKguE,MAAMhb,MAAQsD,EAAS,EAAI,IAElC1mE,YAAY,EACZ4sB,cAAc,IAMhBqxD,EAAOj9E,UAAU8S,MAAQ,SAAU/F,GAKjC,OAJAqC,KAAK+tE,MAAMrqE,MAAM/F,GAEjBqC,KAAKguE,MAAMtqE,MAAM/F,GAEVqC,MAOT6tE,EAAOj9E,UAAUmT,KAAO,SAAUpG,GAKhC,OAJAqC,KAAK+tE,MAAMhqE,KAAKpG,GAEhBqC,KAAKguE,MAAMjqE,KAAKpG,GAETqC,MAOT6tE,EAAOj9E,UAAU0+D,KAAO,WAKtB,OAJAtvD,KAAK+tE,MAAMze,OAEXtvD,KAAKguE,MAAM1e,OAEJtvD,MAOT6tE,EAAOj9E,UAAU6+D,OAAS,WAKxB,OAJAzvD,KAAK+tE,MAAMte,SAEXzvD,KAAKguE,MAAMve,SAEJzvD,MAGT6tE,EAAOj9E,UAAU+6C,QAAU,WAYzB,OAXAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+tE,MAAMpiC,UAEX3rC,KAAKguE,MAAMriC,UAEX3rC,KAAKiuE,YAAYtiC,UAEjB3rC,KAAKkuE,YAAYviC,UAEjB3rC,KAAKkU,UAAUy3B,UACR3rC,MA3LX,CA+LE,ICpMF,SAAU+tC,GAGR,SAASqgC,IACP,IAAI/iC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6hC,EAAW9gC,cAAe9F,UAAW,CAAC,iBAAmBxnC,KAE5GqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqB6hC,EAAW9gC,cAAe9F,UAAW,CAAC,eAWzE,OAVA6D,EAAMspB,QAAU,IAAI,GAAW,CAC7BviE,QAASi5C,EAAMj5C,QACfwM,OAAQ,OAEVysC,EAAMgjC,YAAct8E,EAAQu8E,WAE5BjjC,EAAM0/B,cAAc1/B,EAAMspB,SAE1BtpB,EAAMijC,WAAav8E,EAAQu8E,WAC3BjjC,EAAMhiB,WAAat3B,EAAQs3B,WACpBgiB,EAjBTlE,EAAUinC,EAAYrgC,GAoBtBqgC,EAAW9gC,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCghC,WAAY,GACZjlD,WAAY,UAIhB35B,OAAOC,eAAey+E,EAAWx9E,UAAW,aAAc,CAIxDf,IAAK,WACH,OAAOmQ,KAAKquE,aAEdlyE,IAAK,SAAU0vD,GACb7rD,KAAKquE,YAAcxiB,EACnB,IAAIzkD,EAAa,IAATykD,EACJ0iB,EAAMvwE,KAAK+nB,GAAK,IAEpB/lB,KAAK20D,QAAQE,QAAO,SAAUzvD,GAC5B,OAAIpH,KAAK6vC,IAAIzoC,GAAK,KAET,GAEC,EAAIgC,GAAKhC,EAAI,GAAKmpE,GAAOvwE,KAAK+nB,GAAK3e,EAAIpJ,KAAK6vC,IAAIzoC,QAI9DxV,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAey+E,EAAWx9E,UAAW,aAAc,CAIxDf,IAAK,WACH,OAAOmQ,KAAK20D,QAAQtrC,YAEtBltB,IAAK,SAAU44D,GACb/0D,KAAK20D,QAAQtrC,WAAa0rC,GAE5BnlE,YAAY,EACZ4sB,cAAc,IAGhB4xD,EAAWx9E,UAAU+6C,QAAU,WAK7B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK20D,QAAQhpB,UAEN3rC,MAvEX,CA2EE,IFjFF,SAAU+tC,GAGR,SAASygC,EAAez8E,GACtB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAa1C,OAXAqrC,EAAM97C,KAAO,iBACb87C,EAAMojC,cAAgB,IAAI,GAAK,CAC7Br8E,QAASi5C,EAAMj5C,QACf6W,KAAMlX,EAAQ2U,SACd2zC,MAAO,gBAEThP,EAAM3kC,SAAW2kC,EAAMojC,cAAcxlE,KACrCkrC,GAAS9I,EAAO,YAEhBA,EAAMy/B,aAAa3sC,MAAMkN,EAAMojC,cAAepjC,EAAMw/B,YAE7Cx/B,EAkBT,OAlCAlE,EAAUqnC,EAAgBzgC,GAmB1BygC,EAAelhC,YAAc,WAC3B,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzC5mC,SAAU,QAId8nE,EAAe59E,UAAU+6C,QAAU,WAMjC,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKyuE,cAAc9iC,UAEnB3rC,KAAK0G,SAASilC,UACP3rC,MAGFwuE,EAnCT,CAoCE,KGnCE,ICUJ,SAAUzgC,GAGR,SAAS2gC,IACP,IAAIrjC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmiC,EAAcphC,cAAe9F,UAAW,CAAC,YAAa,eAAiBxnC,KAE1HqrC,EAAM97C,KAAO,gBACb,IAAIwC,EAAUw6C,EAAqBmiC,EAAcphC,cAAe9F,UAAW,CAAC,YAAa,aAWzF,OAVA6D,EAAMgiB,WAAa,IAAI,GAAM,CAC3Bj7D,QAASi5C,EAAMj5C,QACfimB,UAAWtmB,EAAQsmB,UACnB80C,SAAUp7D,EAAQo7D,WAEpB9hB,EAAMhzB,UAAYgzB,EAAMgiB,WAAWh1C,UAEnCgzB,EAAM0/B,cAAc1/B,EAAMgiB,YAE1BlZ,GAAS9I,EAAO,aACTA,EAjBTlE,EAAUunC,EAAe3gC,GAoBzB2gC,EAAcphC,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAegB,cAAe,CACjDj1B,UAAW,IACX80C,SAAU,KAIduhB,EAAc99E,UAAU+6C,QAAU,WAMhC,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqtD,WAAW1hB,UAEhB3rC,KAAKqY,UAAUszB,UACR3rC,MAlCX,CAsCE,ID9CF,SAAU+tC,GAGR,SAAS4gC,EAAkB58E,GACzB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAE1CqrC,EAAM97C,KAAO,oBACb87C,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAMjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAMjBi5C,EAAMujC,SAAW,IAAI,GAAK,CACxBx8E,QAASi5C,EAAMj5C,UAUjB,OANAi5C,EAAMwjC,OAASxjC,EAAMyjC,yBAFI,CAAC,SAAW,eAAiB,cAAiB,iBAGvEzjC,EAAM0jC,OAAS1jC,EAAMyjC,yBAFI,CAAC,eAAiB,cAAiB,eAAiB,iBAG7EzjC,EAAM2jC,gBAAkB3jC,EAAMj5C,QAAQ+rB,gBAAgB,CAAC,EAAK,GAAM,CAAC,EAAK,IAExEykC,GAAcngC,WAAM,EAAQsmB,EAAS,CAACsC,EAAM9mC,OAAQ8mC,EAAMwjC,OAAQ,CAACxjC,EAAM2jC,gBAAiB3jC,EAAM/mC,UAChGs+C,GAAcngC,WAAM,EAAQsmB,EAAS,CAACsC,EAAM9mC,OAAQ8mC,EAAM0jC,OAAQ,CAAC1jC,EAAMujC,YAClEvjC,EAqCT,OApEAlE,EAAUwnC,EAAmB5gC,GAsC7B4gC,EAAkB/9E,UAAUk+E,yBAA2B,SAAUG,GAC/D,IAAI5jC,EAAQrrC,KAMZ,OAJYivE,EAAW/7E,KAAI,SAAUjD,GACnC,IAAIi/E,EAAe,CAAC,CAACj/E,EAAQA,EAAO,GAAI,GAAI,CAAC,EAAG,GAAKA,EAAQA,IAC7D,OAAOo7C,EAAMj5C,QAAQ+rB,gBAAgB+wD,EAAa,GAAIA,EAAa,QAKvEP,EAAkB/9E,UAAU+6C,QAAU,WAiBpC,OAhBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UACX3rC,KAAKsE,OAAOqnC,UACZ3rC,KAAK4uE,SAASjjC,UAEd3rC,KAAK6uE,OAAOlyE,SAAQ,SAAUyrC,GAC5B,OAAOA,EAAE30C,gBAGXuM,KAAK+uE,OAAOpyE,SAAQ,SAAUyrC,GAC5B,OAAOA,EAAE30C,gBAGXuM,KAAKgvE,gBAAgBv7E,aAEduM,MAGF2uE,EArET,CAsEE,KE1EEQ,ICqBJ,SAAUphC,GAGR,SAASqhC,IACP,IAAI/jC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6iC,EAAiB9hC,cAAe9F,UAAW,CAAC,gBAAkBxnC,KAEjHqrC,EAAM97C,KAAO,mBACb,IAAIwC,EAAUw6C,EAAqB6iC,EAAiB9hC,cAAe9F,UAAW,CAAC,cAC/E6D,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQmiB,UACfrD,UAAWw6B,EAAMj5C,QAAQmV,WAAa,EACtCqJ,SAAUy6B,EAAMj5C,QAAQmV,WAAa,IAEvC8jC,EAAMgkC,MAAQ,IAAI,GAAmB,CACnCj9E,QAASi5C,EAAMj5C,QACf+K,KAAM,SAERkuC,EAAMikC,QAAU,IAAI,GAAW,CAC7Bl9E,QAASi5C,EAAMj5C,QACf4gE,OAAQ,GACR71D,KAAM,SAERkuC,EAAMkkC,cAAgB,IAAI,GAAS,CACjCn9E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMmkC,gBAAkB,IAAI,GAAS,CACnCp9E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMokC,QAAU,IAAI,GAAO,CACzBr9E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMitB,KAAO,IAAI,GAAI,CACnBlmE,QAASi5C,EAAMj5C,UAEjBi5C,EAAMqkC,cAAgB,IAAI,GAAkB,CAC1Ct9E,QAASi5C,EAAMj5C,UAGjBi5C,EAAMw/B,WAAWr3E,QAAQ63C,EAAMqkC,eAG/BrkC,EAAMn3B,UAAU2uC,IAAIxX,EAAMgkC,MAAMn7D,UAAWm3B,EAAMikC,QAAQp7D,WAEzDm3B,EAAMqkC,cAAcd,SAASp7E,QAAQ63C,EAAMmkC,iBAE3CnkC,EAAMikC,QAAQ97E,QAAQ63C,EAAMmkC,gBAAgBpa,QAE5C/pB,EAAMqkC,cAAcl8E,QAAQ63C,EAAMkkC,eAElClkC,EAAMgkC,MAAM77E,QAAQ63C,EAAMkkC,cAAcna,QAExC/pB,EAAMkkC,cAAc/7E,QAAQ63C,EAAMokC,SAElCpkC,EAAMmkC,gBAAgBh8E,QAAQ63C,EAAMitB,MAEpCjtB,EAAMokC,QAAQj8E,QAAQ63C,EAAMitB,KAAKF,QAEjC/sB,EAAMitB,KAAK9kE,QAAQ63C,EAAMy/B,cAGzB,IAAIz4B,EAAMhH,EAAMiH,YAMhB,OAJAjH,EAAMgkC,MAAM3rE,MAAM2uC,GAElBhH,EAAMikC,QAAQ5rE,MAAM2uC,GAEbhH,EAnETlE,EAAUioC,EAAkBrhC,GAsE5BqhC,EAAiB9hC,YAAc,WAC7B,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCp5B,UAAW,KAIfk7D,EAAiBx+E,UAAU+6C,QAAU,WAmBnC,OAlBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkU,UAAUy3B,UAEf3rC,KAAKs4D,KAAK3sB,UAEV3rC,KAAKsvE,QAAQ3jC,UAEb3rC,KAAKwvE,gBAAgB7jC,UAErB3rC,KAAKyvE,QAAQ9jC,UAEb3rC,KAAK0vE,cAAc/jC,UAEnB3rC,KAAKqvE,MAAM1jC,UAEX3rC,KAAKuvE,cAAc5jC,UAEZ3rC,MAhGX,CAoGE,IDzHsB,CAAC,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,QAK9H2vE,GAA2B,CAAC,IAAK,IAAK,IAAK,KEJ3CC,IFoBJ,SAAU7hC,GAGR,SAAS8hC,IACP,IAAIxkC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBsjC,EAASviC,cAAe9F,UAAW,CAAC,WAAY,gBAAkBxnC,KAErHqrC,EAAM97C,KAAO,WAKb87C,EAAMykC,aAAe,GAKrBzkC,EAAM0kC,iBAAmB,GAKzB1kC,EAAM2kC,iBAAmB,GACzB,IAAIj+E,EAAUw6C,EAAqBsjC,EAASviC,cAAe9F,UAAW,CAAC,WAAY,cAyCnF,OAxCA6D,EAAM4kC,SAAW,IAAI,GAAO,CAC1B79E,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQk+E,SACf51B,MAAO,gBAGThP,EAAM0kC,iBAAmBJ,GAAyBz8E,KAAI,SAAUyoD,GAC9D,IAAIu0B,EAAW7kC,EAAMj5C,QAAQoxB,qBAI7B,OAFA0sD,EAAS/yE,KAAO,UAChB+yE,EAASh8D,UAAUjkB,MAAQ0rD,EACpBu0B,KAGT7kC,EAAM2kC,iBAAmBL,GAAyBz8E,KAAI,SAAUyoD,GAC9D,IAAIw0B,EAAW9kC,EAAMj5C,QAAQoxB,qBAI7B,OAFA2sD,EAAShzE,KAAO,UAChBgzE,EAASj8D,UAAUjkB,MAAQ0rD,EACpBw0B,KAGT9kC,EAAMykC,aAAeX,GAAkBj8E,KAAI,SAAUmlB,EAAW3Z,GAC9D,IAAI0xE,EAAO,IAAI,GAAkB,CAC/Bh+E,QAASi5C,EAAMj5C,QACfmyE,UAAWxyE,EAAQwyE,UACnBlsD,UAAWA,IAWb,OARI3Z,EAAQywE,GAAkBvwE,OAAS,EACrCysC,EAAMiiC,kBAAkB7qD,MAAM4oB,EAAOtC,EAAS,CAACqnC,GAAO/kC,EAAM0kC,mBAE5D1kC,EAAMkiC,mBAAmB9qD,MAAM4oB,EAAOtC,EAAS,CAACqnC,GAAO/kC,EAAM2kC,mBAG/D3kC,EAAM4kC,SAASz8E,QAAQ48E,EAAKtN,WAErBsN,KAETj8B,GAAS9I,EAAO,CAAC,aACVA,EA9DTlE,EAAU0oC,EAAU9hC,GAiEpB8hC,EAASviC,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAagB,cAAe,CAC/C2iC,SAAU,GACV1L,UAAW,OAIf70E,OAAOC,eAAekgF,EAASj/E,UAAW,YAAa,CAIrDf,IAAK,WACH,OAAOmQ,KAAK8vE,aAAa,GAAGvL,WAE9BpoE,IAAK,SAAU7M,GACb0Q,KAAK8vE,aAAanzE,SAAQ,SAAUtN,GAClC,OAAOA,EAAEk1E,UAAYj1E,MAGzBM,YAAY,EACZ4sB,cAAc,IAGhBqzD,EAASj/E,UAAU+6C,QAAU,WAgB3B,OAfAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+vE,iBAAiBpzE,SAAQ,SAAU0zE,GACtC,OAAOA,EAAG58E,gBAGZuM,KAAKgwE,iBAAiBrzE,SAAQ,SAAUmsC,GACtC,OAAOA,EAAGr1C,gBAGZuM,KAAK8vE,aAAanzE,SAAQ,SAAU2zE,GAClC,OAAOA,EAAG3kC,aAGZ3rC,KAAKiwE,SAAStkC,UACP3rC,MAzGX,CA6GE,IEjIyB,CAAC,OAAc,OAAc,OAAc,SAKlEuwE,GAAuB,CAAC,KAAO,KAAO,KAAO,MAK7CC,GAAqB,CAAC,IAAK,IAAK,ICJhC,IDuBJ,SAAUziC,GAGR,SAAS0iC,IACP,IAAIplC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBkkC,EAASnjC,cAAe9F,UAAW,CAAC,eAAiBxnC,KAExGqrC,EAAM97C,KAAO,WAKb87C,EAAMqlC,gBAAkB,GAKxBrlC,EAAMslC,qBAAuB,GAC7B,IAAI5+E,EAAUw6C,EAAqBkkC,EAASnjC,cAAe9F,UAAW,CAAC,aA0CvE,OAzCA6D,EAAM4kC,SAAW,IAAI,GAAO,CAC1B79E,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQk+E,SACf51B,MAAO,gBAEThP,EAAMulC,eAAiB,IAAI,GAAM,CAC/Bx+E,QAASi5C,EAAMj5C,QACfqV,KAAM,KACND,IAAK,OAGP6jC,EAAMqlC,gBAAkBF,GAAmBt9E,KAAI,SAAUyoD,GACvD,IAAIk1B,EAAUxlC,EAAMj5C,QAAQoxB,qBAI5B,OAFAqtD,EAAQ1zE,KAAO,UACf0zE,EAAQ38D,UAAUjkB,MAAQ0rD,EACnBk1B,KAGTxlC,EAAMslC,qBAAuBf,GAAqB18E,KAAI,SAAUmlB,EAAW3Z,GACzE,IAAIoyE,EAAO,IAAI,GAAmB,CAChC1+E,QAASi5C,EAAMj5C,QACfimB,UAAWA,IAab,OAVAgzB,EAAMulC,eAAep9E,QAAQs9E,EAAKhO,WAElCgO,EAAKhO,UAAU7yE,MAAQsgF,GAAqB7xE,GAExCA,EAAQkxE,GAAqBhxE,OAAS,EACxCysC,EAAMiiC,kBAAkB7qD,MAAM4oB,EAAOtC,EAASsC,EAAMqlC,gBAAiB,CAACI,KAEtEzlC,EAAMkiC,mBAAmB9qD,MAAM4oB,EAAOtC,EAASsC,EAAMqlC,gBAAiB,CAACI,KAGlEA,KAGTzlC,EAAM4kC,SAASz8E,QAAQ63C,EAAMulC,gBAE7Bz8B,GAAS9I,EAAO,CAAC,aACVA,EA1DTlE,EAAUspC,EAAU1iC,GA6DpB0iC,EAASnjC,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAagB,cAAe,CAC/C2iC,SAAU,MAIdQ,EAAS7/E,UAAU+6C,QAAU,WAe3B,OAdAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK0wE,gBAAgB/zE,SAAQ,SAAUo0E,GACrC,OAAOA,EAAIt9E,gBAGbuM,KAAK2wE,qBAAqBh0E,SAAQ,SAAUm0E,GAC1C,OAAOA,EAAKnlC,aAGd3rC,KAAKiwE,SAAStkC,UAEd3rC,KAAK4wE,eAAejlC,UAEb3rC,MAnFX,CAuFE,IC5GF,SAAU+tC,GAGR,SAASijC,EAAsBj/E,GAC7B,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAa1C,OAVAqrC,EAAMoiC,WAAWh6E,aAEjB43C,EAAMoiC,WAAWj6E,QAAQ63C,EAAMuiC,eAAgB,EAAG,GAGlDviC,EAAMqiC,WAAWj6E,aAEjB43C,EAAMqiC,WAAWl6E,QAAQ63C,EAAMuiC,eAAgB,EAAG,GAElDz5B,GAAS9I,EAAO,CAAC,aACVA,EAGT,OAnBAlE,EAAU6pC,EAAuBjjC,GAmB1BijC,EApBT,CAqBE,KCxBE,ICOJ,SAAUjjC,GAGR,SAASkjC,IACP,IAAI5lC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB0kC,EAAc3jC,cAAe9F,UAAW,CAAC,YAAa,eAAiBxnC,KAE1HqrC,EAAM97C,KAAO,gBACb,IAAIwC,EAAUw6C,EAAqB0kC,EAAc3jC,cAAe9F,UAAW,CAAC,YAAa,aA+BzF,OA9BA6D,EAAM6lC,WAAa,IAAI,GAAM,CAC3B9+E,QAASi5C,EAAMj5C,QACf+6D,SAAUp7D,EAAQo7D,WAEpB9hB,EAAM8lC,YAAc,IAAI,GAAM,CAC5B/+E,QAASi5C,EAAMj5C,QACf+6D,SAAUp7D,EAAQo7D,WAEpB9hB,EAAM+lC,eAAiB,IAAI,GAAM,CAC/Bh/E,QAASi5C,EAAMj5C,QACf+6D,SAAUp7D,EAAQo7D,WAEpB9hB,EAAMhzB,UAAY,IAAI,GAAO,CAC3BjmB,QAASi5C,EAAMj5C,QACfioD,MAAO,OACPpqD,MAAO8B,EAAQsmB,YAGjBgzB,EAAMiiC,kBAAkBjiC,EAAM6lC,YAE9B7lC,EAAMkiC,mBAAmBliC,EAAM+lC,eAAgB/lC,EAAM8lC,aAErD9lC,EAAMhzB,UAAUwqC,IAAIxX,EAAM6lC,WAAW74D,UAAWgzB,EAAM8lC,YAAY94D,UAAWgzB,EAAM+lC,eAAe/4D,WAGlGgzB,EAAMoiC,WAAWh6E,aAEjB43C,EAAMoiC,WAAWj6E,QAAQ63C,EAAM8lC,aAE/Bh9B,GAAS9I,EAAO,CAAC,cACVA,EArCTlE,EAAU8pC,EAAeljC,GAwCzBkjC,EAAc3jC,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAsBgB,cAAe,CACxDj1B,UAAW,IACX80C,SAAU,KAId8jB,EAAcrgF,UAAU+6C,QAAU,WAUhC,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkxE,WAAWvlC,UAEhB3rC,KAAKmxE,YAAYxlC,UAEjB3rC,KAAKoxE,eAAezlC,UAEpB3rC,KAAKqY,UAAUszB,UACR3rC,MA1DX,CA8DE,ICjEF,SAAU+tC,GAGR,SAASsjC,IACP,IAAIhmC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB8kC,EAAW/jC,cAAe9F,UAAW,CAAC,YAAcxnC,KAEvGqrC,EAAM97C,KAAO,aACb,IAAIwC,EAAUw6C,EAAqB8kC,EAAW/jC,cAAe9F,UAAW,CAAC,UACzE6D,EAAM92B,WAAa,IAAI,GAAO,CAC5BniB,QAASi5C,EAAMj5C,UAEjBi5C,EAAMimC,QAAU,IAAI,GAAM,CACxBnkB,SAAU,EACV/6D,QAASi5C,EAAMj5C,UAEjBi5C,EAAMkmC,MAAQ,IAAI,GAAI,CACpBn/E,QAASi5C,EAAMj5C,QACfqV,IAAK,EACLD,IAAK,GACLrK,KAAM,aACL3J,QAAQ63C,EAAMimC,QAAQj5D,WACzBgzB,EAAMmmC,QAAU,IAAI,GAAM,CACxBrkB,SAAU,EACV/6D,QAASi5C,EAAMj5C,UAEjBi5C,EAAMomC,MAAQ,IAAI,GAAI,CACpBr/E,QAASi5C,EAAMj5C,QACfqV,IAAK,EACLD,IAAK,GACLrK,KAAM,WACN61D,MAAO,MACNx/D,QAAQ63C,EAAMmmC,QAAQn5D,WACzBgzB,EAAMqmC,WAAa,IAAI,GAAU,CAC/Bt/E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMsmC,cAAgB,IAAI,GAAI,CAC5Bv/E,QAASi5C,EAAMj5C,QACfqV,IAAK,EACLD,IAAK,EACLrK,KAAM,WACN61D,MAAO,KACNx/D,QAAQ63C,EAAMqmC,WAAWjH,MAC5Bp/B,EAAMumC,eAAiB,IAAI,GAAM,CAC/Bv5D,UAAWtmB,EAAQsmB,UACnBjmB,QAASi5C,EAAMj5C,UAEjBi5C,EAAMhzB,UAAYgzB,EAAMumC,eAAev5D,UACvC87B,GAAS9I,EAAO,aAChBA,EAAMwmC,OAAS9/E,EAAQyqD,MACvBnR,EAAMymC,YAAc//E,EAAQggF,WAE5B1mC,EAAMimC,QAAQ99E,QAAQ63C,EAAMqmC,WAAW1sD,GAEvCqmB,EAAMmmC,QAAQh+E,QAAQ63C,EAAMqmC,WAAWzsD,GAGvComB,EAAM92B,WAAWsuC,IAAIxX,EAAMkmC,MAAMr9D,UAAWm3B,EAAMomC,MAAMv9D,UAAWm3B,EAAMsmC,cAAcz9D,WAGvFm3B,EAAMw/B,WAAWhoB,IAAIxX,EAAMimC,QAASjmC,EAAMmmC,SAE1CnmC,EAAMqmC,WAAWvzC,MAAMkN,EAAMumC,eAAgBvmC,EAAMy/B,cAGnD,IAAIz4B,EAAMhH,EAAMgH,MAUhB,OARAhH,EAAMkmC,MAAM7tE,MAAM2uC,GAElBhH,EAAMomC,MAAM/tE,MAAM2uC,GAElBhH,EAAMsmC,cAAcjuE,MAAM2uC,GAG1BhH,EAAM0mC,WAAa1mC,EAAMymC,YAClBzmC,EAzETlE,EAAUkqC,EAAYtjC,GA4EtBsjC,EAAW/jC,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAegB,cAAe,CACjDkP,MAAO,EACPu1B,WAAY,GACZ15D,UAAW,EACX3R,SAAU,KAIdhX,OAAOC,eAAe0hF,EAAWzgF,UAAW,QAAS,CASnDf,IAAK,WACH,OAAOmQ,KAAK6xE,QAEd11E,IAAK,SAAUuvC,GACb1rC,KAAK6xE,OAASnmC,EACd,IAAI0pB,EAAS,EAET1pB,EAAW,GACb1rC,KAAKuxE,MAAM9pE,IAAM,EACjBzH,KAAKuxE,MAAM/pE,IAAMxH,KAAK8xE,YACtB9xE,KAAKyxE,MAAMhqE,IAAM,EACjBzH,KAAKyxE,MAAMjqE,IAAMxH,KAAK8xE,YACtB1c,EAASxd,GAAyBlM,EAAW,GAAK,IAElD1rC,KAAKuxE,MAAM9pE,IAAMzH,KAAK8xE,YACtB9xE,KAAKuxE,MAAM/pE,IAAM,EACjBxH,KAAKyxE,MAAMhqE,IAAMzH,KAAK8xE,YACtB9xE,KAAKyxE,MAAMjqE,IAAM,EACjB4tD,EAASxd,GAAyBlM,GAAY,GAGhD1rC,KAAKuU,WAAWtkB,MAAQmlE,GAAU,IAAMp1D,KAAK8xE,cAE/CliF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe0hF,EAAWzgF,UAAW,aAAc,CAOxDf,IAAK,WACH,OAAOmQ,KAAK8xE,aAEd31E,IAAK,SAAUiK,GACbpG,KAAK8xE,YAAc9xE,KAAKg5C,UAAU5yC,GAClCpG,KAAKw8C,MAAQx8C,KAAK6xE,QAEpBjiF,YAAY,EACZ4sB,cAAc,IAGhB60D,EAAWzgF,UAAU+6C,QAAU,WAmB7B,OAlBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuU,WAAWo3B,UAEhB3rC,KAAKsxE,QAAQ3lC,UAEb3rC,KAAKwxE,QAAQ7lC,UAEb3rC,KAAKuxE,MAAM5lC,UAEX3rC,KAAKyxE,MAAM9lC,UAEX3rC,KAAK0xE,WAAW/lC,UAEhB3rC,KAAK2xE,cAAchmC,UAEnB3rC,KAAK4xE,eAAejmC,UAEb3rC,MA9JX,CAkKE,IC9JF,SAAU+tC,GAGR,SAASikC,IACP,IAAI3mC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBylC,EAAO1kC,cAAe9F,UAAW,CAAC,YAAa,UAAW,oBAAsBxnC,KAEnIqrC,EAAM97C,KAAO,SACb,IAAIwC,EAAUw6C,EAAqBylC,EAAO1kC,cAAe9F,UAAW,CAAC,YAAa,UAAW,kBA0C7F,OAzCA6D,EAAM0iC,MAAQ,IAAI,GAAI,CACpB37E,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnBzM,IAAK,EACLD,IAAK,IAEP6jC,EAAM2iC,MAAQ,IAAI,GAAI,CACpB57E,QAASi5C,EAAMj5C,QACf8hB,UAAWniB,EAAQmiB,UACnBzM,IAAK,EACLD,IAAK,EACLwrD,MAAO,MAET3nB,EAAMs2B,eAAiBt2B,EAAM8O,YAAYpoD,EAAQ6vE,eACjDv2B,EAAMo2B,SAAW1vE,EAAQ2vE,QACzBr2B,EAAMr3B,EAAI,IAAI,GAAO,CACnB5hB,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQiiB,EACfqmC,MAAO,aAEThP,EAAM4mC,UAAY5mC,EAAM6mC,aAAangF,EAAQogF,OAAQ9mC,EAAM0iC,OAC3D1iC,EAAM+mC,UAAY/mC,EAAM6mC,aAAangF,EAAQogF,OAAQ9mC,EAAM2iC,OAC3D3iC,EAAMn3B,UAAYm3B,EAAM0iC,MAAM75D,UAC9Bm3B,EAAMn3B,UAAUjkB,MAAQ8B,EAAQmiB,UAEhCm3B,EAAMiiC,kBAAkB7qD,MAAM4oB,EAAOtC,EAASsC,EAAM4mC,YAEpD5mC,EAAMkiC,mBAAmB9qD,MAAM4oB,EAAOtC,EAASsC,EAAM+mC,YAGrD/mC,EAAM0iC,MAAM75D,UAAU1gB,QAAQ63C,EAAM2iC,MAAM95D,WAG1Cm3B,EAAMu2B,cAAgB7vE,EAAQ6vE,cAC9Bv2B,EAAMq2B,QAAU3vE,EAAQ2vE,QAExBr2B,EAAM0iC,MAAMrqE,QAEZ2nC,EAAM2iC,MAAMtqE,QAEZywC,GAAS9I,EAAO,CAAC,YAAa,MACvBA,EAhDTlE,EAAU6qC,EAAQjkC,GAmDlBikC,EAAO1kC,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAagB,cAAe,CAC/Cp5B,UAAW,GACXwtD,QAAS,EACTyQ,OAAQ,GACRn+D,EAAG,GACH4tD,cAAe,OAInBoQ,EAAOphF,UAAUshF,aAAe,SAAUC,EAAQE,GAGhD,IAFA,IAAIC,EAAU,GAELtjF,EAAI,EAAGA,EAAImjF,EAAQnjF,IAAK,CAC/B,IAAIwgC,EAASxvB,KAAK5N,QAAQoxB,qBAC1BgM,EAAOryB,KAAO,UACd6C,KAAKgU,EAAExgB,QAAQg8B,EAAOxb,GACtBq+D,EAAc7+E,QAAQg8B,EAAOtb,WAC7Bo+D,EAAQ1xE,KAAK4uB,GAGf,OAAO8iD,GAGT5iF,OAAOC,eAAeqiF,EAAOphF,UAAW,UAAW,CAIjDf,IAAK,WACH,OAAOmQ,KAAKyhE,UAEdtlE,IAAK,SAAUulE,GACb1hE,KAAKyhE,SAAWC,EAChB,IAAIl6D,EAAMxH,KAAK2hE,eAAiB3jE,KAAKqB,IAAI,EAAGqiE,GAC5C1hE,KAAK+tE,MAAMvmE,IAAMA,EACjBxH,KAAKguE,MAAMxmE,IAAMA,GAEnB5X,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeqiF,EAAOphF,UAAW,gBAAiB,CAIvDf,IAAK,WACH,OAAOmQ,KAAK2hE,gBAEdxlE,IAAK,SAAUw/C,GACb37C,KAAK2hE,eAAiB3hE,KAAKm6C,YAAYwB,GACvC37C,KAAK+tE,MAAMtmE,IAAMzH,KAAK2hE,eACtB3hE,KAAKguE,MAAMvmE,IAAMzH,KAAK2hE,eACtB3hE,KAAK0hE,QAAU1hE,KAAKyhE,UAEtB7xE,YAAY,EACZ4sB,cAAc,IAGhBw1D,EAAOphF,UAAU+6C,QAAU,WAkBzB,OAjBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKgU,EAAE23B,UAEP3rC,KAAK+tE,MAAMpiC,UAEX3rC,KAAKguE,MAAMriC,UAEX3rC,KAAKiyE,UAAUt1E,SAAQ,SAAUyrC,GAC/B,OAAOA,EAAE30C,gBAGXuM,KAAKoyE,UAAUz1E,SAAQ,SAAUyrC,GAC/B,OAAOA,EAAE30C,gBAGXuM,KAAKkU,UAAUy3B,UACR3rC,MA/HX,CAmIE,ICnIF,SAAU+tC,GAGR,SAASwkC,IACP,IAAIlnC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgmC,EAAOjlC,cAAe9F,UAAW,CAAC,YAAcxnC,KAEnGqrC,EAAM97C,KAAO,SAKb87C,EAAMmnC,WAAannC,EAAMj5C,QAAQgyB,kBAOjCinB,EAAMonC,MAAQ5nE,QAAQC,UACtB,IAAI/Y,EAAUw6C,EAAqBgmC,EAAOjlC,cAAe9F,UAAW,CAAC,UAQrE,OAPA6D,EAAMqnC,OAAS3gF,EAAQ0qE,MACvBpxB,EAAMsnC,UAAY5gF,EAAQ6gF,SAE1BvnC,EAAMwnC,WAENxnC,EAAM0/B,cAAc1/B,EAAMmnC,YAEnBnnC,EA1BTlE,EAAUorC,EAAQxkC,GA6BlBwkC,EAAOjlC,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzCmvB,MAAO,IACPmW,SAAU,OAIdljF,OAAOC,eAAe4iF,EAAO3hF,UAAW,QAAS,CAI/Cf,IAAK,WACH,OAAOmQ,KAAK0yE,QAEdv2E,IAAK,SAAUwB,GAEburC,EADAvrC,EAAOqC,KAAKg5C,UAAUr7C,GACJ,MAClBqC,KAAK0yE,OAAS/0E,EACdqC,KAAK6yE,YAEPjjF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4iF,EAAO3hF,UAAW,WAAY,CAIlDf,IAAK,WACH,OAAOmQ,KAAK2yE,WAEdx2E,IAAK,SAAUwB,GAEburC,EADAvrC,EAAOqC,KAAKg5C,UAAUr7C,GACJ,GAClBqC,KAAK2yE,UAAYh1E,EACjBqC,KAAK6yE,YAEPjjF,YAAY,EACZ4sB,cAAc,IAOhB+1D,EAAO3hF,UAAUiiF,SAAW,WAC1B,OAAOlrC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAI8yE,EAAe1gF,EAAS2gF,EAAQC,EAAQC,EAAO/vD,EAAUgwD,EAAehnC,EAE5E,OAAOhE,EAAYloC,MAAM,SAAUmsC,GACjC,OAAQA,EAAG7D,OACT,KAAK,EA4BH,OA3BAwqC,EAAgB9yE,KAAKyyE,MACrBrgF,EAAU,IAAI,GAAe,EAAG4N,KAAK0yE,OAAS1yE,KAAK2yE,UAAW3yE,KAAK5N,QAAQmV,YAC3EwrE,EAAS,IAAI,GAAM,CACjB3gF,QAASA,IAEX4gF,EAAS,IAAI,GAAM,CACjB5gF,QAASA,IAEX6gF,EAAQ,IAAI,GAAM,CAChB7gF,QAASA,IAEX2gF,EAAOv/E,QAAQy/E,EAAO,EAAG,GACzBD,EAAOx/E,QAAQy/E,EAAO,EAAG,GACzB/vD,EAAW,IAAI,GAAK,CAClB9wB,QAASA,IACRqwD,gBACHwwB,EAAMz/E,QAAQ0vB,GACd6vD,EAAOrvE,MAAM,GACbsvE,EAAOtvE,MAAM,GAEbwf,EAASja,KAAK8H,eAAe,EAAG,GAChCmS,EAASja,KAAK8H,eAAe,EAAG/Q,KAAK2yE,WAErCzvD,EAASja,KAAKi4C,+BAA+B,EAAGlhD,KAAK2yE,UAAW3yE,KAAKy8D,OACrEyW,EAAgB9gF,EAAQsc,SACxB1O,KAAKyyE,MAAQS,EAAcxlE,KAAK2mC,IAEzB,CAAC,EAENy+B,GAEJ,KAAK,EAMH,OAJA3mC,EAAGpJ,OAGHmJ,EAAKlsC,KAAKwyE,WACH,CAAC,EAENU,GAEJ,KAAK,EAGH,OADAhnC,EAAGnwC,OAASowC,EAAGpJ,OAAOlzC,MACf,CAAC,EAENmQ,cAMZuyE,EAAO3hF,UAAU+6C,QAAU,WAKzB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKwyE,WAAW/+E,aAETuM,MA1IX,CA8IE,IJpJF,SAAU+tC,GAGR,SAASolC,IACP,IAAI9nC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB4mC,EAAa7lC,cAAe9F,aAAexnC,KAkC9F,OAhCAqrC,EAAM97C,KAAO,eACb87C,EAAMk/B,OAASl/B,EAAM9mC,MAAQ,IAAI,GAAM,CACrC8lC,SAAU,EACVj4C,QAASi5C,EAAMj5C,UAEjBi5C,EAAM+nC,QAAU,IAAI,GAAI,CACtBhhF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMi7B,IAAM,IAAI,GAAS,CACvBl0E,QAASi5C,EAAMj5C,QACfnC,MAAO+N,KAAKq1E,UAEdhoC,EAAMioC,cAAgB,IAAI,GAAS,CACjClhF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMkoC,KAAO,IAAI,GAAS,CACxBnhF,QAASi5C,EAAMj5C,QACfnC,MAAO+N,KAAKq1E,UAGdhoC,EAAMk/B,OAAO/2E,QAAQ63C,EAAM+nC,QAAS,GAEpC/nC,EAAMk/B,OAAO/2E,QAAQ63C,EAAM+nC,QAAQhb,OAAQ,GAE3C/sB,EAAMk/B,OAAO/2E,QAAQ63C,EAAMioC,cAAe,GAE1CjoC,EAAMk/B,OAAO/2E,QAAQ63C,EAAMioC,cAAcjY,WAAY,GAErDhwB,EAAM+nC,QAAQ5/E,QAAQ63C,EAAMi7B,KAE5Bj7B,EAAMioC,cAAc9/E,QAAQ63C,EAAMkoC,MAE3BloC,EAkBT,OAvDAlE,EAAUgsC,EAAcplC,GAwCxBolC,EAAaviF,UAAU+6C,QAAU,WAY/B,OAXAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsmE,IAAI36B,UACT3rC,KAAKuzE,KAAK5nC,UAEV3rC,KAAKozE,QAAQznC,UAEb3rC,KAAKszE,cAAc3nC,UAEnB3rC,KAAKuqE,OAAO5+B,UAEL3rC,MAGFmzE,EAxDT,CAyDE,KK3DE,GAEJ,SAAUplC,GAGR,SAASylC,IACP,IAAInoC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBinC,EAAalmC,cAAe9F,aAAexnC,KA2C9F,OAzCAqrC,EAAM97C,KAAO,eACb87C,EAAMi7B,IAAM,IAAI,GAAK,CACnBl0E,QAASi5C,EAAMj5C,UAEjBi5C,EAAMkoC,KAAO,IAAI,GAAK,CACpBnhF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMue,MAAQ,IAAI,GAAI,CACpBx3D,QAASi5C,EAAMj5C,UAEjBi5C,EAAMooC,UAAY,IAAI,GAAS,CAC7BrhF,QAASi5C,EAAMj5C,QACfnC,MAAO+N,KAAKq1E,UAEdhoC,EAAMwe,OAAS,IAAI,GAAS,CAC1Bz3D,QAASi5C,EAAMj5C,UAEjBi5C,EAAMqoC,WAAa,IAAI,GAAS,CAC9BthF,QAASi5C,EAAMj5C,QACfnC,MAAO+N,KAAKq1E,UAEdhoC,EAAMgiC,OAAShiC,EAAM/mC,OAAS,IAAI,GAAM,CACtClS,QAASi5C,EAAMj5C,UAGjBi5C,EAAMi7B,IAAIzjB,IAAIxX,EAAMue,OAEpBve,EAAMkoC,KAAK//E,QAAQ63C,EAAMue,MAAMwO,QAE/B/sB,EAAMi7B,IAAI9yE,QAAQ63C,EAAMwe,QAExBxe,EAAMkoC,KAAK//E,QAAQ63C,EAAMwe,OAAOwR,YAEhChwB,EAAMue,MAAMp2D,QAAQ63C,EAAMooC,WAE1BpoC,EAAMwe,OAAOr2D,QAAQ63C,EAAMqoC,YAE3BroC,EAAMooC,UAAUjgF,QAAQ63C,EAAMgiC,OAAQ,EAAG,GAEzChiC,EAAMqoC,WAAWlgF,QAAQ63C,EAAMgiC,OAAQ,EAAG,GAEnChiC,EAoBT,OAlEAlE,EAAUqsC,EAAczlC,GAiDxBylC,EAAa5iF,UAAU+6C,QAAU,WAc/B,OAbAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsmE,IAAI36B,UACT3rC,KAAKuzE,KAAK5nC,UAEV3rC,KAAKyzE,UAAU9nC,UAEf3rC,KAAK0zE,WAAW/nC,UAEhB3rC,KAAK4pD,MAAMje,UAEX3rC,KAAK6pD,OAAOle,UAEL3rC,MAGFwzE,EAnET,CAoEE,ICxEE,GAEJ,SAAUzlC,GAGR,SAAS4lC,EAAc5hF,GACrB,IAAIs5C,EAAQ0C,EAAO5+C,KAAK6Q,KAAMjO,IAAYiO,KAkB1C,OAhBAqrC,EAAM97C,KAAO,gBACb87C,EAAMuoC,cAAgB,IAAI,GAAa,CACrCxhF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMwoC,cAAgB,IAAI,GAAa,CACrCzhF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMyoC,SAAWzoC,EAAMwoC,cAAcvN,IACrCj7B,EAAM0oC,UAAY1oC,EAAMwoC,cAAcN,KACtCloC,EAAM2oC,WAAa3oC,EAAMuoC,cAActN,IACvCj7B,EAAM4oC,YAAc5oC,EAAMuoC,cAAcL,KAExCloC,EAAMw/B,WAAWr3E,QAAQ63C,EAAMwoC,eAE/BxoC,EAAMuoC,cAAcpgF,QAAQ63C,EAAMy/B,cAE3Bz/B,EAqDT,OA1EAlE,EAAUwsC,EAAe5lC,GA4BzB4lC,EAAc/iF,UAAUsjF,iBAAmB,WAKzC,IAJA,IAAIhoC,EAEAyW,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,IAGvB0L,EAAKlsC,KAAK8zE,UAAU31C,MAAM1b,MAAMypB,EAAInD,EAAS4Z,EAAO,CAAC3iD,KAAKg0E,eAO7DL,EAAc/iF,UAAUujF,kBAAoB,WAK1C,IAJA,IAAIjoC,EAEAyW,EAAQ,GAEHniB,EAAK,EAAGA,EAAKgH,UAAU5oC,OAAQ4hC,IACtCmiB,EAAMniB,GAAMgH,UAAUhH,IAGvB0L,EAAKlsC,KAAK+zE,WAAW51C,MAAM1b,MAAMypB,EAAInD,EAAS4Z,EAAO,CAAC3iD,KAAKi0E,gBAG9DN,EAAc/iF,UAAU+6C,QAAU,WAehC,OAdAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK6zE,cAAcloC,UAEnB3rC,KAAK4zE,cAAcjoC,UAEnB3rC,KAAK8zE,SAASnoC,UAEd3rC,KAAK+zE,UAAUpoC,UAEf3rC,KAAKg0E,WAAWroC,UAEhB3rC,KAAKi0E,YAAYtoC,UAEV3rC,MAGF2zE,EA3ET,CA4EE,IChFE,ICSJ,SAAU5lC,GAGR,SAASqmC,IACP,IAAI/oC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB6nC,EAAc9mC,cAAe9F,UAAW,CAAC,YAAcxnC,KAE1GqrC,EAAM97C,KAAO,gBACb,IAAIwC,EAAUw6C,EAAqB6nC,EAAc9mC,cAAe9F,UAAW,CAAC,UA2C5E,OA1CA6D,EAAM4qB,MAAQ,IAAI,GAAO,CACvB7jE,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQkkE,MACf5b,MAAO,gBAETlG,GAAS9I,EAAO,CAAC,UACjBA,EAAMgpC,kBAAoB,IAAI,GAAS,CACrCjiF,QAASi5C,EAAMj5C,QACfnC,MAAO,IAETo7C,EAAMipC,mBAAqB,IAAI,GAAS,CACtCliF,QAASi5C,EAAMj5C,QACfnC,MAAO,IAETo7C,EAAMkpC,SAAW,IAAI,GAAS,CAC5BniF,QAASi5C,EAAMj5C,UAGjBi5C,EAAMgpC,kBAAkB7gF,QAAQ63C,EAAMkpC,SAASnf,QAE/C/pB,EAAM6oC,iBAAiB7oC,EAAMkpC,UAE7BlpC,EAAMmpC,eAAiB,IAAI,GAAS,CAClCpiF,QAASi5C,EAAMj5C,UAGjBi5C,EAAMmpC,eAAehhF,QAAQ63C,EAAMgpC,mBAEnC7gF,GAAQ63C,EAAMj5C,QAAQmgD,YAAY,GAAIlH,EAAMmpC,gBAE5CnpC,EAAM4qB,MAAMziE,QAAQ63C,EAAMmpC,eAAenZ,YAEzChwB,EAAMopC,UAAY,IAAI,GAAS,CAC7BriF,QAASi5C,EAAMj5C,UAGjBi5C,EAAM4qB,MAAMziE,QAAQ63C,EAAMipC,oBAE1BjpC,EAAMipC,mBAAmB9gF,QAAQ63C,EAAMopC,UAAUrf,QAEjD/pB,EAAM8oC,kBAAkB9oC,EAAMopC,WAEvBppC,EAjDTlE,EAAUitC,EAAermC,GAoDzBqmC,EAAc9mC,YAAc,WAC1B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChD2oB,MAAO,MAIXme,EAAcxjF,UAAU+6C,QAAU,WAehC,OAdAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKi2D,MAAMtqB,UAEX3rC,KAAKu0E,SAAS5oC,UAEd3rC,KAAKy0E,UAAU9oC,UAEf3rC,KAAKq0E,kBAAkB1oC,UAEvB3rC,KAAKs0E,mBAAmB3oC,UAExB3rC,KAAKw0E,eAAe7oC,UAEb3rC,MA1EX,CA8EE,IC7EF,SAAU+tC,GAGR,SAAS2mC,IACP,IAAIrpC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmoC,EAAQpnC,cAAe9F,UAAW,CAAC,YAAa,YAAcxnC,KAEjHqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBmoC,EAAQpnC,cAAe9F,UAAW,CAAC,YAAa,UA4CnF,OA3CA6D,EAAM0iC,MAAQ,IAAI,GAAI,CACpB37E,QAASi5C,EAAMj5C,QACf+K,KAAMpL,EAAQoL,KACdsK,IAAK,EACLD,IAAK,IAEP6jC,EAAM2iC,MAAQ,IAAI,GAAI,CACpB57E,QAASi5C,EAAMj5C,QACf+K,KAAMpL,EAAQoL,KACdsK,IAAK,EACLD,IAAK,IAEP6jC,EAAMspC,YAAc,IAAI,GAAK,CAC3BviF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMupC,YAAc,IAAI,GAAK,CAC3BxiF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMn3B,UAAY,IAAI,GAAO,CAC3B9hB,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQmiB,UACfmmC,MAAO,cAEThP,EAAM8/B,MAAQ,IAAI,GAAO,CACvB/4E,QAASi5C,EAAMj5C,QACfnC,MAAO8B,EAAQo5E,MACf9wB,MAAO,gBAETlG,GAAS9I,EAAO,CAAC,YAAa,UAE9BA,EAAMiiC,kBAAkBjiC,EAAMspC,aAE9BtpC,EAAMkiC,mBAAmBliC,EAAMupC,aAE/BvpC,EAAM0iC,MAAMv6E,QAAQ63C,EAAMspC,YAAY1rE,MAEtCoiC,EAAM2iC,MAAMx6E,QAAQ63C,EAAMupC,YAAY3rE,MAEtCoiC,EAAMn3B,UAAU2uC,IAAIxX,EAAM0iC,MAAM75D,UAAWm3B,EAAM2iC,MAAM95D,WAEvDm3B,EAAM8/B,MAAMtoB,IAAIxX,EAAM2iC,MAAMjV,UAAW1tB,EAAM0iC,MAAMhV,WAEnD1tB,EAAMirB,OAASvkE,EAAQukE,OAChBjrB,EAlDTlE,EAAUutC,EAAS3mC,GAqDnB2mC,EAAQpnC,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAagB,cAAe,CAC/Cp5B,UAAW,GACX/W,KAAM,OACNguE,MAAO,GACP7U,OAAQ,OAQZoe,EAAQ9jF,UAAU8S,MAAQ,SAAU/F,GAKlC,OAJAqC,KAAK+tE,MAAMrqE,MAAM/F,GAEjBqC,KAAKguE,MAAMtqE,MAAM/F,GAEVqC,MAOT00E,EAAQ9jF,UAAUmT,KAAO,SAAUpG,GAKjC,OAJAqC,KAAK+tE,MAAMhqE,KAAKpG,GAEhBqC,KAAKguE,MAAMjqE,KAAKpG,GAETqC,MAOT00E,EAAQ9jF,UAAU0+D,KAAO,WAMvB,OALAtvD,KAAK+tE,MAAMze,OAEXtvD,KAAKguE,MAAM1e,OAEXtvD,KAAK5N,QAAQsmD,UAAUkU,WAAW5sD,KAAKkU,WAChClU,MAOT00E,EAAQ9jF,UAAU6+D,OAAS,WAMzB,OALAzvD,KAAK+tE,MAAMte,SAEXzvD,KAAKguE,MAAMve,SAEXzvD,KAAK5N,QAAQsmD,UAAUqU,aAAa/sD,KAAKkU,WAClClU,MAGTtQ,OAAOC,eAAe+kF,EAAQ9jF,UAAW,OAAQ,CAI/Cf,IAAK,WACH,OAAOmQ,KAAK+tE,MAAM5wE,MAEpBhB,IAAK,SAAUgB,GACb6C,KAAK+tE,MAAM5wE,KAAOA,EAClB6C,KAAKguE,MAAM7wE,KAAOA,GAEpBvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe+kF,EAAQ9jF,UAAW,SAAU,CAKjDf,IAAK,WACH,OAAOmQ,KAAKguE,MAAMhb,MAAQhzD,KAAK+tE,MAAM/a,OAEvC72D,IAAK,SAAUm6D,GACbt2D,KAAK+tE,MAAM/a,MAAQ,GAAKsD,EAAS,EACjCt2D,KAAKguE,MAAMhb,MAAQsD,EAAS,EAAI,IAElC1mE,YAAY,EACZ4sB,cAAc,IAGhBk4D,EAAQ9jF,UAAU+6C,QAAU,WAa1B,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+tE,MAAMpiC,UAEX3rC,KAAKguE,MAAMriC,UAEX3rC,KAAK20E,YAAYhpC,UAEjB3rC,KAAK40E,YAAYjpC,UAEjB3rC,KAAKkU,UAAUy3B,UACf3rC,KAAKmrE,MAAMx/B,UACJ3rC,MA5JX,CAgKE,ICxKF,SAAU+tC,GAGR,SAAS8mC,IACP,IAAIxpC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBsoC,EAAQvnC,cAAe9F,UAAW,CAAC,YAAa,YAAcxnC,KAEjHqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBsoC,EAAQvnC,cAAe9F,UAAW,CAAC,YAAa,UAsBnF,OArBA6D,EAAMgiB,WAAa,IAAI,GAAM,CAC3Bj7D,QAASi5C,EAAMj5C,QACfimB,UAAW,EACX80C,SAAUp7D,EAAQo7D,WAEpB9hB,EAAM6/B,KAAO,IAAI,GAAI,CACnB94E,QAASi5C,EAAMj5C,QACf+K,KAAMpL,EAAQoL,KACdsK,IAAK,EACLD,IAAKzV,EAAQo7D,SACbj5C,UAAWniB,EAAQmiB,UACnB8+C,OAAQ,KAEPtvD,QAAQlQ,QAAQ63C,EAAMgiB,WAAWh1C,WACpCgzB,EAAMn3B,UAAYm3B,EAAM6/B,KAAKh3D,UAC7Bm3B,EAAM8/B,MAAQ9/B,EAAM6/B,KAAKnS,UACzB1tB,EAAM8/B,MAAMl7E,MAAQ8B,EAAQo5E,MAC5Bh3B,GAAS9I,EAAO,CAAC,YAAa,UAE9BA,EAAMw/B,WAAW1sC,MAAMkN,EAAMgiB,WAAYhiB,EAAMy/B,cAExCz/B,EA5BTlE,EAAU0tC,EAAS9mC,GA+BnB8mC,EAAQvnC,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAOgB,cAAe,CACzC6f,SAAU,KACVj5C,UAAW,EACXi3D,MAAO,GACPhuE,KAAM,UAIVzN,OAAOC,eAAeklF,EAAQjkF,UAAW,OAAQ,CAI/Cf,IAAK,WACH,OAAOmQ,KAAKkrE,KAAK/tE,MAEnBhB,IAAK,SAAUgB,GACb6C,KAAKkrE,KAAK/tE,KAAOA,GAEnBvN,YAAY,EACZ4sB,cAAc,IAGhBq4D,EAAQjkF,UAAU+6C,QAAU,WAS1B,OARAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKqtD,WAAW1hB,UAEhB3rC,KAAKkrE,KAAKv/B,UAEV3rC,KAAKkU,UAAUy3B,UACf3rC,KAAKmrE,MAAMx/B,UACJ3rC,MAhEX,CAoEE,IHpEF,SAAU+tC,GAGR,SAAS+mC,IACP,IAAIzpC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBuoC,EAASxnC,cAAe9F,UAAW,CAAC,OAAQ,WAAaxnC,KAE5GqrC,EAAM97C,KAAO,WAKb87C,EAAM0pC,WAAa,GAKnB1pC,EAAMuiB,SAAW,GACjB,IAAI77D,EAAUw6C,EAAqBuoC,EAASxnC,cAAe9F,UAAW,CAAC,OAAQ,SAC/E6D,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS+mC,EAAM72B,MAAQ,IAAI,GAAK,CAClDpiB,QAASi5C,EAAMj5C,UAEjBi5C,EAAMk/B,OAAS,IAAI,GAAM,CACvBn4E,QAASi5C,EAAMj5C,QACfi4C,SAAUt4C,EAAQs4C,WAGpBgB,EAAM9mC,MAAM/Q,QAAQ63C,EAAMk/B,QAE1BrhC,EAAYn3C,EAAQs4C,SAAU,GAE9B,IAAK,IAAI9mC,EAAU,EAAGA,EAAUxR,EAAQs4C,SAAU9mC,IAChD8nC,EAAM0pC,WAAWxxE,GAAW8nC,EAAMj5C,QAAQurC,iBAE1C0N,EAAMk/B,OAAO/2E,QAAQ63C,EAAM0pC,WAAWxxE,GAAUA,EAAS,GAM3D,OAFA8nC,EAAMjlC,KAAOrU,EAAQqU,KACrBilC,EAAMluC,KAAOpL,EAAQoL,KACdkuC,EAmHT,OAzJAlE,EAAU2tC,EAAU/mC,GAyCpB+mC,EAASxnC,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDlnC,KAAM,KACNqlE,UAAW,GACXtuE,KAAM,MACNktC,SAAU,KAWdyqC,EAASlkF,UAAUiQ,SAAW,WAC5B,IAAIwqC,EAAQrrC,KAYZ,OAVAA,KAAK+0E,WAAWp4E,SAAQ,SAAUq4E,EAAUt2E,GAC1C,IAAI3C,EAASsvC,EAAMuiB,SAASlvD,GAER,QAAhB2sC,EAAMV,MACRqqC,EAAS3qE,sBAAsBtO,GACN,aAAhBsvC,EAAMV,OACfqqC,EAAS1qE,uBAAuBvO,MAId,IAAlBiE,KAAKqqC,SACArqC,KAAK4tD,SAAS,GAEd5tD,KAAK4tD,UAIhBl+D,OAAOC,eAAemlF,EAASlkF,UAAW,OAAQ,CAIhDf,IAAK,WACH,OAAOmQ,KAAK+0E,WAAW,GAAG7qE,mBAE5B/N,IAAK,SAAUiK,GACb,IAAIilC,EAAQrrC,KAEZA,KAAK+0E,WAAWp4E,SAAQ,SAAUq4E,EAAUt2E,GAC1Cs2E,EAASxrE,QAAiB,EAAPpD,EACnBilC,EAAMuiB,SAASlvD,GAAS,IAAIoC,aAAasF,OAG7CxW,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemlF,EAASlkF,UAAW,WAAY,CAKpDf,IAAK,WACH,OAAOmQ,KAAK+0E,WAAWn2E,QAEzBhP,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemlF,EAASlkF,UAAW,OAAQ,CAIhDf,IAAK,WACH,OAAOmQ,KAAK2qC,OAEdxuC,IAAK,SAAUgB,GACb6rC,EAAgB,aAAT7rC,GAAgC,QAATA,EAAgB,2BAA6BA,GAC3E6C,KAAK2qC,MAAQxtC,GAEfvN,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemlF,EAASlkF,UAAW,YAAa,CAIrDf,IAAK,WACH,OAAOmQ,KAAK+0E,WAAW,GAAGprE,uBAE5BxN,IAAK,SAAUq2C,GACbxyC,KAAK+0E,WAAWp4E,SAAQ,SAAUqoB,GAChC,OAAOA,EAAErb,sBAAwB6oC,MAGrC5iD,YAAY,EACZ4sB,cAAc,IAMhBs4D,EAASlkF,UAAU+6C,QAAU,WAW3B,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK+0E,WAAWp4E,SAAQ,SAAUqoB,GAChC,OAAOA,EAAEvxB,gBAGXuM,KAAKuqE,OAAO5+B,UAEZ3rC,KAAKwU,MAAMm3B,UAEJ3rC,MAGF80E,EA1JT,CA2JE,KIjKE,GAEJ,SAAU/mC,GAGR,SAASknC,IACP,IAAI5pC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB0oC,EAAU3nC,cAAe9F,aAAexnC,KAQ3F,OANAqrC,EAAM97C,KAAO,YACb87C,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS+mC,EAAM6pC,UAAY,IAAI,GAAS,CAC1D9iF,QAASi5C,EAAMj5C,QACfgU,KAAM,IACNjJ,KAAM,aAEDkuC,EAWT,OAtBAlE,EAAU8tC,EAAWlnC,GAcrBknC,EAAUrkF,UAAU+6C,QAAU,WAK5B,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKk1E,UAAUvpC,UAER3rC,MAGFi1E,EAvBT,CAwBE,ICjBE,ICMJ,SAAUlnC,GAGR,SAASonC,IACP,IAAI9pC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB4oC,EAAM7nC,cAAe9F,UAAW,CAAC,gBAAkBxnC,KAEtGqrC,EAAM97C,KAAO,QAKb87C,EAAM+pC,KAAO,EACb,IAAIrjF,EAAUw6C,EAAqB4oC,EAAM7nC,cAAe9F,UAAW,CAAC,cAQpE,OAPA6D,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS+mC,EAAM6pC,UAAY,IAAI,GAAS,CAC1D9iF,QAASi5C,EAAMj5C,QACfgU,KAAM,IACNjJ,KAAM,WACNktC,SAAUt4C,EAAQs4C,WAEpBgB,EAAMogC,UAAY15E,EAAQ05E,UAAWpgC,EAAMgqC,YAActjF,EAAQsjF,YAC1DhqC,EAnBTlE,EAAUguC,EAAOpnC,GAsBjBonC,EAAM7nC,YAAc,WAClB,OAAO59C,OAAO48C,OAAO,GAAUgB,cAAe,CAC5Cm+B,UAAW,GACX4J,aAAa,EACbhrC,SAAU,KASd8qC,EAAMvkF,UAAU0kF,SAAW,WAEzB,OADA/rC,EAAK,6CACEvpC,KAAKa,YAWds0E,EAAMvkF,UAAUiQ,SAAW,WACzB,IAAIwqC,EAAQrrC,KAERu1E,EAAUv1E,KAAKk1E,UAAUr0E,WAGzB20E,GADkC,IAAlBx1E,KAAKqqC,SAAiB,CAACkrC,GAAWA,GAC7BriF,KAAI,SAAUsK,GACrC,IAAIi4E,EAAej4E,EAAOkyB,QAAO,SAAU0rB,EAAO2H,GAChD,OAAO3H,EAAQ2H,EAAUA,IACxB,GACC2yB,EAAM13E,KAAKkoB,KAAKuvD,EAAej4E,EAAOoB,QAI1C,OADAysC,EAAM+pC,KAAOp3E,KAAKwJ,IAAIkuE,EAAKrqC,EAAM+pC,KAAO/pC,EAAMogC,WACvCpgC,EAAMgqC,YAAchqC,EAAM+pC,KAAO19B,GAASrM,EAAM+pC,SAGzD,OAAsB,IAAlBp1E,KAAKqqC,SACAmrC,EAAK,GAELA,GAIX9lF,OAAOC,eAAewlF,EAAMvkF,UAAW,WAAY,CAIjDf,IAAK,WACH,OAAOmQ,KAAKk1E,UAAU7qC,UAExBz6C,YAAY,EACZ4sB,cAAc,IAGhB24D,EAAMvkF,UAAU+6C,QAAU,WAKxB,OAJAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKk1E,UAAUvpC,UAER3rC,MAzFX,CA6FE,ICxGF,SAAU+tC,GAGR,SAAS4nC,IACP,IAAItqC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBopC,EAAIroC,cAAe9F,UAAW,CAAC,WAAaxnC,KAE/FqrC,EAAM97C,KAAO,MACb,IAAIwC,EAAUw6C,EAAqBopC,EAAIroC,cAAe9F,UAAW,CAAC,SAIlE,OAHA6D,EAAMgqC,YAActjF,EAAQsjF,YAC5BhqC,EAAM6pC,UAAU/3E,KAAO,MACvBkuC,EAAMjlC,KAAOrU,EAAQqU,KACdilC,EAVTlE,EAAUwuC,EAAK5nC,GAaf4nC,EAAIroC,YAAc,WAChB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChD+nC,aAAa,EACbjvE,KAAM,KACNqlE,UAAW,MASfkK,EAAI/kF,UAAUiQ,SAAW,WACvB,IAAIwqC,EAAQrrC,KAIZ,OAFaA,KAAKk1E,UAAUr0E,WAEd3N,KAAI,SAAUw1C,GAC1B,OAAO2C,EAAMgqC,YAAc79B,GAAS9O,GAAKA,MAI7Ch5C,OAAOC,eAAegmF,EAAI/kF,UAAW,OAAQ,CAM3Cf,IAAK,WACH,OAAOmQ,KAAKk1E,UAAU9uE,MAExBjK,IAAK,SAAUiK,GACbpG,KAAKk1E,UAAU9uE,KAAOA,GAExBxW,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAegmF,EAAI/kF,UAAW,YAAa,CAIhDf,IAAK,WACH,OAAOmQ,KAAKk1E,UAAUzJ,WAExBtvE,IAAK,SAAUq2C,GACbxyC,KAAKk1E,UAAUzJ,UAAYj5B,GAE7B5iD,YAAY,EACZ4sB,cAAc,IA/DlB,CAkEE,IC3DF,SAAUuxB,GAGR,SAAS6nC,IACP,IAAIvqC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBqpC,EAAQtoC,cAAe9F,aAAexnC,KAKzF,OAHAqrC,EAAM97C,KAAO,UACb87C,EAAM6pC,UAAU/3E,KAAO,WACvBkuC,EAAM6pC,UAAU9uE,KAAO,IAChBilC,EARTlE,EAAUyuC,EAAS7nC,GAenB6nC,EAAQhlF,UAAUiQ,SAAW,WAG3B,OAFYb,KAAKk1E,UAAUr0E,WAEd,IAnBjB,CAuBE,IChCF,SAAUktC,GAGR,SAAS8nC,IACP,IAAIxqC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBspC,EAASvoC,cAAe9F,UAAW,CAAC,WAAaxnC,KAEpGqrC,EAAM97C,KAAO,WACb,IAAIwC,EAAUw6C,EAAqBspC,EAASvoC,cAAe9F,UAAW,CAAC,SAGvE,OAFA6D,EAAM6pC,UAAU/3E,KAAO,WACvBkuC,EAAMjlC,KAAOrU,EAAQqU,KACdilC,EATTlE,EAAU0uC,EAAU9nC,GAYpB8nC,EAASvoC,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAUgB,cAAe,CAC5ClnC,KAAM,QASVyvE,EAASjlF,UAAUiQ,SAAW,WAC5B,OAAOb,KAAKk1E,UAAUr0E,YAGxBnR,OAAOC,eAAekmF,EAASjlF,UAAW,OAAQ,CAKhDf,IAAK,WACH,OAAOmQ,KAAKk1E,UAAU9uE,MAExBjK,IAAK,SAAUiK,GACbpG,KAAKk1E,UAAU9uE,KAAOA,GAExBxW,YAAY,EACZ4sB,cAAc,IAxClB,CA2CE,IJlCF,SAAUuxB,GAGR,SAAS+nC,IACP,IAAIzqC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBupC,EAAKxoC,cAAe9F,UAAW,CAAC,WAAaxnC,KAEhGqrC,EAAM97C,KAAO,OACb,IAAIwC,EAAUw6C,EAAqBupC,EAAKxoC,cAAe9F,UAAW,CAAC,SAanE,OAZA6D,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS,IAAI,GAAK,CACpClS,QAASi5C,EAAMj5C,UAGZ0jF,EAAKC,UAAUr5E,IAAI2uC,EAAMj5C,UAC5B0jF,EAAKC,UAAU55E,IAAIkvC,EAAMj5C,QAAS,IAAIiW,KAGxCytE,EAAKC,UAAUlmF,IAAIw7C,EAAMj5C,SAASoK,IAAI6uC,GAGtCA,EAAM2qC,KAAOjkF,EAAQikF,KACd3qC,EAqHT,OAxIAlE,EAAU2uC,EAAM/nC,GAsBhB+nC,EAAKxoC,YAAc,WACjB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChD0oC,MAAM,KAIVtmF,OAAOC,eAAemmF,EAAKllF,UAAW,OAAQ,CAM5Cf,IAAK,WACH,OAAOmQ,KAAKi2E,aAEd95E,IAAK,SAAU65E,GACTA,EACFh2E,KAAKk2E,WAELl2E,KAAKm2E,cAGPL,EAAKC,UAAUlmF,IAAImQ,KAAK5N,SAASuK,SAAQ,SAAU4O,GACjD,OAAOA,EAAS6qE,kBAGpBxmF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAemmF,EAAKllF,UAAW,QAAS,CAI7Cf,IAAK,WACH,OAAiC,IAA1BmQ,KAAKuE,MAAM0E,KAAKhZ,OAEzBL,YAAY,EACZ4sB,cAAc,IAMhBs5D,EAAKllF,UAAUslF,SAAW,WACnBJ,EAAKO,QAAQ35E,IAAIsD,KAAK5N,UACzB0jF,EAAKO,QAAQl6E,IAAI6D,KAAK5N,QAAS,IAAIiW,KAGrCytE,EAAKO,QAAQxmF,IAAImQ,KAAK5N,SAASoK,IAAIwD,OAOrC81E,EAAKllF,UAAUulF,YAAc,WACvBL,EAAKO,QAAQ35E,IAAIsD,KAAK5N,UACxB0jF,EAAKO,QAAQxmF,IAAImQ,KAAK5N,SAASiQ,OAAOrC,OAQ1C81E,EAAKllF,UAAUqlF,UAAY,WACzB,OAAOH,EAAKO,QAAQ35E,IAAIsD,KAAK5N,UAAY0jF,EAAKO,QAAQxmF,IAAImQ,KAAK5N,SAASsK,IAAIsD,OAO9E81E,EAAKllF,UAAU0lF,SAAW,WAExB,OAAQR,EAAKO,QAAQ35E,IAAIsD,KAAK5N,UAC9B0jF,EAAKO,QAAQ35E,IAAIsD,KAAK5N,UAAoD,IAAxC0jF,EAAKO,QAAQxmF,IAAImQ,KAAK5N,SAASgU,MAOnE0vE,EAAKllF,UAAUwlF,YAAc,WACvBp2E,KAAKi2E,aAEEj2E,KAAKs2E,WADdt2E,KAAKuE,MAAM0E,KAAKhZ,MAAQ,EAKxB+P,KAAKuE,MAAM0E,KAAKhZ,MAAQ,GAI5B6lF,EAAKllF,UAAU+6C,QAAU,WAOvB,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9B81E,EAAKC,UAAUlmF,IAAImQ,KAAK5N,SAASiQ,OAAOrC,MAExCA,KAAKm2E,cAEEn2E,MAOT81E,EAAKC,UAAY,IAAIliF,IAKrBiiF,EAAKO,QAAU,IAAIxiF,IACZiiF,EAzIT,CA0IE,KK9IE,GAEJ,SAAU/nC,GAGR,SAASwoC,IACP,IAAIlrC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgqC,EAAOjpC,cAAe9F,UAAW,CAAC,MAAO,aAAexnC,KAE3GqrC,EAAM97C,KAAO,SACb,IAAIwC,EAAUw6C,EAAqBgqC,EAAOjpC,cAAe9F,UAAW,CAAC,MAAO,WAiB5E,OAhBA6D,EAAMi/B,QAAUj/B,EAAM9mC,MAAQ,IAAI,GAAO,CACvCnS,QAASi5C,EAAMj5C,QACf65B,IAAKl6B,EAAQk6B,IACbnjB,aAAc/W,EAAQ+W,eAExBuiC,EAAMpf,IAAMof,EAAMi/B,QAAQr+C,IAC1Bof,EAAM0jB,QAAU1jB,EAAM/mC,OAAS,IAAI,GAAO,CACxClS,QAASi5C,EAAMj5C,QACfm7D,OAAQx7D,EAAQw7D,SAElBliB,EAAMkiB,OAASliB,EAAM0jB,QAAQxB,OAE7BliB,EAAMi/B,QAAQ92E,QAAQ63C,EAAM0jB,SAE5B1jB,EAAMoiB,KAAO17D,EAAQ07D,KACrBtZ,GAAS9I,EAAO,CAAC,MAAO,WACjBA,EAuCT,OA9DAlE,EAAUovC,EAAQxoC,GA0BlBwoC,EAAOjpC,YAAc,WACnB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDmgB,MAAM,EACNxhC,IAAK,EACLshC,OAAQ,EACRzkD,aAAc,KAIlBpZ,OAAOC,eAAe4mF,EAAO3lF,UAAW,OAAQ,CAI9Cf,IAAK,WACH,OAAOmQ,KAAK+uD,QAAQtB,MAEtBtxD,IAAK,SAAUsxD,GACbztD,KAAK+uD,QAAQtB,KAAOA,GAEtB79D,YAAY,EACZ4sB,cAAc,IAGhB+5D,EAAO3lF,UAAU+6C,QAAU,WAUzB,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsqE,QAAQ3+B,UAEb3rC,KAAKisB,IAAI0f,UAET3rC,KAAK+uD,QAAQpjB,UAEb3rC,KAAKutD,OAAO5hB,UACL3rC,MAGFu2E,EA/DT,CAgEE,ICvDE,ICRJ,SAAUxoC,GAGR,SAASyoC,IACP,IAAInrC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBiqC,EAAQlpC,cAAe9F,UAAW,CAAC,SAAU,UAAYxnC,KAE5GqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBiqC,EAAQlpC,cAAe9F,UAAW,CAAC,SAAU,QAiBhF,OAhBA6D,EAAMorC,MAAQprC,EAAM9mC,MAAQ,IAAI,GAAK,CACnCyxE,KAAMjkF,EAAQikF,KACd5jF,QAASi5C,EAAMj5C,UAEjBi5C,EAAMqrC,QAAUrrC,EAAM/mC,OAAS,IAAI,GAAO,CACxClS,QAASi5C,EAAMj5C,QACf65B,IAAKl6B,EAAQk6B,IACbshC,OAAQx7D,EAAQw7D,OAChBE,KAAM17D,EAAQ07D,OAEhBpiB,EAAMpf,IAAMof,EAAMqrC,QAAQzqD,IAC1Bof,EAAMkiB,OAASliB,EAAMqrC,QAAQnpB,OAE7BliB,EAAMorC,MAAMjjF,QAAQ63C,EAAMqrC,SAE1BviC,GAAS9I,EAAO,CAAC,MAAO,WACjBA,EAvBTlE,EAAUqvC,EAASzoC,GA0BnByoC,EAAQlpC,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDrhB,IAAK,EACLshC,OAAQ,EACRE,MAAM,EACNuoB,MAAM,KAIVtmF,OAAOC,eAAe6mF,EAAQ5lF,UAAW,OAAQ,CAI/Cf,IAAK,WACH,OAAOmQ,KAAKy2E,MAAMT,MAEpB75E,IAAK,SAAU65E,GACbh2E,KAAKy2E,MAAMT,KAAOA,GAEpBpmF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6mF,EAAQ5lF,UAAW,QAAS,CAKhDf,IAAK,WACH,OAAOmQ,KAAKy2E,MAAME,OAAS32E,KAAKytD,MAElC79D,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6mF,EAAQ5lF,UAAW,OAAQ,CAI/Cf,IAAK,WACH,OAAOmQ,KAAK02E,QAAQjpB,MAEtBtxD,IAAK,SAAUsxD,GACbztD,KAAK02E,QAAQjpB,KAAOA,GAEtB79D,YAAY,EACZ4sB,cAAc,IAQhBg6D,EAAQ5lF,UAAUgmF,QAAU,SAAUrnF,GAOpC,OANKinF,EAAQK,MAAMn6E,IAAInN,IACrBinF,EAAQK,MAAM16E,IAAI5M,EAAM,IAAI,GAAK,CAC/B6C,QAAS4N,KAAK5N,WAIXokF,EAAQK,MAAMhnF,IAAIN,IAc3BinF,EAAQ5lF,UAAUkmF,KAAO,SAAUvnF,EAAMg+D,QACxB,IAAXA,IACFA,EAAS,GAGX,IAAIwpB,EAAM/2E,KAAK42E,QAAQrnF,GAEnBynF,EAAW,IAAI,GAAK,CACtB5kF,QAAS4N,KAAK5N,QACdioD,MAAO,WACPpxC,KAAMskD,IAIR,OAFAvtD,KAAKxM,QAAQwjF,GACbA,EAASxjF,QAAQujF,GACVC,GAQTR,EAAQ5lF,UAAUqmF,QAAU,SAAU1nF,GAIpC,OAHUyQ,KAAK42E,QAAQrnF,GAEnBiE,QAAQwM,MACLA,MAGTw2E,EAAQ5lF,UAAU+6C,QAAU,WAU1B,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAK02E,QAAQ/qC,UAEb3rC,KAAKisB,IAAI0f,UACT3rC,KAAKutD,OAAO5hB,UAEZ3rC,KAAKy2E,MAAM9qC,UAEJ3rC,MAOTw2E,EAAQK,MAAQ,IAAIhjF,IAlJtB,CAoJE,ID1IF,SAAUk6C,GAGR,SAASmpC,IACP,IAAI7rC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqB2qC,EAAe5pC,cAAe9F,UAAW,CAAC,eAAgB,oBAAsBxnC,KAEnIqrC,EAAM97C,KAAO,iBAKb87C,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAMjBi5C,EAAM/mC,YAAS/R,EAKf84C,EAAMke,IAAM,IAAI,GAAO,CACrBn3D,QAASi5C,EAAMj5C,QACf8hB,UAAW,EACX/W,KAAM,YAMRkuC,EAAM8rC,cAAgB,IAAI,GAAO,CAC/B/kF,QAASi5C,EAAMj5C,QACf8hB,UAAW,EACX/W,KAAM,aAMRkuC,EAAMi7B,IAAM,IAAI,GAAO,CACrBl0E,QAASi5C,EAAMj5C,QACf8hB,UAAW,EACX/W,KAAM,YAMRkuC,EAAMse,KAAO,IAAI,GAAO,CACtBv3D,QAASi5C,EAAMj5C,QACf8hB,UAAW,EACX/W,KAAM,aAERkuC,EAAM2W,kBAAoB,CAAC3W,EAAMke,IAAKle,EAAMi7B,IAAKj7B,EAAMse,MACvD,IAAI53D,EAAUw6C,EAAqB2qC,EAAe5pC,cAAe9F,UAAW,CAAC,eAAgB,kBAoC7F,OAnCA6D,EAAM+rC,aAAe,IAAI,GAAO,CAC9BhlF,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQqlF,eAEjB/rC,EAAMgsC,cAAgB,IAAI,GAAO,CAC/BjlF,QAASi5C,EAAMj5C,QACfioD,MAAO,YACPpqD,MAAO8B,EAAQslF,gBAEjBhsC,EAAMr3B,EAAI,IAAI,GAAO,CACnB5hB,QAASi5C,EAAMj5C,QACfioD,MAAO,WACPpqD,MAAO8B,EAAQiiB,IAGjBq3B,EAAM9mC,MAAMs+C,IAAIxX,EAAMke,IAAKle,EAAMse,MAEjCte,EAAM9mC,MAAM45B,MAAMkN,EAAM8rC,cAAe9rC,EAAMi7B,KAG7Cj7B,EAAM+rC,aAAav0B,IAAIxX,EAAMke,IAAIr1C,UAAWm3B,EAAM8rC,cAAcjjE,WAEhEm3B,EAAMgsC,cAAcx0B,IAAIxX,EAAMi7B,IAAIpyD,UAAWm3B,EAAMse,KAAKz1C,WAGxDm3B,EAAMr3B,EAAExgB,QAAQ63C,EAAMke,IAAIv1C,GAE1Bq3B,EAAMr3B,EAAExgB,QAAQ63C,EAAM8rC,cAAcnjE,GAEpCq3B,EAAMr3B,EAAExgB,QAAQ63C,EAAMi7B,IAAItyD,GAE1Bq3B,EAAMr3B,EAAExgB,QAAQ63C,EAAMse,KAAK31C,GAE3BmgC,GAAS9I,EAAO,CAAC,OAAQ,MAAO,MAAO,gBAAiB,iBACjDA,EA+BT,OA1HAlE,EAAU+vC,EAAgBnpC,GA8F1BmpC,EAAe5pC,YAAc,WAC3B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDt5B,EAAG,EACHqjE,cAAe,KACfD,aAAc,OAQlBF,EAAetmF,UAAU+6C,QAAU,WAajC,OAZAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BmhC,GAASnhC,KAAM,CAAC,OAAQ,MAAO,MAAO,gBAAiB,iBACvDA,KAAKupD,IAAI5d,UAET3rC,KAAKm3E,cAAcxrC,UAEnB3rC,KAAKsmE,IAAI36B,UACT3rC,KAAK2pD,KAAKhe,UACV3rC,KAAKo3E,aAAazrC,UAClB3rC,KAAKq3E,cAAc1rC,UACnB3rC,KAAKgU,EAAE23B,UACA3rC,MAGFk3E,EA3HT,CA4HE,KE7IE,GAEJ,SAAUnpC,GAGR,SAASupC,IACP,IAAIjsC,EAAmB,OAAX0C,GAAmBA,EAAOtrB,MAAMziB,KAAMwnC,YAAcxnC,KAuChE,OArCAqrC,EAAM97C,KAAO,WACb87C,EAAMn8B,UAAY,IAAI,GAAM,CAC1B9c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASI,YAE3Cm8B,EAAMl8B,UAAY,IAAI,GAAM,CAC1B/c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASK,YAE3Ck8B,EAAMj8B,UAAY,IAAI,GAAM,CAC1Bhd,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASM,YAE3Ci8B,EAAMt8B,SAAW,IAAI,GAAM,CACzB3c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASC,WAE3Cs8B,EAAMr8B,SAAW,IAAI,GAAM,CACzB5c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASE,WAE3Cq8B,EAAMp8B,SAAW,IAAI,GAAM,CACzB7c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASG,WAE3Co8B,EAAMh8B,IAAM,IAAI,GAAM,CACpBjd,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASO,MAE3Cg8B,EAAM/7B,IAAM,IAAI,GAAM,CACpBld,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASQ,MAE3C+7B,EAAM97B,IAAM,IAAI,GAAM,CACpBnd,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMj5C,QAAQ4/C,WAAWljC,SAASS,MAEpC87B,EAgCT,OA1EAlE,EAAUmwC,EAAUvpC,GA6CpBupC,EAAShqC,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDp+B,UAAW,EACXC,UAAW,EACXC,UAAW,EACXL,SAAU,EACVC,SAAU,EACVC,UAAW,EACXI,IAAK,EACLC,IAAK,EACLC,IAAK,KAIT+nE,EAAS1mF,UAAU+6C,QAAU,WAY3B,OAXAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKkP,UAAUy8B,UACf3rC,KAAKmP,UAAUw8B,UACf3rC,KAAKoP,UAAUu8B,UACf3rC,KAAK+O,SAAS48B,UACd3rC,KAAKgP,SAAS28B,UACd3rC,KAAKiP,SAAS08B,UACd3rC,KAAKqP,IAAIs8B,UACT3rC,KAAKsP,IAAIq8B,UACT3rC,KAAKuP,IAAIo8B,UACF3rC,MAGFs3E,EA3ET,CA4EE,IAMFvnC,GAAc,SAAU39C,GACtBA,EAAQ0c,SAAW,IAAI,GAAS,CAC9B1c,QAASA,OAGb89C,GAAe,SAAU99C,GACvBA,EAAQ0c,SAAS68B,cCzFnB,SAAUoC,GAGR,SAASwpC,IACP,IAAIlsC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBgrC,EAASjqC,cAAe9F,UAAW,CAAC,YAAa,YAAa,gBAAkBxnC,KAEnIqrC,EAAM97C,KAAO,WACb,IAAIwC,EAAUw6C,EAAqBgrC,EAASjqC,cAAe9F,UAAW,CAAC,YAAa,YAAa,cAyCjG,OAxCA6D,EAAMi/B,QAAUj/B,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS+mC,EAAMj5C,QAAQ01B,eAE3DujB,EAAM7iB,aAAez2B,EAAQy2B,aAC7B6iB,EAAMhjB,YAAct2B,EAAQs2B,YAC5BgjB,EAAMjjB,cAAgBr2B,EAAQq2B,cAC9BijB,EAAMljB,cAAgBp2B,EAAQo2B,cAC9BkjB,EAAMnjB,eAAiBn2B,EAAQm2B,eAC/BmjB,EAAMpjB,eAAiBl2B,EAAQk2B,eAC/BojB,EAAM5iB,YAAc12B,EAAQ02B,YAC5B4iB,EAAM3iB,cAAgB32B,EAAQ22B,cAC9B2iB,EAAMn8B,UAAY,IAAI,GAAM,CAC1B9c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQp7D,UACrBjf,MAAO8B,EAAQmd,YAEjBm8B,EAAMl8B,UAAY,IAAI,GAAM,CAC1B/c,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQn7D,UACrBlf,MAAO8B,EAAQod,YAEjBk8B,EAAMj8B,UAAY,IAAI,GAAM,CAC1Bhd,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQl7D,UACrBnf,MAAO8B,EAAQqd,YAEjBi8B,EAAMtjB,aAAe,IAAI,GAAM,CAC7B31B,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQviD,aACrB93B,MAAO8B,EAAQg2B,eAEjBsjB,EAAM/iB,aAAe,IAAI,GAAM,CAC7Bl2B,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQhiD,aACrBr4B,MAAO8B,EAAQu2B,eAEjB+iB,EAAM9iB,aAAe,IAAI,GAAM,CAC7Bn2B,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAMi/B,QAAQ/hD,aACrBt4B,MAAO8B,EAAQw2B,eAEV8iB,EA/CTlE,EAAUowC,EAAUxpC,GAkDpBwpC,EAASjqC,YAAc,WACrB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDrlB,eAAgB,IAChBC,eAAgB,IAChBC,cAAe,EACfC,cAAe,UACfC,YAAa,IACbN,aAAc,EACdO,aAAc,EACdC,aAAc,EACdC,aAAc,aACdtZ,UAAW,EACXC,UAAW,EACXC,UAAW,EACXqZ,YAAa,EACbC,cAAe,KAQnB6uD,EAAS3mF,UAAUwf,YAAc,SAAUhL,EAAGC,EAAGggB,GAI/C,OAHArlB,KAAKkP,UAAUjf,MAAQmV,EACvBpF,KAAKmP,UAAUlf,MAAQoV,EACvBrF,KAAKoP,UAAUnf,MAAQo1B,EAChBrlB,MAOTu3E,EAAS3mF,UAAUsf,eAAiB,SAAU9K,EAAGC,EAAGggB,GAIlD,OAHArlB,KAAK+nB,aAAa93B,MAAQmV,EAC1BpF,KAAKsoB,aAAar4B,MAAQoV,EAC1BrF,KAAKuoB,aAAat4B,MAAQo1B,EACnBrlB,MAGTtQ,OAAOC,eAAe4nF,EAAS3mF,UAAW,eAAgB,CAIxDf,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQ9hD,cAEtBrsB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQ9hD,aAAegqB,GAE9B5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,cAAe,CAIvDf,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQ7hD,aAEtBtsB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQ7hD,YAAc+pB,GAE7B5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,gBAAiB,CAIzDf,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQ5hD,eAEtBvsB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQ5hD,cAAgB8pB,GAE/B5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,gBAAiB,CAIzDf,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQliD,eAEtBjsB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQliD,cAAgBoqB,GAE/B5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,iBAAkB,CAI1Df,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQriD,gBAEtB9rB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQriD,eAAiBuqB,GAEhC5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,iBAAkB,CAK1Df,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQpiD,gBAEtB/rB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQpiD,eAAiBsqB,GAEhC5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,gBAAiB,CAIzDf,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQniD,eAEtBhsB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQniD,cAAgBqqB,GAE/B5iD,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe4nF,EAAS3mF,UAAW,cAAe,CAKvDf,IAAK,WACH,OAAOmQ,KAAKsqE,QAAQjiD,aAEtBlsB,IAAK,SAAUq2C,GACbxyC,KAAKsqE,QAAQjiD,YAAcmqB,GAE7B5iD,YAAY,EACZ4sB,cAAc,IAGhB+6D,EAAS3mF,UAAU+6C,QAAU,WAW3B,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsqE,QAAQ72E,aAEbuM,KAAK+nB,aAAa4jB,UAClB3rC,KAAKsoB,aAAaqjB,UAClB3rC,KAAKuoB,aAAaojB,UAClB3rC,KAAKkP,UAAUy8B,UACf3rC,KAAKmP,UAAUw8B,UACf3rC,KAAKoP,UAAUu8B,UACR3rC,OAlNX,CAsNE,ICjMF,SAAU+tC,GAGR,SAASypC,IACP,IAAInsC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBirC,EAASlqC,cAAe9F,UAAW,CAAC,OAAQ,YAAcxnC,KAE7GqrC,EAAM97C,KAAO,WACb,IAAIwC,EAAUw6C,EAAqBirC,EAASlqC,cAAe9F,UAAW,CAAC,OAAQ,UAY/E,OAXA6D,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjB42C,EAAOwuC,EAASlmB,UAAW,uCAC3BjmB,EAAMqI,QAAUrI,EAAMj5C,QAAQo0B,+BAE9B6kB,EAAM9mC,MAAM/Q,QAAQ63C,EAAMqI,SAE1BrI,EAAMosC,UAAY,IAAIC,cAAcrsC,EAAMqI,QAAQ1yB,OAAQ,CACxD22D,SAAU5lF,EAAQ4lF,WAEbtsC,EAlBTlE,EAAUqwC,EAAUzpC,GAqBpBypC,EAASlqC,YAAc,WACrB,OAAO,GAAcA,eAGvB59C,OAAOC,eAAe6nF,EAAS5mF,UAAW,WAAY,CAKpDf,IAAK,WACH,OAAOmQ,KAAKy3E,UAAUE,UAExB/nF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6nF,EAAU,YAAa,CAK3C3nF,IAAK,WACH,OAAqB,OAAdy6C,GAAsB7C,QAAQ/qC,IAAI4tC,EAAW,kBAEtD16C,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAe6nF,EAAS5mF,UAAW,QAAS,CAIjDf,IAAK,WACH,MAA6B,aAAzBmQ,KAAKy3E,UAAUlqE,MACV,UAC2B,WAAzBvN,KAAKy3E,UAAUlqE,MACjB,SAEA,WAGX3d,YAAY,EACZ4sB,cAAc,IAGhBg7D,EAAS5mF,UAAU8S,MAAQ,WACzB,OAAOikC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAI43E,EAEAvsC,EAAQrrC,KAEZ,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAcH,OAbAU,EAAsB,YAAfhpC,KAAKuN,MAAqB,+BACjCqqE,EAAe,IAAI/sE,SAAQ,SAAU61B,GACnC,IAAIm3C,EAAc,WAChBxsC,EAAMosC,UAAUtuE,oBAAoB,QAAS0uE,GAAa,GAE1Dn3C,KAGF2K,EAAMosC,UAAUruE,iBAAiB,QAASyuE,GAAa,MAGzD73E,KAAKy3E,UAAU/zE,QAER,CAAC,EAENk0E,GAEJ,KAAK,EACH,MAAO,CAAC,EAEN1rC,EAAGnJ,gBAMfy0C,EAAS5mF,UAAUmT,KAAO,WACxB,OAAO4jC,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAI83E,EAEAzsC,EAAQrrC,KAEZ,OAAOkoC,EAAYloC,MAAM,SAAUksC,GACjC,OAAQA,EAAG5D,OACT,KAAK,EAcH,OAbAU,EAAsB,YAAfhpC,KAAKuN,MAAqB,2BACjCuqE,EAAc,IAAIjtE,SAAQ,SAAU61B,GAClC,IAAIq3C,EAAa,SAAU/vC,GACzBqD,EAAMosC,UAAUtuE,oBAAoB,gBAAiB4uE,GAAY,GAEjEr3C,EAAKsH,EAAE1T,OAGT+W,EAAMosC,UAAUruE,iBAAiB,gBAAiB2uE,GAAY,MAGhE/3E,KAAKy3E,UAAU1zE,OAER,CAAC,EAEN+zE,GAEJ,KAAK,EACH,MAAO,CAAC,EAEN5rC,EAAGnJ,gBAMfy0C,EAAS5mF,UAAU61D,MAAQ,WAKzB,OAJAzd,EAAsB,YAAfhpC,KAAKuN,MAAqB,4BAEjCvN,KAAKy3E,UAAUhxB,QAERzmD,MAGTw3E,EAAS5mF,UAAU+6C,QAAU,WAO3B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UAEX3rC,KAAK0zC,QAAQjgD,aAENuM,MAtJX,CA0JE,IDjLF,IEMI,GAEJ,SAAU+tC,GAGR,SAASiqC,IACP,IAAI3sC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqByrC,EAAW1qC,cAAe9F,UAAW,CAAC,YAAa,YAAcxnC,KAEpHqrC,EAAM97C,KAAO,aAKb87C,EAAM4sC,YAAc5sC,EAAMj5C,QAAQuyB,2BAClC0mB,EAAM9mC,MAAQ8mC,EAAM4sC,YACpB5sC,EAAM/mC,OAAS+mC,EAAM4sC,YACrB,IAAIlmF,EAAUw6C,EAAqByrC,EAAW1qC,cAAe9F,UAAW,CAAC,YAAa,UA8CtF,OA7CA6D,EAAM/xB,UAAY,IAAI,GAAM,CAC1BzI,SAAUw6B,EAAM4sC,YAAY3+D,UAAUzI,SACtCD,SAAUy6B,EAAM4sC,YAAY3+D,UAAU1I,SACtCxe,QAASi5C,EAAMj5C,QACfstD,SAAS,EACTjR,MAAOpD,EAAM4sC,YAAY3+D,UACzB+gC,MAAO,WACPpqD,MAAO8B,EAAQunB,YAEjB+xB,EAAMnyB,OAAS,IAAI,GAAM,CACvBrI,SAAUw6B,EAAM4sC,YAAY/+D,OAAOrI,SACnCD,SAAUy6B,EAAM4sC,YAAY/+D,OAAOtI,SACnCxe,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAM4sC,YAAY/+D,OACzBmhC,MAAO,OACPpqD,MAAO8B,EAAQmnB,SAEjBmyB,EAAMhyB,QAAU,IAAI,GAAM,CACxBxI,SAAUw6B,EAAM4sC,YAAY5+D,QAAQxI,SACpCD,SAAUy6B,EAAM4sC,YAAY5+D,QAAQzI,SACpCxe,QAASi5C,EAAMj5C,QACfq8C,MAAOpD,EAAM4sC,YAAY5+D,QACzBghC,MAAO,OACPpqD,MAAO8B,EAAQsnB,UAEjBgyB,EAAMlyB,KAAO,IAAI,GAAM,CACrBtI,SAAUw6B,EAAM4sC,YAAY9+D,KAAKtI,SACjCD,SAAUy6B,EAAM4sC,YAAY9+D,KAAKvI,SACjCxe,QAASi5C,EAAMj5C,QACfstD,SAAS,EACTjR,MAAOpD,EAAM4sC,YAAY9+D,KACzBkhC,MAAO,WACPpqD,MAAO8B,EAAQonB,OAEjBkyB,EAAMjyB,MAAQ,IAAI,GAAM,CACtBvI,SAAUw6B,EAAM4sC,YAAY7+D,MAAMvI,SAClCD,SAAUy6B,EAAM4sC,YAAY7+D,MAAMxI,SAClCxe,QAASi5C,EAAMj5C,QACfstD,SAAS,EACTjR,MAAOpD,EAAM4sC,YAAY7+D,MACzBihC,MAAO,WACPpqD,MAAO8B,EAAQqnB,QAGjB+6B,GAAS9I,EAAO,CAAC,OAAQ,UAAW,SAAU,QAAS,cAChDA,EAsCT,OAjGAlE,EAAU6wC,EAAYjqC,GA8DtBiqC,EAAW1qC,YAAc,WACvB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDp0B,OAAQ,KACRC,KAAM,GACNC,MAAO,GACPC,QAAS,IACTC,WAAY,MAIhB5pB,OAAOC,eAAeqoF,EAAWpnF,UAAW,YAAa,CAKvDf,IAAK,WACH,OAAOmQ,KAAKi4E,YAAYj+D,WAE1BpqB,YAAY,EACZ4sB,cAAc,IAGhBw7D,EAAWpnF,UAAU+6C,QAAU,WAU7B,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKi4E,YAAYxkF,aAEjBuM,KAAKkZ,OAAOyyB,UACZ3rC,KAAKqZ,QAAQsyB,UACb3rC,KAAKsZ,UAAUqyB,UACf3rC,KAAKoZ,MAAMuyB,UACX3rC,KAAKmZ,KAAKwyB,UACH3rC,MAGFg4E,EAlGT,CAmGE,IC1FS,ICNX,SAAUjqC,GAGR,SAASmqC,IACP,IAAI7sC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqB2rC,EAAK5qC,cAAe9F,UAAW,CAAC,YAAa,iBAAmBxnC,KAEjIqrC,EAAM97C,KAAO,OACb,IAAIwC,EAAUw6C,EAAqB2rC,EAAK5qC,cAAe9F,UAAW,CAAC,YAAa,cAqBhF,OApBA6D,EAAMugC,UAAY,IAAI,GAAS,CAC7Bx5E,QAASi5C,EAAMj5C,QACfq5E,UAAW15E,EAAQ05E,YAErBpgC,EAAM8sC,IAAM,IAAI,GAAY,CAC1B/lF,QAASi5C,EAAMj5C,QACfnC,MAAOunD,GAASzlD,EAAQunB,aAE1B+xB,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM+sC,MAAQ/sC,EAAM/mC,OAAS,IAAI,GAAK,CACpClS,QAASi5C,EAAMj5C,UAGjBi5C,EAAM9mC,MAAM/Q,QAAQ63C,EAAM+sC,OAG1B/sC,EAAM9mC,MAAM45B,MAAMkN,EAAMugC,UAAWvgC,EAAM8sC,IAAK9sC,EAAM+sC,MAAMnvE,MAEnDoiC,EA3BTlE,EAAU+wC,EAAMnqC,GA8BhBmqC,EAAK5qC,YAAc,WACjB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDm+B,UAAW,GACXnyD,WAAY,MAIhB5pB,OAAOC,eAAeuoF,EAAKtnF,UAAW,YAAa,CAIjDf,IAAK,WACH,OAAO6nD,GAAS13C,KAAKm4E,IAAIloF,QAE3BkM,IAAK,SAAUk8E,GACbr4E,KAAKm4E,IAAIloF,MAAQunD,GAAS6gC,IAE5BzoF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeuoF,EAAKtnF,UAAW,YAAa,CAIjDf,IAAK,WACH,OAAOmQ,KAAK4rE,UAAUH,WAExBtvE,IAAK,SAAUm8E,GACbt4E,KAAK4rE,UAAUH,UAAY6M,GAE7B1oF,YAAY,EACZ4sB,cAAc,IAGhB07D,EAAKtnF,UAAU+6C,QAAU,WAWvB,OAVAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKuE,MAAMonC,UAEX3rC,KAAK4rE,UAAUjgC,UAEf3rC,KAAKm4E,IAAIxsC,UAET3rC,KAAKo4E,MAAMzsC,UAEJ3rC,MA5EX,CAgFE,IC/EF,SAAU+tC,GAGR,SAASwqC,IACP,IAAIltC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBgsC,EAAQjrC,cAAe9F,UAAW,CAAC,iBAAmBxnC,KAEvHqrC,EAAM97C,KAAO,UACb,IAAIwC,EAAUw6C,EAAqBgsC,EAAQjrC,cAAe9F,UAAW,CAAC,cAUtE,OATA6D,EAAM4sC,YAAc5sC,EAAM9mC,MAAQ8mC,EAAM/mC,OAAS,IAAI,GAAW,CAC9DlS,QAASi5C,EAAMj5C,QACfgnB,MAAO,GACPF,OAAQ,EACRG,QAAS,EACTC,UAAWvnB,EAAQunB,YAErB+xB,EAAM/xB,UAAY+xB,EAAM4sC,YAAY3+D,UACpC66B,GAAS9I,EAAO,aACTA,EAhBTlE,EAAUoxC,EAASxqC,GAmBnBwqC,EAAQjrC,YAAc,WACpB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDh0B,WAAY,MAIhB5pB,OAAOC,eAAe4oF,EAAQ3nF,UAAW,YAAa,CAKpDf,IAAK,WACH,OAAOmQ,KAAKi4E,YAAYj+D,WAE1BpqB,YAAY,EACZ4sB,cAAc,IAGhB+7D,EAAQ3nF,UAAU+6C,QAAU,WAM1B,OALAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKi4E,YAAYtsC,UAEjB3rC,KAAKsZ,UAAUqyB,UACR3rC,MA5CX,CAgDE,ICxDF,SAAU+tC,GAGR,SAASyqC,IACP,IAAIntC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBisC,EAAkBlrC,cAAe9F,cAAgBxnC,KAElHqrC,EAAM97C,KAAO,oBACb,IAAIwC,EAAUw6C,EAAqBisC,EAAkBlrC,cAAe9F,WAmBpE,OAlBA6D,EAAMwoC,cAAgBxoC,EAAM9mC,MAAQ,IAAI,GAAa,CACnDnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAMuoC,cAAgBvoC,EAAM/mC,OAAS,IAAI,GAAa,CACpDlS,QAASi5C,EAAMj5C,UAEjBi5C,EAAMi7B,IAAM,IAAI,GAAW52E,OAAO48C,OAAOv6C,EAAQu0E,IAAK,CACpDl0E,QAASi5C,EAAMj5C,WAEjBi5C,EAAMkoC,KAAO,IAAI,GAAW7jF,OAAO48C,OAAOv6C,EAAQwhF,KAAM,CACtDnhF,QAASi5C,EAAMj5C,WAGjBi5C,EAAMwoC,cAAcvN,IAAInoC,MAAMkN,EAAMi7B,IAAKj7B,EAAMuoC,cAActN,KAE7Dj7B,EAAMwoC,cAAcN,KAAKp1C,MAAMkN,EAAMkoC,KAAMloC,EAAMuoC,cAAcL,MAE/Dp/B,GAAS9I,EAAO,CAAC,MAAO,SACjBA,EAzBTlE,EAAUqxC,EAAmBzqC,GA4B7ByqC,EAAkBlrC,YAAc,WAC9B,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDg5B,IAAK,CACHltD,MAAO,EACPE,WAAY,GACZD,QAAS,IACTH,OAAQ,IACRC,KAAM,IAERo6D,KAAM,CACJn6D,MAAO,EACPE,WAAY,GACZD,QAAS,IACTH,OAAQ,IACRC,KAAM,OAKZq/D,EAAkB5nF,UAAU+6C,QAAU,WAUpC,OATAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKsmE,IAAI36B,UACT3rC,KAAKuzE,KAAK5nC,UAEV3rC,KAAK6zE,cAAcloC,UAEnB3rC,KAAK4zE,cAAcjoC,UAEZ3rC,MA1DX,CA8DE,ICtDF,SAAU+tC,GAGR,SAAS0qC,IACP,IAAIptC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMtQ,OAAO48C,OAAOC,EAAqBksC,EAAoBnrC,cAAe9F,cAAgBxnC,KAEpHqrC,EAAM97C,KAAO,sBACb,IAAIwC,EAAUw6C,EAAqBksC,EAAoBnrC,cAAe9F,WA4BtE,OA3BA6D,EAAM4hC,UAAY5hC,EAAM9mC,MAAQ,IAAI,GAAe,CACjDnS,QAASi5C,EAAMj5C,QACfglF,aAAcrlF,EAAQqlF,aACtBC,cAAetlF,EAAQslF,gBAEzBhsC,EAAM+rC,aAAe/rC,EAAM4hC,UAAUmK,aACrC/rC,EAAMgsC,cAAgBhsC,EAAM4hC,UAAUoK,cACtChsC,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAEjBi5C,EAAMke,IAAM,IAAI,GAAW75D,OAAO48C,OAAOv6C,EAAQw3D,IAAK,CACpDn3D,QAASi5C,EAAMj5C,WAEjBi5C,EAAMi7B,IAAM,IAAI,GAAW52E,OAAO48C,OAAOv6C,EAAQu0E,IAAK,CACpDl0E,QAASi5C,EAAMj5C,WAEjBi5C,EAAMse,KAAO,IAAI,GAAWj6D,OAAO48C,OAAOv6C,EAAQ43D,KAAM,CACtDv3D,QAASi5C,EAAMj5C,WAGjBi5C,EAAM4hC,UAAU1jB,IAAIprB,MAAMkN,EAAMke,IAAKle,EAAM/mC,QAE3C+mC,EAAM4hC,UAAU3G,IAAInoC,MAAMkN,EAAMi7B,IAAKj7B,EAAM/mC,QAE3C+mC,EAAM4hC,UAAUtjB,KAAKxrB,MAAMkN,EAAMse,KAAMte,EAAM/mC,QAE7C6vC,GAAS9I,EAAO,CAAC,OAAQ,MAAO,MAAO,gBAAiB,iBACjDA,EAlCTlE,EAAUsxC,EAAqB1qC,GAqC/B0qC,EAAoBnrC,YAAc,WAChC,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChD8pC,aAAc,IACdC,cAAe,IACf9tB,IAAK,CACHnwC,MAAO,EACPE,WAAY,GACZD,QAAS,IACTH,OAAQ,IACRC,KAAM,IAERmtD,IAAK,CACHltD,MAAO,EACPE,WAAY,GACZD,QAAS,IACTH,OAAQ,IACRC,KAAM,IAERwwC,KAAM,CACJvwC,MAAO,EACPE,WAAY,GACZD,QAAS,IACTH,OAAQ,IACRC,KAAM,OAKZs/D,EAAoB7nF,UAAU+6C,QAAU,WAStC,OARAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKitE,UAAUthC,UAEf3rC,KAAKupD,IAAI5d,UACT3rC,KAAKsmE,IAAI36B,UACT3rC,KAAK2pD,KAAKhe,UACV3rC,KAAKsE,OAAOqnC,UACL3rC,MA3EX,CA+EE,ICxFF,SAAU+tC,GAGR,SAAS2qC,IACP,IAAIrtC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBmsC,EAAIprC,cAAe9F,UAAW,CAAC,MAAO,MAAO,WAAaxnC,KAE7GqrC,EAAM97C,KAAO,MAKb87C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM2W,kBAAoB,GAC1B,IAAIjwD,EAAUw6C,EAAqBmsC,EAAIprC,cAAe9F,UAAW,CAAC,MAAO,MAAO,SAoChF,OAnCA6D,EAAM9mC,MAAQ8mC,EAAMstC,gBAAkB,IAAI,GAAe,CACvDvmF,QAASi5C,EAAMj5C,QACfilF,cAAetlF,EAAQslF,cACvBD,aAAcrlF,EAAQqlF,eAExB/rC,EAAMutC,SAAW,IAAI,GAAK,CACxBxmF,QAASi5C,EAAMj5C,QACf6W,KAAMlX,EAAQw3D,IACdlP,MAAO,aAEThP,EAAMwtC,SAAW,IAAI,GAAK,CACxBzmF,QAASi5C,EAAMj5C,QACf6W,KAAMlX,EAAQu0E,IACdjsB,MAAO,aAEThP,EAAMytC,UAAY,IAAI,GAAK,CACzB1mF,QAASi5C,EAAMj5C,QACf6W,KAAMlX,EAAQ43D,KACdtP,MAAO,aAEThP,EAAMke,IAAMle,EAAMutC,SAAS3vE,KAC3BoiC,EAAMi7B,IAAMj7B,EAAMwtC,SAAS5vE,KAC3BoiC,EAAMse,KAAOte,EAAMytC,UAAU7vE,KAC7BoiC,EAAMr3B,EAAIq3B,EAAMstC,gBAAgB3kE,EAChCq3B,EAAM+rC,aAAe/rC,EAAMstC,gBAAgBvB,aAC3C/rC,EAAMgsC,cAAgBhsC,EAAMstC,gBAAgBtB,cAE5ChsC,EAAMstC,gBAAgBpvB,IAAIprB,MAAMkN,EAAMutC,SAAUvtC,EAAM/mC,QAEtD+mC,EAAMstC,gBAAgBrS,IAAInoC,MAAMkN,EAAMwtC,SAAUxtC,EAAM/mC,QAEtD+mC,EAAMstC,gBAAgBhvB,KAAKxrB,MAAMkN,EAAMytC,UAAWztC,EAAM/mC,QAExD6vC,GAAS9I,EAAO,CAAC,MAAO,MAAO,OAAQ,eAAgB,kBACvDA,EAAM2W,kBAAoB,CAAC3W,EAAMstC,iBAC1BttC,EAlDTlE,EAAUuxC,EAAK3qC,GAqDf2qC,EAAIprC,YAAc,WAChB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChDqc,KAAM,EACN0tB,cAAe,KACf9tB,IAAK,EACL6tB,aAAc,IACd9Q,IAAK,KAQToS,EAAI9nF,UAAU+6C,QAAU,WAoBtB,OAnBAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BmhC,GAASnhC,KAAM,CAAC,MAAO,MAAO,OAAQ,eAAgB,kBAEtDA,KAAK24E,gBAAgBhtC,UAErB3rC,KAAKo3E,aAAazrC,UAClB3rC,KAAKq3E,cAAc1rC,UAEnB3rC,KAAK44E,SAASjtC,UAEd3rC,KAAK64E,SAASltC,UAEd3rC,KAAK84E,UAAUntC,UAEf3rC,KAAKupD,IAAI5d,UACT3rC,KAAKsmE,IAAI36B,UACT3rC,KAAK2pD,KAAKhe,UACV3rC,KAAKgU,EAAE23B,UACA3rC,MAxFX,CA4FE,ICrFF,SAAU+tC,GAGR,SAASgrC,IACP,IAAI1tC,EAAQ0C,EAAO5+C,KAAK6Q,KAAMusC,EAAqBwsC,EAAUzrC,cAAe9F,UAAW,CAAC,MAAO,aAAexnC,KAE9GqrC,EAAM97C,KAAO,YAKb87C,EAAMmnC,WAAannC,EAAMj5C,QAAQgyB,kBACjC,IAAIryB,EAAUw6C,EAAqBwsC,EAAUzrC,cAAe9F,UAAW,CAAC,MAAO,WAqB/E,OApBA6D,EAAMmJ,QAAU,IAAI,GAAgBziD,EAAQipB,KAAK,SAAUjf,GACzDsvC,EAAMtvC,OAASA,EACfhK,EAAQ+pB,YAEVuvB,EAAM9mC,MAAQ,IAAI,GAAK,CACrBnS,QAASi5C,EAAMj5C,UAEjBi5C,EAAM/mC,OAAS,IAAI,GAAK,CACtBlS,QAASi5C,EAAMj5C,UAGbi5C,EAAMmJ,QAAQE,SAChBrJ,EAAMtvC,OAASsvC,EAAMmJ,SAIvBnJ,EAAM5zB,UAAY1lB,EAAQ0lB,UAE1B4zB,EAAM9mC,MAAM45B,MAAMkN,EAAMmnC,WAAYnnC,EAAM/mC,QAEnC+mC,EAhCTlE,EAAU4xC,EAAWhrC,GAmCrBgrC,EAAUzrC,YAAc,WACtB,OAAO59C,OAAO48C,OAAO,GAAcgB,cAAe,CAChD71B,WAAW,EACXqE,OAAQu4B,MAWZ0kC,EAAUnoF,UAAU2jD,KAAO,SAAUv5B,GACnC,OAAO2sB,EAAU3nC,UAAM,OAAQ,GAAQ,WACrC,IAAIksC,EAEJ,OAAOhE,EAAYloC,MAAM,SAAUmsC,GACjC,OAAQA,EAAG7D,OACT,KAAK,EAEH,OADA4D,EAAKlsC,KACE,CAAC,EAENA,KAAKw0C,QAAQD,KAAKv5B,IAEtB,KAAK,EAEH,OADAkxB,EAAGnwC,OAASowC,EAAGpJ,OACR,CAAC,WAQlBrzC,OAAOC,eAAeopF,EAAUnoF,UAAW,SAAU,CAInDf,IAAK,WACH,OAAImQ,KAAKw0C,QAAQ51C,OACRoB,KAAKw0C,QAEL,MAGXr4C,IAAK,SAAUJ,GACTA,GACFiE,KAAKw0C,QAAQr4C,IAAIJ,GAIfiE,KAAKwyE,WAAWz2E,SAElBiE,KAAKuE,MAAM9Q,aAEXuM,KAAKwyE,WAAW/+E,aAGhBuM,KAAKwyE,WAAaxyE,KAAK5N,QAAQgyB,kBAC/BpkB,KAAKuE,MAAM45B,MAAMn+B,KAAKwyE,WAAYxyE,KAAKsE,SAGzC,IAAI00E,EAAOh5E,KAAKw0C,QAAQ3kD,MAExBmQ,KAAKwyE,WAAWz2E,OAASi9E,GAAc,MAEzCppF,YAAY,EACZ4sB,cAAc,IAEhB9sB,OAAOC,eAAeopF,EAAUnoF,UAAW,YAAa,CAMtDf,IAAK,WACH,OAAOmQ,KAAKwyE,WAAW/6D,WAEzBtb,IAAK,SAAU88E,GACbj5E,KAAKwyE,WAAW/6D,UAAYwhE,GAE9BrpF,YAAY,EACZ4sB,cAAc,IAGhBu8D,EAAUnoF,UAAU+6C,QAAU,WAO5B,OANAoC,EAAOn9C,UAAU+6C,QAAQx8C,KAAK6Q,MAE9BA,KAAKw0C,QAAQ7I,UAEb3rC,KAAKwyE,WAAW/+E,aAETuM,MAlIX,CAsIE,IN7Iey0C,KAAapC,IAAI7hD,KAAKikD,MAOhBA,KAAanC,UAAU9hD,KAAKikD,MAO5BA,KAAaiE,WA2BzB,IApBcjE,KAAavrC,YAMhBurC,KAAa3lC,SAOjB2lC,KAAaga,KAOVha,MAOD,GAAgBC,OAAOlkD,KAAK,I,OOxDhDsD,OAAOsV,iBAAiB,oBAAoB,WAExCuR,SAASu+D,gBAAgB9vE,iBAAiB,aAAa,WACxB,YAAvB+jC,GAAa5/B,OAAqB4/B,GAAan/B,YAGvD,IAAMmrE,EAAS,CACX,IAAIhsC,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,IAYRgsC,EAAOx8E,SAAQ,SAAAy8E,GAAK,OAAIA,EAAM12B,cAI9B,IAAM22B,EAAO1+D,SAASwtB,KAAKmxC,iBAAiB,YACtCzT,EAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDnnE,EAAQ,EAGZyuC,GAAe6e,gBAGf,SAAgBruD,GAEZ,IADA,IAAIoqC,EAAOrpC,EAAQ,EACV1P,EAAI,EAAGA,EAAIqqF,EAAKz6E,OAAQ5P,IAAK,CAClC,IAAIoqF,EAAQD,EAAOnqF,GACfutD,EAAOspB,EAAM72E,GACPqqF,EAAKrqF,GACCuqF,cAAJ,0BAAqCxxC,EAAO,EAA5C,MACSwxC,cAAc,SAGtBC,SAASJ,EAAMvb,qBAAqBthB,EAAM,KAAM5+C,GAGjEe,MAhBkC,MACtCyuC,GAAezpC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 686);\n","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap(); // This clunky name is borrowed from the spec. :-)\n\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n  assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n  assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n  assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n  return nativeAudioNode.context === nativeContext;\n};","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n  const value = options[option];\n\n  if (value !== undefined && value !== nativeAudioNode[option]) {\n    nativeAudioNode[option] = value;\n  }\n};","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n  const value = options[audioParam];\n\n  if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n    nativeAudioNode[audioParam].value = value;\n  }\n};","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = audioNode => {\n  return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};","export const createInvalidStateError = () => {\n  try {\n    return new DOMException('', 'InvalidStateError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 11;\n    err.name = 'InvalidStateError';\n    return err;\n  }\n};","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = audioNode => {\n  return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};","export const getValueForKey = (map, key) => {\n  const value = map.get(key);\n\n  if (value === undefined) {\n    throw new Error('A value with the given key could not be found.');\n  }\n\n  return value;\n};","export const createNotSupportedError = () => {\n  try {\n    return new DOMException('', 'NotSupportedError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 9;\n    err.name = 'NotSupportedError';\n    return err;\n  }\n};","export const interceptConnections = (original, interceptor) => {\n  original.connect = interceptor.connect.bind(interceptor);\n  original.disconnect = interceptor.disconnect.bind(interceptor);\n  return original;\n};","export const isNativeAudioNodeFaker = nativeAudioNodeOrNativeAudioNodeFaker => {\n  return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupNativeContext } from './factories/get-backup-native-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioNodeFactory } from './factories/native-audio-node-factory';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNodeFactory } from './factories/native-biquad-filter-node-factory';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNodeFactory } from './factories/native-channel-splitter-node-factory';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeConvolverNodeFakerFactory } from './factories/native-convolver-node-faker-factory';\nimport { createNativeDelayNodeFactory } from './factories/native-delay-node-factory';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNodeFactory } from './factories/native-gain-node-factory';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNodeFactory } from './factories/native-media-element-audio-source-node-factory';\nimport { createNativeMediaStreamAudioDestinationNodeFactory } from './factories/native-media-stream-audio-destination-node-factory';\nimport { createNativeMediaStreamAudioSourceNodeFactory } from './factories/native-media-stream-audio-source-node-factory';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNodeFactory } from './factories/native-script-processor-node-factory';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './factories/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { createTestAudioBufferSourceNodeStartMethodDurationParameterSupport } from './factories/test-audio-buffer-source-node-start-method-duration-parameter-support';\nimport { createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './factories/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst getBackupNativeContext = createGetBackupNativeContext(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);\nconst createNativeAudioNode = createNativeAudioNodeFactory(getBackupNativeContext);\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError, createNativeAudioNode);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst auxiliaryGainNodeStore = new WeakMap();\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst createNativeGainNode = createNativeGainNodeFactory(createNativeAudioNode);\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport(createNativeAudioNode);\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(createNativeAudioNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStartMethodDurationParameterSupport(nativeOfflineAudioContextConstructor), createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createNativeBiquadFilterNode = createNativeBiquadFilterNodeFactory(createNativeAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(createNativeAudioNode, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeChannelSplitterNode = createNativeChannelSplitterNodeFactory(createNativeAudioNode);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNodeFaker = createNativeConvolverNodeFakerFactory(createNativeAudioNode, createNativeGainNode, monitorConnections);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDelayNode = createNativeDelayNodeFactory(createNativeAudioNode);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeScriptProcessorNode = createNativeScriptProcessorNodeFactory(createNativeAudioNode);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeAudioNode, createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativeAudioNode, createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(getBackupNativeContext);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet());\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window); // The addAudioWorkletModule() function is only available in a SecureContext.\n\nexport const addAudioWorkletModule = isSecureContext ? createAddAudioWorkletModule(createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getBackupNativeContext, getNativeContext, new WeakMap(), new WeakMap(), // @todo window is guaranteed to be defined because isSecureContext checks that as well.\nwindow) : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst createNativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext); // The AudioWorkletNode constructor is only available in a SecureContext.\n\nconst audioWorkletNodeConstructor = isSecureContext ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);","export const testPromiseSupport = nativeContext => {\n  // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n  const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n  try {\n    // Bug #1: Safari requires a successCallback.\n    const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {// Ignore the success callback.\n    });\n\n    if (promise === undefined) {\n      return false;\n    }\n\n    promise.catch(() => {// Ignore rejected errors.\n    });\n    return true;\n  } catch {// Ignore errors.\n  }\n\n  return false;\n};","export const createIndexSizeError = () => {\n  try {\n    return new DOMException('', 'IndexSizeError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 1;\n    err.name = 'IndexSizeError';\n    return err;\n  }\n};","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n  for (const lmnt of set) {\n    if (predicate(lmnt)) {\n      if (ignoreDuplicates) {\n        return false;\n      }\n\n      throw Error('The set contains at least one similar element.');\n    }\n  }\n\n  set.add(element);\n  return true;\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = audioNode => {\n  if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error('The AudioNode is already stored.');\n  }\n\n  ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach(eventListener => eventListener(true));\n};","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) : typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) : (global = global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, function (exports, _slicedToArray, _classCallCheck, _createClass) {\n  'use strict';\n\n  _slicedToArray = _slicedToArray && Object.prototype.hasOwnProperty.call(_slicedToArray, 'default') ? _slicedToArray['default'] : _slicedToArray;\n  _classCallCheck = _classCallCheck && Object.prototype.hasOwnProperty.call(_classCallCheck, 'default') ? _classCallCheck['default'] : _classCallCheck;\n  _createClass = _createClass && Object.prototype.hasOwnProperty.call(_createClass, 'default') ? _createClass['default'] : _createClass;\n\n  var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n    return {\n      startTime: startTime,\n      type: 'setValue',\n      value: value\n    };\n  };\n\n  var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n    return {\n      duration: duration,\n      startTime: startTime,\n      type: 'setValueCurve',\n      values: values\n    };\n  };\n\n  var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n    var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n  };\n\n  var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'exponentialRampToValue';\n  };\n\n  var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'linearRampToValue';\n  };\n\n  var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n  };\n\n  var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValue';\n  };\n\n  var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValueCurve';\n  };\n\n  var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n    var automationEvent = automationEvents[index];\n    return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n  };\n\n  var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n    return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n  };\n\n  var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelAndHold';\n  };\n\n  var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelScheduledValues';\n  };\n\n  var getEventTime = function getEventTime(automationEvent) {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n      return automationEvent.cancelTime;\n    }\n\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n      return automationEvent.endTime;\n    }\n\n    return automationEvent.startTime;\n  };\n\n  var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n\n    if (valueAtStartTime === value) {\n      return value;\n    }\n\n    if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n      return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n    }\n\n    return 0;\n  };\n\n  var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n    return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n  };\n\n  var interpolateValue = function interpolateValue(values, theoreticIndex) {\n    var lowerIndex = Math.floor(theoreticIndex);\n    var upperIndex = Math.ceil(theoreticIndex);\n\n    if (lowerIndex === upperIndex) {\n      return values[lowerIndex];\n    }\n\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n  };\n\n  var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n    var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n    var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n  };\n\n  var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setTarget';\n  };\n\n  var AutomationEventList = /*#__PURE__*/function () {\n    function AutomationEventList(defaultValue) {\n      _classCallCheck(this, AutomationEventList);\n\n      this._automationEvents = [];\n      this._currenTime = 0;\n      this._defaultValue = defaultValue;\n    }\n\n    _createClass(AutomationEventList, [{\n      key: Symbol.iterator,\n      value: function value() {\n        return this._automationEvents[Symbol.iterator]();\n      }\n    }, {\n      key: \"add\",\n      value: function add(automationEvent) {\n        var eventTime = getEventTime(automationEvent);\n\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) >= eventTime;\n          });\n\n          var removedAutomationEvent = this._automationEvents[index];\n\n          if (index !== -1) {\n            this._automationEvents = this._automationEvents.slice(0, index);\n          }\n\n          if (isCancelAndHoldAutomationEvent(automationEvent)) {\n            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n            if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n              if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                throw new Error('The internal list is malformed.');\n              }\n\n              var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n              var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n              var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n              var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n              this._automationEvents.push(truncatedAutomationEvent);\n            }\n\n            if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n              this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n            }\n\n            if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n              this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n            }\n          }\n        } else {\n          var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > eventTime;\n          });\n\n          var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n          if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n            return false;\n          }\n\n          var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n          if (_index === -1) {\n            this._automationEvents.push(persistentAutomationEvent);\n          } else {\n            if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n              return false;\n            }\n\n            this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"flush\",\n      value: function flush(time) {\n        var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n          return getEventTime(currentAutomationEvent) > time;\n        });\n\n        if (index > 1) {\n          var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n          var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n          if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n            remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n          }\n\n          this._automationEvents = remainingAutomationEvents;\n        }\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue(time) {\n        if (this._automationEvents.length === 0) {\n          return this._defaultValue;\n        }\n\n        var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n        var index = this._automationEvents.findIndex(function (automationEvent) {\n          return getEventTime(automationEvent) > time;\n        });\n\n        var nextAutomationEvent = this._automationEvents[index];\n        var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n        if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n          return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n          if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n            return getValueCurveValueAtTime(time, currentAutomationEvent);\n          }\n\n          return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n\n        if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n\n          return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n\n          return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n        }\n\n        return this._defaultValue;\n      }\n    }]);\n\n    return AutomationEventList;\n  }();\n\n  var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelAndHold'\n    };\n  };\n\n  var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelScheduledValues'\n    };\n  };\n\n  var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n    return {\n      startTime: startTime,\n      target: target,\n      timeConstant: timeConstant,\n      type: 'setTarget'\n    };\n  };\n\n  exports.AutomationEventList = AutomationEventList;\n  exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n  exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n  exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n  exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n  exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n  exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n  exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = audioNode => {\n  return CYCLE_COUNTERS.has(audioNode);\n};","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = audioNode => {\n  return getValueForKey(EVENT_LISTENERS, audioNode);\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = audioNode => {\n  if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error('The AudioNode is not stored.');\n  }\n\n  ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach(eventListener => eventListener(false));\n};","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = outputConnection => {\n  return isAudioNode(outputConnection[0]);\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = audioNode => ACTIVE_AUDIO_NODE_STORE.has(audioNode);","export const isAudioNode = audioNodeOrAudioParam => {\n  return 'context' in audioNodeOrAudioParam;\n};","export const isNativeAudioNode = nativeAudioNodeOrAudioParam => {\n  return 'context' in nativeAudioNodeOrAudioParam;\n};","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = audioParam => {\n  return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = audioParam => {\n  return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};","export const wrapEventListener = (target, eventListener) => {\n  return event => {\n    const descriptor = {\n      value: target\n    };\n    Object.defineProperties(event, {\n      currentTarget: descriptor,\n      target: descriptor\n    });\n\n    if (typeof eventListener === 'function') {\n      return eventListener.call(target, event);\n    }\n\n    return eventListener.handleEvent.call(target, event);\n  };\n};","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = audioBuffer => {\n  audioBuffer.getChannelData = (getChannelData => {\n    return channel => {\n      try {\n        return getChannelData.call(audioBuffer, channel);\n      } catch (err) {\n        if (err.code === 12) {\n          throw createIndexSizeError();\n        }\n\n        throw err;\n      }\n    };\n  })(audioBuffer.getChannelData);\n};","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = nativeAudioScheduledSourceNode => {\n  nativeAudioScheduledSourceNode.start = (start => {\n    return (when = 0, offset = 0, duration) => {\n      if (typeof duration === 'number' && duration < 0 || offset < 0 || when < 0) {\n        throw new RangeError(\"The parameters can't be negative.\");\n      } // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n\n\n      start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n    };\n  })(nativeAudioScheduledSourceNode.start);\n};","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = nativeAudioScheduledSourceNode => {\n  nativeAudioScheduledSourceNode.stop = (stop => {\n    return (when = 0) => {\n      if (when < 0) {\n        throw new RangeError(\"The parameter can't be negative.\");\n      }\n\n      stop.call(nativeAudioScheduledSourceNode, when);\n    };\n  })(nativeAudioScheduledSourceNode.stop);\n};","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = nativeAudioBuffer => {\n  try {\n    nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n  } catch {\n    return false;\n  }\n\n  return true;\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n    const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n    nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n    return [fakeNativeDestinationAudioNode, output, 0];\n  }\n\n  nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n  return [nativeDestinationAudioNode, output, input];\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n  } else {\n    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n  }\n};","export function copyFromChannel(audioBuffer, // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n  if (typeof audioBuffer.copyFromChannel === 'function') {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength === 0) {\n      parent[key] = new Float32Array(128);\n    }\n\n    audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset); // Bug #5: Safari does not support copyFromChannel().\n  } else {\n    const channelData = audioBuffer.getChannelData(channelNumber); // The byteLength will be 0 when the ArrayBuffer was transferred.\n\n    if (parent[key].byteLength === 0) {\n      parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n    } else {\n      const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n      parent[key].set(slicedInput);\n    }\n  }\n}","export const createNestedArrays = (x, y) => {\n  const arrays = [];\n\n  for (let i = 0; i < x; i += 1) {\n    const array = [];\n    const length = typeof y === 'number' ? y : y[i];\n\n    for (let j = 0; j < length; j += 1) {\n      array.push(new Float32Array(128));\n    }\n\n    arrays.push(array);\n  }\n\n  return arrays;\n};","export const createInvalidAccessError = () => {\n  try {\n    return new DOMException('', 'InvalidAccessError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 15;\n    err.name = 'InvalidAccessError';\n    return err;\n  }\n};","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n  let prototype = Object.getPrototypeOf(object);\n\n  while (!prototype.hasOwnProperty(property)) {\n    prototype = Object.getPrototypeOf(prototype);\n  }\n\n  const {\n    get,\n    set\n  } = Object.getOwnPropertyDescriptor(prototype, property);\n  Object.defineProperty(object, property, {\n    get: createGetter(get),\n    set: createSetter(set)\n  });\n};","export const isValidLatencyHint = latencyHint => {\n  return latencyHint === undefined || typeof latencyHint === 'number' || typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback');\n};","export class ReadOnlyMap {\n  constructor(parameters) {\n    this._map = new Map(parameters);\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  forEach(callback, thisArg = null) {\n    return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n  }\n\n  get(name) {\n    return this._map.get(name);\n  }\n\n  has(name) {\n    return this._map.has(name);\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  values() {\n    return this._map.values();\n  }\n\n}","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n  if (typeof audioBuffer.copyToChannel === 'function') {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength !== 0) {\n      audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n    } // Bug #5: Safari does not support copyToChannel().\n\n  } else {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength !== 0) {\n      audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n    }\n  }\n};","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n  const inputLength = input.length;\n  let i = bufferIndex;\n\n  for (let j = 0; j < inputLength; j += 1) {\n    let y = feedforward[0] * input[j];\n\n    for (let k = 1; k < minLength; k += 1) {\n      const x = i - k & bufferLength - 1; // tslint:disable-line:no-bitwise\n\n      y += feedforward[k] * xBuffer[x];\n      y -= feedback[k] * yBuffer[x];\n    }\n\n    for (let k = minLength; k < feedforwardLength; k += 1) {\n      y += feedforward[k] * xBuffer[i - k & bufferLength - 1]; // tslint:disable-line:no-bitwise\n    }\n\n    for (let k = minLength; k < feedbackLength; k += 1) {\n      y -= feedback[k] * yBuffer[i - k & bufferLength - 1]; // tslint:disable-line:no-bitwise\n    }\n\n    xBuffer[i] = input[j];\n    yBuffer[i] = y;\n    i = i + 1 & bufferLength - 1; // tslint:disable-line:no-bitwise\n\n    output[j] = y;\n  }\n\n  return i;\n};","export const computeBufferSize = (baseLatency, sampleRate) => {\n  if (baseLatency === null) {\n    return 512;\n  }\n\n  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};","export const createUnknownError = () => {\n  try {\n    return new DOMException('', 'UnknownError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.name = 'UnknownError';\n    return err;\n  }\n};","export const isDCCurve = curve => {\n  if (curve === null) {\n    return false;\n  }\n\n  const length = curve.length;\n\n  if (length % 2 !== 0) {\n    return curve[Math.floor(length / 2)] !== 0;\n  }\n\n  return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};","export * from './analyser-node';\nexport * from './analyser-options';\nexport * from './audio-buffer';\nexport * from './audio-buffer-options';\nexport * from './audio-buffer-source-node';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-options';\nexport * from './audio-context';\nexport * from './audio-context-options';\nexport * from './audio-destination-node';\nexport * from './audio-listener';\nexport * from './audio-node';\nexport * from './audio-node-options';\nexport * from './audio-node-renderer';\nexport * from './audio-param';\nexport * from './audio-param-descriptor';\nexport * from './audio-param-renderer';\nexport * from './audio-scheduled-source-node';\nexport * from './audio-scheduled-source-node-event-map';\nexport * from './audio-worklet';\nexport * from './audio-worklet-node';\nexport * from './audio-worklet-node-event-map';\nexport * from './audio-worklet-node-options';\nexport * from './audio-worklet-processor';\nexport * from './audio-worklet-processor-constructor';\nexport * from './automation';\nexport * from './base-audio-context';\nexport * from './biquad-filter-node';\nexport * from './biquad-filter-options';\nexport * from './channel-merger-options';\nexport * from './channel-splitter-options';\nexport * from './common-audio-context';\nexport * from './common-offline-audio-context';\nexport * from './constant-source-node';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-options';\nexport * from './convolver-node';\nexport * from './convolver-options';\nexport * from './delay-node';\nexport * from './delay-options';\nexport * from './dynamics-compressor-node';\nexport * from './dynamics-compressor-options';\nexport * from './gain-node';\nexport * from './gain-options';\nexport * from './iir-filter-node';\nexport * from './iir-filter-options';\nexport * from './media-element-audio-source-node';\nexport * from './media-element-audio-source-options';\nexport * from './media-stream-audio-destination-node';\nexport * from './media-stream-audio-source-node';\nexport * from './media-stream-audio-source-options';\nexport * from './media-stream-track-audio-source-node';\nexport * from './media-stream-track-audio-source-options';\nexport * from './minimal-audio-context';\nexport * from './minimal-base-audio-context';\nexport * from './minimal-base-audio-context-event-map';\nexport * from './minimal-offline-audio-context';\nexport * from './native-audio-node-faker';\nexport * from './native-audio-worklet-node-faker';\nexport * from './native-constant-source-node-faker';\nexport * from './native-convolver-node-faker';\nexport * from './native-iir-filter-node-faker';\nexport * from './native-panner-node-faker';\nexport * from './native-stereo-panner-node-faker';\nexport * from './native-wave-shaper-node-faker';\nexport * from './offline-audio-completion-event';\nexport * from './offline-audio-context';\nexport * from './offline-audio-context-constructor';\nexport * from './offline-audio-context-options';\nexport * from './oscillator-node';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-options';\nexport * from './panner-node';\nexport * from './panner-options';\nexport * from './periodic-wave';\nexport * from './periodic-wave-constraints';\nexport * from './periodic-wave-options';\nexport * from './read-only-map';\nexport * from './stereo-panner-node';\nexport * from './stereo-panner-options';\nexport * from './wave-shaper-node';\nexport * from './wave-shaper-options';\nexport * from './worklet-options';","export * from './abort-error-factory';\nexport * from './active-input-connection';\nexport * from './add-audio-node-connections-factory';\nexport * from './add-audio-node-connections-function';\nexport * from './add-audio-param-connections-factory';\nexport * from './add-audio-param-connections-function';\nexport * from './add-audio-worklet-module-factory';\nexport * from './add-audio-worklet-module-function';\nexport * from './add-silent-connection-factory';\nexport * from './add-silent-connection-function';\nexport * from './add-unrendered-audio-worklet-node-factory';\nexport * from './add-unrendered-audio-worklet-node-function';\nexport * from './analyser-node-constructor';\nexport * from './analyser-node-constructor-factory';\nexport * from './analyser-node-renderer-factory';\nexport * from './analyser-node-renderer-factory-factory';\nexport * from './any-audio-buffer';\nexport * from './any-context';\nexport * from './audio-buffer-constructor';\nexport * from './audio-buffer-constructor-factory';\nexport * from './audio-buffer-source-node-constructor';\nexport * from './audio-buffer-source-node-constructor-factory';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-node-renderer-factory';\nexport * from './audio-buffer-source-node-renderer-factory-factory';\nexport * from './audio-buffer-store';\nexport * from './audio-context-constructor';\nexport * from './audio-context-constructor-factory';\nexport * from './audio-context-latency-category';\nexport * from './audio-context-state';\nexport * from './audio-destination-node-constructor';\nexport * from './audio-destination-node-constructor-factory';\nexport * from './audio-destination-node-renderer-factory';\nexport * from './audio-listener-factory';\nexport * from './audio-listener-factory-factory';\nexport * from './audio-node-connections';\nexport * from './audio-node-connections-store';\nexport * from './audio-node-constructor';\nexport * from './audio-node-constructor-factory';\nexport * from './audio-node-output-connection';\nexport * from './audio-node-renderer';\nexport * from './audio-node-store';\nexport * from './audio-param-audio-node-store';\nexport * from './audio-param-connections';\nexport * from './audio-param-connections-store';\nexport * from './audio-param-factory';\nexport * from './audio-param-factory-factory';\nexport * from './audio-param-map';\nexport * from './audio-param-output-connection';\nexport * from './audio-param-renderer-factory';\nexport * from './audio-param-store';\nexport * from './audio-worklet-node-constructor';\nexport * from './audio-worklet-node-constructor-factory';\nexport * from './audio-worklet-node-renderer-factory';\nexport * from './audio-worklet-node-renderer-factory-factory';\nexport * from './auxiliary-gain-node-store';\nexport * from './base-audio-context-constructor';\nexport * from './base-audio-context-constructor-factory';\nexport * from './biquad-filter-node-constructor';\nexport * from './biquad-filter-node-constructor-factory';\nexport * from './biquad-filter-node-renderer-factory';\nexport * from './biquad-filter-node-renderer-factory-factory';\nexport * from './biquad-filter-type';\nexport * from './channel-count-mode';\nexport * from './channel-interpretation';\nexport * from './channel-merger-node-constructor';\nexport * from './channel-merger-node-constructor-factory';\nexport * from './channel-merger-node-renderer-factory';\nexport * from './channel-merger-node-renderer-factory-factory';\nexport * from './channel-splitter-node-constructor';\nexport * from './channel-splitter-node-constructor-factory';\nexport * from './channel-splitter-node-renderer-factory';\nexport * from './channel-splitter-node-renderer-factory-factory';\nexport * from './cache-test-result-factory';\nexport * from './cache-test-result-function';\nexport * from './connect-audio-param-factory';\nexport * from './connect-audio-param-function';\nexport * from './connect-multiple-outputs-factory';\nexport * from './connect-multiple-outputs-function';\nexport * from './connect-native-audio-node-to-native-audio-node-function';\nexport * from './connected-native-audio-buffer-source-node-factory';\nexport * from './connected-native-audio-buffer-source-node-factory-factory';\nexport * from './constant-source-node-constructor';\nexport * from './constant-source-node-constructor-factory';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-node-renderer-factory';\nexport * from './constant-source-node-renderer-factory-factory';\nexport * from './constructor';\nexport * from './context';\nexport * from './context-store';\nexport * from './convert-number-to-unsigned-long-factory';\nexport * from './convert-number-to-unsigned-long-function';\nexport * from './convolver-node-constructor';\nexport * from './convolver-node-constructor-factory';\nexport * from './convolver-node-renderer-factory';\nexport * from './convolver-node-renderer-factory-factory';\nexport * from './create-native-offline-audio-context-factory';\nexport * from './create-native-offline-audio-context-function';\nexport * from './cycle-counters';\nexport * from './data-clone-error-factory';\nexport * from './decode-audio-data-factory';\nexport * from './decode-audio-data-function';\nexport * from './decode-error-callback';\nexport * from './decode-success-callback';\nexport * from './decrement-cycle-counter-factory';\nexport * from './decrement-cycle-counter-function';\nexport * from './delay-node-constructor';\nexport * from './delay-node-constructor-factory';\nexport * from './delay-node-renderer-factory';\nexport * from './delay-node-renderer-factory-factory';\nexport * from './delete-unrendered-audio-worklet-node-factory';\nexport * from './delete-unrendered-audio-worklet-node-function';\nexport * from './detect-cycles-factory';\nexport * from './detect-cycles-function';\nexport * from './disconnect-multiple-outputs-factory';\nexport * from './disconnect-multiple-outputs-function';\nexport * from './disconnect-native-audio-node-from-native-audio-node-function';\nexport * from './distance-model-type';\nexport * from './dynamics-compressor-node-constructor';\nexport * from './dynamics-compressor-node-constructor-factory';\nexport * from './dynamics-compressor-node-renderer-factory';\nexport * from './dynamics-compressor-node-renderer-factory-factory';\nexport * from './encoding-error-factory';\nexport * from './error-event-handler';\nexport * from './evaluate-audio-worklet-global-scope-function';\nexport * from './evaluate-source-factory';\nexport * from './evaluate-source-function';\nexport * from './event-handler';\nexport * from './event-target-constructor';\nexport * from './event-target-constructor-factory';\nexport * from './expose-current-frame-and-current-time-factory';\nexport * from './expose-current-frame-and-current-time-function';\nexport * from './fetch-source-factory';\nexport * from './fetch-source-function';\nexport * from './gain-node-constructor';\nexport * from './gain-node-constructor-factory';\nexport * from './gain-node-renderer-factory';\nexport * from './gain-node-renderer-factory-factory';\nexport * from './get-audio-node-connections-function';\nexport * from './get-audio-node-renderer-factory';\nexport * from './get-audio-node-renderer-function';\nexport * from './get-audio-param-connections-function';\nexport * from './get-audio-param-renderer-factory';\nexport * from './get-audio-param-renderer-function';\nexport * from './get-backup-native-context-factory';\nexport * from './get-backup-native-context-function';\nexport * from './get-native-audio-node-function';\nexport * from './get-native-audio-param-function';\nexport * from './get-native-context-function';\nexport * from './get-native-context-factory';\nexport * from './get-unrendered-audio-worklet-nodes-factory';\nexport * from './get-unrendered-audio-worklet-nodes-function';\nexport * from './get-value-for-key-function';\nexport * from './iir-filter-node-constructor';\nexport * from './iir-filter-node-constructor-factory';\nexport * from './iir-filter-node-renderer-factory';\nexport * from './iir-filter-node-renderer-factory-factory';\nexport * from './increment-cycle-counter-factory';\nexport * from './increment-cycle-counter-factory-factory';\nexport * from './increment-cycle-counter-function';\nexport * from './index-size-error-factory';\nexport * from './insert-element-in-set-function';\nexport * from './internal-state-event-listener';\nexport * from './invalid-access-error-factory';\nexport * from './invalid-state-error-factory';\nexport * from './is-active-audio-node-function';\nexport * from './is-any-audio-context-factory';\nexport * from './is-any-audio-context-function';\nexport * from './is-any-audio-node-factory';\nexport * from './is-any-audio-node-function';\nexport * from './is-any-audio-param-factory';\nexport * from './is-any-audio-param-function';\nexport * from './is-any-offline-audio-context-factory';\nexport * from './is-any-offline-audio-context-function';\nexport * from './is-dc-curve-function';\nexport * from './is-native-audio-context-factory';\nexport * from './is-native-audio-context-function';\nexport * from './is-native-audio-node-factory';\nexport * from './is-native-audio-node-function';\nexport * from './is-native-audio-param-factory';\nexport * from './is-native-audio-param-function';\nexport * from './is-native-context-factory';\nexport * from './is-native-context-function';\nexport * from './is-native-offline-audio-context-factory';\nexport * from './is-native-offline-audio-context-function';\nexport * from './is-part-of-a-cycle-function';\nexport * from './is-secure-context-factory';\nexport * from './is-supported-promise-factory';\nexport * from './media-element-audio-source-node-constructor';\nexport * from './media-element-audio-source-node-constructor-factory';\nexport * from './media-stream-audio-destination-node-constructor';\nexport * from './media-stream-audio-destination-node-constructor-factory';\nexport * from './media-stream-audio-source-node-constructor';\nexport * from './media-stream-audio-source-node-constructor-factory';\nexport * from './media-stream-track-audio-source-node-constructor';\nexport * from './media-stream-track-audio-source-node-constructor-factory';\nexport * from './minimal-audio-context-constructor';\nexport * from './minimal-audio-context-constructor-factory';\nexport * from './minimal-base-audio-context-constructor';\nexport * from './minimal-base-audio-context-constructor-factory';\nexport * from './minimal-offline-audio-context-constructor';\nexport * from './minimal-offline-audio-context-constructor-factory';\nexport * from './monitor-connections-factory';\nexport * from './monitor-connections-function';\nexport * from './native-analyser-node';\nexport * from './native-analyser-node-factory';\nexport * from './native-analyser-node-factory-factory';\nexport * from './native-audio-buffer';\nexport * from './native-audio-buffer-constructor';\nexport * from './native-audio-buffer-constructor-factory';\nexport * from './native-audio-buffer-source-node';\nexport * from './native-audio-buffer-source-node-factory';\nexport * from './native-audio-buffer-source-node-factory-factory';\nexport * from './native-audio-context';\nexport * from './native-audio-context-constructor';\nexport * from './native-audio-context-constructor-factory';\nexport * from './native-audio-destination-node';\nexport * from './native-audio-destination-node-factory';\nexport * from './native-audio-destination-node-factory-factory';\nexport * from './native-audio-listener';\nexport * from './native-audio-node';\nexport * from './native-audio-node-factory';\nexport * from './native-audio-node-factory-factory';\nexport * from './native-audio-param';\nexport * from './native-audio-param-map';\nexport * from './native-audio-worklet';\nexport * from './native-audio-worklet-node';\nexport * from './native-audio-worklet-node-constructor';\nexport * from './native-audio-worklet-node-constructor-factory';\nexport * from './native-audio-worklet-node-factory';\nexport * from './native-audio-worklet-node-factory-factory';\nexport * from './native-audio-worklet-node-faker-factory';\nexport * from './native-audio-worklet-node-faker-factory-factory';\nexport * from './native-audio-worklet-node-options';\nexport * from './native-biquad-filter-node';\nexport * from './native-biquad-filter-node-factory';\nexport * from './native-biquad-filter-node-factory-factory';\nexport * from './native-channel-merger-node';\nexport * from './native-channel-merger-node-factory';\nexport * from './native-channel-merger-node-factory-factory';\nexport * from './native-channel-splitter-node';\nexport * from './native-channel-splitter-node-factory';\nexport * from './native-channel-splitter-node-factory-factory';\nexport * from './native-constant-source-node';\nexport * from './native-constant-source-node-factory';\nexport * from './native-constant-source-node-factory-factory';\nexport * from './native-constant-source-node-faker-factory';\nexport * from './native-constant-source-node-faker-factory-factory';\nexport * from './native-context';\nexport * from './native-convolver-node';\nexport * from './native-convolver-node-factory';\nexport * from './native-convolver-node-factory-factory';\nexport * from './native-convolver-node-faker-factory';\nexport * from './native-convolver-node-faker-factory-factory';\nexport * from './native-delay-node-factory';\nexport * from './native-delay-node-factory-factory';\nexport * from './native-delay-node';\nexport * from './native-dynamics-compressor-node';\nexport * from './native-dynamics-compressor-node-factory';\nexport * from './native-dynamics-compressor-node-factory-factory';\nexport * from './native-event-target';\nexport * from './native-gain-node';\nexport * from './native-gain-node-factory';\nexport * from './native-gain-node-factory-factory';\nexport * from './native-iir-filter-node';\nexport * from './native-iir-filter-node-factory';\nexport * from './native-iir-filter-node-factory-factory';\nexport * from './native-iir-filter-node-faker-factory';\nexport * from './native-iir-filter-node-faker-factory-factory';\nexport * from './native-media-element-audio-source-node';\nexport * from './native-media-element-audio-source-node-factory';\nexport * from './native-media-element-audio-source-node-factory-factory';\nexport * from './native-media-stream-audio-destination-node';\nexport * from './native-media-stream-audio-destination-node-factory';\nexport * from './native-media-stream-audio-destination-node-factory-factory';\nexport * from './native-media-stream-audio-source-node';\nexport * from './native-media-stream-audio-source-node-factory';\nexport * from './native-media-stream-audio-source-node-factory-factory';\nexport * from './native-media-stream-track-audio-source-node';\nexport * from './native-media-stream-track-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node-factory-factory';\nexport * from './native-offline-audio-context';\nexport * from './native-offline-audio-context-constructor';\nexport * from './native-offline-audio-context-constructor-factory';\nexport * from './native-oscillator-node';\nexport * from './native-oscillator-node-factory';\nexport * from './native-oscillator-node-factory-factory';\nexport * from './native-panner-node';\nexport * from './native-panner-node-factory';\nexport * from './native-panner-node-factory-factory';\nexport * from './native-panner-node-faker-factory';\nexport * from './native-panner-node-faker-factory-factory';\nexport * from './native-periodic-wave';\nexport * from './native-periodic-wave-factory';\nexport * from './native-periodic-wave-factory-factory';\nexport * from './native-script-processor-node';\nexport * from './native-script-processor-node-factory';\nexport * from './native-script-processor-node-factory-factory';\nexport * from './native-stereo-panner-node';\nexport * from './native-stereo-panner-node-factory';\nexport * from './native-stereo-panner-node-factory-factory';\nexport * from './native-stereo-panner-node-faker-factory';\nexport * from './native-stereo-panner-node-faker-factory-factory';\nexport * from './native-wave-shaper-node';\nexport * from './native-wave-shaper-node-factory';\nexport * from './native-wave-shaper-node-factory-factory';\nexport * from './native-wave-shaper-node-faker-factory';\nexport * from './native-wave-shaper-node-faker-factory-factory';\nexport * from './not-supported-error-factory';\nexport * from './offline-audio-context-constructor-factory';\nexport * from './oscillator-node-constructor';\nexport * from './oscillator-node-constructor-factory';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-node-renderer-factory';\nexport * from './oscillator-node-renderer-factory-factory';\nexport * from './oscillator-type';\nexport * from './output-connection';\nexport * from './over-sample-type';\nexport * from './overwrite-accessors-function';\nexport * from './panner-node-constructor';\nexport * from './panner-node-constructor-factory';\nexport * from './panner-node-renderer-factory';\nexport * from './panner-node-renderer-factory-factory';\nexport * from './panning-model-type';\nexport * from './passive-audio-node-input-connection';\nexport * from './passive-audio-param-input-connection';\nexport * from './periodic-wave-constructor';\nexport * from './periodic-wave-constructor-factory';\nexport * from './render-automation-factory';\nexport * from './render-automation-function';\nexport * from './render-inputs-of-audio-node-factory';\nexport * from './render-inputs-of-audio-node-function';\nexport * from './render-inputs-of-audio-param-factory';\nexport * from './render-inputs-of-audio-param-function';\nexport * from './render-native-offline-audio-context-factory';\nexport * from './render-native-offline-audio-context-function';\nexport * from './start-rendering-factory';\nexport * from './start-rendering-function';\nexport * from './stereo-panner-node-constructor';\nexport * from './stereo-panner-node-constructor-factory';\nexport * from './stereo-panner-node-renderer-factory-factory';\nexport * from './stereo-panner-node-renderer-factory';\nexport * from './test-audio-buffer-copy-channel-methods-subarray-support-factory';\nexport * from './test-audio-buffer-constructor-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-consecutive-calls-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-duration-parameter-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-offset-clamping-support-factory';\nexport * from './test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory';\nexport * from './test-audio-context-close-method-support-factory';\nexport * from './test-audio-context-decode-audio-data-method-type-error-support-factory';\nexport * from './test-audio-context-options-support-factory';\nexport * from './test-audio-node-connect-method-support-factory';\nexport * from './test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory';\nexport * from './test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory';\nexport * from './test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory';\nexport * from './test-audio-worklet-processor-no-outputs-support-factory';\nexport * from './test-channel-merger-node-channel-count-support-factory';\nexport * from './test-constant-source-node-accurate-scheduling-support-factory';\nexport * from './test-convolver-node-buffer-reassignability-support-factory';\nexport * from './test-is-secure-context-support-factory';\nexport * from './test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nexport * from './test-offline-audio-context-current-time-support-factory';\nexport * from './test-stereo-panner-node-default-value-support-factory';\nexport * from './typed-array';\nexport * from './unknown-error-factory';\nexport * from './unrendered-audio-worklet-node-store';\nexport * from './unrendered-audio-worklet-nodes';\nexport * from './wave-shaper-node-constructor';\nexport * from './wave-shaper-node-constructor-factory';\nexport * from './wave-shaper-node-renderer-factory-factory';\nexport * from './wave-shaper-node-renderer-factory';\nexport * from './window-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-function';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\nexport * from './wrap-audio-buffer-source-node-start-method-offset-clamping-function';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-function';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function';\nexport * from './wrap-channel-merger-node-factory';\nexport * from './wrap-channel-merger-node-function';\nexport * from './wrap-event-listener-function';","export const createAbortError = () => {\n  try {\n    return new DOMException('', 'AbortError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 20;\n    err.name = 'AbortError';\n    return err;\n  }\n};","export const createAddAudioNodeConnections = audioNodeConnectionsStore => {\n  return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n    const activeInputs = [];\n\n    for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n      activeInputs.push(new Set());\n    }\n\n    audioNodeConnectionsStore.set(audioNode, {\n      activeInputs,\n      outputs: new Set(),\n      passiveInputs: new WeakMap(),\n      renderer: audioNodeRenderer\n    });\n  };\n};","export const createAddAudioParamConnections = audioParamConnectionsStore => {\n  return (audioParam, audioParamRenderer) => {\n    audioParamConnectionsStore.set(audioParam, {\n      activeInputs: new Set(),\n      passiveInputs: new WeakMap(),\n      renderer: audioParamRenderer\n    });\n  };\n};","export const createAddSilentConnection = createNativeGainNode => {\n  return (nativeContext, nativeAudioScheduledSourceNode) => {\n    const nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n    nativeAudioScheduledSourceNode.connect(nativeGainNode)\n    /*\n     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n     * used here to make sure to connect the right destination.\n     */\n    .connect(nativeGainNode.context.destination);\n\n    const disconnect = () => {\n      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n  };\n};","export const createAddUnrenderedAudioWorkletNode = getUnrenderedAudioWorkletNodes => {\n  return (nativeContext, audioWorkletNode) => {\n    getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  fftSize: 2048,\n  maxDecibels: -30,\n  minDecibels: -100,\n  smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class AnalyserNode extends audionNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n      const analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;\n      super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n      this._nativeAnalyserNode = nativeAnalyserNode;\n    }\n\n    get fftSize() {\n      return this._nativeAnalyserNode.fftSize;\n    }\n\n    set fftSize(value) {\n      this._nativeAnalyserNode.fftSize = value;\n    }\n\n    get frequencyBinCount() {\n      return this._nativeAnalyserNode.frequencyBinCount;\n    }\n\n    get maxDecibels() {\n      return this._nativeAnalyserNode.maxDecibels;\n    }\n\n    set maxDecibels(value) {\n      // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n      const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n      this._nativeAnalyserNode.maxDecibels = value;\n\n      if (!(value > this._nativeAnalyserNode.minDecibels)) {\n        this._nativeAnalyserNode.maxDecibels = maxDecibels;\n        throw createIndexSizeError();\n      }\n    }\n\n    get minDecibels() {\n      return this._nativeAnalyserNode.minDecibels;\n    }\n\n    set minDecibels(value) {\n      // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n      const minDecibels = this._nativeAnalyserNode.minDecibels;\n      this._nativeAnalyserNode.minDecibels = value;\n\n      if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n        this._nativeAnalyserNode.minDecibels = minDecibels;\n        throw createIndexSizeError();\n      }\n    }\n\n    get smoothingTimeConstant() {\n      return this._nativeAnalyserNode.smoothingTimeConstant;\n    }\n\n    set smoothingTimeConstant(value) {\n      this._nativeAnalyserNode.smoothingTimeConstant = value;\n    }\n\n    getByteFrequencyData(array) {\n      this._nativeAnalyserNode.getByteFrequencyData(array);\n    }\n\n    getByteTimeDomainData(array) {\n      this._nativeAnalyserNode.getByteTimeDomainData(array);\n    }\n\n    getFloatFrequencyData(array) {\n      this._nativeAnalyserNode.getFloatFrequencyData(array);\n    }\n\n    getFloatTimeDomainData(array) {\n      this._nativeAnalyserNode.getFloatTimeDomainData(array);\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAnalyserNodes = new WeakMap();\n\n    const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAnalyserNode = getNativeAudioNode(proxy); // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n\n      if (!nativeAnalyserNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAnalyserNode.channelCount,\n          channelCountMode: nativeAnalyserNode.channelCountMode,\n          channelInterpretation: nativeAnalyserNode.channelInterpretation,\n          fftSize: nativeAnalyserNode.fftSize,\n          maxDecibels: nativeAnalyserNode.maxDecibels,\n          minDecibels: nativeAnalyserNode.minDecibels,\n          smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n        };\n        nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n      return nativeAnalyserNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAnalyserNode !== undefined) {\n          return Promise.resolve(renderedNativeAnalyserNode);\n        }\n\n        return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n  let nativeOfflineAudioContext = null;\n  return class AudioBuffer {\n    constructor(options) {\n      if (nativeOfflineAudioContextConstructor === null) {\n        throw new Error('Missing the native OfflineAudioContext constructor.');\n      }\n\n      const {\n        length,\n        numberOfChannels,\n        sampleRate\n      } = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n\n      if (nativeOfflineAudioContext === null) {\n        nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n      }\n      /*\n       * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n       * factory function. But since Firefox also supports the constructor everything should be fine.\n       */\n\n\n      const audioBuffer = nativeAudioBufferConstructor !== null && cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor({\n        length,\n        numberOfChannels,\n        sampleRate\n      }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate); // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n\n      if (audioBuffer.numberOfChannels === 0) {\n        throw createNotSupportedError();\n      } // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n      // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n\n\n      if (typeof audioBuffer.copyFromChannel !== 'function') {\n        wrapAudioBufferCopyChannelMethods(audioBuffer);\n        wrapAudioBufferGetChannelDataMethod(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n      } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n        wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n      }\n\n      audioBufferStore.add(audioBuffer);\n      /*\n       * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n       * (Offline)AudioContexts.\n       */\n\n      return audioBuffer;\n    }\n\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype || audioBufferStore.has(instance);\n    }\n\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  // Bug #149: Safari does not yet support the detune AudioParam.\n  loop: false,\n  loopEnd: 0,\n  loopStart: 0,\n  playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class AudioBufferSourceNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;\n      super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n      this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n      this._isBufferNullified = false;\n      this._isBufferSet = options.buffer !== null && options.buffer !== undefined;\n      this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n      this._onended = null; // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n\n      return this._nativeAudioBufferSourceNode.buffer;\n    }\n\n    set buffer(value) {\n      // Bug #71: Edge does not allow to set the buffer to null.\n      try {\n        this._nativeAudioBufferSourceNode.buffer = value;\n      } catch (err) {\n        if (value !== null || err.code !== 17) {\n          throw err;\n        } // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.\n\n\n        if (this._nativeAudioBufferSourceNode.buffer !== null) {\n          const buffer = this._nativeAudioBufferSourceNode.buffer;\n          const numberOfChannels = buffer.numberOfChannels;\n\n          for (let i = 0; i < numberOfChannels; i += 1) {\n            buffer.getChannelData(i).fill(0);\n          }\n\n          this._isBufferNullified = true;\n        }\n      } // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n\n\n      if (value !== null) {\n        if (this._isBufferSet) {\n          throw createInvalidStateError();\n        }\n\n        this._isBufferSet = true;\n      }\n    }\n\n    get loop() {\n      return this._nativeAudioBufferSourceNode.loop;\n    }\n\n    set loop(value) {\n      this._nativeAudioBufferSourceNode.loop = value;\n    }\n\n    get loopEnd() {\n      return this._nativeAudioBufferSourceNode.loopEnd;\n    }\n\n    set loopEnd(value) {\n      this._nativeAudioBufferSourceNode.loopEnd = value;\n    }\n\n    get loopStart() {\n      return this._nativeAudioBufferSourceNode.loopStart;\n    }\n\n    set loopStart(value) {\n      this._nativeAudioBufferSourceNode.loopStart = value;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeAudioBufferSourceNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    get playbackRate() {\n      return this._playbackRate;\n    }\n\n    start(when = 0, offset = 0, duration) {\n      this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n      if (this._audioBufferSourceNodeRenderer !== null) {\n        this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeAudioBufferSourceNode.stop(when);\n\n      if (this._audioBufferSourceNodeRenderer !== null) {\n        this._audioBufferSourceNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAudioBufferSourceNodes = new WeakMap();\n    let start = null;\n    let stop = null;\n\n    const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n\n      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeAudioBufferSourceNode.buffer,\n          channelCount: nativeAudioBufferSourceNode.channelCount,\n          channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n          channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n          // Bug #149: Safari does not yet support the detune AudioParam.\n          loop: nativeAudioBufferSourceNode.loop,\n          loopEnd: nativeAudioBufferSourceNode.loopEnd,\n          loopStart: nativeAudioBufferSourceNode.loopStart,\n          playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n        };\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n\n        if (start !== null) {\n          nativeAudioBufferSourceNode.start(...start);\n        }\n\n        if (stop !== null) {\n          nativeAudioBufferSourceNode.stop(stop);\n        }\n      }\n\n      renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n      } else {\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n      return nativeAudioBufferSourceNode;\n    };\n\n    return {\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioBufferSourceNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioBufferSourceNode);\n        }\n\n        return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n  return class AudioContext extends baseAudioContextConstructor {\n    constructor(options = {}) {\n      if (nativeAudioContextConstructor === null) {\n        throw new Error('Missing the native AudioContext constructor.');\n      }\n\n      const nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.\n\n      if (nativeAudioContext === null) {\n        throw createUnknownError();\n      } // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n\n\n      if (!isValidLatencyHint(options.latencyHint)) {\n        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n      } // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n\n\n      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n        throw createNotSupportedError();\n      }\n\n      super(nativeAudioContext, 2);\n      const {\n        latencyHint\n      } = options;\n      const {\n        sampleRate\n      } = nativeAudioContext; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n\n      this._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :\n      /*\n       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n       * ScriptProcessorNode.\n       */\n      Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;\n      this._nativeAudioContext = nativeAudioContext;\n      this._state = null;\n      /*\n       * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes\n       * to 'running'.\n       */\n\n      if (nativeAudioContext.state === 'running') {\n        this._state = 'suspended';\n\n        const revokeState = () => {\n          if (this._state === 'suspended') {\n            this._state = null;\n          }\n\n          nativeAudioContext.removeEventListener('statechange', revokeState);\n        };\n\n        nativeAudioContext.addEventListener('statechange', revokeState);\n      }\n    }\n\n    get baseLatency() {\n      return this._baseLatency;\n    }\n\n    get state() {\n      return this._state !== null ? this._state : this._nativeAudioContext.state;\n    }\n\n    close() {\n      // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n      if (this.state === 'closed') {\n        return this._nativeAudioContext.close().then(() => {\n          throw createInvalidStateError();\n        });\n      } // Bug #34: If the state was set to suspended before it should be revoked now.\n\n\n      if (this._state === 'suspended') {\n        this._state = null;\n      }\n\n      return this._nativeAudioContext.close();\n      /*\n       * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n       * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n       */\n    }\n\n    createMediaElementSource(mediaElement) {\n      return new mediaElementAudioSourceNodeConstructor(this, {\n        mediaElement\n      });\n    }\n\n    createMediaStreamDestination() {\n      return new mediaStreamAudioDestinationNodeConstructor(this);\n    }\n\n    createMediaStreamSource(mediaStream) {\n      return new mediaStreamAudioSourceNodeConstructor(this, {\n        mediaStream\n      });\n    }\n\n    createMediaStreamTrackSource(mediaStreamTrack) {\n      return new mediaStreamTrackAudioSourceNodeConstructor(this, {\n        mediaStreamTrack\n      });\n    }\n\n    resume() {\n      if (this._state === 'suspended') {\n        return new Promise((resolve, reject) => {\n          const resolvePromise = () => {\n            this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n            if (this._nativeAudioContext.state === 'running') {\n              resolve();\n            } else {\n              this.resume().then(resolve, reject);\n            }\n          };\n\n          this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n        });\n      }\n\n      return this._nativeAudioContext.resume().catch(err => {\n        // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined || err.code === 15) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n    suspend() {\n      return this._nativeAudioContext.suspend().catch(err => {\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n  };\n};","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n  return class AudioDestinationNode extends audioNodeConstructor {\n    constructor(context, channelCount) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      this._isNodeOfNativeOfflineAudioContext = isOffline;\n      this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n    }\n\n    get channelCount() {\n      return this._nativeAudioDestinationNode.channelCount;\n    }\n\n    set channelCount(value) {\n      // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n      // Bug #54: Firefox does throw an IndexSizeError.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      } // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.\n\n\n      if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n        throw createIndexSizeError();\n      }\n\n      this._nativeAudioDestinationNode.channelCount = value;\n    }\n\n    get channelCountMode() {\n      return this._nativeAudioDestinationNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      // Bug #53: No browser does throw an exception yet.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      }\n\n      this._nativeAudioDestinationNode.channelCountMode = value;\n    }\n\n    get maxChannelCount() {\n      return this._nativeAudioDestinationNode.maxChannelCount;\n    }\n\n  };\n};","export const createAudioDestinationNodeRenderer = renderInputsOfAudioNode => {\n  let nativeAudioDestinationNodePromise = null;\n\n  const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n    const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n    await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n    return nativeAudioDestinationNode;\n  };\n\n  return {\n    render(proxy, nativeOfflineAudioContext, trace) {\n      if (nativeAudioDestinationNodePromise === null) {\n        nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n      return nativeAudioDestinationNodePromise;\n    }\n\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n  return (context, nativeContext) => {\n    const nativeListener = nativeContext.listener; // Bug #117: Only Chrome & Opera support the new interface already.\n\n    const createFakeAudioParams = () => {\n      const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'speakers',\n        numberOfInputs: 9\n      });\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n\n      const createFakeAudioParam = (input, value) => {\n        const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n          channelCount: 1,\n          channelCountMode: 'explicit',\n          channelInterpretation: 'discrete',\n          offset: value\n        });\n        constantSourceNode.connect(channelMergerNode, 0, input); // @todo This should be stopped when the context is closed.\n\n        constantSourceNode.start();\n        Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n          get() {\n            return value;\n          }\n\n        });\n        /*\n         * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n         * minValue for GainNodes.\n         */\n\n        return createAudioParam({\n          context\n        }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      };\n\n      let lastOrientation = [0, 0, -1, 0, 1, 0];\n      let lastPosition = [0, 0, 0];\n\n      scriptProcessorNode.onaudioprocess = ({\n        inputBuffer\n      }) => {\n        const orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0], inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];\n\n        if (orientation.some((value, index) => value !== lastOrientation[index])) {\n          nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n          lastOrientation = orientation;\n        }\n\n        const positon = [inputBuffer.getChannelData(6)[0], inputBuffer.getChannelData(7)[0], inputBuffer.getChannelData(8)[0]];\n\n        if (positon.some((value, index) => value !== lastPosition[index])) {\n          nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n\n          lastPosition = positon;\n        }\n      };\n\n      channelMergerNode.connect(scriptProcessorNode);\n      return {\n        forwardX: createFakeAudioParam(0, 0),\n        forwardY: createFakeAudioParam(1, 0),\n        forwardZ: createFakeAudioParam(2, -1),\n        positionX: createFakeAudioParam(6, 0),\n        positionY: createFakeAudioParam(7, 0),\n        positionZ: createFakeAudioParam(8, 0),\n        upX: createFakeAudioParam(3, 0),\n        upY: createFakeAudioParam(4, 1),\n        upZ: createFakeAudioParam(5, 0)\n      };\n    };\n\n    const {\n      forwardX,\n      forwardY,\n      forwardZ,\n      positionX,\n      positionY,\n      positionZ,\n      upX,\n      upY,\n      upZ\n    } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n    return {\n      get forwardX() {\n        return forwardX;\n      },\n\n      get forwardY() {\n        return forwardY;\n      },\n\n      get forwardZ() {\n        return forwardZ;\n      },\n\n      get positionX() {\n        return positionX;\n      },\n\n      get positionY() {\n        return positionY;\n      },\n\n      get positionZ() {\n        return positionZ;\n      },\n\n      get upX() {\n        return upX;\n      },\n\n      get upY() {\n        return upY;\n      },\n\n      get upZ() {\n        return upZ;\n      }\n\n    };\n  };\n};","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n  return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n    const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n    const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n    const audioParam = {\n      get defaultValue() {\n        return nativeAudioParam.defaultValue;\n      },\n\n      get maxValue() {\n        return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n      },\n\n      get minValue() {\n        return minValue === null ? nativeAudioParam.minValue : minValue;\n      },\n\n      get value() {\n        return nativeAudioParam.value;\n      },\n\n      set value(value) {\n        nativeAudioParam.value = value; // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n\n        audioParam.setValueAtTime(value, audioNode.context.currentTime);\n      },\n\n      cancelAndHoldAtTime(cancelTime) {\n        // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().\n        if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n          nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n        } else {\n          const previousLastEvent = Array.from(automationEventList).pop();\n\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n          const currentLastEvent = Array.from(automationEventList).pop();\n          nativeAudioParam.cancelScheduledValues(cancelTime);\n\n          if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n            if (currentLastEvent.type === 'exponentialRampToValue') {\n              nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === 'linearRampToValue') {\n              nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === 'setValue') {\n              nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n            } else if (currentLastEvent.type === 'setValueCurve') {\n              nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n            }\n          }\n        }\n\n        return audioParam;\n      },\n\n      cancelScheduledValues(cancelTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n        nativeAudioParam.cancelScheduledValues(cancelTime);\n        return audioParam;\n      },\n\n      exponentialRampToValueAtTime(value, endTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n        nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n\n      linearRampToValueAtTime(value, endTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n        nativeAudioParam.linearRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n\n      setTargetAtTime(target, startTime, timeConstant) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n        nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n        return audioParam;\n      },\n\n      setValueAtTime(value, startTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createSetValueAutomationEvent(value, startTime));\n        nativeAudioParam.setValueAtTime(value, startTime);\n        return audioParam;\n      },\n\n      setValueCurveAtTime(values, startTime, duration) {\n        /*\n         * Bug #152: Safari does not correctly interpolate the values of the curve.\n         * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the\n         * existence of the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n          const endTime = startTime + duration;\n          const sampleRate = audioNode.context.sampleRate;\n          const firstSample = Math.ceil(startTime * sampleRate);\n          const lastSample = Math.floor(endTime * sampleRate);\n          const numberOfInterpolatedValues = lastSample - firstSample;\n          const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n\n          for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n            const theoreticIndex = (values.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);\n            const lowerIndex = Math.floor(theoreticIndex);\n            const upperIndex = Math.ceil(theoreticIndex);\n            interpolatedValues[i] = lowerIndex === upperIndex ? values[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n          }\n\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n          const timeOfLastSample = lastSample / sampleRate;\n\n          if (timeOfLastSample < endTime) {\n            audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n          }\n\n          audioParam.setValueAtTime(values[values.length - 1], endTime);\n        } else {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(values, startTime, duration);\n        }\n\n        return audioParam;\n      }\n\n    };\n    audioParamStore.set(audioParam, nativeAudioParam);\n    audioParamAudioNodeStore.set(audioParam, audioNode);\n    addAudioParamConnections(audioParam, audioParamRenderer);\n    return audioParam;\n  };\n};","export const createAudioParamRenderer = automationEventList => {\n  return {\n    replay(audioParam) {\n      for (const automationEvent of automationEventList) {\n        if (automationEvent.type === 'exponentialRampToValue') {\n          const {\n            endTime,\n            value\n          } = automationEvent;\n          audioParam.exponentialRampToValueAtTime(value, endTime);\n        } else if (automationEvent.type === 'linearRampToValue') {\n          const {\n            endTime,\n            value\n          } = automationEvent;\n          audioParam.linearRampToValueAtTime(value, endTime);\n        } else if (automationEvent.type === 'setTarget') {\n          const {\n            startTime,\n            target,\n            timeConstant\n          } = automationEvent;\n          audioParam.setTargetAtTime(target, startTime, timeConstant);\n        } else if (automationEvent.type === 'setValue') {\n          const {\n            startTime,\n            value\n          } = automationEvent;\n          audioParam.setValueAtTime(value, startTime);\n        } else if (automationEvent.type === 'setValueCurve') {\n          const {\n            duration,\n            startTime,\n            values\n          } = automationEvent;\n          audioParam.setValueCurveAtTime(values, startTime, duration);\n        } else {\n          throw new Error(\"Can't apply an unknown automation.\");\n        }\n      }\n    }\n\n  };\n};","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 1,\n  numberOfOutputs: 1,\n  outputChannelCount: undefined,\n  parameterData: {},\n  processorOptions: {}\n};\n\nconst createChannelCount = length => {\n  const channelCount = [];\n\n  for (let i = 0; i < length; i += 1) {\n    channelCount.push(1);\n  }\n\n  return channelCount;\n};\n\nconst sanitizedOptions = options => {\n  return { ...options,\n    outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ?\n    /*\n     * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n     * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n     * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n     */\n    [options.channelCount] : createChannelCount(options.numberOfOutputs)\n  };\n};\n\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) => {\n  return class AudioWorkletNode extends audioNodeConstructor {\n    constructor(context, name, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS,\n        ...options\n      });\n      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n      const processorConstructor = nodeNameToProcessorConstructorMap === undefined ? undefined : nodeNameToProcessorConstructorMap.get(name);\n      const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n      const audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null;\n      /*\n       * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n       * returns false.\n       */\n\n      super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n      const parameters = [];\n      nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n        const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n        parameters.push([nm, audioParam]);\n      });\n      this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n      this._onprocessorerror = null;\n      this._parameters = new ReadOnlyMap(parameters);\n      /*\n       * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n       * the destination.\n       */\n\n      if (isOffline) {\n        addUnrenderedAudioWorkletNode(nativeContext, this);\n      }\n    }\n\n    get onprocessorerror() {\n      return this._onprocessorerror;\n    }\n\n    set onprocessorerror(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n      const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n      this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;\n    }\n\n    get parameters() {\n      if (this._parameters === null) {\n        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n        return this._nativeAudioWorkletNode.parameters;\n      }\n\n      return this._parameters;\n    }\n\n    get port() {\n      return this._nativeAudioWorkletNode.port;\n    }\n\n  };\n};","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n  return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext, numberOfChannels);\n      this._nativeContext = _nativeContext;\n      this._audioWorklet = addAudioWorkletModule === undefined ? undefined : {\n        addModule: (moduleURL, options) => {\n          return addAudioWorkletModule(this, moduleURL, options);\n        }\n      };\n    }\n\n    get audioWorklet() {\n      return this._audioWorklet;\n    }\n\n    createAnalyser() {\n      return new analyserNodeConstructor(this);\n    }\n\n    createBiquadFilter() {\n      return new biquadFilterNodeConstructor(this);\n    }\n\n    createBuffer(numberOfChannels, length, sampleRate) {\n      return new audioBufferConstructor({\n        length,\n        numberOfChannels,\n        sampleRate\n      });\n    }\n\n    createBufferSource() {\n      return new audioBufferSourceNodeConstructor(this);\n    }\n\n    createChannelMerger(numberOfInputs = 6) {\n      return new channelMergerNodeConstructor(this, {\n        numberOfInputs\n      });\n    }\n\n    createChannelSplitter(numberOfOutputs = 6) {\n      return new channelSplitterNodeConstructor(this, {\n        numberOfOutputs\n      });\n    }\n\n    createConstantSource() {\n      return new constantSourceNodeConstructor(this);\n    }\n\n    createConvolver() {\n      return new convolverNodeConstructor(this);\n    }\n\n    createDelay(maxDelayTime = 1) {\n      return new delayNodeConstructor(this, {\n        maxDelayTime\n      });\n    }\n\n    createDynamicsCompressor() {\n      return new dynamicsCompressorNodeConstructor(this);\n    }\n\n    createGain() {\n      return new gainNodeConstructor(this);\n    }\n\n    createIIRFilter(feedforward, feedback) {\n      return new iIRFilterNodeConstructor(this, {\n        feedback,\n        feedforward\n      });\n    }\n\n    createOscillator() {\n      return new oscillatorNodeConstructor(this);\n    }\n\n    createPanner() {\n      return new pannerNodeConstructor(this);\n    }\n\n    createPeriodicWave(real, imag, constraints = {\n      disableNormalization: false\n    }) {\n      return new periodicWaveConstructor(this, { ...constraints,\n        imag,\n        real\n      });\n    }\n\n    createStereoPanner() {\n      return new stereoPannerNodeConstructor(this);\n    }\n\n    createWaveShaper() {\n      return new waveShaperNodeConstructor(this);\n    }\n\n    decodeAudioData(audioData, successCallback, errorCallback) {\n      return decodeAudioData(this._nativeContext, audioData).then(audioBuffer => {\n        if (typeof successCallback === 'function') {\n          successCallback(audioBuffer);\n        }\n\n        return audioBuffer;\n      }).catch(err => {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        }\n\n        throw err;\n      });\n    }\n\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  Q: 1,\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 350,\n  gain: 0,\n  type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class BiquadFilterNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;\n      super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer); // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT); // Bug #78: Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n\n      this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n      /*\n       * Bug #77: Edge does not export the correct values for maxValue and minValue. Firefox & Safari do not export the correct value\n       * for minValue.\n       */\n\n      this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0); // Bug #79: Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n\n      this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n      this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n    }\n\n    get detune() {\n      return this._detune;\n    }\n\n    get frequency() {\n      return this._frequency;\n    }\n\n    get gain() {\n      return this._gain;\n    }\n\n    get Q() {\n      return this._Q;\n    }\n\n    get type() {\n      return this._nativeBiquadFilterNode.type;\n    }\n\n    set type(value) {\n      this._nativeBiquadFilterNode.type = value;\n    }\n\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse); // Bug #68: Only Chrome, Firefox & Opera do throw an error if the parameters differ in their length.\n\n\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeBiquadFilterNodes = new WeakMap();\n\n    const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n      if (!nativeBiquadFilterNodeIsOwnedByContext) {\n        const options = {\n          Q: nativeBiquadFilterNode.Q.value,\n          channelCount: nativeBiquadFilterNode.channelCount,\n          channelCountMode: nativeBiquadFilterNode.channelCountMode,\n          channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n          detune: nativeBiquadFilterNode.detune.value,\n          frequency: nativeBiquadFilterNode.frequency.value,\n          gain: nativeBiquadFilterNode.gain.value,\n          type: nativeBiquadFilterNode.type\n        };\n        nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n      if (!nativeBiquadFilterNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n      return nativeBiquadFilterNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeBiquadFilterNode !== undefined) {\n          return Promise.resolve(renderedNativeBiquadFilterNode);\n        }\n\n        return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createCacheTestResult = (ongoingTests, testResults) => {\n  return (tester, test) => {\n    const cachedTestResult = testResults.get(tester);\n\n    if (cachedTestResult !== undefined) {\n      return cachedTestResult;\n    }\n\n    const ongoingTest = ongoingTests.get(tester);\n\n    if (ongoingTest !== undefined) {\n      return ongoingTest;\n    }\n\n    try {\n      const synchronousTestResult = test();\n\n      if (synchronousTestResult instanceof Promise) {\n        ongoingTests.set(tester, synchronousTestResult);\n        return synchronousTestResult.catch(() => false).then(finalTestResult => {\n          ongoingTests.delete(tester);\n          testResults.set(tester, finalTestResult);\n          return finalTestResult;\n        });\n      }\n\n      testResults.set(tester, synchronousTestResult);\n      return synchronousTestResult;\n    } catch {\n      testResults.set(tester, false);\n      return false;\n    }\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 1,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ChannelMergerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n      const channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;\n      super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAudioNodes = new WeakMap();\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n      if (!nativeAudioNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAudioNode.channelCount,\n          channelCountMode: nativeAudioNode.channelCountMode,\n          channelInterpretation: nativeAudioNode.channelInterpretation,\n          numberOfInputs: nativeAudioNode.numberOfInputs\n        };\n        nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n      return nativeAudioNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 6,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'discrete',\n  numberOfOutputs: 6\n};\n\nconst sanitizedOptions = options => {\n  return { ...options,\n    channelCount: options.numberOfOutputs\n  };\n};\n\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ChannelSplitterNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS,\n        ...options\n      });\n      const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n      const channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;\n      super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAudioNodes = new WeakMap();\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n      if (!nativeAudioNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAudioNode.channelCount,\n          channelCountMode: nativeAudioNode.channelCountMode,\n          channelInterpretation: nativeAudioNode.channelInterpretation,\n          numberOfOutputs: nativeAudioNode.numberOfOutputs\n        };\n        nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n      return nativeAudioNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createConnectAudioParam = renderInputsOfAudioParam => {\n  return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n  };\n};","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = createIndexSizeError => {\n  return (outputAudioNodes, destination, output = 0, input = 0) => {\n    const outputAudioNode = outputAudioNodes[output];\n\n    if (outputAudioNode === undefined) {\n      throw createIndexSizeError();\n    }\n\n    if (isNativeAudioNode(destination)) {\n      return outputAudioNode.connect(destination, 0, input);\n    }\n\n    return outputAudioNode.connect(destination, 0);\n  };\n};","export const createConnectedNativeAudioBufferSourceNodeFactory = createNativeAudioBufferSourceNode => {\n  return (nativeContext, nativeAudioNode) => {\n    const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.loop = true;\n    nativeAudioBufferSourceNode.connect(nativeAudioNode);\n    nativeAudioBufferSourceNode.start();\n    return () => {\n      nativeAudioBufferSourceNode.stop();\n      nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n    };\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class ConstantSourceNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory() : null;\n      super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n      this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n      this._nativeConstantSourceNode = nativeConstantSourceNode;\n      /*\n       * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n       * minValue for GainNodes.\n       */\n\n      this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._onended = null;\n    }\n\n    get offset() {\n      return this._offset;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeConstantSourceNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeConstantSourceNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    start(when = 0) {\n      this._nativeConstantSourceNode.start(when);\n\n      if (this._constantSourceNodeRenderer !== null) {\n        this._constantSourceNodeRenderer.start = when;\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeConstantSourceNode.stop(when);\n\n      if (this._constantSourceNodeRenderer !== null) {\n        this._constantSourceNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeConstantSourceNodes = new WeakMap();\n    let start = null;\n    let stop = null;\n\n    const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeConstantSourceNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n      if (!nativeConstantSourceNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeConstantSourceNode.channelCount,\n          channelCountMode: nativeConstantSourceNode.channelCountMode,\n          channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n          offset: nativeConstantSourceNode.offset.value\n        };\n        nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n        if (start !== null) {\n          nativeConstantSourceNode.start(start);\n        }\n\n        if (stop !== null) {\n          nativeConstantSourceNode.stop(stop);\n        }\n      }\n\n      renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n      if (!nativeConstantSourceNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n      return nativeConstantSourceNode;\n    };\n\n    return {\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeConstantSourceNode !== undefined) {\n          return Promise.resolve(renderedNativeConstantSourceNode);\n        }\n\n        return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createConvertNumberToUnsignedLong = unit32Array => {\n  return value => {\n    unit32Array[0] = value;\n    return unit32Array[0];\n  };\n};","const DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ConvolverNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;\n      super(context, false, nativeConvolverNode, convolverNodeRenderer);\n      this._isBufferNullified = false;\n      this._nativeConvolverNode = nativeConvolverNode;\n    }\n\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n\n      return this._nativeConvolverNode.buffer;\n    }\n\n    set buffer(value) {\n      this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.\n\n      if (value === null && this._nativeConvolverNode.buffer !== null) {\n        const nativeContext = this._nativeConvolverNode.context;\n        this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n        this._isBufferNullified = true;\n      } else {\n        this._isBufferNullified = false;\n      }\n    }\n\n    get normalize() {\n      return this._nativeConvolverNode.normalize;\n    }\n\n    set normalize(value) {\n      this._nativeConvolverNode.normalize = value;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeConvolverNodes = new WeakMap();\n\n    const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeConvolverNode = getNativeAudioNode(proxy); // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n\n      if (!nativeConvolverNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeConvolverNode.buffer,\n          channelCount: nativeConvolverNode.channelCount,\n          channelCountMode: nativeConvolverNode.channelCountMode,\n          channelInterpretation: nativeConvolverNode.channelInterpretation,\n          disableNormalization: !nativeConvolverNode.normalize\n        };\n        nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n\n      if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n      }\n\n      return nativeConvolverNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeConvolverNode !== undefined) {\n          return Promise.resolve(renderedNativeConvolverNode);\n        }\n\n        return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n  return (numberOfChannels, length, sampleRate) => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      throw new Error('Missing the native OfflineAudioContext constructor.');\n    }\n\n    try {\n      return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n    } catch (err) {\n      // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n      // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.\n      // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.\n      if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {\n        throw createNotSupportedError();\n      }\n\n      throw err;\n    }\n  };\n};","export const createDataCloneError = () => {\n  try {\n    return new DOMException('', 'DataCloneError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 25;\n    err.name = 'DataCloneError';\n    return err;\n  }\n};","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n  return (audioNode, count) => {\n    const cycleCounter = cycleCounters.get(audioNode);\n\n    if (cycleCounter === undefined) {\n      throw new Error('Missing the expected cycle count.');\n    }\n\n    const nativeContext = getNativeContext(audioNode.context);\n    const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n    if (cycleCounter === count) {\n      cycleCounters.delete(audioNode);\n\n      if (!isOffline && isActiveAudioNode(audioNode)) {\n        const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n        const {\n          outputs\n        } = getAudioNodeConnections(audioNode);\n\n        for (const output of outputs) {\n          if (isAudioNodeOutputConnection(output)) {\n            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n            connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n          } else {\n            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n            nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n          }\n        }\n      }\n    } else {\n      cycleCounters.set(audioNode, cycleCounter - count);\n    }\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  delayTime: 0,\n  maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class DelayNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;\n      super(context, false, nativeDelayNode, delayNodeRenderer); // Bug #161: Edge does not export the correct values for maxValue and minValue.\n\n      this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n    }\n\n    get delayTime() {\n      return this._delayTime;\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return maxDelayTime => {\n    const renderedNativeDelayNodes = new WeakMap();\n\n    const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeDelayNode = getNativeAudioNode(proxy); // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n      if (!nativeDelayNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeDelayNode.channelCount,\n          channelCountMode: nativeDelayNode.channelCountMode,\n          channelInterpretation: nativeDelayNode.channelInterpretation,\n          delayTime: nativeDelayNode.delayTime.value,\n          maxDelayTime\n        };\n        nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n      if (!nativeDelayNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n      return nativeDelayNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeDelayNode !== undefined) {\n          return Promise.resolve(renderedNativeDelayNode);\n        }\n\n        return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createDeleteUnrenderedAudioWorkletNode = getUnrenderedAudioWorkletNodes => {\n  return (nativeContext, audioWorkletNode) => {\n    getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n  };\n};","import { isNativeAudioNode } from '../guards/native-audio-node';\n\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n  const outputAudioNode = outputAudioNodes[output];\n\n  if (outputAudioNode === undefined) {\n    throw createIndexSizeError();\n  }\n\n  return outputAudioNode;\n};\n\nexport const createDisconnectMultipleOutputs = createIndexSizeError => {\n  return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n    if (destinationOrOutput === undefined) {\n      return outputAudioNodes.forEach(outputAudioNode => outputAudioNode.disconnect());\n    }\n\n    if (typeof destinationOrOutput === 'number') {\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n    }\n\n    if (isNativeAudioNode(destinationOrOutput)) {\n      if (output === undefined) {\n        return outputAudioNodes.forEach(outputAudioNode => outputAudioNode.disconnect(destinationOrOutput));\n      }\n\n      if (input === undefined) {\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n      }\n\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n    }\n\n    if (output === undefined) {\n      return outputAudioNodes.forEach(outputAudioNode => outputAudioNode.disconnect(destinationOrOutput));\n    }\n\n    return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n  };\n};","const DEFAULT_OPTIONS = {\n  attack: 0.003,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  knee: 30,\n  ratio: 12,\n  release: 0.25,\n  threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n  return class DynamicsCompressorNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer() : null;\n      super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer); // Bug #110: Edge does not export the correct values for maxValue and minValue.\n\n      this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack, 1, 0);\n      this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee, 40, 0);\n      this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n      this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);\n      this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release, 1, 0);\n      this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);\n    }\n\n    get attack() {\n      return this._attack;\n    }\n    /*\n     * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs\n     * to be overwritten here.\n     */\n\n\n    get channelCount() {\n      return this._nativeDynamicsCompressorNode.channelCount;\n    }\n\n    set channelCount(value) {\n      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n      this._nativeDynamicsCompressorNode.channelCount = value;\n\n      if (value > 2) {\n        this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n        throw createNotSupportedError();\n      }\n    }\n    /*\n     * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n     * overwritten here.\n     */\n\n\n    get channelCountMode() {\n      return this._nativeDynamicsCompressorNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n      this._nativeDynamicsCompressorNode.channelCountMode = value;\n\n      if (value === 'max') {\n        this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n        throw createNotSupportedError();\n      }\n    }\n\n    get knee() {\n      return this._knee;\n    }\n\n    get ratio() {\n      return this._ratio;\n    }\n\n    get reduction() {\n      // Bug #111: Safari returns an AudioParam instead of a number.\n      if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n        return this._nativeDynamicsCompressorNode.reduction.value;\n      }\n\n      return this._nativeDynamicsCompressorNode.reduction;\n    }\n\n    get release() {\n      return this._release;\n    }\n\n    get threshold() {\n      return this._threshold;\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeDynamicsCompressorNodes = new WeakMap();\n\n    const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n       * created again.\n       */\n\n      const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n\n      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n        const options = {\n          attack: nativeDynamicsCompressorNode.attack.value,\n          channelCount: nativeDynamicsCompressorNode.channelCount,\n          channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n          channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n          knee: nativeDynamicsCompressorNode.knee.value,\n          ratio: nativeDynamicsCompressorNode.ratio.value,\n          release: nativeDynamicsCompressorNode.release.value,\n          threshold: nativeDynamicsCompressorNode.threshold.value\n        };\n        nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n      return nativeDynamicsCompressorNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeDynamicsCompressorNode !== undefined) {\n          return Promise.resolve(renderedNativeDynamicsCompressorNode);\n        }\n\n        return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createEncodingError = () => {\n  try {\n    return new DOMException('', 'EncodingError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 0;\n    err.name = 'EncodingError';\n    return err;\n  }\n};","export const createEvaluateSource = window => {\n  return source => new Promise((resolve, reject) => {\n    if (window === null) {\n      reject(new SyntaxError());\n      return;\n    }\n\n    const head = window.document.head;\n\n    if (head === null) {\n      reject(new SyntaxError());\n    } else {\n      const script = window.document.createElement('script'); // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n\n      const blob = new Blob([source], {\n        type: 'application/javascript'\n      });\n      const url = URL.createObjectURL(blob);\n      const originalOnErrorHandler = window.onerror;\n\n      const removeErrorEventListenerAndRevokeUrl = () => {\n        window.onerror = originalOnErrorHandler;\n        URL.revokeObjectURL(url);\n      };\n\n      window.onerror = (message, src, lineno, colno, error) => {\n        // @todo Edge thinks the source is the one of the html document.\n        if (src === url || src === window.location.href && lineno === 1 && colno === 1) {\n          removeErrorEventListenerAndRevokeUrl();\n          reject(error);\n          return false;\n        }\n\n        if (originalOnErrorHandler !== null) {\n          return originalOnErrorHandler(message, src, lineno, colno, error);\n        }\n      };\n\n      script.onerror = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        reject(new SyntaxError());\n      };\n\n      script.onload = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        resolve();\n      };\n\n      script.src = url;\n      script.type = 'module';\n      head.appendChild(script);\n    }\n  });\n};","export const createEventTargetConstructor = wrapEventListener => {\n  return class EventTarget {\n    constructor(_nativeEventTarget) {\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = new WeakMap();\n    }\n\n    addEventListener(type, listener, options) {\n      if (listener !== null) {\n        let wrappedEventListener = this._listeners.get(listener);\n\n        if (wrappedEventListener === undefined) {\n          wrappedEventListener = wrapEventListener(this, listener);\n\n          if (typeof listener === 'function') {\n            this._listeners.set(listener, wrappedEventListener);\n          }\n        }\n\n        this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n      }\n    }\n\n    dispatchEvent(event) {\n      return this._nativeEventTarget.dispatchEvent(event);\n    }\n\n    removeEventListener(type, listener, options) {\n      const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n      this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n    }\n\n  };\n};","export const createExposeCurrentFrameAndCurrentTime = window => {\n  return (currentTime, sampleRate, fn) => {\n    Object.defineProperties(window, {\n      currentFrame: {\n        configurable: true,\n\n        get() {\n          return Math.round(currentTime * sampleRate);\n        }\n\n      },\n      currentTime: {\n        configurable: true,\n\n        get() {\n          return currentTime;\n        }\n\n      }\n    });\n\n    try {\n      return fn();\n    } finally {\n      if (window !== null) {\n        delete window.currentFrame;\n        delete window.currentTime;\n      }\n    }\n  };\n};","export const createFetchSource = createAbortError => {\n  return async url => {\n    try {\n      const response = await fetch(url);\n\n      if (response.ok) {\n        return response.text();\n      }\n    } catch {}\n    /* Ignore errors. */\n    // tslint:disable-line:no-empty\n\n\n    throw createAbortError();\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class GainNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;\n      super(context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get gain() {\n      return this._gain;\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeGainNodes = new WeakMap();\n\n    const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeGainNode = getNativeAudioNode(proxy); // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n\n      if (!nativeGainNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeGainNode.channelCount,\n          channelCountMode: nativeGainNode.channelCountMode,\n          channelInterpretation: nativeGainNode.channelInterpretation,\n          gain: nativeGainNode.gain.value\n        };\n        nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n\n      if (!nativeGainNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n      return nativeGainNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeGainNode !== undefined) {\n          return Promise.resolve(renderedNativeGainNode);\n        }\n\n        return createGainNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createGetAudioNodeRenderer = getAudioNodeConnections => {\n  return audioNode => {\n    const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n    if (audioNodeConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n    }\n\n    return audioNodeConnections.renderer;\n  };\n};","export const createGetAudioParamRenderer = getAudioParamConnections => {\n  return audioParam => {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n\n    if (audioParamConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n    }\n\n    return audioParamConnections.renderer;\n  };\n};","import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n  return nativeContext => {\n    /*\n     * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n     * backupNativeContext in that case.\n     */\n    if (nativeContext.state === 'closed' && nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n\n        if (backupNativeContext !== undefined) {\n          return backupNativeContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor !== null) {\n          // @todo Copy the attached AudioWorkletProcessors and other settings.\n          const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n          BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n          return bckpNtveCntxt;\n        }\n      } else {\n        const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n\n        if (backupNativeContext !== undefined) {\n          return backupNativeContext;\n        } // @todo Copy the attached AudioWorkletProcessors and other settings.\n\n\n        const bckpNtveCntxt = new nativeAudioContextConstructor();\n        BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n        return bckpNtveCntxt;\n      }\n    }\n\n    return null;\n  };\n};","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = contextStore => {\n  return context => {\n    const nativeContext = contextStore.get(context);\n\n    if (nativeContext === undefined) {\n      throw createInvalidStateError();\n    }\n\n    return nativeContext;\n  };\n};","export const createGetUnrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore => {\n  return nativeContext => {\n    const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n\n    if (unrenderedAudioWorkletNodes === undefined) {\n      throw new Error('The context has no set of AudioWorkletNodes.');\n    }\n\n    return unrenderedAudioWorkletNodes;\n  };\n};","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\n\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n  const feedbackLength = feedback.length;\n  const feedforwardLength = feedforward.length;\n  const minLength = Math.min(feedbackLength, feedforwardLength);\n\n  if (feedback[0] !== 1) {\n    for (let i = 0; i < feedbackLength; i += 1) {\n      feedforward[i] /= feedback[0];\n    }\n\n    for (let i = 1; i < feedforwardLength; i += 1) {\n      feedback[i] /= feedback[0];\n    }\n  }\n\n  const bufferLength = 32;\n  const xBuffer = new Float32Array(bufferLength);\n  const yBuffer = new Float32Array(bufferLength);\n  const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n  const numberOfChannels = renderedBuffer.numberOfChannels;\n\n  for (let i = 0; i < numberOfChannels; i += 1) {\n    const input = renderedBuffer.getChannelData(i);\n    const output = filteredBuffer.getChannelData(i);\n    xBuffer.fill(0);\n    yBuffer.fill(0);\n    filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n  }\n\n  return filteredBuffer;\n};\n\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return (feedback, feedforward) => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let filteredBufferPromise = null;\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioBufferSourceNode = null;\n      let nativeIIRFilterNode = getNativeAudioNode(proxy); // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext); // Bug #9: Safari does not support IIRFilterNodes.\n\n      if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n      } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n        nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, ntvCntxt => {\n          return ntvCntxt.createIIRFilter(feedforward, feedback);\n        });\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n\n      if (nativeAudioBufferSourceNode !== null) {\n        if (filteredBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          }\n\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor( // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n          proxy.context.destination.channelCount, // Bug #17: Safari does not yet expose the length.\n          proxy.context.length, nativeOfflineAudioContext.sampleRate);\n\n          filteredBufferPromise = (async () => {\n            await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n            const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n            return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n          })();\n        }\n\n        const filteredBuffer = await filteredBufferPromise;\n        nativeAudioBufferSourceNode.buffer = filteredBuffer;\n        nativeAudioBufferSourceNode.start(0);\n        return nativeAudioBufferSourceNode;\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n      return nativeIIRFilterNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n  return isOffline => {\n    return (audioNode, count) => {\n      const cycleCounter = cycleCounters.get(audioNode);\n\n      if (cycleCounter === undefined) {\n        if (!isOffline && isActiveAudioNode(audioNode)) {\n          const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n          const {\n            outputs\n          } = getAudioNodeConnections(audioNode);\n\n          for (const output of outputs) {\n            if (isAudioNodeOutputConnection(output)) {\n              const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n              disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n            } else {\n              const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n              nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n            }\n          }\n        }\n\n        cycleCounters.set(audioNode, count);\n      } else {\n        cycleCounters.set(audioNode, cycleCounter + count);\n      }\n    };\n  };\n};","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n  return anything => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n  };\n};","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n  return anything => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n  return anything => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n  return anything => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n  };\n};","export const createIsNativeAudioContext = nativeAudioContextConstructor => {\n  return anything => {\n    return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n  };\n};","export const createIsNativeAudioNode = window => {\n  return anything => {\n    return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n  };\n};","export const createIsNativeAudioParam = window => {\n  return anything => {\n    return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n  };\n};","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n  return anything => {\n    return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n  };\n};","export const createIsNativeOfflineAudioContext = nativeOfflineAudioContextConstructor => {\n  return anything => {\n    return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n  };\n};","export const createIsSecureContext = window => window !== null && window.isSecureContext;","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n  if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n    const results = await Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);\n    return results.every(result => result);\n  }\n\n  return false;\n};","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n\n      super(context, true, nativeMediaElementAudioSourceNode, null); // Bug #63: Edge does not expose the mediaElement yet.\n\n      this._mediaElement = options.mediaElement;\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement === undefined ? this._mediaElement : this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      super(context, false, nativeMediaStreamAudioDestinationNode, null);\n      this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n    }\n\n    get stream() {\n      return this._nativeMediaStreamAudioDestinationNode.stream;\n    }\n\n  };\n};","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options); // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      super(context, true, nativeMediaStreamAudioSourceNode, null);\n      this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n    }\n\n    get mediaStream() {\n      return this._nativeMediaStreamAudioSourceNode.mediaStream;\n    }\n\n  };\n};","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n  return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n      super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n    }\n\n  };\n};","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n  return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n    constructor(options = {}) {\n      if (nativeAudioContextConstructor === null) {\n        throw new Error('Missing the native AudioContext constructor.');\n      }\n\n      const nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.\n\n      if (nativeAudioContext === null) {\n        throw createUnknownError();\n      } // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n\n\n      if (!isValidLatencyHint(options.latencyHint)) {\n        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n      } // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n\n\n      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n        throw createNotSupportedError();\n      }\n\n      super(nativeAudioContext, 2);\n      const {\n        latencyHint\n      } = options;\n      const {\n        sampleRate\n      } = nativeAudioContext; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n\n      this._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :\n      /*\n       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n       * ScriptProcessorNode.\n       */\n      Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;\n      this._nativeAudioContext = nativeAudioContext;\n      this._state = null;\n      /*\n       * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n       * changes to 'running'.\n       */\n\n      if (nativeAudioContext.state === 'running') {\n        this._state = 'suspended';\n\n        const revokeState = () => {\n          if (this._state === 'suspended') {\n            this._state = null;\n          }\n\n          nativeAudioContext.removeEventListener('statechange', revokeState);\n        };\n\n        nativeAudioContext.addEventListener('statechange', revokeState);\n      }\n    }\n\n    get baseLatency() {\n      return this._baseLatency;\n    }\n\n    get state() {\n      return this._state !== null ? this._state : this._nativeAudioContext.state;\n    }\n\n    close() {\n      // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n      if (this.state === 'closed') {\n        return this._nativeAudioContext.close().then(() => {\n          throw createInvalidStateError();\n        });\n      } // Bug #34: If the state was set to suspended before it should be revoked now.\n\n\n      if (this._state === 'suspended') {\n        this._state = null;\n      }\n\n      return this._nativeAudioContext.close();\n      /*\n       * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n       * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n       */\n    }\n\n    resume() {\n      if (this._state === 'suspended') {\n        return new Promise((resolve, reject) => {\n          const resolvePromise = () => {\n            this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n            if (this._nativeAudioContext.state === 'running') {\n              resolve();\n            } else {\n              this.resume().then(resolve, reject);\n            }\n          };\n\n          this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n        });\n      }\n\n      return this._nativeAudioContext.resume().catch(err => {\n        // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined || err.code === 15) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n    suspend() {\n      return this._nativeAudioContext.suspend().catch(err => {\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n  };\n};","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n  return class MinimalBaseAudioContext extends eventTargetConstructor {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext);\n      this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(this, _nativeContext); // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n\n      const sampleRate = _nativeContext.sampleRate;\n      Object.defineProperty(_nativeContext, 'sampleRate', {\n        get: () => sampleRate\n      });\n\n      if (isNativeOfflineAudioContext(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n      }\n\n      this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n      this._listener = createAudioListener(this, _nativeContext);\n      this._onstatechange = null;\n    }\n\n    get currentTime() {\n      return this._nativeContext.currentTime;\n    }\n\n    get destination() {\n      return this._destination;\n    }\n\n    get listener() {\n      return this._listener;\n    }\n\n    get onstatechange() {\n      return this._onstatechange;\n    }\n\n    set onstatechange(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeContext.onstatechange = wrappedListener;\n      const nativeOnStateChange = this._nativeContext.onstatechange;\n      this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n    }\n\n    get sampleRate() {\n      return this._nativeContext.sampleRate;\n    }\n\n    get state() {\n      return this._nativeContext.state;\n    }\n\n  };\n};","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n  return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n    constructor(options) {\n      const {\n        length,\n        numberOfChannels,\n        sampleRate\n      } = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n\n      if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n        nativeOfflineAudioContext.addEventListener('statechange', (() => {\n          let i = 0;\n\n          const delayStateChangeEvent = event => {\n            if (this._state === 'running') {\n              if (i > 0) {\n                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                event.stopImmediatePropagation();\n\n                this._waitForThePromiseToSettle(event);\n              } else {\n                i += 1;\n              }\n            }\n          };\n\n          return delayStateChangeEvent;\n        })());\n      }\n\n      super(nativeOfflineAudioContext, numberOfChannels);\n      this._length = length;\n      this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n      this._state = null;\n    }\n\n    get length() {\n      // Bug #17: Safari does not yet expose the length.\n      if (this._nativeOfflineAudioContext.length === undefined) {\n        return this._length;\n      }\n\n      return this._nativeOfflineAudioContext.length;\n    }\n\n    get state() {\n      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n    }\n\n    startRendering() {\n      /*\n       * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n       * the state of the nativeOfflineAudioContext might no transition to running immediately.\n       */\n      if (this._state === 'running') {\n        return Promise.reject(createInvalidStateError());\n      }\n\n      this._state = 'running';\n      return startRendering(this.destination, this._nativeOfflineAudioContext).then(audioBuffer => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        return audioBuffer;\n      }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n      .catch(err => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        throw err;\n      });\n    }\n\n    _waitForThePromiseToSettle(event) {\n      if (this._state === null) {\n        this._nativeOfflineAudioContext.dispatchEvent(event);\n      } else {\n        setTimeout(() => this._waitForThePromiseToSettle(event));\n      }\n    }\n\n  };\n};","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n  return (nativeAudioNode, whenConnected, whenDisconnected) => {\n    const connections = new Set();\n\n    nativeAudioNode.connect = (connect => {\n      return (destination, output = 0, input = 0) => {\n        const wasDisconnected = connections.size === 0;\n\n        if (isNativeAudioNode(destination)) {\n          // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n          connect.call(nativeAudioNode, destination, output, input);\n          insertElementInSet(connections, [destination, output, input], connection => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n\n          if (wasDisconnected) {\n            whenConnected();\n          }\n\n          return destination;\n        }\n\n        connect.call(nativeAudioNode, destination, output);\n        insertElementInSet(connections, [destination, output], connection => connection[0] === destination && connection[1] === output, true);\n\n        if (wasDisconnected) {\n          whenConnected();\n        }\n\n        return;\n      };\n    })(nativeAudioNode.connect);\n\n    nativeAudioNode.disconnect = (disconnect => {\n      return (destinationOrOutput, output, input) => {\n        const wasConnected = connections.size > 0;\n\n        if (destinationOrOutput === undefined) {\n          disconnect.apply(nativeAudioNode);\n          connections.clear();\n        } else if (typeof destinationOrOutput === 'number') {\n          // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n          disconnect.call(nativeAudioNode, destinationOrOutput);\n\n          for (const connection of connections) {\n            if (connection[1] === destinationOrOutput) {\n              connections.delete(connection);\n            }\n          }\n        } else {\n          if (isNativeAudioNode(destinationOrOutput)) {\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n          } else {\n            // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n            disconnect.call(nativeAudioNode, destinationOrOutput, output);\n          }\n\n          for (const connection of connections) {\n            if (connection[0] === destinationOrOutput && (output === undefined || connection[1] === output) && (input === undefined || connection[2] === input)) {\n              connections.delete(connection);\n            }\n          }\n        }\n\n        const isDisconnected = connections.size === 0;\n\n        if (wasConnected && isDisconnected) {\n          whenDisconnected();\n        }\n      };\n    })(nativeAudioNode.disconnect);\n\n    return nativeAudioNode;\n  };\n};","export const createNativeAudioBufferConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  if (window.hasOwnProperty('AudioBuffer')) {\n    return window.AudioBuffer;\n  }\n\n  return null;\n};","export const createNativeAudioContextConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  if (window.hasOwnProperty('AudioContext')) {\n    return window.AudioContext;\n  }\n\n  return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n  return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n    const nativeAudioDestinationNode = nativeContext.destination; // Bug #132: Edge & Safari do not have the correct channelCount.\n\n    if (nativeAudioDestinationNode.channelCount !== channelCount) {\n      try {\n        nativeAudioDestinationNode.channelCount = channelCount;\n      } catch {// Bug #169: Safari throws an error on each attempt to change the channelCount.\n      }\n    } // Bug #83: Edge & Safari do not have the correct channelCountMode.\n\n\n    if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n      nativeAudioDestinationNode.channelCountMode = 'explicit';\n    } // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.\n\n\n    if (nativeAudioDestinationNode.maxChannelCount === 0) {\n      Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n        value: channelCount\n      });\n    } // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n\n\n    const gainNode = createNativeGainNode(nativeContext, {\n      channelCount,\n      channelCountMode: nativeAudioDestinationNode.channelCountMode,\n      channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n      gain: 1\n    });\n    overwriteAccessors(gainNode, 'channelCount', get => () => get.call(gainNode), set => value => {\n      set.call(gainNode, value);\n\n      try {\n        nativeAudioDestinationNode.channelCount = value;\n      } catch (err) {\n        // Bug #169: Safari throws an error on each attempt to change the channelCount.\n        if (value > nativeAudioDestinationNode.maxChannelCount) {\n          throw err;\n        }\n      }\n    });\n    overwriteAccessors(gainNode, 'channelCountMode', get => () => get.call(gainNode), set => value => {\n      set.call(gainNode, value);\n      nativeAudioDestinationNode.channelCountMode = value;\n    });\n    overwriteAccessors(gainNode, 'channelInterpretation', get => () => get.call(gainNode), set => value => {\n      set.call(gainNode, value);\n      nativeAudioDestinationNode.channelInterpretation = value;\n    });\n    Object.defineProperty(gainNode, 'maxChannelCount', {\n      get: () => nativeAudioDestinationNode.maxChannelCount\n    }); // @todo This should be disconnected when the context is closed.\n\n    gainNode.connect(nativeAudioDestinationNode);\n    return gainNode;\n  };\n};","export const createNativeAudioNodeFactory = getBackupNativeContext => {\n  return (nativeContext, factoryFunction) => {\n    // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.\n    const backupNativeContext = getBackupNativeContext(nativeContext);\n\n    if (backupNativeContext !== null) {\n      return factoryFunction(backupNativeContext);\n    }\n\n    return factoryFunction(nativeContext);\n  };\n};","export const createNativeAudioWorkletNodeConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBiquadFilter());\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (createNativeAudioNode, wrapChannelMergerNode) => {\n  return (nativeContext, options) => {\n    const nativeChannelMergerNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createChannelMerger(options.numberOfInputs);\n    }); // Bug #15: Safari does not return the default properties.\n\n    if (nativeChannelMergerNode.channelCount !== 1 && nativeChannelMergerNode.channelCountMode !== 'explicit') {\n      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n    }\n\n    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n    return nativeChannelMergerNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n  return (nativeContext, options) => {\n    // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n\n    const nativeConstantSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createConstantSource();\n    });\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset'); // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n  return (nativeContext, {\n    offset,\n    ...audioNodeOptions\n  }) => {\n    const audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n    const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n    const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: offset\n    }); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n\n    const channelData = audioBuffer.getChannelData(0); // Bug #95: Safari does not play or loop one sample buffers.\n\n    channelData[0] = 1;\n    channelData[1] = 1;\n    audioBufferSourceNode.buffer = audioBuffer;\n    audioBufferSourceNode.loop = true;\n    const nativeConstantSourceNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return gainNode.channelCount;\n      },\n\n      set channelCount(value) {\n        gainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return gainNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        gainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return gainNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        gainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return gainNode.context;\n      },\n\n      get inputs() {\n        return [];\n      },\n\n      get numberOfInputs() {\n        return audioBufferSourceNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return gainNode.numberOfOutputs;\n      },\n\n      get offset() {\n        return gainNode.gain;\n      },\n\n      get onended() {\n        return audioBufferSourceNode.onended;\n      },\n\n      set onended(value) {\n        audioBufferSourceNode.onended = value;\n      },\n\n      addEventListener(...args) {\n        return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return audioBufferSourceNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n      },\n\n      start(when = 0) {\n        audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n      },\n\n      stop(when = 0) {\n        audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n      }\n\n    };\n\n    const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode); // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, audioBufferSourceNode);\n    return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors) => {\n  return (nativeContext, options) => {\n    const nativeConvolverNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createConvolver());\n\n    try {\n      // Bug #166: Opera does not allow yet to set the channelCount to 1.\n      nativeConvolverNode.channelCount = 1;\n    } catch (err) {\n      return createNativeConvolverNodeFaker(nativeContext, options);\n    }\n\n    assignNativeAudioNodeOptions(nativeConvolverNode, options); // The normalize property needs to be set before setting the buffer.\n\n    if (options.disableNormalization === nativeConvolverNode.normalize) {\n      nativeConvolverNode.normalize = !options.disableNormalization;\n    }\n\n    assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer'); // Bug #113: Edge & Safari allow to set the channelCount to a value larger than 2.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    }\n\n    overwriteAccessors(nativeConvolverNode, 'channelCount', get => () => get.call(nativeConvolverNode), set => value => {\n      if (value > 2) {\n        throw createNotSupportedError();\n      }\n\n      return set.call(nativeConvolverNode, value);\n    }); // Bug #114: Edge & Safari allow to set the channelCountMode to 'max'.\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    overwriteAccessors(nativeConvolverNode, 'channelCountMode', get => () => get.call(nativeConvolverNode), set => value => {\n      if (value === 'max') {\n        throw createNotSupportedError();\n      }\n\n      return set.call(nativeConvolverNode, value);\n    });\n    return nativeConvolverNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConvolverNodeFakerFactory = (createNativeAudioNode, createNativeGainNode, monitorConnections) => {\n  return (nativeContext, {\n    buffer,\n    channelCount,\n    channelCountMode,\n    channelInterpretation,\n    disableNormalization\n  }) => {\n    const convolverNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createConvolver());\n    assignNativeAudioNodeOptions(convolverNode, {\n      // Bug #166: Opera does not allow yet to set the channelCount to 1.\n      channelCount: Math.max(channelCount, 2),\n      // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n      channelCountMode: channelCountMode === 'max' ? channelCountMode : 'clamped-max',\n      channelInterpretation\n    });\n    const gainNode = createNativeGainNode(nativeContext, {\n      channelCount,\n      channelCountMode,\n      channelInterpretation,\n      gain: 1\n    });\n    const nativeConvolverNodeFaker = {\n      get buffer() {\n        return convolverNode.buffer;\n      },\n\n      set buffer(value) {\n        convolverNode.buffer = value;\n      },\n\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return gainNode.channelCount;\n      },\n\n      set channelCount(value) {\n        // Bug #166: Opera does not allow yet to set the channelCount to 1.\n        if (value > 2) {\n          convolverNode.channelCount = value;\n        }\n\n        gainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return gainNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n        if (value === 'max') {\n          convolverNode.channelCountMode = value;\n        }\n\n        gainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return convolverNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        convolverNode.channelInterpretation = value;\n        gainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return convolverNode.context;\n      },\n\n      get inputs() {\n        return [convolverNode];\n      },\n\n      get numberOfInputs() {\n        return convolverNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return convolverNode.numberOfOutputs;\n      },\n\n      get normalize() {\n        return convolverNode.normalize;\n      },\n\n      set normalize(value) {\n        convolverNode.normalize = value;\n      },\n\n      addEventListener(...args) {\n        return convolverNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return convolverNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return convolverNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    }; // The normalize property needs to be set before setting the buffer.\n\n    if (disableNormalization === nativeConvolverNodeFaker.normalize) {\n      nativeConvolverNodeFaker.normalize = !disableNormalization;\n    }\n\n    if (buffer !== nativeConvolverNodeFaker.buffer) {\n      nativeConvolverNodeFaker.buffer = buffer;\n    }\n\n    const whenConnected = () => convolverNode.connect(gainNode);\n\n    const whenDisconnected = () => convolverNode.disconnect(gainNode);\n\n    return monitorConnections(interceptConnections(nativeConvolverNodeFaker, gainNode), whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeDelayNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createDelay(options.maxDelayTime));\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n  return (nativeContext, options) => {\n    const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createDynamicsCompressor());\n    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options); // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n    return nativeDynamicsCompressorNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeGainNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createGain());\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n  return (nativeContext, baseLatency, options) => {\n    // Bug #9: Safari does not support IIRFilterNodes.\n    if (nativeContext.createIIRFilter === undefined) {\n      return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n    }\n\n    const nativeIIRFilterNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n    });\n    assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n    return nativeIIRFilterNode;\n  };\n};","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\n\nfunction divide(a, b) {\n  const denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nfunction multiply(a, b) {\n  return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nfunction evaluatePolynomial(coefficient, z) {\n  let result = [0, 0];\n\n  for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n    result = multiply(result, z);\n    result[0] += coefficient[i];\n  }\n\n  return result;\n}\n\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n  return (nativeContext, baseLatency, {\n    channelCount,\n    channelCountMode,\n    channelInterpretation,\n    feedback,\n    feedforward\n  }) => {\n    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n    const feedbackLength = feedback.length;\n    const feedforwardLength = feedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n\n    if (feedback.length === 0 || feedback.length > 20) {\n      throw createNotSupportedError();\n    }\n\n    if (feedback[0] === 0) {\n      throw createInvalidStateError();\n    }\n\n    if (feedforward.length === 0 || feedforward.length > 20) {\n      throw createNotSupportedError();\n    }\n\n    if (feedforward[0] === 0) {\n      throw createInvalidStateError();\n    }\n\n    if (feedback[0] !== 1) {\n      for (let i = 0; i < feedforwardLength; i += 1) {\n        feedforward[i] /= feedback[0];\n      }\n\n      for (let i = 1; i < feedbackLength; i += 1) {\n        feedback[i] /= feedback[0];\n      }\n    }\n\n    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n    scriptProcessorNode.channelCount = channelCount;\n    scriptProcessorNode.channelCountMode = channelCountMode;\n    scriptProcessorNode.channelInterpretation = channelInterpretation;\n    const bufferLength = 32;\n    const bufferIndexes = [];\n    const xBuffers = [];\n    const yBuffers = [];\n\n    for (let i = 0; i < channelCount; i += 1) {\n      bufferIndexes.push(0);\n      const xBuffer = new Float32Array(bufferLength);\n      const yBuffer = new Float32Array(bufferLength);\n      xBuffer.fill(0);\n      yBuffer.fill(0);\n      xBuffers.push(xBuffer);\n      yBuffers.push(yBuffer);\n    }\n\n    scriptProcessorNode.onaudioprocess = event => {\n      const inputBuffer = event.inputBuffer;\n      const outputBuffer = event.outputBuffer;\n      const numberOfChannels = inputBuffer.numberOfChannels;\n\n      for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = inputBuffer.getChannelData(i);\n        const output = outputBuffer.getChannelData(i);\n        bufferIndexes[i] = filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n      }\n    };\n\n    const nyquist = nativeContext.sampleRate / 2;\n    const nativeIIRFilterNodeFaker = {\n      get bufferSize() {\n        return bufferSize;\n      },\n\n      get channelCount() {\n        return scriptProcessorNode.channelCount;\n      },\n\n      set channelCount(value) {\n        scriptProcessorNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return scriptProcessorNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        scriptProcessorNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return scriptProcessorNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        scriptProcessorNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return scriptProcessorNode.context;\n      },\n\n      get inputs() {\n        return [scriptProcessorNode];\n      },\n\n      get numberOfInputs() {\n        return scriptProcessorNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return scriptProcessorNode.numberOfOutputs;\n      },\n\n      addEventListener(...args) {\n        // @todo Dissallow adding an audioprocess listener.\n        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return scriptProcessorNode.dispatchEvent(args[0]);\n      },\n\n      getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n        if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n          throw createInvalidAccessError();\n        }\n\n        const length = frequencyHz.length;\n\n        for (let i = 0; i < length; i += 1) {\n          const omega = -Math.PI * (frequencyHz[i] / nyquist);\n          const z = [Math.cos(omega), Math.sin(omega)];\n          const numerator = evaluatePolynomial(feedforward, z);\n          const denominator = evaluatePolynomial(feedback, z);\n          const response = divide(numerator, denominator);\n          magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n          phaseResponse[i] = Math.atan2(response[1], response[0]);\n        }\n      },\n\n      removeEventListener(...args) {\n        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n    return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n  };\n};","export const createNativeMediaElementAudioSourceNodeFactory = createNativeAudioNode => {\n  return (nativeAudioContext, options) => createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n    return ntvDCntxt.createMediaElementSource(options.mediaElement);\n  });\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n  return (nativeAudioContext, options) => {\n    // Bug #64: Edge does not support MediaStreamAudioDestinationNodes.\n    if (nativeAudioContext.createMediaStreamDestination === undefined) {\n      throw createNotSupportedError();\n    }\n\n    const nativeMediaStreamAudioDestinationNode = createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      return ntvDCntxt.createMediaStreamDestination();\n    });\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options); // Bug #174: Safari does expose a wrong numberOfOutputs.\n\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n      Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', {\n        get: () => 0\n      });\n    }\n\n    return nativeMediaStreamAudioDestinationNode;\n  };\n};","export const createNativeMediaStreamAudioSourceNodeFactory = createNativeAudioNode => {\n  return (nativeAudioContext, {\n    mediaStream\n  }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    const nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      /*\n       * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n       * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n       */\n      const filteredAudioStreamTracks = audioStreamTracks.sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0).slice(0, 1);\n      return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    }); // Bug #63: Edge does not expose the mediaStream yet.\n\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', {\n      value: mediaStream\n    });\n    return nativeMediaStreamAudioSourceNode;\n  };\n};","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n  return (nativeAudioContext, {\n    mediaStreamTrack\n  }) => {\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return createNativeAudioNode(nativeAudioContext, ntvDCntxt => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n    } // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n\n\n    return createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      const mediaStream = new MediaStream([mediaStreamTrack]);\n      const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream); // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n\n      if (mediaStreamTrack.kind !== 'audio') {\n        throw createInvalidStateError();\n      } // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n\n      if (isNativeOfflineAudioContext(ntvDCntxt)) {\n        throw new TypeError();\n      }\n\n      return nativeMediaStreamAudioSourceNode;\n    });\n  };\n};","export const createNativeOfflineAudioContextConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  if (window.hasOwnProperty('OfflineAudioContext')) {\n    return window.OfflineAudioContext;\n  }\n\n  return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n  return (nativeContext, options) => {\n    const nativeOscillatorNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n    assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n\n    if (options.periodicWave !== undefined) {\n      nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n    } else {\n      assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n    } // Bug #44: Only Chrome & Opera throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n    } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n    } // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeOscillatorNode);\n    return nativeOscillatorNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativeAudioNode, createNativePannerNodeFaker) => {\n  return (nativeContext, options) => {\n    const nativePannerNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createPanner()); // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n\n    if (nativePannerNode.orientationX === undefined) {\n      return createNativePannerNodeFaker(nativeContext, options);\n    }\n\n    assignNativeAudioNodeOptions(nativePannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n    return nativePannerNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n  return (nativeContext, {\n    coneInnerAngle,\n    coneOuterAngle,\n    coneOuterGain,\n    distanceModel,\n    maxDistance,\n    orientationX,\n    orientationY,\n    orientationZ,\n    panningModel,\n    positionX,\n    positionY,\n    positionZ,\n    refDistance,\n    rolloffFactor,\n    ...audioNodeOptions\n  }) => {\n    const pannerNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createPanner()); // Bug #125: Safari does not throw an error yet.\n\n    if (audioNodeOptions.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #126: Safari does not throw an error yet.\n\n\n    if (audioNodeOptions.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n    const SINGLE_CHANNEL_OPTIONS = {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete'\n    };\n    const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      channelInterpretation: 'speakers',\n      numberOfInputs: 6\n    });\n    const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: 1\n    });\n    const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 1\n    });\n    const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n    const waveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      curve: new Float32Array([1, 1]),\n      oversample: 'none'\n    });\n    let lastOrientation = [orientationX, orientationY, orientationZ];\n    let lastPosition = [positionX, positionY, positionZ];\n\n    scriptProcessorNode.onaudioprocess = ({\n      inputBuffer\n    }) => {\n      const orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0]];\n\n      if (orientation.some((value, index) => value !== lastOrientation[index])) {\n        pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n        lastOrientation = orientation;\n      }\n\n      const positon = [inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];\n\n      if (positon.some((value, index) => value !== lastPosition[index])) {\n        pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n\n        lastPosition = positon;\n      }\n    };\n\n    Object.defineProperty(orientationYGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(orientationZGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(positionXGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(positionYGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(positionZGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    const nativePannerNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return pannerNode.channelCount;\n      },\n\n      set channelCount(value) {\n        // Bug #125: Safari does not throw an error yet.\n        if (value > 2) {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCount = value;\n        pannerNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return pannerNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        // Bug #126: Safari does not throw an error yet.\n        if (value === 'max') {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCountMode = value;\n        pannerNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return pannerNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        pannerNode.channelInterpretation = value;\n      },\n\n      get coneInnerAngle() {\n        return pannerNode.coneInnerAngle;\n      },\n\n      set coneInnerAngle(value) {\n        pannerNode.coneInnerAngle = value;\n      },\n\n      get coneOuterAngle() {\n        return pannerNode.coneOuterAngle;\n      },\n\n      set coneOuterAngle(value) {\n        pannerNode.coneOuterAngle = value;\n      },\n\n      get coneOuterGain() {\n        return pannerNode.coneOuterGain;\n      },\n\n      set coneOuterGain(value) {\n        // Bug #127: Edge & Safari do not throw an InvalidStateError yet.\n        if (value < 0 || value > 1) {\n          throw createInvalidStateError();\n        }\n\n        pannerNode.coneOuterGain = value;\n      },\n\n      get context() {\n        return pannerNode.context;\n      },\n\n      get distanceModel() {\n        return pannerNode.distanceModel;\n      },\n\n      set distanceModel(value) {\n        pannerNode.distanceModel = value;\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get maxDistance() {\n        return pannerNode.maxDistance;\n      },\n\n      set maxDistance(value) {\n        // Bug #128: Edge & Safari do not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.maxDistance = value;\n      },\n\n      get numberOfInputs() {\n        return pannerNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return pannerNode.numberOfOutputs;\n      },\n\n      get orientationX() {\n        return orientationXGainNode.gain;\n      },\n\n      get orientationY() {\n        return orientationYGainNode.gain;\n      },\n\n      get orientationZ() {\n        return orientationZGainNode.gain;\n      },\n\n      get panningModel() {\n        return pannerNode.panningModel;\n      },\n\n      set panningModel(value) {\n        pannerNode.panningModel = value; // Bug #123: Edge does not support HRTF as panningModel.\n\n        if (pannerNode.panningModel !== value && value === 'HRTF') {\n          throw createNotSupportedError();\n        }\n      },\n\n      get positionX() {\n        return positionXGainNode.gain;\n      },\n\n      get positionY() {\n        return positionYGainNode.gain;\n      },\n\n      get positionZ() {\n        return positionZGainNode.gain;\n      },\n\n      get refDistance() {\n        return pannerNode.refDistance;\n      },\n\n      set refDistance(value) {\n        // Bug #129: Edge & Safari do not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.refDistance = value;\n      },\n\n      get rolloffFactor() {\n        return pannerNode.rolloffFactor;\n      },\n\n      set rolloffFactor(value) {\n        // Bug #130: Edge & Safari do not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.rolloffFactor = value;\n      },\n\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n\n    if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n      nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n    }\n\n    if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n      nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n    }\n\n    if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n      nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n    }\n\n    if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n      nativePannerNodeFaker.distanceModel = distanceModel;\n    }\n\n    if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n      nativePannerNodeFaker.maxDistance = maxDistance;\n    }\n\n    if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n      nativePannerNodeFaker.orientationX.value = orientationX;\n    }\n\n    if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n      nativePannerNodeFaker.orientationY.value = orientationY;\n    }\n\n    if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n      nativePannerNodeFaker.orientationZ.value = orientationZ;\n    }\n\n    if (panningModel !== nativePannerNodeFaker.panningModel) {\n      nativePannerNodeFaker.panningModel = panningModel;\n    }\n\n    if (positionX !== nativePannerNodeFaker.positionX.value) {\n      nativePannerNodeFaker.positionX.value = positionX;\n    }\n\n    if (positionY !== nativePannerNodeFaker.positionY.value) {\n      nativePannerNodeFaker.positionY.value = positionY;\n    }\n\n    if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n      nativePannerNodeFaker.positionZ.value = positionZ;\n    }\n\n    if (refDistance !== nativePannerNodeFaker.refDistance) {\n      nativePannerNodeFaker.refDistance = refDistance;\n    }\n\n    if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n      nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n    }\n\n    if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n      pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n    }\n\n    if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n      pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n    }\n\n    const whenConnected = () => {\n      inputGainNode.connect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n      connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n      waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n      waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n      waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n      waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n      waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n      channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n    };\n\n    const whenDisconnected = () => {\n      inputGainNode.disconnect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n      disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.disconnect(orientationXGainNode);\n      orientationXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationYGainNode);\n      orientationYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationZGainNode);\n      orientationZGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionXGainNode);\n      positionXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionYGainNode);\n      positionYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionZGainNode);\n      positionZGainNode.disconnect(channelMergerNode);\n      channelMergerNode.disconnect(scriptProcessorNode);\n      scriptProcessorNode.disconnect(nativeContext.destination);\n    };\n\n    return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n  };\n};","export const createNativePeriodicWaveFactory = getBackupNativeContext => {\n  return (nativeContext, {\n    disableNormalization,\n    imag,\n    real\n  }) => {\n    // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n    const backupNativeContext = getBackupNativeContext(nativeContext); // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n\n    const wrappedImag = new Float32Array(imag);\n    const wrappedReal = new Float32Array(real);\n\n    if (backupNativeContext !== null) {\n      return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, {\n        disableNormalization\n      });\n    }\n\n    return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, {\n      disableNormalization\n    });\n  };\n};","export const createNativeScriptProcessorNodeFactory = createNativeAudioNode => {\n  return (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n    });\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n  return (nativeContext, options) => createNativeAudioNode(nativeContext, ntvCntxt => {\n    const channelCountMode = options.channelCountMode;\n    /*\n     * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n     * which supports it and therefore it can't be supported at all.\n     */\n\n    if (channelCountMode === 'clamped-max') {\n      throw createNotSupportedError();\n    } // Bug #105: Safari does not support the StereoPannerNode.\n\n\n    if (nativeContext.createStereoPanner === undefined) {\n      return createNativeStereoPannerNodeFaker(nativeContext, options);\n    }\n\n    const nativeStereoPannerNode = ntvCntxt.createStereoPanner();\n    assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n    /*\n     * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n     * which supports it and therefore it can't be supported at all.\n     */\n\n    Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n      get: () => channelCountMode,\n      set: value => {\n        if (value !== channelCountMode) {\n          throw createNotSupportedError();\n        }\n      }\n    });\n    return nativeStereoPannerNode;\n  });\n};","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n  // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n  const CURVE_SIZE = 16385;\n  const DC_CURVE = new Float32Array([1, 1]);\n  const HALF_PI = Math.PI / 2;\n  const SINGLE_CHANNEL_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete'\n  };\n  const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS,\n    oversample: 'none'\n  };\n\n  const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n    const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n    for (let i = 0; i < CURVE_SIZE; i += 1) {\n      const x = i / (CURVE_SIZE - 1) * HALF_PI;\n      leftWaveShaperCurve[i] = Math.cos(x);\n      rightWaveShaperCurve[i] = Math.sin(x);\n    }\n\n    const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftWaveShaperCurve\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: DC_CURVE\n    });\n    const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightWaveShaperCurve\n    });\n    return {\n      connectGraph() {\n        inputGainNode.connect(leftGainNode);\n        inputGainNode.connect(panWaveShaperNode.inputs[0]);\n        inputGainNode.connect(rightGainNode);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.connect(leftGainNode.gain);\n        rightWaveShaperNode.connect(rightGainNode.gain);\n        leftGainNode.connect(channelMergerNode, 0, 0);\n        rightGainNode.connect(channelMergerNode, 0, 1);\n      },\n\n      disconnectGraph() {\n        inputGainNode.disconnect(leftGainNode);\n        inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n        inputGainNode.disconnect(rightGainNode);\n        panWaveShaperNode.disconnect(panGainNode);\n        panGainNode.disconnect(leftWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.disconnect(leftGainNode.gain);\n        rightWaveShaperNode.disconnect(rightGainNode.gain);\n        leftGainNode.disconnect(channelMergerNode, 0, 0);\n        rightGainNode.disconnect(channelMergerNode, 0, 1);\n      }\n\n    };\n  };\n\n  const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n    const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const centerIndex = Math.floor(CURVE_SIZE / 2);\n\n    for (let i = 0; i < CURVE_SIZE; i += 1) {\n      if (i > centerIndex) {\n        const x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;\n        leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n        leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n        rightInputForLeftOutputWaveShaperCurve[i] = 0;\n        rightInputForRightOutputWaveShaperCurve[i] = 1;\n      } else {\n        const x = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;\n        leftInputForLeftOutputWaveShaperCurve[i] = 1;\n        leftInputForRightOutputWaveShaperCurve[i] = 0;\n        rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n        rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n      }\n    }\n\n    const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n      channelCount: 2,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      numberOfOutputs: 2\n    });\n    const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftInputForLeftOutputWaveShaperCurve\n    });\n    const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftInputForRightOutputWaveShaperCurve\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: DC_CURVE\n    });\n    const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightInputForLeftOutputWaveShaperCurve\n    });\n    const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightInputForRightOutputWaveShaperCurve\n    });\n    return {\n      connectGraph() {\n        inputGainNode.connect(channelSplitterNode);\n        inputGainNode.connect(panWaveShaperNode.inputs[0]);\n        channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n      },\n\n      disconnectGraph() {\n        inputGainNode.disconnect(channelSplitterNode);\n        inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n        channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 1);\n        channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 1);\n        channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.disconnect(panGainNode);\n        panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n      }\n\n    };\n  };\n\n  const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n    if (channelCount === 1) {\n      return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n    }\n\n    if (channelCount === 2) {\n      return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n    }\n\n    throw createNotSupportedError();\n  };\n\n  return (nativeContext, {\n    channelCount,\n    channelCountMode,\n    pan,\n    ...audioNodeOptions\n  }) => {\n    if (channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...audioNodeOptions,\n      channelCount: 1,\n      channelCountMode,\n      numberOfInputs: 2\n    });\n    const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      channelCount,\n      channelCountMode,\n      gain: 1\n    });\n    const panGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: pan\n    });\n    let {\n      connectGraph,\n      disconnectGraph\n    } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n    Object.defineProperty(panGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    const nativeStereoPannerNodeFakerFactory = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return inputGainNode.channelCount;\n      },\n\n      set channelCount(value) {\n        if (inputGainNode.channelCount !== value) {\n          if (isConnected) {\n            disconnectGraph();\n          }\n\n          ({\n            connectGraph,\n            disconnectGraph\n          } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n\n          if (isConnected) {\n            connectGraph();\n          }\n        }\n\n        inputGainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return inputGainNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        if (value === 'clamped-max' || value === 'max') {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return inputGainNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return inputGainNode.context;\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get numberOfInputs() {\n        return inputGainNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return inputGainNode.numberOfOutputs;\n      },\n\n      get pan() {\n        return panGainNode.gain;\n      },\n\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n    let isConnected = false;\n\n    const whenConnected = () => {\n      connectGraph();\n      isConnected = true;\n    };\n\n    const whenDisconnected = () => {\n      disconnectGraph();\n      isConnected = false;\n    };\n\n    return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors) => {\n  return (nativeContext, options) => {\n    const nativeWaveShaperNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createWaveShaper());\n\n    try {\n      // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n      // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.\n      nativeWaveShaperNode.curve = new Float32Array([1]);\n      return createNativeWaveShaperNodeFaker(nativeContext, options);\n    } catch {\n      /* Ignore errors. */\n    }\n\n    assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n    const curve = options.curve; // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n\n    if (curve !== null && curve.length < 2) {\n      throw createInvalidStateError();\n    }\n\n    assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'curve');\n    assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n    let disconnectNativeAudioBufferSourceNode = null;\n    let isConnected = false;\n    overwriteAccessors(nativeWaveShaperNode, 'curve', get => () => get.call(nativeWaveShaperNode), set => value => {\n      set.call(nativeWaveShaperNode, value);\n\n      if (isConnected) {\n        if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n          disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n        } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n          disconnectNativeAudioBufferSourceNode();\n          disconnectNativeAudioBufferSourceNode = null;\n        }\n      }\n\n      return value;\n    });\n\n    const whenConnected = () => {\n      isConnected = true;\n\n      if (isDCCurve(nativeWaveShaperNode.curve)) {\n        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n      }\n    };\n\n    const whenDisconnected = () => {\n      isConnected = false;\n\n      if (disconnectNativeAudioBufferSourceNode !== null) {\n        disconnectNativeAudioBufferSourceNode();\n        disconnectNativeAudioBufferSourceNode = null;\n      }\n    };\n\n    return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections) => {\n  return (nativeContext, {\n    curve,\n    oversample,\n    ...audioNodeOptions\n  }) => {\n    const negativeWaveShaperNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createWaveShaper());\n    const positiveWaveShaperNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createWaveShaper());\n    assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n    assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n    const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: 1\n    });\n    const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: -1\n    });\n    const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: 1\n    });\n    const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: -1\n    });\n    let disconnectNativeAudioBufferSourceNode = null;\n    let isConnected = false;\n    let unmodifiedCurve = null;\n    const nativeWaveShaperNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return negativeWaveShaperNode.channelCount;\n      },\n\n      set channelCount(value) {\n        inputGainNode.channelCount = value;\n        invertGainNode.channelCount = value;\n        negativeWaveShaperNode.channelCount = value;\n        outputGainNode.channelCount = value;\n        positiveWaveShaperNode.channelCount = value;\n        revertGainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return negativeWaveShaperNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        inputGainNode.channelCountMode = value;\n        invertGainNode.channelCountMode = value;\n        negativeWaveShaperNode.channelCountMode = value;\n        outputGainNode.channelCountMode = value;\n        positiveWaveShaperNode.channelCountMode = value;\n        revertGainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return negativeWaveShaperNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        invertGainNode.channelInterpretation = value;\n        negativeWaveShaperNode.channelInterpretation = value;\n        outputGainNode.channelInterpretation = value;\n        positiveWaveShaperNode.channelInterpretation = value;\n        revertGainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return negativeWaveShaperNode.context;\n      },\n\n      get curve() {\n        return unmodifiedCurve;\n      },\n\n      set curve(value) {\n        // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n          throw createInvalidStateError();\n        }\n\n        if (value === null) {\n          negativeWaveShaperNode.curve = value;\n          positiveWaveShaperNode.curve = value;\n        } else {\n          const curveLength = value.length;\n          const negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);\n          const positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);\n          negativeCurve[0] = value[0];\n          positiveCurve[0] = -value[curveLength - 1];\n          const length = Math.ceil((curveLength + 1) / 2);\n          const centerIndex = (curveLength + 1) / 2 - 1;\n\n          for (let i = 1; i < length; i += 1) {\n            const theoreticIndex = i / length * centerIndex;\n            const lowerIndex = Math.floor(theoreticIndex);\n            const upperIndex = Math.ceil(theoreticIndex);\n            negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n            positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n          }\n\n          negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n          negativeWaveShaperNode.curve = negativeCurve;\n          positiveWaveShaperNode.curve = positiveCurve;\n        }\n\n        unmodifiedCurve = value;\n\n        if (isConnected) {\n          if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n          } else if (disconnectNativeAudioBufferSourceNode !== null) {\n            disconnectNativeAudioBufferSourceNode();\n            disconnectNativeAudioBufferSourceNode = null;\n          }\n        }\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get numberOfInputs() {\n        return negativeWaveShaperNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return negativeWaveShaperNode.numberOfOutputs;\n      },\n\n      get oversample() {\n        return negativeWaveShaperNode.oversample;\n      },\n\n      set oversample(value) {\n        negativeWaveShaperNode.oversample = value;\n        positiveWaveShaperNode.oversample = value;\n      },\n\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n\n    if (curve !== nativeWaveShaperNodeFaker.curve) {\n      nativeWaveShaperNodeFaker.curve = curve;\n    }\n\n    if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n      nativeWaveShaperNodeFaker.oversample = oversample;\n    }\n\n    const whenConnected = () => {\n      inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n      inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n      isConnected = true;\n\n      if (isDCCurve(unmodifiedCurve)) {\n        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n      }\n    };\n\n    const whenDisconnected = () => {\n      inputGainNode.disconnect(negativeWaveShaperNode);\n      negativeWaveShaperNode.disconnect(outputGainNode);\n      inputGainNode.disconnect(invertGainNode);\n      invertGainNode.disconnect(positiveWaveShaperNode);\n      positiveWaveShaperNode.disconnect(revertGainNode);\n      revertGainNode.disconnect(outputGainNode);\n      isConnected = false;\n\n      if (disconnectNativeAudioBufferSourceNode !== null) {\n        disconnectNativeAudioBufferSourceNode();\n        disconnectNativeAudioBufferSourceNode = null;\n      }\n    };\n\n    return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n  };\n};","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n  return class OfflineAudioContext extends baseAudioContextConstructor {\n    constructor(a, b, c) {\n      let options;\n\n      if (typeof a === 'number' && b !== undefined && c !== undefined) {\n        options = {\n          length: b,\n          numberOfChannels: a,\n          sampleRate: c\n        };\n      } else if (typeof a === 'object') {\n        options = a;\n      } else {\n        throw new Error('The given parameters are not valid.');\n      }\n\n      const {\n        length,\n        numberOfChannels,\n        sampleRate\n      } = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n\n      if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n        nativeOfflineAudioContext.addEventListener('statechange', (() => {\n          let i = 0;\n\n          const delayStateChangeEvent = event => {\n            if (this._state === 'running') {\n              if (i > 0) {\n                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                event.stopImmediatePropagation();\n\n                this._waitForThePromiseToSettle(event);\n              } else {\n                i += 1;\n              }\n            }\n          };\n\n          return delayStateChangeEvent;\n        })());\n      }\n\n      super(nativeOfflineAudioContext, numberOfChannels);\n      this._length = length;\n      this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n      this._state = null;\n    }\n\n    get length() {\n      // Bug #17: Safari does not yet expose the length.\n      if (this._nativeOfflineAudioContext.length === undefined) {\n        return this._length;\n      }\n\n      return this._nativeOfflineAudioContext.length;\n    }\n\n    get state() {\n      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n    }\n\n    startRendering() {\n      /*\n       * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n       * the state of the nativeOfflineAudioContext might no transition to running immediately.\n       */\n      if (this._state === 'running') {\n        return Promise.reject(createInvalidStateError());\n      }\n\n      this._state = 'running';\n      return startRendering(this.destination, this._nativeOfflineAudioContext).then(audioBuffer => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        return audioBuffer;\n      }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n      .catch(err => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        throw err;\n      });\n    }\n\n    _waitForThePromiseToSettle(event) {\n      if (this._state === null) {\n        this._nativeOfflineAudioContext.dispatchEvent(event);\n      } else {\n        setTimeout(() => this._waitForThePromiseToSettle(event));\n      }\n    }\n\n  };\n};","import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 440,\n  type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class OscillatorNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;\n      const nyquist = context.sampleRate / 2;\n      super(context, false, nativeOscillatorNode, oscillatorNodeRenderer); // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n\n      this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600); // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n      this._nativeOscillatorNode = nativeOscillatorNode;\n      this._onended = null;\n      this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n      if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n        this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;\n      }\n    }\n\n    get detune() {\n      return this._detune;\n    }\n\n    get frequency() {\n      return this._frequency;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeOscillatorNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeOscillatorNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    get type() {\n      return this._nativeOscillatorNode.type;\n    }\n\n    set type(value) {\n      this._nativeOscillatorNode.type = value; // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n\n      if (value === 'custom') {\n        throw createInvalidStateError();\n      }\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = null;\n      }\n    }\n\n    setPeriodicWave(periodicWave) {\n      this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = periodicWave;\n      }\n    }\n\n    start(when = 0) {\n      this._nativeOscillatorNode.start(when);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.start = when;\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeOscillatorNode.stop(when);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeOscillatorNodes = new WeakMap();\n    let periodicWave = null;\n    let start = null;\n    let stop = null;\n\n    const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeOscillatorNode = getNativeAudioNode(proxy); // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n      if (!nativeOscillatorNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeOscillatorNode.channelCount,\n          channelCountMode: nativeOscillatorNode.channelCountMode,\n          channelInterpretation: nativeOscillatorNode.channelInterpretation,\n          detune: nativeOscillatorNode.detune.value,\n          frequency: nativeOscillatorNode.frequency.value,\n          periodicWave: periodicWave === null ? undefined : periodicWave,\n          type: nativeOscillatorNode.type\n        };\n        nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n        if (start !== null) {\n          nativeOscillatorNode.start(start);\n        }\n\n        if (stop !== null) {\n          nativeOscillatorNode.stop(stop);\n        }\n      }\n\n      renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n      if (!nativeOscillatorNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n      return nativeOscillatorNode;\n    };\n\n    return {\n      set periodicWave(value) {\n        periodicWave = value;\n      },\n\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeOscillatorNode !== undefined) {\n          return Promise.resolve(renderedNativeOscillatorNode);\n        }\n\n        return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  coneInnerAngle: 360,\n  coneOuterAngle: 360,\n  coneOuterGain: 0,\n  distanceModel: 'inverse',\n  maxDistance: 10000,\n  orientationX: 1,\n  orientationY: 0,\n  orientationZ: 0,\n  panningModel: 'equalpower',\n  positionX: 0,\n  positionY: 0,\n  positionZ: 0,\n  refDistance: 1,\n  rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class PannerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;\n      super(context, false, nativePannerNode, pannerNodeRenderer);\n      this._nativePannerNode = nativePannerNode; // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n\n      this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get coneInnerAngle() {\n      return this._nativePannerNode.coneInnerAngle;\n    }\n\n    set coneInnerAngle(value) {\n      this._nativePannerNode.coneInnerAngle = value;\n    }\n\n    get coneOuterAngle() {\n      return this._nativePannerNode.coneOuterAngle;\n    }\n\n    set coneOuterAngle(value) {\n      this._nativePannerNode.coneOuterAngle = value;\n    }\n\n    get coneOuterGain() {\n      return this._nativePannerNode.coneOuterGain;\n    }\n\n    set coneOuterGain(value) {\n      this._nativePannerNode.coneOuterGain = value;\n    }\n\n    get distanceModel() {\n      return this._nativePannerNode.distanceModel;\n    }\n\n    set distanceModel(value) {\n      this._nativePannerNode.distanceModel = value;\n    }\n\n    get maxDistance() {\n      return this._nativePannerNode.maxDistance;\n    }\n\n    set maxDistance(value) {\n      this._nativePannerNode.maxDistance = value;\n    }\n\n    get orientationX() {\n      return this._orientationX;\n    }\n\n    get orientationY() {\n      return this._orientationY;\n    }\n\n    get orientationZ() {\n      return this._orientationZ;\n    }\n\n    get panningModel() {\n      return this._nativePannerNode.panningModel;\n    }\n\n    set panningModel(value) {\n      this._nativePannerNode.panningModel = value;\n    }\n\n    get positionX() {\n      return this._positionX;\n    }\n\n    get positionY() {\n      return this._positionY;\n    }\n\n    get positionZ() {\n      return this._positionZ;\n    }\n\n    get refDistance() {\n      return this._nativePannerNode.refDistance;\n    }\n\n    set refDistance(value) {\n      this._nativePannerNode.refDistance = value;\n    }\n\n    get rolloffFactor() {\n      return this._nativePannerNode.rolloffFactor;\n    }\n\n    set rolloffFactor(value) {\n      this._nativePannerNode.rolloffFactor = value;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return () => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let renderedBufferPromise = null;\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeGainNode = null;\n      let nativePannerNode = getNativeAudioNode(proxy);\n      const commonAudioNodeOptions = {\n        channelCount: nativePannerNode.channelCount,\n        channelCountMode: nativePannerNode.channelCountMode,\n        channelInterpretation: nativePannerNode.channelInterpretation\n      };\n      const commonNativePannerNodeOptions = { ...commonAudioNodeOptions,\n        coneInnerAngle: nativePannerNode.coneInnerAngle,\n        coneOuterAngle: nativePannerNode.coneOuterAngle,\n        coneOuterGain: nativePannerNode.coneOuterGain,\n        distanceModel: nativePannerNode.distanceModel,\n        maxDistance: nativePannerNode.maxDistance,\n        panningModel: nativePannerNode.panningModel,\n        refDistance: nativePannerNode.refDistance,\n        rolloffFactor: nativePannerNode.rolloffFactor\n      }; // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext); // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n\n      if ('bufferSize' in nativePannerNode) {\n        nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n          gain: 1\n        });\n      } else if (!nativePannerNodeIsOwnedByContext) {\n        const options = { ...commonNativePannerNodeOptions,\n          orientationX: nativePannerNode.orientationX.value,\n          orientationY: nativePannerNode.orientationY.value,\n          orientationZ: nativePannerNode.orientationZ.value,\n          positionX: nativePannerNode.positionX.value,\n          positionY: nativePannerNode.positionY.value,\n          positionZ: nativePannerNode.positionZ.value\n        };\n        nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n\n      if (nativeGainNode !== null) {\n        if (renderedBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          }\n\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, // Bug #17: Safari does not yet expose the length.\n          proxy.context.length, nativeOfflineAudioContext.sampleRate);\n          const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n          });\n          nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n          renderedBufferPromise = (async () => {\n            const nativeConstantSourceNodes = await Promise.all([proxy.orientationX, proxy.orientationY, proxy.orientationZ, proxy.positionX, proxy.positionY, proxy.positionZ].map(async (audioParam, index) => {\n              const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                offset: index === 0 ? 1 : 0\n              });\n              await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n              return nativeConstantSourceNode;\n            }));\n\n            for (let i = 0; i < 6; i += 1) {\n              nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n              nativeConstantSourceNodes[i].start(0);\n            }\n\n            return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n          })();\n        }\n\n        const renderedBuffer = await renderedBufferPromise;\n        const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n          gain: 1\n        });\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n        const channelDatas = [];\n\n        for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n          channelDatas.push(renderedBuffer.getChannelData(i));\n        }\n\n        let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n        let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n        let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n          gain: 1\n        });\n        let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, { ...commonNativePannerNodeOptions,\n          orientationX: lastOrientation[0],\n          orientationY: lastOrientation[1],\n          orientationZ: lastOrientation[2],\n          positionX: lastPosition[0],\n          positionY: lastPosition[1],\n          positionZ: lastPosition[2]\n        });\n        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n        partialPannerNode.connect(nativeGainNode);\n\n        for (let i = 128; i < renderedBuffer.length; i += 128) {\n          const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n          const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n\n          if (orientation.some((value, index) => value !== lastOrientation[index]) || positon.some((value, index) => value !== lastPosition[index])) {\n            lastOrientation = orientation;\n            lastPosition = positon;\n            const currentTime = i / nativeOfflineAudioContext.sampleRate;\n            gateGainNode.gain.setValueAtTime(0, currentTime);\n            gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n              gain: 0\n            });\n            partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, { ...commonNativePannerNodeOptions,\n              orientationX: lastOrientation[0],\n              orientationY: lastOrientation[1],\n              orientationZ: lastOrientation[2],\n              positionX: lastPosition[0],\n              positionY: lastPosition[1],\n              positionZ: lastPosition[2]\n            });\n            gateGainNode.gain.setValueAtTime(1, currentTime);\n            inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n            partialPannerNode.connect(nativeGainNode);\n          }\n        }\n\n        return nativeGainNode;\n      }\n\n      if (!nativePannerNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n      }\n\n      if (isNativeAudioNodeFaker(nativePannerNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n      }\n\n      return nativePannerNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n          return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","const DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n  return class PeriodicWave {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n\n      return periodicWave;\n    }\n\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n    }\n\n  };\n};","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n  return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n    const audioParamRenderer = getAudioParamRenderer(audioParam);\n    audioParamRenderer.replay(nativeAudioParam);\n    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n  };\n};","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n  return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n    const audioNodeConnections = getAudioNodeConnections(audioNode);\n    const nextTrace = [...trace, audioNode];\n    await Promise.all(audioNodeConnections.activeInputs.map((connections, input) => Array.from(connections).filter(([source]) => !nextTrace.includes(source)).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n      const destination = audioNode.context.destination;\n\n      if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n        renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n      }\n    })).reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n  };\n};","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n  return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n    await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n\n      if (!isPartOfACycle(source)) {\n        renderedNativeAudioNode.connect(nativeAudioParam, output);\n      }\n    }));\n  };\n};","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n  return nativeOfflineAudioContext => {\n    // Bug #21: Safari does not support promises yet.\n    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n      // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.\n      return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then(isOfflineAudioContextCurrentTimeSupported => {\n        if (!isOfflineAudioContextCurrentTimeSupported) {\n          const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n          nativeOfflineAudioContext.oncomplete = () => {\n            scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n            scriptProcessorNode.disconnect();\n          };\n\n          scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n\n          scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n        }\n\n        return nativeOfflineAudioContext.startRendering();\n      });\n    }\n\n    return new Promise(resolve => {\n      // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n      const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'discrete',\n        gain: 0\n      });\n\n      nativeOfflineAudioContext.oncomplete = event => {\n        gainNode.disconnect();\n        resolve(event.renderedBuffer);\n      };\n\n      gainNode.connect(nativeOfflineAudioContext.destination);\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n  const trace = [];\n  return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext, trace)\n  /*\n   * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n   * destination.\n   */\n  .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map(audioWorkletNode => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace)))).then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext)).then(audioBuffer => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n    if (typeof audioBuffer.copyFromChannel !== 'function') {\n      wrapAudioBufferCopyChannelMethods(audioBuffer);\n      wrapAudioBufferGetChannelDataMethod(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n    } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n      wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n    }\n\n    audioBufferStore.add(audioBuffer);\n    return audioBuffer;\n  });\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class StereoPannerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer); // Bug #106: Edge does not export a maxValue and minValue property.\n\n      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n    }\n\n    get pan() {\n      return this._pan;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeStereoPannerNodes = new WeakMap();\n\n    const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeStereoPannerNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n\n      if (!nativeStereoPannerNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeStereoPannerNode.channelCount,\n          channelCountMode: nativeStereoPannerNode.channelCountMode,\n          channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n          pan: nativeStereoPannerNode.pan.value\n        };\n        nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n\n      if (!nativeStereoPannerNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n      }\n\n      if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n      }\n\n      return nativeStereoPannerNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeStereoPannerNode !== undefined) {\n          return Promise.resolve(renderedNativeStereoPannerNode);\n        }\n\n        return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","// Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = nativeAudioBufferConstructor => {\n  return () => {\n    if (nativeAudioBufferConstructor === null) {\n      return false;\n    }\n\n    try {\n      new nativeAudioBufferConstructor({\n        length: 1,\n        sampleRate: 44100\n      }); // tslint:disable-line:no-unused-expression\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n\n    if (nativeAudioBuffer.copyToChannel === undefined) {\n      return true;\n    }\n\n    const source = new Float32Array(2);\n\n    try {\n      nativeAudioBuffer.copyFromChannel(source, 0, 0);\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.start();\n\n    try {\n      nativeAudioBufferSourceNode.start();\n    } catch {\n      return true;\n    }\n\n    return false;\n  };\n};","// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n    const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n    audioBuffer.getChannelData(0)[0] = 1;\n    audioBufferSourceNode.buffer = audioBuffer;\n    audioBufferSourceNode.start(0, 0, 0);\n    audioBufferSourceNode.connect(offlineAudioContext.destination); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      offlineAudioContext.oncomplete = ({\n        renderedBuffer\n      }) => {\n        // Bug #5: Safari does not support copyFromChannel().\n        resolve(renderedBuffer.getChannelData(0)[0] === 0);\n      };\n\n      offlineAudioContext.startRendering();\n    });\n  };\n};","export const createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n\n    try {\n      nativeAudioBufferSourceNode.start(0, 1);\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.start();\n\n    try {\n      nativeAudioBufferSourceNode.stop();\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestAudioContextCloseMethodSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    } // Try to check the prototype before constructing the AudioContext.\n\n\n    if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n      return true;\n    }\n\n    const audioContext = new nativeAudioContextConstructor();\n    const isAudioContextClosable = audioContext.close !== undefined;\n\n    try {\n      audioContext.close();\n    } catch {// Ignore errors.\n    }\n\n    return isAudioContextClosable;\n  };\n};","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      let isPending = true;\n\n      const resolvePromise = err => {\n        if (isPending) {\n          isPending = false;\n          offlineAudioContext.startRendering();\n          resolve(err instanceof TypeError);\n        }\n      };\n\n      let promise; // Bug #26: Safari throws a synchronous error.\n\n      try {\n        promise = offlineAudioContext // Bug #1: Safari requires a successCallback.\n        .decodeAudioData(null, () => {// Ignore the success callback.\n        }, resolvePromise);\n      } catch (err) {\n        resolvePromise(err);\n      } // Bug #21: Safari does not support promises yet.\n\n\n      if (promise !== undefined) {\n        // Bug #6 Chrome does not call the errorCallback\n        promise.catch(resolvePromise);\n      }\n    });\n  };\n};","export const createTestAudioContextOptionsSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    }\n\n    let audioContext;\n\n    try {\n      audioContext = new nativeAudioContextConstructor({\n        latencyHint: 'balanced'\n      });\n    } catch {\n      return false;\n    }\n\n    audioContext.close();\n    return true;\n  };\n};","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeGainNode = nativeOfflineAudioContext.createGain();\n    const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n    nativeGainNode.disconnect(nativeGainNode);\n    return isSupported;\n  };\n};","export const createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n\n    try {\n      nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n      return err instanceof RangeError;\n    }\n\n    return false;\n  };\n};","export const createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n\n    try {\n      nativeAudioBufferSourceNode.stop();\n      return true;\n    } catch {\n      return false;\n    }\n  };\n};","export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n\n    try {\n      nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n      return err instanceof RangeError;\n    }\n\n    return false;\n  };\n};","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n  return async () => {\n    // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n    if (nativeAudioWorkletNodeConstructor === null) {\n      return true;\n    }\n\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n      type: 'application/javascript; charset=utf-8'\n    });\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n    const url = URL.createObjectURL(blob);\n    let isCallingProcess = false;\n\n    try {\n      await offlineAudioContext.audioWorklet.addModule(url);\n      const gainNode = offlineAudioContext.createGain();\n      const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {\n        numberOfOutputs: 0\n      });\n\n      audioWorkletNode.port.onmessage = () => isCallingProcess = true;\n\n      gainNode.connect(audioWorkletNode);\n      await offlineAudioContext.startRendering();\n    } catch {// Ignore errors.\n    } finally {\n      URL.revokeObjectURL(url);\n    }\n\n    return isCallingProcess;\n  };\n};","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeChannelMergerNode = createNativeAudioNode(offlineAudioContext, ntvCntxt => ntvCntxt.createChannelMerger());\n\n    try {\n      nativeChannelMergerNode.channelCount = 2;\n    } catch {\n      return true;\n    }\n\n    return false;\n  };\n};","export const createTestConstantSourceNodeAccurateSchedulingSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return true;\n    }\n\n    const nativeConstantSourceNode = createNativeAudioNode(nativeOfflineAudioContext, ntvCntxt => ntvCntxt.createConstantSource());\n    /*\n     * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n     * the implementation of Firefox right now, but it could probably be done in a better way.\n     */\n\n    return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n  };\n};","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeConvolverNode = offlineAudioContext.createConvolver();\n    nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n\n    try {\n      nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestIsSecureContextSupport = window => {\n  return () => window !== null && window.hasOwnProperty('isSecureContext');\n};","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    }\n\n    const audioContext = new nativeAudioContextConstructor();\n\n    try {\n      audioContext.createMediaStreamSource(new MediaStream());\n      return false;\n    } catch (err) {\n      return true;\n    }\n  };\n};","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n\n    const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    }); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      nativeOfflineAudioContext.oncomplete = () => {\n        gainNode.disconnect();\n        resolve(nativeOfflineAudioContext.currentTime !== 0);\n      };\n\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    /*\n     * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n     * support the tested behaviour.\n     */\n\n    if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n      return Promise.resolve(true);\n    } // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return Promise.resolve(true);\n    }\n\n    const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n    const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n    constantSourceNode.channelCount = 1;\n    constantSourceNode.offset.value = 1;\n    stereoPanner.channelCount = 1;\n    constantSourceNode.start();\n    constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n    return nativeOfflineAudioContext.startRendering().then(buffer => buffer.getChannelData(0)[0] !== 1);\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  curve: null,\n  oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class WaveShaperNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer() : null; // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n\n      super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n      this._isCurveNullified = false;\n      this._nativeWaveShaperNode = nativeWaveShaperNode;\n    }\n\n    get curve() {\n      if (this._isCurveNullified) {\n        return null;\n      }\n\n      return this._nativeWaveShaperNode.curve;\n    }\n\n    set curve(value) {\n      // Bug #103: Safari does not allow to set the curve to null.\n      if (value === null) {\n        this._isCurveNullified = true;\n        this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n      } else {\n        // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n        // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n        if (value.length < 2) {\n          throw createInvalidStateError();\n        }\n\n        this._isCurveNullified = false;\n        this._nativeWaveShaperNode.curve = value;\n      }\n    }\n\n    get oversample() {\n      return this._nativeWaveShaperNode.oversample;\n    }\n\n    set oversample(value) {\n      this._nativeWaveShaperNode.oversample = value;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeWaveShaperNodes = new WeakMap();\n\n    const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeWaveShaperNode = getNativeAudioNode(proxy); // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n\n      if (!nativeWaveShaperNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeWaveShaperNode.channelCount,\n          channelCountMode: nativeWaveShaperNode.channelCountMode,\n          channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n          curve: nativeWaveShaperNode.curve,\n          oversample: nativeWaveShaperNode.oversample\n        };\n        nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n\n      if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n      }\n\n      return nativeWaveShaperNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeWaveShaperNode !== undefined) {\n          return Promise.resolve(renderedNativeWaveShaperNode);\n        }\n\n        return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createWindow = () => typeof window === 'undefined' ? null : window;","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n  return audioBuffer => {\n    audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n      const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n      const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n      if (channelNumber >= audioBuffer.numberOfChannels) {\n        throw createIndexSizeError();\n      }\n\n      const audioBufferLength = audioBuffer.length;\n      const channelData = audioBuffer.getChannelData(channelNumber);\n      const destinationLength = destination.length;\n\n      for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n        destination[i] = channelData[i + bufferOffset];\n      }\n    };\n\n    audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n      const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n      const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n      if (channelNumber >= audioBuffer.numberOfChannels) {\n        throw createIndexSizeError();\n      }\n\n      const audioBufferLength = audioBuffer.length;\n      const channelData = audioBuffer.getChannelData(channelNumber);\n      const sourceLength = source.length;\n\n      for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n        channelData[i + bufferOffset] = source[i];\n      }\n    };\n  };\n};","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = convertNumberToUnsignedLong => {\n  return audioBuffer => {\n    audioBuffer.copyFromChannel = (copyFromChannel => {\n      return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n        const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n        const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n        if (bufferOffset < audioBuffer.length) {\n          return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n        }\n      };\n    })(audioBuffer.copyFromChannel);\n\n    audioBuffer.copyToChannel = (copyToChannel => {\n      return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n        const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n        const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n        if (bufferOffset < audioBuffer.length) {\n          return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n        }\n      };\n    })(audioBuffer.copyToChannel);\n  };\n};","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = overwriteAccessors => {\n  return (nativeAudioBufferSourceNode, nativeContext) => {\n    const nullifiedBuffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n\n    if (nativeAudioBufferSourceNode.buffer === null) {\n      nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n    }\n\n    overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', get => () => {\n      const value = get.call(nativeAudioBufferSourceNode);\n      return value === nullifiedBuffer ? null : value;\n    }, set => value => {\n      return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n    });\n  };\n};","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createNativeAudioNode => {\n  return (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createGain());\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n\n    const disconnectGainNode = (disconnect => {\n      return () => {\n        // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n        disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n        nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n      };\n    })(nativeAudioScheduledSourceNode.disconnect);\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n\n    nativeAudioScheduledSourceNode.stop = (stop => {\n      let isStopped = false;\n      return (when = 0) => {\n        if (isStopped) {\n          try {\n            stop.call(nativeAudioScheduledSourceNode, when);\n          } catch {\n            nativeGainNode.gain.setValueAtTime(0, when);\n          }\n        } else {\n          stop.call(nativeAudioScheduledSourceNode, when);\n          isStopped = true;\n        }\n      };\n    })(nativeAudioScheduledSourceNode.stop);\n  };\n};","export const createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) => {\n  return (nativeContext, channelMergerNode) => {\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = 'explicit';\n    Object.defineProperty(channelMergerNode, 'channelCount', {\n      get: () => 1,\n      set: () => {\n        throw createInvalidStateError();\n      }\n    });\n    Object.defineProperty(channelMergerNode, 'channelCountMode', {\n      get: () => 'explicit',\n      set: () => {\n        throw createInvalidStateError();\n      }\n    }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n\n    const audioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n\n    const whenConnected = () => {\n      const length = channelMergerNode.numberOfInputs;\n\n      for (let i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n    monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise(resolve => {\n  const arrayBuffer = new ArrayBuffer(0);\n  const {\n    port1,\n    port2\n  } = new MessageChannel();\n\n  port1.onmessage = ({\n    data\n  }) => resolve(data !== null);\n\n  port2.postMessage(arrayBuffer, [arrayBuffer]);\n});","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    return (when = 0, offset = 0, duration) => {\n      const buffer = nativeAudioBufferSourceNode.buffer; // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n\n      const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset); // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n\n      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n        start.call(nativeAudioBufferSourceNode, when, 0, 0);\n      } else {\n        start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n      }\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","export const isAudioWorkletNode = audioNode => {\n  return 'port' in audioNode;\n};","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n  const eventListeners = getEventListenersOfAudioNode(audioNode);\n\n  if (!eventListeners.delete(eventListener)) {\n    throw new Error('Missing the expected event listener.');\n  }\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = audioNode => {\n  return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};","export const pickElementFromSet = (set, predicate) => {\n  const matchingElements = Array.from(set).filter(predicate);\n\n  if (matchingElements.length > 1) {\n    throw Error('More than one element was found.');\n  }\n\n  if (matchingElements.length === 0) {\n    throw Error('No element was found.');\n  }\n\n  const [matchingElement] = matchingElements;\n  set.delete(matchingElement);\n  return matchingElement;\n};","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive'; // Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\n\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n  if (!isAudioWorkletNode(audioNode) && activeInputs.every(connections => connections.size === 0)) {\n    setInternalStateToPassive(audioNode);\n  }\n};","export const testAudioNodeDisconnectMethodSupport = nativeAudioContext => {\n  return new Promise(resolve => {\n    const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n    const dummy = nativeAudioContext.createGain(); // Bug #95: Safari does not play one sample buffers.\n\n    const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n    const channelData = ones.getChannelData(0);\n    channelData[0] = 1;\n    channelData[1] = 1;\n    const source = nativeAudioContext.createBufferSource();\n    source.buffer = ones;\n    source.loop = true;\n    source.connect(analyzer).connect(nativeAudioContext.destination);\n    source.connect(dummy);\n    source.disconnect(dummy);\n\n    analyzer.onaudioprocess = event => {\n      const chnnlDt = event.inputBuffer.getChannelData(0);\n\n      if (Array.prototype.some.call(chnnlDt, sample => sample === 1)) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n\n      source.stop();\n      analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n      source.disconnect(analyzer);\n      analyzer.disconnect(nativeAudioContext.destination);\n    };\n\n    source.start();\n  });\n};","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n  const counts = new Map();\n\n  for (const cycle of cycles) {\n    for (const audioNode of cycle) {\n      const count = counts.get(audioNode);\n      counts.set(audioNode, count === undefined ? 1 : count + 1);\n    }\n  }\n\n  counts.forEach((count, audioNode) => visitor(audioNode, count));\n};","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = nativeAudioNode => {\n  const connections = new Map();\n\n  nativeAudioNode.connect = (connect => {\n    return (destination, output = 0, input = 0) => {\n      const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output); // Save the new connection only if the calls to connect above didn't throw an error.\n\n      const connectionsToDestination = connections.get(destination);\n\n      if (connectionsToDestination === undefined) {\n        connections.set(destination, [{\n          input,\n          output\n        }]);\n      } else {\n        if (connectionsToDestination.every(connection => connection.input !== input || connection.output !== output)) {\n          connectionsToDestination.push({\n            input,\n            output\n          });\n        }\n      }\n\n      return returnValue;\n    };\n  })(nativeAudioNode.connect.bind(nativeAudioNode));\n\n  nativeAudioNode.disconnect = (disconnect => {\n    return (destinationOrOutput, output, input) => {\n      disconnect.apply(nativeAudioNode);\n\n      if (destinationOrOutput === undefined) {\n        connections.clear();\n      } else if (typeof destinationOrOutput === 'number') {\n        for (const [destination, connectionsToDestination] of connections) {\n          const filteredConnections = connectionsToDestination.filter(connection => connection.output !== destinationOrOutput);\n\n          if (filteredConnections.length === 0) {\n            connections.delete(destination);\n          } else {\n            connections.set(destination, filteredConnections);\n          }\n        }\n      } else if (connections.has(destinationOrOutput)) {\n        if (output === undefined) {\n          connections.delete(destinationOrOutput);\n        } else {\n          const connectionsToDestination = connections.get(destinationOrOutput);\n\n          if (connectionsToDestination !== undefined) {\n            const filteredConnections = connectionsToDestination.filter(connection => connection.output !== output && (connection.input !== input || input === undefined));\n\n            if (filteredConnections.length === 0) {\n              connections.delete(destinationOrOutput);\n            } else {\n              connections.set(destinationOrOutput, filteredConnections);\n            }\n          }\n        }\n      }\n\n      for (const [destination, connectionsToDestination] of connections) {\n        connectionsToDestination.forEach(connection => {\n          if (isNativeAudioNode(destination)) {\n            nativeAudioNode.connect(destination, connection.output, connection.input);\n          } else {\n            nativeAudioNode.connect(destination, connection.output);\n          }\n        });\n      }\n    };\n  })(nativeAudioNode.disconnect);\n};","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { getValueForKey } from '../helpers/get-value-for-key';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { pickElementFromSet } from '../helpers/pick-element-from-set';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\n\nconst addActiveInputConnectionToAudioNode = (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n  insertElementInSet(activeInputs[input], [source, output, eventListener], activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n  insertElementInSet(activeInputs, [source, output, eventListener], activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n\nconst deleteActiveInputConnectionToAudioNode = (activeInputs, source, output, input) => {\n  return pickElementFromSet(activeInputs[input], activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n  return pickElementFromSet(activeInputs, activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n\nconst addPassiveInputConnectionToAudioNode = (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n  const passiveInputConnections = passiveInputs.get(source);\n\n  if (passiveInputConnections === undefined) {\n    passiveInputs.set(source, new Set([[output, input, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, input, eventListener], passiveInputConnection => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n  }\n};\n\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n  const passiveInputConnections = passiveInputs.get(source);\n\n  if (passiveInputConnections === undefined) {\n    passiveInputs.set(source, new Set([[output, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, eventListener], passiveInputConnection => passiveInputConnection[0] === output, ignoreDuplicates);\n  }\n};\n\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n  const passiveInputConnections = getValueForKey(passiveInputs, source);\n  const matchingConnection = pickElementFromSet(passiveInputConnections, passiveInputConnection => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n\n  return matchingConnection;\n};\n\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n  const passiveInputConnections = getValueForKey(passiveInputs, source);\n  const matchingConnection = pickElementFromSet(passiveInputConnections, passiveInputConnection => passiveInputConnection[0] === output);\n\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n\n  return matchingConnection;\n};\n\nconst addConnectionToAudioNodeOfAudioContext = (source, destination, output, input) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioNodeConnections(destination);\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n  const eventListeners = getEventListenersOfAudioNode(source);\n\n  const eventListener = isActive => {\n    const nativeDestinationAudioNode = getNativeAudioNode(destination);\n    const nativeSourceAudioNode = getNativeAudioNode(source);\n\n    if (isActive) {\n      const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n      addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n      }\n\n      if (isPassiveAudioNode(destination)) {\n        setInternalStateToActive(destination);\n      }\n    } else {\n      const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n      addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n      }\n\n      if (isActiveAudioNode(destination)) {\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n      }\n    }\n  };\n\n  if (insertElementInSet(outputs, [destination, output, input], outputConnection => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n    eventListeners.add(eventListener);\n\n    if (isActiveAudioNode(source)) {\n      addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n    } else {\n      addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nconst addConnectionToAudioNodeOfOfflineAudioContext = (source, destination, output, input) => {\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n\n  if (insertElementInSet(outputs, [destination, output, input], outputConnection => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n    const {\n      activeInputs\n    } = getAudioNodeConnections(destination);\n    addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);\n    return true;\n  }\n\n  return false;\n};\n\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioParamConnections(destination);\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n  const eventListeners = getEventListenersOfAudioNode(source);\n\n  const eventListener = isActive => {\n    const nativeAudioNode = getNativeAudioNode(source);\n    const nativeAudioParam = getNativeAudioParam(destination);\n\n    if (isActive) {\n      const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n      addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        nativeAudioNode.connect(nativeAudioParam, output);\n      }\n    } else {\n      const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n      addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        nativeAudioNode.disconnect(nativeAudioParam, output);\n      }\n    }\n  };\n\n  if (insertElementInSet(outputs, [destination, output], outputConnection => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n    eventListeners.add(eventListener);\n\n    if (isActiveAudioNode(source)) {\n      addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n    } else {\n      addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nconst addConnectionToAudioParamOfOfflineAudioContext = (source, destination, output) => {\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n\n  if (insertElementInSet(outputs, [destination, output], outputConnection => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n    const {\n      activeInputs\n    } = getAudioParamConnections(destination);\n    addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);\n    return true;\n  }\n\n  return false;\n};\n\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n  for (const activeInputConnection of activeInputConnections) {\n    if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n      activeInputConnections.delete(activeInputConnection);\n      return activeInputConnection;\n    }\n  }\n\n  return null;\n};\n\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioNodeConnections(destination);\n  const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n  if (activeInputConnection === null) {\n    const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n    return [passiveInputConnection[2], false];\n  }\n\n  return [activeInputConnection[2], true];\n};\n\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioParamConnections(destination);\n  const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n  if (activeInputConnection === null) {\n    const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n    return [passiveInputConnection[1], false];\n  }\n\n  return [activeInputConnection[2], true];\n};\n\nconst deleteInputsOfAudioNode = (source, destination, output, input) => {\n  const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n\n    if (isActive && !isPartOfACycle(source)) {\n      disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n    }\n  }\n\n  if (isActiveAudioNode(destination)) {\n    const {\n      activeInputs\n    } = getAudioNodeConnections(destination);\n    setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n  }\n};\n\nconst deleteInputsOfAudioParam = (source, destination, output) => {\n  const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n\n    if (isActive && !isPartOfACycle(source)) {\n      getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n    }\n  }\n};\n\nconst deleteAnyConnection = source => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  const destinations = [];\n\n  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode(source, ...outputConnection);\n    } else {\n      deleteInputsOfAudioParam(source, ...outputConnection);\n    }\n\n    destinations.push(outputConnection[0]);\n  }\n\n  audioNodeConnectionsOfSource.outputs.clear();\n  return destinations;\n};\n\nconst deleteConnectionAtOutput = (source, output) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  const destinations = [];\n\n  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n    if (outputConnection[1] === output) {\n      if (isAudioNodeOutputConnection(outputConnection)) {\n        deleteInputsOfAudioNode(source, ...outputConnection);\n      } else {\n        deleteInputsOfAudioParam(source, ...outputConnection);\n      }\n\n      destinations.push(outputConnection[0]);\n      audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    }\n  }\n\n  return destinations;\n};\n\nconst deleteConnectionToDestination = (source, destination, output, input) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  return Array.from(audioNodeConnectionsOfSource.outputs).filter(outputConnection => outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input)).map(outputConnection => {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode(source, ...outputConnection);\n    } else {\n      deleteInputsOfAudioParam(source, ...outputConnection);\n    }\n\n    audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    return outputConnection[0];\n  });\n};\n\nexport const createAudioNodeConstructor = (addAudioNodeConnections, auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n  return class AudioNode extends eventTargetConstructor {\n    constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n      super(nativeAudioNode);\n      this._context = context;\n      this._nativeAudioNode = nativeAudioNode;\n      const nativeContext = getNativeContext(context); // Bug #12: Safari does not support to disconnect a specific destination.\n\n      if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n        return testAudioNodeDisconnectMethodSupport(nativeContext);\n      })) {\n        wrapAudioNodeDisconnectMethod(nativeAudioNode);\n      }\n\n      AUDIO_NODE_STORE.set(this, nativeAudioNode);\n      EVENT_LISTENERS.set(this, new Set());\n\n      if (isActive) {\n        setInternalStateToActive(this);\n      }\n\n      addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n    }\n\n    get channelCount() {\n      return this._nativeAudioNode.channelCount;\n    }\n\n    set channelCount(value) {\n      this._nativeAudioNode.channelCount = value;\n    }\n\n    get channelCountMode() {\n      return this._nativeAudioNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      this._nativeAudioNode.channelCountMode = value;\n    }\n\n    get channelInterpretation() {\n      return this._nativeAudioNode.channelInterpretation;\n    }\n\n    set channelInterpretation(value) {\n      this._nativeAudioNode.channelInterpretation = value;\n    }\n\n    get context() {\n      return this._context;\n    }\n\n    get numberOfInputs() {\n      return this._nativeAudioNode.numberOfInputs;\n    }\n\n    get numberOfOutputs() {\n      return this._nativeAudioNode.numberOfOutputs;\n    }\n\n    connect(destination, output = 0, input = 0) {\n      // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n      if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n        throw createIndexSizeError();\n      }\n\n      const nativeContext = getNativeContext(this._context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n      if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n        throw createInvalidAccessError();\n      }\n\n      if (isAudioNode(destination)) {\n        const nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n        try {\n          const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n\n          if (isOffline || isPassiveAudioNode(this)) {\n            this._nativeAudioNode.disconnect(...connection);\n          } else if (isPassiveAudioNode(destination)) {\n            setInternalStateToActive(destination);\n          } // An AudioWorklet needs a connection because it otherwise may truncate the input array.\n          // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.\n\n\n          if (isAudioWorkletNode(destination)) {\n            const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeDestinationAudioNode);\n\n            if (auxiliaryGainNodes === undefined) {\n              const nativeGainNode = nativeContext.createGain();\n              nativeGainNode.connect(connection[0], 0, connection[2]);\n              auxiliaryGainNodeStore.set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));\n            } else if (auxiliaryGainNodes.get(input) === undefined) {\n              const nativeGainNode = nativeContext.createGain();\n              nativeGainNode.connect(connection[0], 0, connection[2]);\n              auxiliaryGainNodes.set(input, nativeGainNode);\n            }\n          }\n        } catch (err) {\n          // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.\n          if (err.code === 12) {\n            throw createInvalidAccessError();\n          }\n\n          throw err;\n        }\n\n        const isNewConnectionToAudioNode = isOffline ? addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input) : addConnectionToAudioNodeOfAudioContext(this, destination, output, input); // Bug #164: Only Firefox detects cycles so far.\n\n        if (isNewConnectionToAudioNode) {\n          const cycles = detectCycles([this], destination);\n          visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n        }\n\n        return destination;\n      }\n\n      const nativeAudioParam = getNativeAudioParam(destination);\n      /*\n       * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n       * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n       * Safari.\n       */\n\n      if (nativeAudioParam.name === 'playbackRate') {\n        throw createNotSupportedError();\n      }\n\n      try {\n        this._nativeAudioNode.connect(nativeAudioParam, output);\n\n        if (isOffline || isPassiveAudioNode(this)) {\n          this._nativeAudioNode.disconnect(nativeAudioParam, output);\n        }\n      } catch (err) {\n        // Bug #58: Only Firefox does throw an InvalidStateError yet.\n        if (err.code === 12) {\n          throw createInvalidAccessError();\n        }\n\n        throw err;\n      }\n\n      const isNewConnectionToAudioParam = isOffline ? addConnectionToAudioParamOfOfflineAudioContext(this, destination, output) : addConnectionToAudioParamOfAudioContext(this, destination, output); // Bug #164: Only Firefox detects cycles so far.\n\n      if (isNewConnectionToAudioParam) {\n        const cycles = detectCycles([this], destination);\n        visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n      }\n    }\n\n    disconnect(destinationOrOutput, output, input) {\n      let destinations;\n\n      if (destinationOrOutput === undefined) {\n        destinations = deleteAnyConnection(this);\n      } else if (typeof destinationOrOutput === 'number') {\n        if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n          throw createIndexSizeError();\n        }\n\n        destinations = deleteConnectionAtOutput(this, destinationOrOutput);\n      } else {\n        if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n          throw createIndexSizeError();\n        }\n\n        if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n          throw createIndexSizeError();\n        }\n\n        destinations = deleteConnectionToDestination(this, destinationOrOutput, output, input);\n\n        if (destinations.length === 0) {\n          throw createInvalidAccessError();\n        }\n      } // Bug #164: Only Firefox detects cycles so far.\n\n\n      for (const destination of destinations) {\n        const cycles = detectCycles([this], destination);\n        visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n      }\n    }\n\n  };\n};","export const cloneAudioWorkletNodeOptions = audioWorkletNodeOptions => {\n  return new Promise((resolve, reject) => {\n    const {\n      port1,\n      port2\n    } = new MessageChannel();\n\n    port1.onmessage = ({\n      data\n    }) => {\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n\n    port1.onmessageerror = ({\n      data\n    }) => {\n      port1.close();\n      port2.close();\n      reject(data);\n    }; // This will throw an error if the audioWorkletNodeOptions are not clonable.\n\n\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n  const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n  return new processorConstructor(clonedAudioWorkletNodeOptions);\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections) => {\n  return (nativeContext, baseLatency, processorConstructor, options) => {\n    if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n      throw createNotSupportedError();\n    }\n\n    if (options.outputChannelCount !== undefined) {\n      // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n      if (options.outputChannelCount.some(channelCount => channelCount < 1)) {\n        throw createNotSupportedError();\n      }\n\n      if (options.outputChannelCount.length !== options.numberOfOutputs) {\n        throw createIndexSizeError();\n      }\n    } // Bug #61: This is not part of the standard but required for the faker to work.\n\n\n    if (options.channelCountMode !== 'explicit') {\n      throw createNotSupportedError();\n    }\n\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length; // Bug #61: This is not part of the standard but required for the faker to work.\n\n    if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n      throw createNotSupportedError();\n    }\n\n    const messageChannel = new MessageChannel();\n    const gainNodes = [];\n    const inputChannelSplitterNodes = [];\n\n    for (let i = 0; i < options.numberOfInputs; i += 1) {\n      gainNodes.push(createNativeGainNode(nativeContext, {\n        channelCount: options.channelCount,\n        channelCountMode: options.channelCountMode,\n        channelInterpretation: options.channelInterpretation,\n        gain: 1\n      }));\n      inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n        channelCount: options.channelCount,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'discrete',\n        numberOfOutputs: options.channelCount\n      }));\n    }\n\n    const constantSourceNodes = [];\n\n    if (processorConstructor.parameterDescriptors !== undefined) {\n      for (const {\n        defaultValue,\n        maxValue,\n        minValue,\n        name\n      } of processorConstructor.parameterDescriptors) {\n        const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n          channelCount: 1,\n          channelCountMode: 'explicit',\n          channelInterpretation: 'discrete',\n          offset: options.parameterData[name] !== undefined ? options.parameterData[name] : defaultValue === undefined ? 0 : defaultValue\n        });\n        Object.defineProperties(constantSourceNode.offset, {\n          defaultValue: {\n            get: () => defaultValue === undefined ? 0 : defaultValue\n          },\n          maxValue: {\n            get: () => maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue\n          },\n          minValue: {\n            get: () => minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue\n          }\n        });\n        constantSourceNodes.push(constantSourceNode);\n      }\n    }\n\n    const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'speakers',\n      numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n    });\n    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n    Math.max(1, numberOfOutputChannels));\n    const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n      channelCount: Math.max(1, numberOfOutputChannels),\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      numberOfOutputs: Math.max(1, numberOfOutputChannels)\n    });\n    const outputChannelMergerNodes = [];\n\n    for (let i = 0; i < options.numberOfOutputs; i += 1) {\n      outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'speakers',\n        numberOfInputs: options.outputChannelCount[i]\n      }));\n    }\n\n    for (let i = 0; i < options.numberOfInputs; i += 1) {\n      gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n      for (let j = 0; j < options.channelCount; j += 1) {\n        inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n      }\n    }\n\n    const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.map(({\n      name\n    }, index) => {\n      const constantSourceNode = constantSourceNodes[index];\n      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n      constantSourceNode.start(0);\n      return [name, constantSourceNode.offset];\n    }));\n    inputChannelMergerNode.connect(scriptProcessorNode);\n    let channelInterpretation = options.channelInterpretation;\n    let onprocessorerror = null; // Bug #87: Expose at least one output to make this node connectable.\n\n    const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n    const nativeAudioWorkletNodeFaker = {\n      get bufferSize() {\n        return bufferSize;\n      },\n\n      get channelCount() {\n        return options.channelCount;\n      },\n\n      set channelCount(_) {\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        throw createInvalidStateError();\n      },\n\n      get channelCountMode() {\n        return options.channelCountMode;\n      },\n\n      set channelCountMode(_) {\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        throw createInvalidStateError();\n      },\n\n      get channelInterpretation() {\n        return channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        for (const gainNode of gainNodes) {\n          gainNode.channelInterpretation = value;\n        }\n\n        channelInterpretation = value;\n      },\n\n      get context() {\n        return scriptProcessorNode.context;\n      },\n\n      get inputs() {\n        return gainNodes;\n      },\n\n      get numberOfInputs() {\n        return options.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return options.numberOfOutputs;\n      },\n\n      get onprocessorerror() {\n        return onprocessorerror;\n      },\n\n      set onprocessorerror(value) {\n        if (typeof onprocessorerror === 'function') {\n          nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n        }\n\n        onprocessorerror = typeof value === 'function' ? value : null;\n\n        if (typeof onprocessorerror === 'function') {\n          nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n        }\n      },\n\n      get parameters() {\n        return parameterMap;\n      },\n\n      get port() {\n        return messageChannel.port2;\n      },\n\n      addEventListener(...args) {\n        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n      disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n\n      dispatchEvent(...args) {\n        return scriptProcessorNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n    const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n\n    messageChannel.port1.addEventListener = (addEventListener => {\n      return (...args) => {\n        if (args[0] === 'message') {\n          const unpatchedEventListener = typeof args[1] === 'function' ? args[1] : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;\n\n          if (unpatchedEventListener !== null) {\n            const patchedEventListener = patchedEventListeners.get(args[1]);\n\n            if (patchedEventListener !== undefined) {\n              args[1] = patchedEventListener;\n            } else {\n              args[1] = event => {\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n              };\n\n              patchedEventListeners.set(unpatchedEventListener, args[1]);\n            }\n          }\n        }\n\n        return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n      };\n    })(messageChannel.port1.addEventListener);\n\n    messageChannel.port1.removeEventListener = (removeEventListener => {\n      return (...args) => {\n        if (args[0] === 'message') {\n          const patchedEventListener = patchedEventListeners.get(args[1]);\n\n          if (patchedEventListener !== undefined) {\n            patchedEventListeners.delete(args[1]);\n            args[1] = patchedEventListener;\n          }\n        }\n\n        return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n      };\n    })(messageChannel.port1.removeEventListener);\n\n    let onmessage = null;\n    Object.defineProperty(messageChannel.port1, 'onmessage', {\n      get: () => onmessage,\n      set: value => {\n        if (typeof onmessage === 'function') {\n          messageChannel.port1.removeEventListener('message', onmessage);\n        }\n\n        onmessage = typeof value === 'function' ? value : null;\n\n        if (typeof onmessage === 'function') {\n          messageChannel.port1.addEventListener('message', onmessage);\n          messageChannel.port1.start();\n        }\n      }\n    });\n    processorConstructor.prototype.port = messageChannel.port1;\n    let audioWorkletProcessor = null;\n    const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n    audioWorkletProcessorPromise.then(dWrkltPrcssr => audioWorkletProcessor = dWrkltPrcssr);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n    const parameters = processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.reduce((prmtrs, {\n      name\n    }) => ({ ...prmtrs,\n      [name]: new Float32Array(128)\n    }), {});\n    let isActive = true;\n\n    const disconnectOutputsGraph = () => {\n      if (options.numberOfOutputs > 0) {\n        scriptProcessorNode.disconnect(outputChannelSplitterNode);\n      }\n\n      for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n        const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n        for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n          outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n        }\n\n        outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n      }\n    };\n\n    scriptProcessorNode.onaudioprocess = ({\n      inputBuffer,\n      outputBuffer\n    }) => {\n      if (audioWorkletProcessor !== null) {\n        for (let i = 0; i < bufferSize; i += 128) {\n          for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.channelCount; k += 1) {\n              copyFromChannel(inputBuffer, inputs[j], k, k, i);\n            }\n          }\n\n          if (processorConstructor.parameterDescriptors !== undefined) {\n            processorConstructor.parameterDescriptors.forEach(({\n              name\n            }, index) => {\n              copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n          }\n\n          for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n              // The byteLength will be 0 when the ArrayBuffer was transferred.\n              if (outputs[j][k].byteLength === 0) {\n                outputs[j][k] = new Float32Array(128);\n              }\n            }\n          }\n\n          try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n              const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeAudioWorkletNodeFaker);\n\n              if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {\n                return [];\n              }\n\n              return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            isActive = activeSourceFlag;\n\n            for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n              for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n              }\n\n              outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n            }\n          } catch (error) {\n            isActive = false;\n            nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n              error\n            }));\n          }\n\n          if (!isActive) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n              gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n\n              for (let k = 0; k < options.channelCount; k += 1) {\n                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n              }\n            }\n\n            if (processorConstructor.parameterDescriptors !== undefined) {\n              const length = processorConstructor.parameterDescriptors.length;\n\n              for (let j = 0; j < length; j += 1) {\n                const constantSourceNode = constantSourceNodes[j];\n                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                constantSourceNode.stop();\n              }\n            }\n\n            inputChannelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n            if (isConnected) {\n              disconnectOutputsGraph();\n            } else {\n              disconnectFakeGraph();\n            }\n\n            break;\n          }\n        }\n      }\n    };\n\n    let isConnected = false; // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n\n    const nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n\n    const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode)\n    /*\n     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is used here\n     * to make sure to connect the right destination.\n     */\n    .connect(nativeGainNode.context.destination);\n\n    const disconnectFakeGraph = () => {\n      scriptProcessorNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n\n    const whenConnected = () => {\n      if (isActive) {\n        disconnectFakeGraph();\n\n        if (options.numberOfOutputs > 0) {\n          scriptProcessorNode.connect(outputChannelSplitterNode);\n        }\n\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n          const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n          for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n          }\n\n          outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n        }\n      }\n\n      isConnected = true;\n    };\n\n    const whenDisconnected = () => {\n      if (isActive) {\n        connectFakeGraph();\n        disconnectOutputsGraph();\n      }\n\n      isConnected = false;\n    };\n\n    connectFakeGraph();\n    return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n  };\n};","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n  let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n  if (nodeToProcessorMap === undefined) {\n    nodeToProcessorMap = new WeakMap();\n    NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n  }\n\n  const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n  return audioWorkletProcessorPromise;\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioBufferSourceNodeStartMethodDurationParameter } from '../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n  return (nativeContext, options = {}) => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate'); // Bug #71: Edge does not allow to set the buffer to null.\n\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer'); // Bug #149: Safari does not yet support the detune AudioParam.\n\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart'); // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n      wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n    } // Bug #92: Chrome & Edge do not respect the duration parameter yet.\n\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {\n      wrapAudioBufferSourceNodeStartMethodDurationParameter(nativeAudioBufferSourceNode, nativeContext);\n    } // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n      wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n    } // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n      wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n    } // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n    } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n    return nativeAudioBufferSourceNode;\n  };\n};","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    let isScheduled = false;\n    return (when = 0, offset = 0, duration) => {\n      if (isScheduled) {\n        throw createInvalidStateError();\n      }\n\n      start.call(nativeAudioBufferSourceNode, when, offset, duration);\n      isScheduled = true;\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","export const wrapAudioBufferSourceNodeStartMethodDurationParameter = (nativeAudioScheduledSourceNode, nativeContext) => {\n  let endTime = Number.POSITIVE_INFINITY;\n  let stopTime = Number.POSITIVE_INFINITY;\n\n  nativeAudioScheduledSourceNode.start = ((start, stop) => {\n    return (when = 0, offset = 0, duration = Number.POSITIVE_INFINITY) => {\n      start.call(nativeAudioScheduledSourceNode, when, offset);\n\n      if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {\n        const actualStartTime = Math.max(when, nativeContext.currentTime); // @todo The playbackRate could of course also have been automated and is not always fixed.\n\n        const durationInBufferTime = duration / nativeAudioScheduledSourceNode.playbackRate.value;\n        endTime = actualStartTime + durationInBufferTime;\n        stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n      }\n    };\n  })(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);\n\n  nativeAudioScheduledSourceNode.stop = (stop => {\n    return (when = 0) => {\n      stopTime = Math.max(when, nativeContext.currentTime);\n      stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n    };\n  })(nativeAudioScheduledSourceNode.stop);\n};","const handler = {\n  construct() {\n    return handler;\n  }\n\n};\nexport const isConstructible = constructible => {\n  try {\n    const proxy = new Proxy(constructible, handler);\n    new proxy(); // tslint:disable-line:no-unused-expression\n  } catch {\n    return false;\n  }\n\n  return true;\n};","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\n\nexport const splitImportStatements = (source, url) => {\n  const importStatements = [];\n  let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n  let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n\n  while (result !== null) {\n    const unresolvedUrl = result[1].slice(1, -1);\n    const importStatementWithResolvedUrl = result[0].replace(/([\\s]+)?;?$/, '').replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n    importStatements.push(importStatementWithResolvedUrl);\n    sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n    result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n  }\n\n  return [importStatements.join(';'), sourceWithoutImportStatements];\n};","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\n\nconst verifyParameterDescriptors = parameterDescriptors => {\n  if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n    throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n  }\n};\n\nconst verifyProcessorCtor = processorCtor => {\n  if (!isConstructible(processorCtor)) {\n    throw new TypeError('The given value for processorCtor should be a constructor.');\n  }\n\n  if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n    throw new TypeError('The given value for processorCtor should have a prototype.');\n  }\n};\n\nexport const createAddAudioWorkletModule = (createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, getNativeContext, ongoingRequests, resolvedRequests, window) => {\n  return (context, moduleURL, options = {\n    credentials: 'omit'\n  }) => {\n    const nativeContext = getNativeContext(context);\n    const absoluteUrl = new URL(moduleURL, window.location.href).toString(); // Bug #59: Only Chrome & Opera do implement the audioWorklet property.\n\n    if (nativeContext.audioWorklet !== undefined) {\n      return fetchSource(moduleURL).then(source => {\n        const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n        /*\n         * Bug #170: Chrome and Opera do call process() with an array with empty channelData for each input if no input is\n         * connected.\n         *\n         * This is the unminified version of the code used below:\n         *\n         * ```js\n         * `${ importStatements };\n         * ((registerProcessor) => {${ sourceWithoutImportStatements }\n         * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n         *\n         *     process (inputs, outputs, parameters) {\n         *         return super.process(\n         *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n         *             outputs,\n         *             parameters\n         *         );\n         *     }\n         *\n         * }))`\n         * ```\n         */\n\n        const wrappedSource = `${importStatements};(registerProcessor=>{${sourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{process(i,o,p){return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`; // tslint:disable-line:max-line-length\n\n        const blob = new Blob([wrappedSource], {\n          type: 'application/javascript; charset=utf-8'\n        });\n        const url = URL.createObjectURL(blob);\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        const nativeContextOrBackupNativeContext = backupNativeContext !== null ? backupNativeContext : nativeContext;\n        return nativeContextOrBackupNativeContext.audioWorklet.addModule(url, options).then(() => URL.revokeObjectURL(url)) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n        .catch(err => {\n          URL.revokeObjectURL(url);\n\n          if (err.code === undefined || err.name === 'SyntaxError') {\n            err.code = 12;\n          }\n\n          throw err;\n        });\n      });\n    }\n\n    const resolvedRequestsOfContext = resolvedRequests.get(context);\n\n    if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n      return Promise.resolve();\n    }\n\n    const ongoingRequestsOfContext = ongoingRequests.get(context);\n\n    if (ongoingRequestsOfContext !== undefined) {\n      const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n\n      if (promiseOfOngoingRequest !== undefined) {\n        return promiseOfOngoingRequest;\n      }\n    }\n\n    const promise = fetchSource(moduleURL).then(source => {\n      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n      /*\n       * This is the unminified version of the code used below:\n       *\n       * ```js\n       * ${ importStatements };\n       * ((a, b) => {\n       *     (a[b] = a[b] || [ ]).push(\n       *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n       *             ${ sourceWithoutImportStatements }\n       *         }\n       *     );\n       * })(window, '_AWGS');\n       * ```\n       */\n      // tslint:disable-next-line:max-line-length\n\n      const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`; // @todo Evaluating the given source code is a possible security problem.\n\n      return evaluateSource(wrappedSource);\n    }).then(() => {\n      const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n\n      if (evaluateAudioWorkletGlobalScope === undefined) {\n        throw new SyntaxError();\n      }\n\n      exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {}, undefined, (name, processorCtor) => {\n        if (name.trim() === '') {\n          throw createNotSupportedError();\n        }\n\n        const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n\n        if (nodeNameToProcessorConstructorMap !== undefined) {\n          if (nodeNameToProcessorConstructorMap.has(name)) {\n            throw createNotSupportedError();\n          }\n\n          verifyProcessorCtor(processorCtor);\n          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n          nodeNameToProcessorConstructorMap.set(name, processorCtor);\n        } else {\n          verifyProcessorCtor(processorCtor);\n          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n        }\n      }, nativeContext.sampleRate, undefined, undefined));\n    }).catch(err => {\n      if (err.code === undefined || err.name === 'SyntaxError') {\n        err.code = 12;\n      }\n\n      throw err;\n    });\n\n    if (ongoingRequestsOfContext === undefined) {\n      ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n    } else {\n      ongoingRequestsOfContext.set(moduleURL, promise);\n    }\n\n    promise.then(() => {\n      const rslvdRqstsFCntxt = resolvedRequests.get(context);\n\n      if (rslvdRqstsFCntxt === undefined) {\n        resolvedRequests.set(context, new Set([moduleURL]));\n      } else {\n        rslvdRqstsFCntxt.add(moduleURL);\n      }\n    }).catch(() => {}) // tslint:disable-line:no-empty\n    // @todo Use finally when it becomes available in all supported browsers.\n    .then(() => {\n      const ngngRqstsFCntxt = ongoingRequests.get(context);\n\n      if (ngngRqstsFCntxt !== undefined) {\n        ngngRqstsFCntxt.delete(moduleURL);\n      }\n    });\n    return promise;\n  };\n};","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = nativeAnalyserNode => {\n  return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError, createNativeAudioNode) => {\n  return (nativeContext, options) => {\n    const nativeAnalyserNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createAnalyser()); // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n\n    assignNativeAudioNodeOptions(nativeAnalyserNode, options); // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n\n    if (!(options.maxDecibels > options.minDecibels)) {\n      throw createIndexSizeError();\n    }\n\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant'); // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n\n    if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n      wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n    }\n\n    return nativeAnalyserNode;\n  };\n};","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = nativeAnalyserNode => {\n  nativeAnalyserNode.getFloatTimeDomainData = array => {\n    const byteTimeDomainData = new Uint8Array(array.length);\n    nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n    const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n\n    for (let i = 0; i < length; i += 1) {\n      array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n    }\n\n    return array;\n  };\n};","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = nativeIIRFilterNode => {\n  nativeIIRFilterNode.getFrequencyResponse = (getFrequencyResponse => {\n    return (frequencyHz, magResponse, phaseResponse) => {\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n\n      return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n    };\n  })(nativeIIRFilterNode.getFrequencyResponse);\n};","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class IIRFilterNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n      const iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;\n      super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer); // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n      // @todo Write a test which allows other browsers to remain unpatched.\n\n      wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n      this._nativeIIRFilterNode = nativeIIRFilterNode;\n    }\n\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n    }\n\n  };\n};","export const isDelayNode = audioNode => {\n  return 'delayTime' in audioNode;\n};","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n  return function detectCycles(chain, nextLink) {\n    const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n\n    if (isDelayNode(audioNode)) {\n      return [];\n    }\n\n    if (chain[0] === audioNode) {\n      return [chain];\n    }\n\n    if (chain.includes(audioNode)) {\n      return [];\n    }\n\n    const {\n      outputs\n    } = getAudioNodeConnections(audioNode);\n    return Array.from(outputs).map(outputConnection => detectCycles([...chain, audioNode], outputConnection[0])).reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n  };\n};","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n  return (anyContext, audioData) => {\n    const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext); // Bug #43: Only Chrome and Opera do throw a DataCloneError.\n\n    if (detachedArrayBuffers.has(audioData)) {\n      const err = createDataCloneError();\n      return Promise.reject(err);\n    } // The audioData parameter maybe of a type which can't be added to a WeakSet.\n\n\n    try {\n      detachedArrayBuffers.add(audioData);\n    } catch {} // Ignore errors.\n    // Bug #21: Safari does not support promises yet.\n\n\n    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n      // Bug #101: Edge does not decode something on a closed OfflineAudioContext.\n      const nativeContextOrBackupNativeContext = nativeContext.state === 'closed' && nativeOfflineAudioContextConstructor !== null && isNativeOfflineAudioContext(nativeContext) ? new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate) : nativeContext;\n      const promise = nativeContextOrBackupNativeContext.decodeAudioData(audioData).catch(err => {\n        // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.\n        if (err instanceof DOMException && err.name === 'NotSupportedError') {\n          throw new TypeError();\n        }\n\n        throw err;\n      });\n      return promise.then(audioBuffer => {\n        // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n        if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n          wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n      });\n    } // Bug #21: Safari does not return a Promise yet.\n\n\n    return new Promise((resolve, reject) => {\n      const complete = () => {\n        // Bug #133: Safari does neuter the ArrayBuffer.\n        try {\n          detachArrayBuffer(audioData);\n        } catch {\n          /* Ignore errors. */\n        }\n      };\n\n      const fail = err => {\n        reject(err);\n        complete();\n      }; // Bug #26: Safari throws a synchronous error.\n\n\n      try {\n        // Bug #1: Safari requires a successCallback.\n        nativeContext.decodeAudioData(audioData, audioBuffer => {\n          // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n          // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n          if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n          }\n\n          audioBufferStore.add(audioBuffer);\n          complete();\n          resolve(audioBuffer);\n        }, err => {\n          // Bug #4: Safari returns null instead of an error.\n          if (err === null) {\n            fail(createEncodingError());\n          } else {\n            fail(err);\n          }\n        });\n      } catch (err) {\n        fail(err);\n      }\n    });\n  };\n};","export const detachArrayBuffer = arrayBuffer => {\n  const {\n    port1\n  } = new MessageChannel();\n  port1.postMessage(arrayBuffer, [arrayBuffer]);\n};","export const testClonabilityOfAudioWorkletNodeOptions = audioWorkletNodeOptions => {\n  const {\n    port1\n  } = new MessageChannel();\n\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n  }\n};","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n  return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n    if (nativeAudioWorkletNodeConstructor !== null) {\n      try {\n        const nativeAudioWorkletNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n          return new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);\n        });\n        const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n\n        let onprocessorerror = null;\n        Object.defineProperties(nativeAudioWorkletNode, {\n          /*\n           * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n           * browsers have no native implementation to achieve a consistent behavior.\n           */\n          channelCount: {\n            get: () => options.channelCount,\n            set: () => {\n              throw createInvalidStateError();\n            }\n          },\n          channelCountMode: {\n            get: () => 'explicit',\n            set: () => {\n              throw createInvalidStateError();\n            }\n          },\n          // Bug #156: Chrome & Opera do not yet fire an ErrorEvent.\n          onprocessorerror: {\n            get: () => onprocessorerror,\n            set: value => {\n              if (typeof onprocessorerror === 'function') {\n                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n              }\n\n              onprocessorerror = typeof value === 'function' ? value : null;\n\n              if (typeof onprocessorerror === 'function') {\n                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n              }\n            }\n          }\n        });\n\n        nativeAudioWorkletNode.addEventListener = (addEventListener => {\n          return (...args) => {\n            if (args[0] === 'processorerror') {\n              const unpatchedEventListener = typeof args[1] === 'function' ? args[1] : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;\n\n              if (unpatchedEventListener !== null) {\n                const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                if (patchedEventListener !== undefined) {\n                  args[1] = patchedEventListener;\n                } else {\n                  args[1] = event => {\n                    unpatchedEventListener(new ErrorEvent(args[0], { ...event,\n                      error: new Error()\n                    }));\n                  };\n\n                  patchedEventListeners.set(unpatchedEventListener, args[1]);\n                }\n              }\n            }\n\n            return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n          };\n        })(nativeAudioWorkletNode.addEventListener);\n\n        nativeAudioWorkletNode.removeEventListener = (removeEventListener => {\n          return (...args) => {\n            if (args[0] === 'processorerror') {\n              const patchedEventListener = patchedEventListeners.get(args[1]);\n\n              if (patchedEventListener !== undefined) {\n                patchedEventListeners.delete(args[1]);\n                args[1] = patchedEventListener;\n              }\n            }\n\n            return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n          };\n        })(nativeAudioWorkletNode.removeEventListener);\n        /*\n         * Bug #86: Chrome & Opera do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but has\n         * an output.\n         */\n\n\n        if (options.numberOfOutputs !== 0) {\n          const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n          });\n          nativeAudioWorkletNode.connect(nativeGainNode)\n          /*\n           * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n           * used here to make sure to connect the right destination.\n           */\n          .connect(nativeGainNode.context.destination);\n\n          const whenConnected = () => nativeGainNode.disconnect();\n          /*\n           * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n           * used here to make sure to connect the right destination.\n           */\n\n\n          const whenDisconnected = () => nativeGainNode.connect(nativeGainNode.context.destination); // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n\n\n          return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n        }\n\n        return nativeAudioWorkletNode;\n      } catch (err) {\n        // Bug #60: Chrome & Opera throw an InvalidStateError instead of a NotSupportedError.\n        if (err.code === 11) {\n          throw createNotSupportedError();\n        }\n\n        throw err;\n      }\n    } // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n\n\n    if (processorConstructor === undefined) {\n      throw createNotSupportedError();\n    }\n\n    testClonabilityOfAudioWorkletNodeOptions(options);\n    return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n  };\n};","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\n\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n  // Ceil the length to the next full render quantum.\n  // Bug #17: Safari does not yet expose the length.\n  const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n  const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n  const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n  const processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n\n  if (processorConstructor === undefined) {\n    throw new Error('Missing the processor constructor.');\n  }\n\n  const audioNodeConnections = getAudioNodeConnections(proxy);\n  const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n  const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n  const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n  const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs,\n    [name]: new Float32Array(128)\n  }), {});\n\n  for (let i = 0; i < length; i += 128) {\n    if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n      for (let j = 0; j < options.numberOfInputs; j += 1) {\n        for (let k = 0; k < options.channelCount; k += 1) {\n          copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n        }\n      }\n    }\n\n    if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n      processorConstructor.parameterDescriptors.forEach(({\n        name\n      }, index) => {\n        copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n      });\n    }\n\n    for (let j = 0; j < options.numberOfInputs; j += 1) {\n      for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (outputs[j][k].byteLength === 0) {\n          outputs[j][k] = new Float32Array(128);\n        }\n      }\n    }\n\n    try {\n      const potentiallyEmptyInputs = inputs.map((input, index) => {\n        if (audioNodeConnections.activeInputs[index].size === 0) {\n          return [];\n        }\n\n        return input;\n      });\n      const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n\n      if (processedBuffer !== null) {\n        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n          for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n            copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n          }\n\n          outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n        }\n      }\n\n      if (!activeSourceFlag) {\n        break;\n      }\n    } catch (error) {\n      proxy.dispatchEvent(new ErrorEvent('processorerror', {\n        error\n      }));\n      break;\n    }\n  }\n\n  return processedBuffer;\n};\n\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return (name, options, processorConstructor) => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let processedBufferPromise = null;\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n      let nativeOutputNodes = null;\n      const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext); // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n\n      if (nativeAudioWorkletNodeConstructor === null) {\n        const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n          channelCount: Math.max(1, numberOfOutputChannels),\n          channelCountMode: 'explicit',\n          channelInterpretation: 'discrete',\n          numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n\n        for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n          outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: options.outputChannelCount[i]\n          }));\n        }\n\n        const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n          channelCount: options.channelCount,\n          channelCountMode: options.channelCountMode,\n          channelInterpretation: options.channelInterpretation,\n          gain: 1\n        });\n        outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n        outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n        nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n      } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n        nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n\n      if (nativeOutputNodes !== null) {\n        if (processedBufferPromise === null) {\n          if (processorConstructor === undefined) {\n            throw new Error('Missing the processor constructor.');\n          }\n\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          } // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n\n\n          const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n          const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n          const numberOfChannels = numberOfInputChannels + numberOfParameters;\n\n          const renderBuffer = async () => {\n            const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, // Ceil the length to the next full render quantum.\n            // Bug #17: Safari does not yet expose the length.\n            Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n            const gainNodes = [];\n            const inputChannelSplitterNodes = [];\n\n            for (let i = 0; i < options.numberOfInputs; i += 1) {\n              gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n              }));\n              inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n              }));\n            }\n\n            const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async audioParam => {\n              const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                offset: audioParam.value\n              });\n              await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n              return constantSourceNode;\n            }));\n            const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n              channelCount: 1,\n              channelCountMode: 'explicit',\n              channelInterpretation: 'speakers',\n              numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n            });\n\n            for (let i = 0; i < options.numberOfInputs; i += 1) {\n              gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n              for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n              }\n            }\n\n            for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n              constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n              constantSourceNode.start(0);\n            }\n\n            inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n            await Promise.all(gainNodes.map(gainNode => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n            return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n          };\n\n          processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime);\n        }\n\n        const processedBuffer = await processedBufferPromise;\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n        const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n\n        if (processedBuffer !== null) {\n          audioBufferSourceNode.buffer = processedBuffer;\n          audioBufferSourceNode.start(0);\n        }\n\n        audioBufferSourceNode.connect(outputChannelSplitterNode);\n\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n          const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n          for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n          }\n\n          outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n        }\n\n        return outputGainNode;\n      }\n\n      if (!nativeAudioWorkletNodeIsOwnedByContext) {\n        for (const [nm, audioParam] of proxy.parameters.entries()) {\n          await renderAutomation(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n          nativeAudioWorkletNode.parameters.get(nm), trace);\n        }\n      } else {\n        for (const [nm, audioParam] of proxy.parameters.entries()) {\n          await connectAudioParam(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n          nativeAudioWorkletNode.parameters.get(nm), trace);\n        }\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n      return nativeAudioWorkletNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n        const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n  const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n  const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n  return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = channelSplitterNode => {\n  const channelCount = channelSplitterNode.numberOfOutputs; // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n\n  Object.defineProperty(channelSplitterNode, 'channelCount', {\n    get: () => channelCount,\n    set: value => {\n      if (value !== channelCount) {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  /*\n   * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n   * explicit.\n   */\n\n  Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n    get: () => 'explicit',\n    set: value => {\n      if (value !== 'explicit') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  /*\n   * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n   * discrete.\n   */\n\n  Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n    get: () => 'discrete',\n    set: value => {\n      if (value !== 'discrete') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeChannelSplitterNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createChannelSplitter(options.numberOfOutputs);\n    }); // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Edge & Safari do not have the correct channelCountMode.\n    // Bug #31: Edge & Safari do not have the correct channelInterpretation.\n\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options); // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.\n\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n  };\n};","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nexport var __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport function __exportStar(m, exports) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n;\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result.default = mod;\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}\nexport function __classPrivateFieldGet(receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n}","import { __read, __spread } from \"tslib\";\n/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\n\nexport function assert(statement, error) {\n  if (!statement) {\n    throw new Error(error);\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\n\nexport function assertRange(value, gte, lte) {\n  if (lte === void 0) {\n    lte = Infinity;\n  }\n\n  if (!(gte <= value && value <= lte)) {\n    throw new RangeError(\"Value must be within [\" + gte + \", \" + lte + \"], got: \" + value);\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\n\nexport function assertContextRunning(context) {\n  // add a warning if the context is not started\n  if (!context.isOffline && context.state !== \"running\") {\n    warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n  }\n}\n/**\n * The default logger is the console\n */\n\nvar defaultLogger = console;\n/**\n * Set the logging interface\n */\n\nexport function setLogger(logger) {\n  defaultLogger = logger;\n}\n/**\n * Log anything\n */\n\nexport function log() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  defaultLogger.log.apply(defaultLogger, __spread(args));\n}\n/**\n * Warn anything\n */\n\nexport function warn() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  defaultLogger.warn.apply(defaultLogger, __spread(args));\n}","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n  return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\n\nexport function isDefined(arg) {\n  return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\n\nexport function isFunction(arg) {\n  return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\n\nexport function isNumber(arg) {\n  return typeof arg === \"number\";\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\n\nexport function isObject(arg) {\n  return Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object;\n}\n/**\n * Test if the argument is a boolean.\n */\n\nexport function isBoolean(arg) {\n  return typeof arg === \"boolean\";\n}\n/**\n * Test if the argument is an Array\n */\n\nexport function isArray(arg) {\n  return Array.isArray(arg);\n}\n/**\n * Test if the argument is a string.\n */\n\nexport function isString(arg) {\n  return typeof arg === \"string\";\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\n\nexport function isNote(arg) {\n  return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\n\nexport function createAudioContext() {\n  return new stdAudioContext();\n}\n/**\n * Create a new OfflineAudioContext\n */\n\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n  return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\n\nexport var theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\n\nexport var hasAudioContext = theWindow && (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n  assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\"); // @ts-ignore\n\n  return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\n\nexport { isSupported as supported } from \"standardized-audio-context\";","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nvar Ticker =\n/** @class */\nfunction () {\n  function Ticker(callback, type, updateInterval) {\n    this._callback = callback;\n    this._type = type;\n    this._updateInterval = updateInterval; // create the clock source for the first time\n\n    this._createClock();\n  }\n  /**\n   * Generate a web worker\n   */\n\n\n  Ticker.prototype._createWorker = function () {\n    var blob = new Blob([\n    /* javascript */\n    \"\\n\\t\\t\\t// the initial timeout time\\n\\t\\t\\tlet timeoutTime =  \" + (this._updateInterval * 1000).toFixed(1) + \";\\n\\t\\t\\t// onmessage callback\\n\\t\\t\\tself.onmessage = function(msg){\\n\\t\\t\\t\\ttimeoutTime = parseInt(msg.data);\\n\\t\\t\\t};\\n\\t\\t\\t// the tick function which posts a message\\n\\t\\t\\t// and schedules a new tick\\n\\t\\t\\tfunction tick(){\\n\\t\\t\\t\\tsetTimeout(tick, timeoutTime);\\n\\t\\t\\t\\tself.postMessage('tick');\\n\\t\\t\\t}\\n\\t\\t\\t// call tick initially\\n\\t\\t\\ttick();\\n\\t\\t\\t\"], {\n      type: \"text/javascript\"\n    });\n    var blobUrl = URL.createObjectURL(blob);\n    var worker = new Worker(blobUrl);\n    worker.onmessage = this._callback.bind(this);\n    this._worker = worker;\n  };\n  /**\n   * Create a timeout loop\n   */\n\n\n  Ticker.prototype._createTimeout = function () {\n    var _this = this;\n\n    this._timeout = setTimeout(function () {\n      _this._createTimeout();\n\n      _this._callback();\n    }, this._updateInterval * 1000);\n  };\n  /**\n   * Create the clock source.\n   */\n\n\n  Ticker.prototype._createClock = function () {\n    if (this._type === \"worker\") {\n      try {\n        this._createWorker();\n      } catch (e) {\n        // workers not supported, fallback to timeout\n        this._type = \"timeout\";\n\n        this._createClock();\n      }\n    } else if (this._type === \"timeout\") {\n      this._createTimeout();\n    }\n  };\n  /**\n   * Clean up the current clock source\n   */\n\n\n  Ticker.prototype._disposeClock = function () {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = 0;\n    }\n\n    if (this._worker) {\n      this._worker.terminate();\n\n      this._worker.onmessage = null;\n    }\n  };\n\n  Object.defineProperty(Ticker.prototype, \"updateInterval\", {\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get: function () {\n      return this._updateInterval;\n    },\n    set: function (interval) {\n      this._updateInterval = Math.max(interval, 128 / 44100);\n\n      if (this._type === \"worker\") {\n        this._worker.postMessage(Math.max(interval * 1000, 1));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Ticker.prototype, \"type\", {\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._disposeClock();\n\n      this._type = type;\n\n      this._createClock();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  Ticker.prototype.dispose = function () {\n    this._disposeClock();\n  };\n\n  return Ticker;\n}();\n\nexport { Ticker };","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\n\nexport function isAudioParam(arg) {\n  return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\n\nexport function isAudioNode(arg) {\n  return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\n\nexport function isOfflineAudioContext(arg) {\n  return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\n\nexport function isAudioContext(arg) {\n  return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\n\nexport function isAudioBuffer(arg) {\n  return arg instanceof AudioBuffer;\n}","import { __read, __spread } from \"tslib\";\nimport { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\n\nfunction noCopy(key, arg) {\n  return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\nexport function deepMerge(target) {\n  var _a, _b;\n\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var key in source) {\n      if (noCopy(key, source[key])) {\n        target[key] = source[key];\n      } else if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, (_a = {}, _a[key] = {}, _a));\n        }\n\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n      }\n    }\n  } // @ts-ignore\n\n\n  return deepMerge.apply(void 0, __spread([target], sources));\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\n\nexport function deepEquals(arrayA, arrayB) {\n  return arrayA.length === arrayB.length && arrayA.every(function (element, index) {\n    return arrayB[index] === element;\n  });\n}\n/**\n * Convert an args array into an object.\n */\n\nexport function optionsFromArguments(defaults, argsArray, keys, objKey) {\n  var _a;\n\n  if (keys === void 0) {\n    keys = [];\n  }\n\n  var opts = {};\n  var args = Array.from(argsArray); // if the first argument is an object and has an object key\n\n  if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n    // if it's not part of the defaults\n    var partOfDefaults = Object.keys(args[0]).some(function (key) {\n      return Reflect.has(defaults, key);\n    });\n\n    if (!partOfDefaults) {\n      // merge that key\n      deepMerge(opts, (_a = {}, _a[objKey] = args[0], _a)); // remove the obj key from the keys\n\n      keys.splice(keys.indexOf(objKey), 1); // shift the first argument off\n\n      args.shift();\n    }\n  }\n\n  if (args.length === 1 && isObject(args[0])) {\n    deepMerge(opts, args[0]);\n  } else {\n    for (var i = 0; i < keys.length; i++) {\n      if (isDefined(args[i])) {\n        opts[keys[i]] = args[i];\n      }\n    }\n  }\n\n  return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\n\nexport function getDefaultsFromInstance(instance) {\n  return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\n\nexport function defaultArg(given, fallback) {\n  if (isUndef(given)) {\n    return fallback;\n  } else {\n    return given;\n  }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\n\nexport function omitFromObject(obj, omit) {\n  omit.forEach(function (prop) {\n    if (Reflect.has(obj, prop)) {\n      delete obj[prop];\n    }\n  });\n  return obj;\n}","import { __read, __spread } from \"tslib\";\n/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\n\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @constructor\n */\n\nvar Tone =\n/** @class */\nfunction () {\n  function Tone() {\n    //-------------------------------------\n    // \tDEBUGGING\n    //-------------------------------------\n\n    /**\n     * Set this debug flag to log all events that happen in this class.\n     */\n    this.debug = false; //-------------------------------------\n    // \tDISPOSING\n    //-------------------------------------\n\n    /**\n     * Indicates if the instance was disposed\n     */\n\n    this._wasDisposed = false;\n  }\n  /**\n   * Returns all of the default options belonging to the class.\n   */\n\n\n  Tone.getDefaults = function () {\n    return {};\n  };\n  /**\n   * Prints the outputs to the console log for debugging purposes.\n   * Prints the contents only if either the object has a property\n   * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n   * is set to the name of the class.\n   * @example\n   * const osc = new Tone.Oscillator();\n   * // prints all logs originating from this oscillator\n   * osc.debug = true;\n   * // calls to start/stop will print in the console\n   * osc.start();\n   */\n\n\n  Tone.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    } // if the object is either set to debug = true\n    // or if there is a string on the Tone.global.with the class name\n\n\n    if (this.debug || theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS) {\n      log.apply(void 0, __spread([this], args));\n    }\n  };\n  /**\n   * disconnect and dispose.\n   */\n\n\n  Tone.prototype.dispose = function () {\n    this._wasDisposed = true;\n    return this;\n  };\n\n  Object.defineProperty(Tone.prototype, \"disposed\", {\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get: function () {\n      return this._wasDisposed;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Convert the class to a string\n   * @example\n   * const osc = new Tone.Oscillator();\n   * console.log(osc.toString());\n   */\n\n  Tone.prototype.toString = function () {\n    return this.name;\n  };\n  /**\n   * The version number semver\n   */\n\n\n  Tone.version = version;\n  return Tone;\n}();\n\nexport { Tone };","export var version = \"14.6.4\";","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nvar EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\n\nexport function GT(a, b) {\n  return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\n\nexport function GTE(a, b) {\n  return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\n\nexport function LT(a, b) {\n  return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\n\nexport function EQ(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\n\nexport function clamp(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}","import { __extends } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\n\nvar Timeline =\n/** @class */\nfunction (_super) {\n  __extends(Timeline, _super);\n\n  function Timeline() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"Timeline\";\n    /**\n     * The array of scheduled timeline events\n     */\n\n    _this._timeline = [];\n    var options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n    _this.memory = options.memory;\n    _this.increasing = options.increasing;\n    return _this;\n  }\n\n  Timeline.getDefaults = function () {\n    return {\n      memory: Infinity,\n      increasing: false\n    };\n  };\n\n  Object.defineProperty(Timeline.prototype, \"length\", {\n    /**\n     * The number of items in the timeline.\n     */\n    get: function () {\n      return this._timeline.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n   * @param event  The event object to insert into the timeline.\n   */\n\n  Timeline.prototype.add = function (event) {\n    // the event needs to have a time attribute\n    assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n    event.time = event.time.valueOf();\n\n    if (this.increasing && this.length) {\n      var lastValue = this._timeline[this.length - 1];\n      assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\n      this._timeline.push(event);\n    } else {\n      var index = this._search(event.time);\n\n      this._timeline.splice(index + 1, 0, event);\n    } // if the length is more than the memory, remove the previous ones\n\n\n    if (this.length > this.memory) {\n      var diff = this.length - this.memory;\n\n      this._timeline.splice(0, diff);\n    }\n\n    return this;\n  };\n  /**\n   * Remove an event from the timeline.\n   * @param  {Object}  event  The event object to remove from the list.\n   * @returns {Timeline} this\n   */\n\n\n  Timeline.prototype.remove = function (event) {\n    var index = this._timeline.indexOf(event);\n\n    if (index !== -1) {\n      this._timeline.splice(index, 1);\n    }\n\n    return this;\n  };\n  /**\n   * Get the nearest event whose time is less than or equal to the given time.\n   * @param  time  The time to query.\n   */\n\n\n  Timeline.prototype.get = function (time, param) {\n    if (param === void 0) {\n      param = \"time\";\n    }\n\n    var index = this._search(time, param);\n\n    if (index !== -1) {\n      return this._timeline[index];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Return the first event in the timeline without removing it\n   * @returns {Object} The first event object\n   */\n\n\n  Timeline.prototype.peek = function () {\n    return this._timeline[0];\n  };\n  /**\n   * Return the first event in the timeline and remove it\n   */\n\n\n  Timeline.prototype.shift = function () {\n    return this._timeline.shift();\n  };\n  /**\n   * Get the event which is scheduled after the given time.\n   * @param  time  The time to query.\n   */\n\n\n  Timeline.prototype.getAfter = function (time, param) {\n    if (param === void 0) {\n      param = \"time\";\n    }\n\n    var index = this._search(time, param);\n\n    if (index + 1 < this._timeline.length) {\n      return this._timeline[index + 1];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get the event before the event at the given time.\n   * @param  time  The time to query.\n   */\n\n\n  Timeline.prototype.getBefore = function (time) {\n    var len = this._timeline.length; // if it's after the last item, return the last item\n\n    if (len > 0 && this._timeline[len - 1].time < time) {\n      return this._timeline[len - 1];\n    }\n\n    var index = this._search(time);\n\n    if (index - 1 >= 0) {\n      return this._timeline[index - 1];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Cancel events at and after the given time\n   * @param  after  The time to query.\n   */\n\n\n  Timeline.prototype.cancel = function (after) {\n    if (this._timeline.length > 1) {\n      var index = this._search(after);\n\n      if (index >= 0) {\n        if (EQ(this._timeline[index].time, after)) {\n          // get the first item with that time\n          for (var i = index; i >= 0; i--) {\n            if (EQ(this._timeline[i].time, after)) {\n              index = i;\n            } else {\n              break;\n            }\n          }\n\n          this._timeline = this._timeline.slice(0, index);\n        } else {\n          this._timeline = this._timeline.slice(0, index + 1);\n        }\n      } else {\n        this._timeline = [];\n      }\n    } else if (this._timeline.length === 1) {\n      // the first item's time\n      if (GTE(this._timeline[0].time, after)) {\n        this._timeline = [];\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Cancel events before or equal to the given time.\n   * @param  time  The time to cancel before.\n   */\n\n\n  Timeline.prototype.cancelBefore = function (time) {\n    var index = this._search(time);\n\n    if (index >= 0) {\n      this._timeline = this._timeline.slice(index + 1);\n    }\n\n    return this;\n  };\n  /**\n   * Returns the previous event if there is one. null otherwise\n   * @param  event The event to find the previous one of\n   * @return The event right before the given event\n   */\n\n\n  Timeline.prototype.previousEvent = function (event) {\n    var index = this._timeline.indexOf(event);\n\n    if (index > 0) {\n      return this._timeline[index - 1];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Does a binary search on the timeline array and returns the\n   * nearest event index whose time is after or equal to the given time.\n   * If a time is searched before the first index in the timeline, -1 is returned.\n   * If the time is after the end, the index of the last item is returned.\n   */\n\n\n  Timeline.prototype._search = function (time, param) {\n    if (param === void 0) {\n      param = \"time\";\n    }\n\n    if (this._timeline.length === 0) {\n      return -1;\n    }\n\n    var beginning = 0;\n    var len = this._timeline.length;\n    var end = len;\n\n    if (len > 0 && this._timeline[len - 1][param] <= time) {\n      return len - 1;\n    }\n\n    while (beginning < end) {\n      // calculate the midpoint for roughly equal partition\n      var midPoint = Math.floor(beginning + (end - beginning) / 2);\n      var event_1 = this._timeline[midPoint];\n      var nextEvent = this._timeline[midPoint + 1];\n\n      if (EQ(event_1[param], time)) {\n        // choose the last one that has the same time\n        for (var i = midPoint; i < this._timeline.length; i++) {\n          var testEvent = this._timeline[i];\n\n          if (EQ(testEvent[param], time)) {\n            midPoint = i;\n          } else {\n            break;\n          }\n        }\n\n        return midPoint;\n      } else if (LT(event_1[param], time) && GT(nextEvent[param], time)) {\n        return midPoint;\n      } else if (GT(event_1[param], time)) {\n        // search lower\n        end = midPoint;\n      } else {\n        // search upper\n        beginning = midPoint + 1;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Internal iterator. Applies extra safety checks for\n   * removing items from the array.\n   */\n\n\n  Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n    if (lowerBound === void 0) {\n      lowerBound = 0;\n    }\n\n    if (upperBound === void 0) {\n      upperBound = this._timeline.length - 1;\n    }\n\n    this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n  };\n  /**\n   * Iterate over everything in the array\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEach = function (callback) {\n    this._iterate(callback);\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array at or before the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachBefore = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var upperBound = this._search(time);\n\n    if (upperBound !== -1) {\n      this._iterate(callback, 0, upperBound);\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array after the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachAfter = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var lowerBound = this._search(time);\n\n    this._iterate(callback, lowerBound + 1);\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array between the startTime and endTime.\n   * The timerange is inclusive of the startTime, but exclusive of the endTime.\n   * range = [startTime, endTime).\n   * @param  startTime The time to check if items are before\n   * @param  endTime The end of the test interval.\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachBetween = function (startTime, endTime, callback) {\n    var lowerBound = this._search(startTime);\n\n    var upperBound = this._search(endTime);\n\n    if (lowerBound !== -1 && upperBound !== -1) {\n      if (this._timeline[lowerBound].time !== startTime) {\n        lowerBound += 1;\n      } // exclusive of the end time\n\n\n      if (this._timeline[upperBound].time === endTime) {\n        upperBound -= 1;\n      }\n\n      this._iterate(callback, lowerBound, upperBound);\n    } else if (lowerBound === -1) {\n      this._iterate(callback, 0, upperBound);\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array at or after the given time. Similar to\n   * forEachAfter, but includes the item(s) at the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachFrom = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var lowerBound = this._search(time); // work backwards until the event time is less than time\n\n\n    while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n      lowerBound--;\n    }\n\n    this._iterate(callback, lowerBound + 1);\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array at the given time\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachAtTime = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var upperBound = this._search(time);\n\n    if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n      var lowerBound = upperBound;\n\n      for (var i = upperBound; i >= 0; i--) {\n        if (EQ(this._timeline[i].time, time)) {\n          lowerBound = i;\n        } else {\n          break;\n        }\n      }\n\n      this._iterate(function (event) {\n        callback(event);\n      }, lowerBound, upperBound);\n    }\n\n    return this;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Timeline.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._timeline = [];\n    return this;\n  };\n\n  return Timeline;\n}(Tone);\n\nexport { Timeline };","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nvar notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\n\nexport function onContextInit(cb) {\n  notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\n\nexport function initializeContext(ctx) {\n  // add any additional modules\n  notifyNewContext.forEach(function (cb) {\n    return cb(ctx);\n  });\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\n\nvar notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\n\nexport function onContextClose(cb) {\n  notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n  // add any additional modules\n  notifyCloseContext.forEach(function (cb) {\n    return cb(ctx);\n  });\n}","import { __extends, __read, __spread } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n */\n\nvar Emitter =\n/** @class */\nfunction (_super) {\n  __extends(Emitter, _super);\n\n  function Emitter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Emitter\";\n    return _this;\n  }\n  /**\n   * Bind a callback to a specific event.\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n\n\n  Emitter.prototype.on = function (event, callback) {\n    var _this = this; // split the event\n\n\n    var events = event.split(/\\W+/);\n    events.forEach(function (eventName) {\n      if (isUndef(_this._events)) {\n        _this._events = {};\n      }\n\n      if (!_this._events.hasOwnProperty(eventName)) {\n        _this._events[eventName] = [];\n      }\n\n      _this._events[eventName].push(callback);\n    });\n    return this;\n  };\n  /**\n   * Bind a callback which is only invoked once\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n\n\n  Emitter.prototype.once = function (event, callback) {\n    var _this = this;\n\n    var boundCallback = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      } // invoke the callback\n\n\n      callback.apply(void 0, __spread(args)); // remove the event\n\n      _this.off(event, boundCallback);\n    };\n\n    this.on(event, boundCallback);\n    return this;\n  };\n  /**\n   * Remove the event listener.\n   * @param  event     The event to stop listening to.\n   * @param  callback  The callback which was bound to the event with Emitter.on.\n   *                   If no callback is given, all callbacks events are removed.\n   */\n\n\n  Emitter.prototype.off = function (event, callback) {\n    var _this = this;\n\n    var events = event.split(/\\W+/);\n    events.forEach(function (eventName) {\n      if (isUndef(_this._events)) {\n        _this._events = {};\n      }\n\n      if (_this._events.hasOwnProperty(event)) {\n        if (isUndef(callback)) {\n          _this._events[event] = [];\n        } else {\n          var eventList = _this._events[event];\n\n          for (var i = 0; i < eventList.length; i++) {\n            if (eventList[i] === callback) {\n              eventList.splice(i, 1);\n            }\n          }\n        }\n      }\n    });\n    return this;\n  };\n  /**\n   * Invoke all of the callbacks bound to the event\n   * with any arguments passed in.\n   * @param  event  The name of the event.\n   * @param args The arguments to pass to the functions listening.\n   */\n\n\n  Emitter.prototype.emit = function (event) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (this._events) {\n      if (this._events.hasOwnProperty(event)) {\n        var eventList = this._events[event].slice(0);\n\n        for (var i = 0, len = eventList.length; i < len; i++) {\n          eventList[i].apply(this, args);\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Add Emitter functions (on/off/emit) to the object\n   */\n\n\n  Emitter.mixin = function (constr) {\n    // instance._events = {};\n    [\"on\", \"once\", \"off\", \"emit\"].forEach(function (name) {\n      var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n      Object.defineProperty(constr.prototype, name, property);\n    });\n  };\n  /**\n   * Clean up\n   */\n\n\n  Emitter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._events = undefined;\n    return this;\n  };\n\n  return Emitter;\n}(Tone);\n\nexport { Emitter };","import { __extends } from \"tslib\";\nimport { Emitter } from \"../util/Emitter\";\n\nvar BaseContext =\n/** @class */\nfunction (_super) {\n  __extends(BaseContext, _super);\n\n  function BaseContext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isOffline = false;\n    return _this;\n  }\n\n  return BaseContext;\n}(Emitter);\n\nexport { BaseContext };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\n\nvar Context =\n/** @class */\nfunction (_super) {\n  __extends(Context, _super);\n\n  function Context() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"Context\";\n    /**\n     * An object containing all of the constants AudioBufferSourceNodes\n     */\n\n    _this._constants = new Map();\n    /**\n     * All of the setTimeout events.\n     */\n\n    _this._timeouts = new Timeline();\n    /**\n     * The timeout id counter\n     */\n\n    _this._timeoutIds = 0;\n    /**\n     * Private indicator if the context has been initialized\n     */\n\n    _this._initialized = false;\n    /**\n     * Indicates if the context is an OfflineAudioContext or an AudioContext\n     */\n\n    _this.isOffline = false; //--------------------------------------------\n    // AUDIO WORKLET\n    //--------------------------------------------\n\n    /**\n     * Maps a module name to promise of the addModule method\n     */\n\n    _this._workletModules = new Map();\n    var options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n\n    if (options.context) {\n      _this._context = options.context;\n    } else {\n      _this._context = createAudioContext();\n    }\n\n    _this._latencyHint = options.latencyHint;\n    _this.lookAhead = options.lookAhead;\n    _this._ticker = new Ticker(_this.emit.bind(_this, \"tick\"), options.clockSource, options.updateInterval);\n\n    _this.on(\"tick\", _this._timeoutLoop.bind(_this)); // fwd events from the context\n\n\n    _this._context.onstatechange = function () {\n      _this.emit(\"statechange\", _this.state);\n    };\n\n    return _this;\n  }\n\n  Context.getDefaults = function () {\n    return {\n      clockSource: \"worker\",\n      latencyHint: \"interactive\",\n      lookAhead: 0.1,\n      updateInterval: 0.05\n    };\n  };\n  /**\n   * Finish setting up the context. **You usually do not need to do this manually.**\n   */\n\n\n  Context.prototype.initialize = function () {\n    if (!this._initialized) {\n      // add any additional modules\n      initializeContext(this);\n      this._initialized = true;\n    }\n\n    return this;\n  }; //---------------------------\n  // BASE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  Context.prototype.createAnalyser = function () {\n    return this._context.createAnalyser();\n  };\n\n  Context.prototype.createOscillator = function () {\n    return this._context.createOscillator();\n  };\n\n  Context.prototype.createBufferSource = function () {\n    return this._context.createBufferSource();\n  };\n\n  Context.prototype.createBiquadFilter = function () {\n    return this._context.createBiquadFilter();\n  };\n\n  Context.prototype.createBuffer = function (numberOfChannels, length, sampleRate) {\n    return this._context.createBuffer(numberOfChannels, length, sampleRate);\n  };\n\n  Context.prototype.createChannelMerger = function (numberOfInputs) {\n    return this._context.createChannelMerger(numberOfInputs);\n  };\n\n  Context.prototype.createChannelSplitter = function (numberOfOutputs) {\n    return this._context.createChannelSplitter(numberOfOutputs);\n  };\n\n  Context.prototype.createConstantSource = function () {\n    return this._context.createConstantSource();\n  };\n\n  Context.prototype.createConvolver = function () {\n    return this._context.createConvolver();\n  };\n\n  Context.prototype.createDelay = function (maxDelayTime) {\n    return this._context.createDelay(maxDelayTime);\n  };\n\n  Context.prototype.createDynamicsCompressor = function () {\n    return this._context.createDynamicsCompressor();\n  };\n\n  Context.prototype.createGain = function () {\n    return this._context.createGain();\n  };\n\n  Context.prototype.createIIRFilter = function (feedForward, feedback) {\n    // @ts-ignore\n    return this._context.createIIRFilter(feedForward, feedback);\n  };\n\n  Context.prototype.createPanner = function () {\n    return this._context.createPanner();\n  };\n\n  Context.prototype.createPeriodicWave = function (real, imag, constraints) {\n    return this._context.createPeriodicWave(real, imag, constraints);\n  };\n\n  Context.prototype.createStereoPanner = function () {\n    return this._context.createStereoPanner();\n  };\n\n  Context.prototype.createWaveShaper = function () {\n    return this._context.createWaveShaper();\n  };\n\n  Context.prototype.createMediaStreamSource = function (stream) {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    var context = this._context;\n    return context.createMediaStreamSource(stream);\n  };\n\n  Context.prototype.createMediaStreamDestination = function () {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    var context = this._context;\n    return context.createMediaStreamDestination();\n  };\n\n  Context.prototype.decodeAudioData = function (audioData) {\n    return this._context.decodeAudioData(audioData);\n  };\n\n  Object.defineProperty(Context.prototype, \"currentTime\", {\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get: function () {\n      return this._context.currentTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"state\", {\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get: function () {\n      return this._context.state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"sampleRate\", {\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get: function () {\n      return this._context.sampleRate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"listener\", {\n    /**\n     * The listener\n     */\n    get: function () {\n      this.initialize();\n      return this._listener;\n    },\n    set: function (l) {\n      assert(!this._initialized, \"The listener cannot be set after initialization.\");\n      this._listener = l;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"transport\", {\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get: function () {\n      this.initialize();\n      return this._transport;\n    },\n    set: function (t) {\n      assert(!this._initialized, \"The transport cannot be set after initialization.\");\n      this._transport = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"draw\", {\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get: function () {\n      this.initialize();\n      return this._draw;\n    },\n    set: function (d) {\n      assert(!this._initialized, \"Draw cannot be set after initialization.\");\n      this._draw = d;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"destination\", {\n    /**\n     * A reference to the Context's destination node.\n     */\n    get: function () {\n      this.initialize();\n      return this._destination;\n    },\n    set: function (d) {\n      assert(!this._initialized, \"The destination cannot be set after initialization.\");\n      this._destination = d;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Create an audio worklet node from a name and options. The module\n   * must first be loaded using [[addAudioWorkletModule]].\n   */\n\n  Context.prototype.createAudioWorkletNode = function (name, options) {\n    return createAudioWorkletNode(this.rawContext, name, options);\n  };\n  /**\n   * Add an AudioWorkletProcessor module\n   * @param url The url of the module\n   * @param name The name of the module\n   */\n\n\n  Context.prototype.addAudioWorkletModule = function (url, name) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n\n            if (!this._workletModules.has(name)) {\n              this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n            }\n\n            return [4\n            /*yield*/\n            , this._workletModules.get(name)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Returns a promise which resolves when all of the worklets have been loaded on this context\n   */\n\n\n  Context.prototype.workletsAreReady = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            promises = [];\n\n            this._workletModules.forEach(function (promise) {\n              return promises.push(promise);\n            });\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Context.prototype, \"updateInterval\", {\n    //---------------------------\n    // TICKER\n    //---------------------------\n\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. context.updateInterval + context.lookAhead gives you the\n     * total latency between scheduling an event and hearing it.\n     */\n    get: function () {\n      return this._ticker.updateInterval;\n    },\n    set: function (interval) {\n      this._ticker.updateInterval = interval;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"clockSource\", {\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get: function () {\n      return this._ticker.type;\n    },\n    set: function (type) {\n      this._ticker.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"latencyHint\", {\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n     * @example\n     * // set the latencyHint to prioritize smooth playback at the expensive of latency\n     * Tone.context.latencyHint = \"playback\";\n     */\n    get: function () {\n      return this._latencyHint;\n    },\n    set: function (hint) {\n      var lookAheadValue = 0;\n      this._latencyHint = hint;\n\n      if (isString(hint)) {\n        switch (hint) {\n          case \"interactive\":\n            lookAheadValue = 0.1;\n            break;\n\n          case \"playback\":\n            lookAheadValue = 0.8;\n            break;\n\n          case \"balanced\":\n            lookAheadValue = 0.25;\n            break;\n\n          case \"fastest\":\n            lookAheadValue = 0.01;\n            break;\n        }\n      }\n\n      this.lookAhead = lookAheadValue;\n      this.updateInterval = lookAheadValue / 2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"rawContext\", {\n    /**\n     * The unwrapped AudioContext.\n     */\n    get: function () {\n      return this._context;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * The current audio context time plus a short [[lookAhead]].\n   */\n\n  Context.prototype.now = function () {\n    return this._context.currentTime + this.lookAhead;\n  };\n  /**\n   * The current audio context time without the [[lookAhead]].\n   * In most cases it is better to use [[now]] instead of [[immediate]] since\n   * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n   * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n   * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n   */\n\n\n  Context.prototype.immediate = function () {\n    return this._context.currentTime;\n  };\n  /**\n   * Starts the audio context from a suspended state. This is required\n   * to initially start the AudioContext.\n   */\n\n\n  Context.prototype.resume = function () {\n    if (this._context.state === \"suspended\" && isAudioContext(this._context)) {\n      return this._context.resume();\n    } else {\n      return Promise.resolve();\n    }\n  };\n  /**\n   * Promise which is invoked when the context is running.\n   * Tries to resume the context if it's not started.\n   */\n\n\n  Context.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!isAudioContext(this._context)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this._context.close()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            if (this._initialized) {\n              closeContext(this);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Generate a looped buffer at some constant value.\n   */\n\n\n  Context.prototype.getConstant = function (val) {\n    if (this._constants.has(val)) {\n      return this._constants.get(val);\n    } else {\n      var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\n      var arr = buffer.getChannelData(0);\n\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = val;\n      }\n\n      var constant = this._context.createBufferSource();\n\n      constant.channelCount = 1;\n      constant.channelCountMode = \"explicit\";\n      constant.buffer = buffer;\n      constant.loop = true;\n      constant.start(0);\n\n      this._constants.set(val, constant);\n\n      return constant;\n    }\n  };\n  /**\n   * Clean up. Also closes the audio context.\n   */\n\n\n  Context.prototype.dispose = function () {\n    var _this = this;\n\n    _super.prototype.dispose.call(this);\n\n    this._ticker.dispose();\n\n    this._timeouts.dispose();\n\n    Object.keys(this._constants).map(function (val) {\n      return _this._constants[val].disconnect();\n    });\n    return this;\n  }; //---------------------------\n  // TIMEOUTS\n  //---------------------------\n\n  /**\n   * The private loop which keeps track of the context scheduled timeouts\n   * Is invoked from the clock source\n   */\n\n\n  Context.prototype._timeoutLoop = function () {\n    var now = this.now();\n\n    var firstEvent = this._timeouts.peek();\n\n    while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n      // invoke the callback\n      firstEvent.callback(); // shift the first event off\n\n      this._timeouts.shift(); // get the next one\n\n\n      firstEvent = this._timeouts.peek();\n    }\n  };\n  /**\n   * A setTimeout which is guaranteed by the clock source.\n   * Also runs in the offline context.\n   * @param  fn       The callback to invoke\n   * @param  timeout  The timeout in seconds\n   * @returns ID to use when invoking Context.clearTimeout\n   */\n\n\n  Context.prototype.setTimeout = function (fn, timeout) {\n    this._timeoutIds++;\n    var now = this.now();\n\n    this._timeouts.add({\n      callback: fn,\n      id: this._timeoutIds,\n      time: now + timeout\n    });\n\n    return this._timeoutIds;\n  };\n  /**\n   * Clears a previously scheduled timeout with Tone.context.setTimeout\n   * @param  id  The ID returned from setTimeout\n   */\n\n\n  Context.prototype.clearTimeout = function (id) {\n    var _this = this;\n\n    this._timeouts.forEach(function (event) {\n      if (event.id === id) {\n        _this._timeouts.remove(event);\n      }\n    });\n\n    return this;\n  };\n  /**\n   * Clear the function scheduled by [[setInterval]]\n   */\n\n\n  Context.prototype.clearInterval = function (id) {\n    return this.clearTimeout(id);\n  };\n  /**\n   * Adds a repeating event to the context's callback clock\n   */\n\n\n  Context.prototype.setInterval = function (fn, interval) {\n    var _this = this;\n\n    var id = ++this._timeoutIds;\n\n    var intervalFn = function () {\n      var now = _this.now();\n\n      _this._timeouts.add({\n        callback: function () {\n          // invoke the callback\n          fn(); // invoke the event to repeat it\n\n          intervalFn();\n        },\n        id: id,\n        time: now + interval\n      });\n    }; // kick it off\n\n\n    intervalFn();\n    return id;\n  };\n\n  return Context;\n}(BaseContext);\n\nexport { Context };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\n\nvar DummyContext =\n/** @class */\nfunction (_super) {\n  __extends(DummyContext, _super);\n\n  function DummyContext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.lookAhead = 0;\n    _this.latencyHint = 0;\n    _this.isOffline = false;\n    return _this;\n  } //---------------------------\n  // BASE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  DummyContext.prototype.createAnalyser = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createOscillator = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createBufferSource = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createBiquadFilter = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createBuffer = function (_numberOfChannels, _length, _sampleRate) {\n    return {};\n  };\n\n  DummyContext.prototype.createChannelMerger = function (_numberOfInputs) {\n    return {};\n  };\n\n  DummyContext.prototype.createChannelSplitter = function (_numberOfOutputs) {\n    return {};\n  };\n\n  DummyContext.prototype.createConstantSource = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createConvolver = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createDelay = function (_maxDelayTime) {\n    return {};\n  };\n\n  DummyContext.prototype.createDynamicsCompressor = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createGain = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createIIRFilter = function (_feedForward, _feedback) {\n    return {};\n  };\n\n  DummyContext.prototype.createPanner = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createPeriodicWave = function (_real, _imag, _constraints) {\n    return {};\n  };\n\n  DummyContext.prototype.createStereoPanner = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createWaveShaper = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createMediaStreamSource = function (_stream) {\n    return {};\n  };\n\n  DummyContext.prototype.createMediaStreamDestination = function () {\n    return {};\n  };\n\n  DummyContext.prototype.decodeAudioData = function (_audioData) {\n    return Promise.resolve({});\n  }; //---------------------------\n  // TONE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  DummyContext.prototype.createAudioWorkletNode = function (_name, _options) {\n    return {};\n  };\n\n  Object.defineProperty(DummyContext.prototype, \"rawContext\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DummyContext.prototype.addAudioWorkletModule = function (_url, _name) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  };\n\n  DummyContext.prototype.resume = function () {\n    return Promise.resolve();\n  };\n\n  DummyContext.prototype.setTimeout = function (_fn, _timeout) {\n    return 0;\n  };\n\n  DummyContext.prototype.clearTimeout = function (_id) {\n    return this;\n  };\n\n  DummyContext.prototype.setInterval = function (_fn, _interval) {\n    return 0;\n  };\n\n  DummyContext.prototype.clearInterval = function (_id) {\n    return this;\n  };\n\n  DummyContext.prototype.getConstant = function (_val) {\n    return {};\n  };\n\n  Object.defineProperty(DummyContext.prototype, \"currentTime\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"state\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"sampleRate\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"listener\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"transport\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"draw\", {\n    get: function () {\n      return {};\n    },\n    set: function (_d) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"destination\", {\n    get: function () {\n      return {};\n    },\n    set: function (_d) {},\n    enumerable: true,\n    configurable: true\n  });\n\n  DummyContext.prototype.now = function () {\n    return 0;\n  };\n\n  DummyContext.prototype.immediate = function () {\n    return 0;\n  };\n\n  return DummyContext;\n}(BaseContext);\n\nexport { DummyContext };","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\n\nexport function readOnly(target, property) {\n  if (isArray(property)) {\n    property.forEach(function (str) {\n      return readOnly(target, str);\n    });\n  } else {\n    Object.defineProperty(target, property, {\n      enumerable: true,\n      writable: false\n    });\n  }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\n\nexport function writable(target, property) {\n  if (isArray(property)) {\n    property.forEach(function (str) {\n      return writable(target, str);\n    });\n  } else {\n    Object.defineProperty(target, property, {\n      writable: true\n    });\n  }\n}\nexport var noOp = function () {// no operation here!\n};","import { __awaiter, __extends, __generator, __values } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\n\nvar ToneAudioBuffer =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioBuffer, _super);\n\n  function ToneAudioBuffer() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"ToneAudioBuffer\";\n    /**\n     * Callback when the buffer is loaded.\n     */\n\n    _this.onload = noOp;\n    var options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n    _this.reverse = options.reverse;\n    _this.onload = options.onload;\n\n    if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n      _this.set(options.url);\n    } else if (isString(options.url)) {\n      // initiate the download\n      _this.load(options.url).catch(options.onerror);\n    }\n\n    return _this;\n  }\n\n  ToneAudioBuffer.getDefaults = function () {\n    return {\n      onerror: noOp,\n      onload: noOp,\n      reverse: false\n    };\n  };\n\n  Object.defineProperty(ToneAudioBuffer.prototype, \"sampleRate\", {\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.sampleRate;\n      } else {\n        return getContext().sampleRate;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n   */\n\n  ToneAudioBuffer.prototype.set = function (buffer) {\n    var _this = this;\n\n    if (buffer instanceof ToneAudioBuffer) {\n      // if it's loaded, set it\n      if (buffer.loaded) {\n        this._buffer = buffer.get();\n      } else {\n        // otherwise when it's loaded, invoke it's callback\n        buffer.onload = function () {\n          _this.set(buffer);\n\n          _this.onload(_this);\n        };\n      }\n    } else {\n      this._buffer = buffer;\n    } // reverse it initially\n\n\n    if (this._reversed) {\n      this._reverse();\n    }\n\n    return this;\n  };\n  /**\n   * The audio buffer stored in the object.\n   */\n\n\n  ToneAudioBuffer.prototype.get = function () {\n    return this._buffer;\n  };\n  /**\n   * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n   * Invokes the callback once the audio buffer loads.\n   * @param url The url of the buffer to load. filetype support depends on the browser.\n   * @returns A Promise which resolves with this ToneAudioBuffer\n   */\n\n\n  ToneAudioBuffer.prototype.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var doneLoading, index;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            doneLoading = ToneAudioBuffer.load(url).then(function (audioBuffer) {\n              _this.set(audioBuffer); // invoke the onload method\n\n\n              _this.onload(_this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n\n            return [4\n            /*yield*/\n            , doneLoading];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n            ToneAudioBuffer.downloads.splice(index, 1);\n            return [7\n            /*endfinally*/\n            ];\n\n          case 4:\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * clean up\n   */\n\n\n  ToneAudioBuffer.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffer = undefined;\n    return this;\n  };\n  /**\n   * Set the audio buffer from the array.\n   * To create a multichannel AudioBuffer, pass in a multidimensional array.\n   * @param array The array to fill the audio buffer\n   */\n\n\n  ToneAudioBuffer.prototype.fromArray = function (array) {\n    var isMultidimensional = isArray(array) && array[0].length > 0;\n    var channels = isMultidimensional ? array.length : 1;\n    var len = isMultidimensional ? array[0].length : array.length;\n    var context = getContext();\n    var buffer = context.createBuffer(channels, len, context.sampleRate);\n    var multiChannelArray = !isMultidimensional && channels === 1 ? [array] : array;\n\n    for (var c = 0; c < channels; c++) {\n      buffer.copyToChannel(multiChannelArray[c], c);\n    }\n\n    this._buffer = buffer;\n    return this;\n  };\n  /**\n   * Sums multiple channels into 1 channel\n   * @param chanNum Optionally only copy a single channel from the array.\n   */\n\n\n  ToneAudioBuffer.prototype.toMono = function (chanNum) {\n    if (isNumber(chanNum)) {\n      this.fromArray(this.toArray(chanNum));\n    } else {\n      var outputArray = new Float32Array(this.length);\n      var numChannels_1 = this.numberOfChannels;\n\n      for (var channel = 0; channel < numChannels_1; channel++) {\n        var channelArray = this.toArray(channel);\n\n        for (var i = 0; i < channelArray.length; i++) {\n          outputArray[i] += channelArray[i];\n        }\n      } // divide by the number of channels\n\n\n      outputArray = outputArray.map(function (sample) {\n        return sample / numChannels_1;\n      });\n      this.fromArray(outputArray);\n    }\n\n    return this;\n  };\n  /**\n   * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n   * Float32Array, and multichannel buffers will return multidimensional arrays.\n   * @param channel Optionally only copy a single channel from the array.\n   */\n\n\n  ToneAudioBuffer.prototype.toArray = function (channel) {\n    if (isNumber(channel)) {\n      return this.getChannelData(channel);\n    } else if (this.numberOfChannels === 1) {\n      return this.toArray(0);\n    } else {\n      var ret = [];\n\n      for (var c = 0; c < this.numberOfChannels; c++) {\n        ret[c] = this.getChannelData(c);\n      }\n\n      return ret;\n    }\n  };\n  /**\n   * Returns the Float32Array representing the PCM audio data for the specific channel.\n   * @param  channel  The channel number to return\n   * @return The audio as a TypedArray\n   */\n\n\n  ToneAudioBuffer.prototype.getChannelData = function (channel) {\n    if (this._buffer) {\n      return this._buffer.getChannelData(channel);\n    } else {\n      return new Float32Array(0);\n    }\n  };\n  /**\n   * Cut a subsection of the array and return a buffer of the\n   * subsection. Does not modify the original buffer\n   * @param start The time to start the slice\n   * @param end The end time to slice. If none is given will default to the end of the buffer\n   */\n\n\n  ToneAudioBuffer.prototype.slice = function (start, end) {\n    if (end === void 0) {\n      end = this.duration;\n    }\n\n    var startSamples = Math.floor(start * this.sampleRate);\n    var endSamples = Math.floor(end * this.sampleRate);\n    assert(startSamples < endSamples, \"The start time must be less than the end time\");\n    var length = endSamples - startSamples;\n    var retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n\n    for (var channel = 0; channel < this.numberOfChannels; channel++) {\n      retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n    }\n\n    return new ToneAudioBuffer(retBuffer);\n  };\n  /**\n   * Reverse the buffer.\n   */\n\n\n  ToneAudioBuffer.prototype._reverse = function () {\n    if (this.loaded) {\n      for (var i = 0; i < this.numberOfChannels; i++) {\n        this.getChannelData(i).reverse();\n      }\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(ToneAudioBuffer.prototype, \"loaded\", {\n    /**\n     * If the buffer is loaded or not\n     */\n    get: function () {\n      return this.length > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"duration\", {\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.duration;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"length\", {\n    /**\n     * The length of the buffer in samples\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.length;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"numberOfChannels\", {\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.numberOfChannels;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"reverse\", {\n    /**\n     * Reverse the buffer.\n     */\n    get: function () {\n      return this._reversed;\n    },\n    set: function (rev) {\n      if (this._reversed !== rev) {\n        this._reversed = rev;\n\n        this._reverse();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n   * pass in a multidimensional array.\n   * @param array The array to fill the audio buffer\n   * @return A ToneAudioBuffer created from the array\n   */\n\n  ToneAudioBuffer.fromArray = function (array) {\n    return new ToneAudioBuffer().fromArray(array);\n  };\n  /**\n   * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n   * @param  url The url to load.\n   * @return A promise which resolves to a ToneAudioBuffer\n   */\n\n\n  ToneAudioBuffer.fromUrl = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var buffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            buffer = new ToneAudioBuffer();\n            return [4\n            /*yield*/\n            , buffer.load(url)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Loads a url using fetch and returns the AudioBuffer.\n   */\n\n\n  ToneAudioBuffer.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var matches, extensions, extension, extensions_1, extensions_1_1, ext, baseUrl, response, arrayBuffer, audioBuffer;\n\n      var e_1, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            matches = url.match(/\\[(.+\\|?)+\\]$/);\n\n            if (matches) {\n              extensions = matches[1].split(\"|\");\n              extension = extensions[0];\n\n              try {\n                for (extensions_1 = __values(extensions), extensions_1_1 = extensions_1.next(); !extensions_1_1.done; extensions_1_1 = extensions_1.next()) {\n                  ext = extensions_1_1.value;\n\n                  if (ToneAudioBuffer.supportsType(ext)) {\n                    extension = ext;\n                    break;\n                  }\n                }\n              } catch (e_1_1) {\n                e_1 = {\n                  error: e_1_1\n                };\n              } finally {\n                try {\n                  if (extensions_1_1 && !extensions_1_1.done && (_a = extensions_1.return)) _a.call(extensions_1);\n                } finally {\n                  if (e_1) throw e_1.error;\n                }\n              }\n\n              url = url.replace(matches[0], extension);\n            }\n\n            baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n            return [4\n            /*yield*/\n            , fetch(baseUrl + url)];\n\n          case 1:\n            response = _b.sent();\n\n            if (!response.ok) {\n              throw new Error(\"could not load url: \" + url);\n            }\n\n            return [4\n            /*yield*/\n            , response.arrayBuffer()];\n\n          case 2:\n            arrayBuffer = _b.sent();\n            return [4\n            /*yield*/\n            , getContext().decodeAudioData(arrayBuffer)];\n\n          case 3:\n            audioBuffer = _b.sent();\n            return [2\n            /*return*/\n            , audioBuffer];\n        }\n      });\n    });\n  };\n  /**\n   * Checks a url's extension to see if the current browser can play that file type.\n   * @param url The url/extension to test\n   * @return If the file extension can be played\n   * @static\n   * @example\n   * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n   * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n   */\n\n\n  ToneAudioBuffer.supportsType = function (url) {\n    var extensions = url.split(\".\");\n    var extension = extensions[extensions.length - 1];\n    var response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n    return response !== \"\";\n  };\n  /**\n   * Returns a Promise which resolves when all of the buffers have loaded\n   */\n\n\n  ToneAudioBuffer.loaded = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // this makes sure that the function is always async\n            return [4\n            /*yield*/\n            , Promise.resolve()];\n\n          case 1:\n            // this makes sure that the function is always async\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            if (!ToneAudioBuffer.downloads.length) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , ToneAudioBuffer.downloads[0]];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 2];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; //-------------------------------------\n  // STATIC METHODS\n  //-------------------------------------\n\n  /**\n   * A path which is prefixed before every url.\n   */\n\n\n  ToneAudioBuffer.baseUrl = \"\";\n  /**\n   * All of the downloads\n   */\n\n  ToneAudioBuffer.downloads = [];\n  return ToneAudioBuffer;\n}(Tone);\n\nexport { ToneAudioBuffer };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n */\n\nvar OfflineContext =\n/** @class */\nfunction (_super) {\n  __extends(OfflineContext, _super);\n\n  function OfflineContext() {\n    var _this = _super.call(this, {\n      clockSource: \"offline\",\n      context: isOfflineAudioContext(arguments[0]) ? arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n      lookAhead: 0,\n      updateInterval: isOfflineAudioContext(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]\n    }) || this;\n\n    _this.name = \"OfflineContext\";\n    /**\n     * An artificial clock source\n     */\n\n    _this._currentTime = 0;\n    _this.isOffline = true;\n    _this._duration = isOfflineAudioContext(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];\n    return _this;\n  }\n  /**\n   * Override the now method to point to the internal clock time\n   */\n\n\n  OfflineContext.prototype.now = function () {\n    return this._currentTime;\n  };\n\n  Object.defineProperty(OfflineContext.prototype, \"currentTime\", {\n    /**\n     * Same as this.now()\n     */\n    get: function () {\n      return this._currentTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Render just the clock portion of the audio context.\n   */\n\n  OfflineContext.prototype._renderClock = function (asynchronous) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, yieldEvery;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            index = 0;\n            _a.label = 1;\n\n          case 1:\n            if (!(this._duration - this._currentTime >= 0)) return [3\n            /*break*/\n            , 4]; // invoke all the callbacks on that time\n\n            this.emit(\"tick\"); // increment the clock in block-sized chunks\n\n            this._currentTime += 128 / this.sampleRate; // yield once a second of audio\n\n            index++;\n            yieldEvery = Math.floor(this.sampleRate / 128);\n            if (!(asynchronous && index % yieldEvery === 0)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , new Promise(function (done) {\n              return setTimeout(done, 1);\n            })];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [3\n            /*break*/\n            , 1];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Render the output of the OfflineContext\n   * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n   */\n\n\n  OfflineContext.prototype.render = function (asynchronous) {\n    if (asynchronous === void 0) {\n      asynchronous = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var buffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.workletsAreReady()];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._renderClock(asynchronous)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._context.startRendering()];\n\n          case 3:\n            buffer = _a.sent();\n            return [2\n            /*return*/\n            , new ToneAudioBuffer(buffer)];\n        }\n      });\n    });\n  };\n  /**\n   * Close the context\n   */\n\n\n  OfflineContext.prototype.close = function () {\n    return Promise.resolve();\n  };\n\n  return OfflineContext;\n}(Context);\n\nexport { OfflineContext };","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\n\nvar dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\n\nvar globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\n\nexport function getContext() {\n  if (globalContext === dummyContext && hasAudioContext) {\n    setContext(new Context());\n  }\n\n  return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\n\nexport function setContext(context) {\n  if (isAudioContext(context)) {\n    globalContext = new Context(context);\n  } else if (isOfflineAudioContext(context)) {\n    globalContext = new OfflineContext(context);\n  } else {\n    globalContext = context;\n  }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\n\nexport function start() {\n  return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\n\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n  var prefix = \"v\";\n\n  if (version === \"dev\") {\n    prefix = \"\";\n  }\n\n  var printString = \" * Tone.js \" + prefix + version + \" * \"; // eslint-disable-next-line no-console\n\n  console.log(\"%c\" + printString, \"background: #000; color: #fff\");\n}","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n  var piFactor = 0.5 * Math.PI;\n  return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\n\nexport function dbToGain(db) {\n  return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\n\nexport function gainToDb(gain) {\n  return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\n\nexport function intervalToFrequencyRatio(interval) {\n  return Math.pow(2, interval / 12);\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\n\nvar A4 = 440;\nexport function getA4() {\n  return A4;\n}\nexport function setA4(freq) {\n  A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\n\nexport function ftom(frequency) {\n  return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\n\nexport function ftomf(frequency) {\n  return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\n\nexport function mtof(midi) {\n  return A4 * Math.pow(2, (midi - 69) / 12);\n}","import { __extends } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\n\nvar TimeBaseClass =\n/** @class */\nfunction (_super) {\n  __extends(TimeBaseClass, _super);\n  /**\n   * @param context The context associated with the time value. Used to compute\n   * Transport and context-relative timing.\n   * @param  value  The time value as a number, string or object\n   * @param  units  Unit values\n   */\n\n\n  function TimeBaseClass(context, value, units) {\n    var _this = _super.call(this) || this;\n    /**\n     * The default units\n     */\n\n\n    _this.defaultUnits = \"s\";\n    _this._val = value;\n    _this._units = units;\n    _this.context = context;\n    _this._expressions = _this._getExpressions();\n    return _this;\n  }\n  /**\n   * All of the time encoding expressions\n   */\n\n\n  TimeBaseClass.prototype._getExpressions = function () {\n    var _this = this;\n\n    return {\n      hz: {\n        method: function (value) {\n          return _this._frequencyToUnits(parseFloat(value));\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)hz$/i\n      },\n      i: {\n        method: function (value) {\n          return _this._ticksToUnits(parseInt(value, 10));\n        },\n        regexp: /^(\\d+)i$/i\n      },\n      m: {\n        method: function (value) {\n          return _this._beatsToUnits(parseInt(value, 10) * _this._getTimeSignature());\n        },\n        regexp: /^(\\d+)m$/i\n      },\n      n: {\n        method: function (value, dot) {\n          var numericValue = parseInt(value, 10);\n          var scalar = dot === \".\" ? 1.5 : 1;\n\n          if (numericValue === 1) {\n            return _this._beatsToUnits(_this._getTimeSignature()) * scalar;\n          } else {\n            return _this._beatsToUnits(4 / numericValue) * scalar;\n          }\n        },\n        regexp: /^(\\d+)n(\\.?)$/i\n      },\n      number: {\n        method: function (value) {\n          return _this._expressions[_this.defaultUnits].method.call(_this, value);\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)$/\n      },\n      s: {\n        method: function (value) {\n          return _this._secondsToUnits(parseFloat(value));\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)s$/\n      },\n      samples: {\n        method: function (value) {\n          return parseInt(value, 10) / _this.context.sampleRate;\n        },\n        regexp: /^(\\d+)samples$/\n      },\n      t: {\n        method: function (value) {\n          var numericValue = parseInt(value, 10);\n          return _this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n        },\n        regexp: /^(\\d+)t$/i\n      },\n      tr: {\n        method: function (m, q, s) {\n          var total = 0;\n\n          if (m && m !== \"0\") {\n            total += _this._beatsToUnits(_this._getTimeSignature() * parseFloat(m));\n          }\n\n          if (q && q !== \"0\") {\n            total += _this._beatsToUnits(parseFloat(q));\n          }\n\n          if (s && s !== \"0\") {\n            total += _this._beatsToUnits(parseFloat(s) / 4);\n          }\n\n          return total;\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/\n      }\n    };\n  }; //-------------------------------------\n  // \tVALUE OF\n  //-------------------------------------\n\n  /**\n   * Evaluate the time value. Returns the time in seconds.\n   */\n\n\n  TimeBaseClass.prototype.valueOf = function () {\n    if (this._val instanceof TimeBaseClass) {\n      this.fromType(this._val);\n    }\n\n    if (isUndef(this._val)) {\n      return this._noArg();\n    } else if (isString(this._val) && isUndef(this._units)) {\n      for (var units in this._expressions) {\n        if (this._expressions[units].regexp.test(this._val.trim())) {\n          this._units = units;\n          break;\n        }\n      }\n    } else if (isObject(this._val)) {\n      var total = 0;\n\n      for (var typeName in this._val) {\n        if (isDefined(this._val[typeName])) {\n          var quantity = this._val[typeName]; // @ts-ignore\n\n          var time = new this.constructor(this.context, typeName).valueOf() * quantity;\n          total += time;\n        }\n      }\n\n      return total;\n    }\n\n    if (isDefined(this._units)) {\n      var expr = this._expressions[this._units];\n\n      var matching = this._val.toString().trim().match(expr.regexp);\n\n      if (matching) {\n        return expr.method.apply(this, matching.slice(1));\n      } else {\n        return expr.method.call(this, this._val);\n      }\n    } else if (isString(this._val)) {\n      return parseFloat(this._val);\n    } else {\n      return this._val;\n    }\n  }; //-------------------------------------\n  // \tUNIT CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Returns the value of a frequency in the current units\n   */\n\n\n  TimeBaseClass.prototype._frequencyToUnits = function (freq) {\n    return 1 / freq;\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  TimeBaseClass.prototype._beatsToUnits = function (beats) {\n    return 60 / this._getBpm() * beats;\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  TimeBaseClass.prototype._secondsToUnits = function (seconds) {\n    return seconds;\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  TimeBaseClass.prototype._ticksToUnits = function (ticks) {\n    return ticks * this._beatsToUnits(1) / this._getPPQ();\n  };\n  /**\n   * With no arguments, return 'now'\n   */\n\n\n  TimeBaseClass.prototype._noArg = function () {\n    return this._now();\n  }; //-------------------------------------\n  // \tTEMPO CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Return the bpm\n   */\n\n\n  TimeBaseClass.prototype._getBpm = function () {\n    return this.context.transport.bpm.value;\n  };\n  /**\n   * Return the timeSignature\n   */\n\n\n  TimeBaseClass.prototype._getTimeSignature = function () {\n    return this.context.transport.timeSignature;\n  };\n  /**\n   * Return the PPQ or 192 if Transport is not available\n   */\n\n\n  TimeBaseClass.prototype._getPPQ = function () {\n    return this.context.transport.PPQ;\n  }; //-------------------------------------\n  // \tCONVERSION INTERFACE\n  //-------------------------------------\n\n  /**\n   * Coerce a time type into this units type.\n   * @param type Any time type units\n   */\n\n\n  TimeBaseClass.prototype.fromType = function (type) {\n    this._units = undefined;\n\n    switch (this.defaultUnits) {\n      case \"s\":\n        this._val = type.toSeconds();\n        break;\n\n      case \"i\":\n        this._val = type.toTicks();\n        break;\n\n      case \"hz\":\n        this._val = type.toFrequency();\n        break;\n\n      case \"midi\":\n        this._val = type.toMidi();\n        break;\n    }\n\n    return this;\n  };\n  /**\n   * Return the value in hertz\n   */\n\n\n  TimeBaseClass.prototype.toFrequency = function () {\n    return 1 / this.toSeconds();\n  };\n  /**\n   * Return the time in samples\n   */\n\n\n  TimeBaseClass.prototype.toSamples = function () {\n    return this.toSeconds() * this.context.sampleRate;\n  };\n  /**\n   * Return the time in milliseconds.\n   */\n\n\n  TimeBaseClass.prototype.toMilliseconds = function () {\n    return this.toSeconds() * 1000;\n  };\n\n  return TimeBaseClass;\n}(Tone);\n\nexport { TimeBaseClass };","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\n\nvar TimeClass =\n/** @class */\nfunction (_super) {\n  __extends(TimeClass, _super);\n\n  function TimeClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"TimeClass\";\n    return _this;\n  }\n\n  TimeClass.prototype._getExpressions = function () {\n    var _this = this;\n\n    return Object.assign(_super.prototype._getExpressions.call(this), {\n      now: {\n        method: function (capture) {\n          return _this._now() + new _this.constructor(_this.context, capture).valueOf();\n        },\n        regexp: /^\\+(.+)/\n      },\n      quantize: {\n        method: function (capture) {\n          var quantTo = new TimeClass(_this.context, capture).valueOf();\n          return _this._secondsToUnits(_this.context.transport.nextSubdivision(quantTo));\n        },\n        regexp: /^@(.+)/\n      }\n    });\n  };\n  /**\n   * Quantize the time by the given subdivision. Optionally add a\n   * percentage which will move the time value towards the ideal\n   * quantized value by that percentage.\n   * @param  subdiv    The subdivision to quantize to\n   * @param  percent  Move the time value towards the quantized value by a percentage.\n   * @example\n   * Tone.Time(21).quantize(2); // returns 22\n   * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n   */\n\n\n  TimeClass.prototype.quantize = function (subdiv, percent) {\n    if (percent === void 0) {\n      percent = 1;\n    }\n\n    var subdivision = new this.constructor(this.context, subdiv).valueOf();\n    var value = this.valueOf();\n    var multiple = Math.round(value / subdivision);\n    var ideal = multiple * subdivision;\n    var diff = ideal - value;\n    return value + diff * percent;\n  }; //-------------------------------------\n  // CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Convert a Time to Notation. The notation values are will be the\n   * closest representation between 1m to 128th note.\n   * @return {Notation}\n   * @example\n   * // if the Transport is at 120bpm:\n   * Tone.Time(2).toNotation(); // returns \"1m\"\n   */\n\n\n  TimeClass.prototype.toNotation = function () {\n    var _this = this;\n\n    var time = this.toSeconds();\n    var testNotations = [\"1m\"];\n\n    for (var power = 1; power < 9; power++) {\n      var subdiv = Math.pow(2, power);\n      testNotations.push(subdiv + \"n.\");\n      testNotations.push(subdiv + \"n\");\n      testNotations.push(subdiv + \"t\");\n    }\n\n    testNotations.push(\"0\"); // find the closets notation representation\n\n    var closest = testNotations[0];\n    var closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n    testNotations.forEach(function (notation) {\n      var notationSeconds = new TimeClass(_this.context, notation).toSeconds();\n\n      if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n        closest = notation;\n        closestSeconds = notationSeconds;\n      }\n    });\n    return closest;\n  };\n  /**\n   * Return the time encoded as Bars:Beats:Sixteenths.\n   */\n\n\n  TimeClass.prototype.toBarsBeatsSixteenths = function () {\n    var quarterTime = this._beatsToUnits(1);\n\n    var quarters = this.valueOf() / quarterTime;\n    quarters = parseFloat(quarters.toFixed(4));\n    var measures = Math.floor(quarters / this._getTimeSignature());\n    var sixteenths = quarters % 1 * 4;\n    quarters = Math.floor(quarters) % this._getTimeSignature();\n    var sixteenthString = sixteenths.toString();\n\n    if (sixteenthString.length > 3) {\n      // the additional parseFloat removes insignificant trailing zeroes\n      sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n    }\n\n    var progress = [measures, quarters, sixteenths];\n    return progress.join(\":\");\n  };\n  /**\n   * Return the time in ticks.\n   */\n\n\n  TimeClass.prototype.toTicks = function () {\n    var quarterTime = this._beatsToUnits(1);\n\n    var quarters = this.valueOf() / quarterTime;\n    return Math.round(quarters * this._getPPQ());\n  };\n  /**\n   * Return the time in seconds.\n   */\n\n\n  TimeClass.prototype.toSeconds = function () {\n    return this.valueOf();\n  };\n  /**\n   * Return the value as a midi note.\n   */\n\n\n  TimeClass.prototype.toMidi = function () {\n    return ftom(this.toFrequency());\n  };\n\n  TimeClass.prototype._now = function () {\n    return this.context.now();\n  };\n\n  return TimeClass;\n}(TimeBaseClass);\n\nexport { TimeClass };\n/**\n * Create a TimeClass from a time string or number.\n * @param value A value which reprsents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n */\n\nexport function Time(value, units) {\n  return new TimeClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `eval` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\n\nvar FrequencyClass =\n/** @class */\nfunction (_super) {\n  __extends(FrequencyClass, _super);\n\n  function FrequencyClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Frequency\";\n    _this.defaultUnits = \"hz\";\n    return _this;\n  }\n\n  Object.defineProperty(FrequencyClass, \"A4\", {\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    get: function () {\n      return getA4();\n    },\n    set: function (freq) {\n      setA4(freq);\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // \tAUGMENT BASE EXPRESSIONS\n  //-------------------------------------\n\n  FrequencyClass.prototype._getExpressions = function () {\n    return Object.assign({}, _super.prototype._getExpressions.call(this), {\n      midi: {\n        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n        method: function (value) {\n          if (this.defaultUnits === \"midi\") {\n            return value;\n          } else {\n            return FrequencyClass.mtof(value);\n          }\n        }\n      },\n      note: {\n        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n        method: function (pitch, octave) {\n          var index = noteToScaleIndex[pitch.toLowerCase()];\n          var noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n\n          if (this.defaultUnits === \"midi\") {\n            return noteNumber;\n          } else {\n            return FrequencyClass.mtof(noteNumber);\n          }\n        }\n      },\n      tr: {\n        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n        method: function (m, q, s) {\n          var total = 1;\n\n          if (m && m !== \"0\") {\n            total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n          }\n\n          if (q && q !== \"0\") {\n            total *= this._beatsToUnits(parseFloat(q));\n          }\n\n          if (s && s !== \"0\") {\n            total *= this._beatsToUnits(parseFloat(s) / 4);\n          }\n\n          return total;\n        }\n      }\n    });\n  }; //-------------------------------------\n  // \tEXPRESSIONS\n  //-------------------------------------\n\n  /**\n   * Transposes the frequency by the given number of semitones.\n   * @return  A new transposed frequency\n   * @example\n   * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n   */\n\n\n  FrequencyClass.prototype.transpose = function (interval) {\n    return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n  };\n  /**\n   * Takes an array of semitone intervals and returns\n   * an array of frequencies transposed by those intervals.\n   * @return  Returns an array of Frequencies\n   * @example\n   * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n   */\n\n\n  FrequencyClass.prototype.harmonize = function (intervals) {\n    var _this = this;\n\n    return intervals.map(function (interval) {\n      return _this.transpose(interval);\n    });\n  }; //-------------------------------------\n  // \tUNIT CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Return the value of the frequency as a MIDI note\n   * @example\n   * Tone.Frequency(\"C4\").toMidi(); // 60\n   */\n\n\n  FrequencyClass.prototype.toMidi = function () {\n    return ftom(this.valueOf());\n  };\n  /**\n   * Return the value of the frequency in Scientific Pitch Notation\n   * @example\n   * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n   */\n\n\n  FrequencyClass.prototype.toNote = function () {\n    var freq = this.toFrequency();\n    var log = Math.log2(freq / FrequencyClass.A4);\n    var noteNumber = Math.round(12 * log) + 57;\n    var octave = Math.floor(noteNumber / 12);\n\n    if (octave < 0) {\n      noteNumber += -12 * octave;\n    }\n\n    var noteName = scaleIndexToNote[noteNumber % 12];\n    return noteName + octave.toString();\n  };\n  /**\n   * Return the duration of one cycle in seconds.\n   */\n\n\n  FrequencyClass.prototype.toSeconds = function () {\n    return 1 / _super.prototype.toSeconds.call(this);\n  };\n  /**\n   * Return the duration of one cycle in ticks\n   */\n\n\n  FrequencyClass.prototype.toTicks = function () {\n    var quarterTime = this._beatsToUnits(1);\n\n    var quarters = this.valueOf() / quarterTime;\n    return Math.floor(quarters * this._getPPQ());\n  }; //-------------------------------------\n  // \tUNIT CONVERSIONS HELPERS\n  //-------------------------------------\n\n  /**\n   * With no arguments, return 0\n   */\n\n\n  FrequencyClass.prototype._noArg = function () {\n    return 0;\n  };\n  /**\n   * Returns the value of a frequency in the current units\n   */\n\n\n  FrequencyClass.prototype._frequencyToUnits = function (freq) {\n    return freq;\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  FrequencyClass.prototype._ticksToUnits = function (ticks) {\n    return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  FrequencyClass.prototype._beatsToUnits = function (beats) {\n    return 1 / _super.prototype._beatsToUnits.call(this, beats);\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  FrequencyClass.prototype._secondsToUnits = function (seconds) {\n    return 1 / seconds;\n  };\n  /**\n   * Convert a MIDI note to frequency value.\n   * @param  midi The midi number to convert.\n   * @return The corresponding frequency value\n   */\n\n\n  FrequencyClass.mtof = function (midi) {\n    return mtof(midi);\n  };\n  /**\n   * Convert a frequency value to a MIDI note.\n   * @param frequency The value to frequency value to convert.\n   */\n\n\n  FrequencyClass.ftom = function (frequency) {\n    return ftom(frequency);\n  };\n\n  return FrequencyClass;\n}(TimeClass);\n\nexport { FrequencyClass }; //-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n\n/**\n * Note to scale index.\n * @hidden\n */\n\nvar noteToScaleIndex = {\n  cbb: -2,\n  cb: -1,\n  c: 0,\n  \"c#\": 1,\n  cx: 2,\n  dbb: 0,\n  db: 1,\n  d: 2,\n  \"d#\": 3,\n  dx: 4,\n  ebb: 2,\n  eb: 3,\n  e: 4,\n  \"e#\": 5,\n  ex: 6,\n  fbb: 3,\n  fb: 4,\n  f: 5,\n  \"f#\": 6,\n  fx: 7,\n  gbb: 5,\n  gb: 6,\n  g: 7,\n  \"g#\": 8,\n  gx: 9,\n  abb: 7,\n  ab: 8,\n  a: 9,\n  \"a#\": 10,\n  ax: 11,\n  bbb: 9,\n  bb: 10,\n  b: 11,\n  \"b#\": 12,\n  bx: 13\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\n\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\n\nexport function Frequency(value, units) {\n  return new FrequencyClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\n\nvar TransportTimeClass =\n/** @class */\nfunction (_super) {\n  __extends(TransportTimeClass, _super);\n\n  function TransportTimeClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"TransportTime\";\n    return _this;\n  }\n  /**\n   * Return the current time in whichever context is relevant\n   */\n\n\n  TransportTimeClass.prototype._now = function () {\n    return this.context.transport.seconds;\n  };\n\n  return TransportTimeClass;\n}(TimeClass);\n\nexport { TransportTimeClass };\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\n\nexport function TransportTime(value, units) {\n  return new TransportTimeClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\n\nvar ToneWithContext =\n/** @class */\nfunction (_super) {\n  __extends(ToneWithContext, _super);\n\n  function ToneWithContext() {\n    var _this = _super.call(this) || this;\n\n    var options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n\n    if (_this.defaultContext) {\n      _this.context = _this.defaultContext;\n    } else {\n      _this.context = options.context;\n    }\n\n    return _this;\n  }\n\n  ToneWithContext.getDefaults = function () {\n    return {\n      context: getContext()\n    };\n  };\n  /**\n   * Return the current time of the Context clock plus the lookAhead.\n   * @example\n   * setInterval(() => {\n   * \tconsole.log(Tone.now());\n   * }, 100)\n   */\n\n\n  ToneWithContext.prototype.now = function () {\n    return this.context.currentTime + this.context.lookAhead;\n  };\n  /**\n   * Return the current time of the Context clock without any lookAhead.\n   * @example\n   * setInterval(() => {\n   * \tconsole.log(Tone.immediate());\n   * }, 100)\n   */\n\n\n  ToneWithContext.prototype.immediate = function () {\n    return this.context.currentTime;\n  };\n\n  Object.defineProperty(ToneWithContext.prototype, \"sampleTime\", {\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get: function () {\n      return 1 / this.context.sampleRate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneWithContext.prototype, \"blockTime\", {\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get: function () {\n      return 128 / this.context.sampleRate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Convert the incoming time to seconds\n   * @example\n   * const gain = new Tone.Gain();\n   * console.log(gain.toSeconds(\"4n\"));\n   */\n\n  ToneWithContext.prototype.toSeconds = function (time) {\n    return new TimeClass(this.context, time).toSeconds();\n  };\n  /**\n   * Convert the input to a frequency number\n   * @example\n   * const gain = new Tone.Gain();\n   * console.log(gain.toFrequency(\"4n\"));\n   */\n\n\n  ToneWithContext.prototype.toFrequency = function (freq) {\n    return new FrequencyClass(this.context, freq).toFrequency();\n  };\n  /**\n   * Convert the input time into ticks\n   * @example\n   * const gain = new Tone.Gain();\n   * console.log(gain.toTicks(\"4n\"));\n   */\n\n\n  ToneWithContext.prototype.toTicks = function (time) {\n    return new TransportTimeClass(this.context, time).toTicks();\n  }; //-------------------------------------\n  // \tGET/SET\n  //-------------------------------------\n\n  /**\n   * Get a subset of the properties which are in the partial props\n   */\n\n\n  ToneWithContext.prototype._getPartialProperties = function (props) {\n    var options = this.get(); // remove attributes from the prop that are not in the partial\n\n    Object.keys(options).forEach(function (name) {\n      if (isUndef(props[name])) {\n        delete options[name];\n      }\n    });\n    return options;\n  };\n  /**\n   * Get the object's attributes.\n   * @example\n   * const osc = new Tone.Oscillator();\n   * console.log(osc.get());\n   */\n\n\n  ToneWithContext.prototype.get = function () {\n    var _this = this;\n\n    var defaults = getDefaultsFromInstance(this);\n    Object.keys(defaults).forEach(function (attribute) {\n      if (Reflect.has(_this, attribute)) {\n        var member = _this[attribute];\n\n        if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n          defaults[attribute] = member.value;\n        } else if (member instanceof ToneWithContext) {\n          defaults[attribute] = member._getPartialProperties(defaults[attribute]); // otherwise make sure it's a serializable type\n        } else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n          defaults[attribute] = member;\n        } else {\n          // remove all undefined and unserializable attributes\n          delete defaults[attribute];\n        }\n      }\n    });\n    return defaults;\n  };\n  /**\n   * Set multiple properties at once with an object.\n   * @example\n   * const filter = new Tone.Filter();\n   * // set values using an object\n   * filter.set({\n   * \tfrequency: 300,\n   * \ttype: \"highpass\"\n   * });\n   */\n\n\n  ToneWithContext.prototype.set = function (props) {\n    var _this = this;\n\n    Object.keys(props).forEach(function (attribute) {\n      if (Reflect.has(_this, attribute) && isDefined(_this[attribute])) {\n        if (_this[attribute] && isDefined(_this[attribute].value) && isDefined(_this[attribute].setValueAtTime)) {\n          // small optimization\n          if (_this[attribute].value !== props[attribute]) {\n            _this[attribute].value = props[attribute];\n          }\n        } else if (_this[attribute] instanceof ToneWithContext) {\n          _this[attribute].set(props[attribute]);\n        } else {\n          _this[attribute] = props[attribute];\n        }\n      }\n    });\n    return this;\n  };\n\n  return ToneWithContext;\n}(Tone);\n\nexport { ToneWithContext };","import { __extends } from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\n\nvar StateTimeline =\n/** @class */\nfunction (_super) {\n  __extends(StateTimeline, _super);\n\n  function StateTimeline(initial) {\n    if (initial === void 0) {\n      initial = \"stopped\";\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.name = \"StateTimeline\";\n    _this._initial = initial;\n\n    _this.setStateAtTime(_this._initial, 0);\n\n    return _this;\n  }\n  /**\n   * Returns the scheduled state scheduled before or at\n   * the given time.\n   * @param  time  The time to query.\n   * @return  The name of the state input in setStateAtTime.\n   */\n\n\n  StateTimeline.prototype.getValueAtTime = function (time) {\n    var event = this.get(time);\n\n    if (event !== null) {\n      return event.state;\n    } else {\n      return this._initial;\n    }\n  };\n  /**\n   * Add a state to the timeline.\n   * @param  state The name of the state to set.\n   * @param  time  The time to query.\n   * @param options Any additional options that are needed in the timeline.\n   */\n\n\n  StateTimeline.prototype.setStateAtTime = function (state, time, options) {\n    assertRange(time, 0);\n    this.add(Object.assign({}, options, {\n      state: state,\n      time: time\n    }));\n    return this;\n  };\n  /**\n   * Return the event before the time with the given state\n   * @param  state The state to look for\n   * @param  time  When to check before\n   * @return  The event with the given state before the time\n   */\n\n\n  StateTimeline.prototype.getLastState = function (state, time) {\n    // time = this.toSeconds(time);\n    var index = this._search(time);\n\n    for (var i = index; i >= 0; i--) {\n      var event_1 = this._timeline[i];\n\n      if (event_1.state === state) {\n        return event_1;\n      }\n    }\n  };\n  /**\n   * Return the event after the time with the given state\n   * @param  state The state to look for\n   * @param  time  When to check from\n   * @return  The event with the given state after the time\n   */\n\n\n  StateTimeline.prototype.getNextState = function (state, time) {\n    // time = this.toSeconds(time);\n    var index = this._search(time);\n\n    if (index !== -1) {\n      for (var i = index; i < this._timeline.length; i++) {\n        var event_2 = this._timeline[i];\n\n        if (event_2.state === state) {\n          return event_2;\n        }\n      }\n    }\n  };\n\n  return StateTimeline;\n}(Timeline);\n\nexport { StateTimeline };","import { __extends } from \"tslib\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n */\n\nvar Param =\n/** @class */\nfunction (_super) {\n  __extends(Param, _super);\n\n  function Param() {\n    var _this = _super.call(this, optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"])) || this;\n\n    _this.name = \"Param\";\n    _this.overridden = false;\n    /**\n     * The minimum output value\n     */\n\n    _this._minOutput = 1e-7;\n    var options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n    assert(isDefined(options.param) && (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n    while (!isAudioParam(options.param)) {\n      options.param = options.param._param;\n    }\n\n    _this._swappable = isDefined(options.swappable) ? options.swappable : false;\n\n    if (_this._swappable) {\n      _this.input = _this.context.createGain(); // initialize\n\n      _this._param = options.param;\n\n      _this.input.connect(_this._param);\n    } else {\n      _this._param = _this.input = options.param;\n    }\n\n    _this._events = new Timeline(1000);\n    _this._initialValue = _this._param.defaultValue;\n    _this.units = options.units;\n    _this.convert = options.convert;\n    _this._minValue = options.minValue;\n    _this._maxValue = options.maxValue; // if the value is defined, set it immediately\n\n    if (isDefined(options.value) && options.value !== _this._toType(_this._initialValue)) {\n      _this.setValueAtTime(options.value, 0);\n    }\n\n    return _this;\n  }\n\n  Param.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      convert: true,\n      units: \"number\"\n    });\n  };\n\n  Object.defineProperty(Param.prototype, \"value\", {\n    get: function () {\n      var now = this.now();\n      return this.getValueAtTime(now);\n    },\n    set: function (value) {\n      this.cancelScheduledValues(this.now());\n      this.setValueAtTime(value, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Param.prototype, \"minValue\", {\n    get: function () {\n      // if it's not the default minValue, return it\n      if (isDefined(this._minValue)) {\n        return this._minValue;\n      } else if (this.units === \"time\" || this.units === \"frequency\" || this.units === \"normalRange\" || this.units === \"positive\" || this.units === \"transportTime\" || this.units === \"ticks\" || this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n        return 0;\n      } else if (this.units === \"audioRange\") {\n        return -1;\n      } else if (this.units === \"decibels\") {\n        return -Infinity;\n      } else {\n        return this._param.minValue;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Param.prototype, \"maxValue\", {\n    get: function () {\n      if (isDefined(this._maxValue)) {\n        return this._maxValue;\n      } else if (this.units === \"normalRange\" || this.units === \"audioRange\") {\n        return 1;\n      } else {\n        return this._param.maxValue;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Type guard based on the unit name\n   */\n\n  Param.prototype._is = function (arg, type) {\n    return this.units === type;\n  };\n  /**\n   * Make sure the value is always in the defined range\n   */\n\n\n  Param.prototype._assertRange = function (value) {\n    if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n      assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n    }\n\n    return value;\n  };\n  /**\n   * Convert the given value from the type specified by Param.units\n   * into the destination value (such as Gain or Frequency).\n   */\n\n\n  Param.prototype._fromType = function (val) {\n    if (this.convert && !this.overridden) {\n      if (this._is(val, \"time\")) {\n        return this.toSeconds(val);\n      } else if (this._is(val, \"decibels\")) {\n        return dbToGain(val);\n      } else if (this._is(val, \"frequency\")) {\n        return this.toFrequency(val);\n      } else {\n        return val;\n      }\n    } else if (this.overridden) {\n      // if it's overridden, should only schedule 0s\n      return 0;\n    } else {\n      return val;\n    }\n  };\n  /**\n   * Convert the parameters value into the units specified by Param.units.\n   */\n\n\n  Param.prototype._toType = function (val) {\n    if (this.convert && this.units === \"decibels\") {\n      return gainToDb(val);\n    } else {\n      return val;\n    }\n  }; //-------------------------------------\n  // ABSTRACT PARAM INTERFACE\n  // all docs are generated from ParamInterface.ts\n  //-------------------------------------\n\n\n  Param.prototype.setValueAtTime = function (value, time) {\n    var computedTime = this.toSeconds(time);\n\n    var numericValue = this._fromType(value);\n\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(time));\n\n    this._assertRange(numericValue);\n\n    this.log(this.units, \"setValueAtTime\", value, computedTime);\n\n    this._events.add({\n      time: computedTime,\n      type: \"setValueAtTime\",\n      value: numericValue\n    });\n\n    this._param.setValueAtTime(numericValue, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.getValueAtTime = function (time) {\n    var computedTime = Math.max(this.toSeconds(time), 0);\n\n    var after = this._events.getAfter(computedTime);\n\n    var before = this._events.get(computedTime);\n\n    var value = this._initialValue; // if it was set by\n\n    if (before === null) {\n      value = this._initialValue;\n    } else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n      var previous = this._events.getBefore(before.time);\n\n      var previousVal = void 0;\n\n      if (previous === null) {\n        previousVal = this._initialValue;\n      } else {\n        previousVal = previous.value;\n      }\n\n      if (before.type === \"setTargetAtTime\") {\n        value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n      }\n    } else if (after === null) {\n      value = before.value;\n    } else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n      var beforeValue = before.value;\n\n      if (before.type === \"setTargetAtTime\") {\n        var previous = this._events.getBefore(before.time);\n\n        if (previous === null) {\n          beforeValue = this._initialValue;\n        } else {\n          beforeValue = previous.value;\n        }\n      }\n\n      if (after.type === \"linearRampToValueAtTime\") {\n        value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n      } else {\n        value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n      }\n    } else {\n      value = before.value;\n    }\n\n    return this._toType(value);\n  };\n\n  Param.prototype.setRampPoint = function (time) {\n    time = this.toSeconds(time);\n    var currentVal = this.getValueAtTime(time);\n    this.cancelAndHoldAtTime(time);\n\n    if (this._fromType(currentVal) === 0) {\n      currentVal = this._toType(this._minOutput);\n    }\n\n    this.setValueAtTime(currentVal, time);\n    return this;\n  };\n\n  Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n    var numericValue = this._fromType(value);\n\n    var computedTime = this.toSeconds(endTime);\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to linearRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime));\n\n    this._assertRange(numericValue);\n\n    this._events.add({\n      time: computedTime,\n      type: \"linearRampToValueAtTime\",\n      value: numericValue\n    });\n\n    this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\n    this._param.linearRampToValueAtTime(numericValue, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n    var numericValue = this._fromType(value);\n\n    numericValue = Math.max(this._minOutput, numericValue);\n\n    this._assertRange(numericValue);\n\n    var computedTime = this.toSeconds(endTime);\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to exponentialRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime)); // store the event\n\n    this._events.add({\n      time: computedTime,\n      type: \"exponentialRampToValueAtTime\",\n      value: numericValue\n    });\n\n    this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\n    this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n    return this;\n  };\n\n  Param.prototype.linearRampTo = function (value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n    return this;\n  };\n\n  Param.prototype.targetRampTo = function (value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.exponentialApproachValueAtTime(value, startTime, rampTime);\n    return this;\n  };\n\n  Param.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n    time = this.toSeconds(time);\n    rampTime = this.toSeconds(rampTime);\n    var timeConstant = Math.log(rampTime + 1) / Math.log(200);\n    this.setTargetAtTime(value, time, timeConstant); // at 90% start a linear ramp to the final value\n\n    this.cancelAndHoldAtTime(time + rampTime * 0.9);\n    this.linearRampToValueAtTime(value, time + rampTime);\n    return this;\n  };\n\n  Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    var numericValue = this._fromType(value); // The value will never be able to approach without timeConstant > 0.\n\n\n    assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n    var computedTime = this.toSeconds(startTime);\n\n    this._assertRange(numericValue);\n\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setTargetAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(startTime));\n\n    this._events.add({\n      constant: timeConstant,\n      time: computedTime,\n      type: \"setTargetAtTime\",\n      value: numericValue\n    });\n\n    this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\n    this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\n    return this;\n  };\n\n  Param.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    if (scaling === void 0) {\n      scaling = 1;\n    }\n\n    duration = this.toSeconds(duration);\n    startTime = this.toSeconds(startTime);\n    var startingValue = this._fromType(values[0]) * scaling;\n    this.setValueAtTime(this._toType(startingValue), startTime);\n    var segTime = duration / (values.length - 1);\n\n    for (var i = 1; i < values.length; i++) {\n      var numericValue = this._fromType(values[i]) * scaling;\n      this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n    }\n\n    return this;\n  };\n\n  Param.prototype.cancelScheduledValues = function (time) {\n    var computedTime = this.toSeconds(time);\n    assert(isFinite(computedTime), \"Invalid argument to cancelScheduledValues: \" + JSON.stringify(time));\n\n    this._events.cancel(computedTime);\n\n    this._param.cancelScheduledValues(computedTime);\n\n    this.log(this.units, \"cancelScheduledValues\", computedTime);\n    return this;\n  };\n\n  Param.prototype.cancelAndHoldAtTime = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    var valueAtTime = this._fromType(this.getValueAtTime(computedTime)); // remove the schedule events\n\n\n    assert(isFinite(computedTime), \"Invalid argument to cancelAndHoldAtTime: \" + JSON.stringify(time));\n    this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime); // if there is an event at the given computedTime\n    // and that even is not a \"set\"\n\n    var before = this._events.get(computedTime);\n\n    var after = this._events.getAfter(computedTime);\n\n    if (before && EQ(before.time, computedTime)) {\n      // remove everything after\n      if (after) {\n        this._param.cancelScheduledValues(after.time);\n\n        this._events.cancel(after.time);\n      } else {\n        this._param.cancelAndHoldAtTime(computedTime);\n\n        this._events.cancel(computedTime + this.sampleTime);\n      }\n    } else if (after) {\n      this._param.cancelScheduledValues(after.time); // cancel the next event(s)\n\n\n      this._events.cancel(after.time);\n\n      if (after.type === \"linearRampToValueAtTime\") {\n        this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n      } else if (after.type === \"exponentialRampToValueAtTime\") {\n        this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n      }\n    } // set the value at the given time\n\n\n    this._events.add({\n      time: computedTime,\n      type: \"setValueAtTime\",\n      value: valueAtTime\n    });\n\n    this._param.setValueAtTime(valueAtTime, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.rampTo = function (value, rampTime, startTime) {\n    if (rampTime === void 0) {\n      rampTime = 0.1;\n    }\n\n    if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n      this.exponentialRampTo(value, rampTime, startTime);\n    } else {\n      this.linearRampTo(value, rampTime, startTime);\n    }\n\n    return this;\n  };\n  /**\n   * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n   * The applied values will start at the context's current time and schedule\n   * all of the events which are scheduled on this Param onto the passed in param.\n   */\n\n\n  Param.prototype.apply = function (param) {\n    var now = this.context.currentTime; // set the param's value at the current time and schedule everything else\n\n    param.setValueAtTime(this.getValueAtTime(now), now); // if the previous event was a curve, then set the rest of it\n\n    var previousEvent = this._events.get(now);\n\n    if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n      // approx it until the next event with linear ramps\n      var nextEvent = this._events.getAfter(previousEvent.time); // or for 2 seconds if there is no event\n\n\n      var endTime = nextEvent ? nextEvent.time : now + 2;\n      var subdivisions = (endTime - now) / 10;\n\n      for (var i = now; i < endTime; i += subdivisions) {\n        param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n      }\n    }\n\n    this._events.forEachAfter(this.context.currentTime, function (event) {\n      if (event.type === \"cancelScheduledValues\") {\n        param.cancelScheduledValues(event.time);\n      } else if (event.type === \"setTargetAtTime\") {\n        param.setTargetAtTime(event.value, event.time, event.constant);\n      } else {\n        param[event.type](event.value, event.time);\n      }\n    });\n\n    return this;\n  };\n  /**\n   * Replace the Param's internal AudioParam. Will apply scheduled curves\n   * onto the parameter and replace the connections.\n   */\n\n\n  Param.prototype.setParam = function (param) {\n    assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n    var input = this.input;\n    input.disconnect(this._param);\n    this.apply(param);\n    this._param = param;\n    input.connect(this._param);\n    return this;\n  };\n\n  Param.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._events.dispose();\n\n    return this;\n  };\n\n  Object.defineProperty(Param.prototype, \"defaultValue\", {\n    get: function () {\n      return this._toType(this._param.defaultValue);\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // \tAUTOMATION CURVE CALCULATIONS\n  // \tMIT License, copyright (c) 2014 Jordan Santell\n  //-------------------------------------\n  // Calculates the the value along the curve produced by setTargetAtTime\n\n  Param.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n    return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n  }; // Calculates the the value along the curve produced by linearRampToValueAtTime\n\n\n  Param.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n    return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n  }; // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\n\n  Param.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n    return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n  };\n\n  return Param;\n}(ToneWithContext);\n\nexport { Param };","import { __extends, __read, __spread } from \"tslib\";\nimport { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\n\nvar ToneAudioNode =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioNode, _super);\n\n  function ToneAudioNode() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * The name of the class\n     */\n\n\n    _this.name = \"ToneAudioNode\";\n    /**\n     * List all of the node that must be set to match the ChannelProperties\n     */\n\n    _this._internalChannels = [];\n    return _this;\n  }\n\n  Object.defineProperty(ToneAudioNode.prototype, \"numberOfInputs\", {\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get: function () {\n      if (isDefined(this.input)) {\n        if (isAudioParam(this.input) || this.input instanceof Param) {\n          return 1;\n        } else {\n          return this.input.numberOfInputs;\n        }\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioNode.prototype, \"numberOfOutputs\", {\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get: function () {\n      if (isDefined(this.output)) {\n        return this.output.numberOfOutputs;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // AUDIO PROPERTIES\n  //-------------------------------------\n\n  /**\n   * Used to decide which nodes to get/set properties on\n   */\n\n  ToneAudioNode.prototype._isAudioNode = function (node) {\n    return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n  };\n  /**\n   * Get all of the audio nodes (either internal or input/output) which together\n   * make up how the class node responds to channel input/output\n   */\n\n\n  ToneAudioNode.prototype._getInternalNodes = function () {\n    var nodeList = this._internalChannels.slice(0);\n\n    if (this._isAudioNode(this.input)) {\n      nodeList.push(this.input);\n    }\n\n    if (this._isAudioNode(this.output)) {\n      if (this.input !== this.output) {\n        nodeList.push(this.output);\n      }\n    }\n\n    return nodeList;\n  };\n  /**\n   * Set the audio options for this node such as channelInterpretation\n   * channelCount, etc.\n   * @param options\n   */\n\n\n  ToneAudioNode.prototype._setChannelProperties = function (options) {\n    var nodeList = this._getInternalNodes();\n\n    nodeList.forEach(function (node) {\n      node.channelCount = options.channelCount;\n      node.channelCountMode = options.channelCountMode;\n      node.channelInterpretation = options.channelInterpretation;\n    });\n  };\n  /**\n   * Get the current audio options for this node such as channelInterpretation\n   * channelCount, etc.\n   */\n\n\n  ToneAudioNode.prototype._getChannelProperties = function () {\n    var nodeList = this._getInternalNodes();\n\n    assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\"); // use the first node to get properties\n    // they should all be the same\n\n    var node = nodeList[0];\n    return {\n      channelCount: node.channelCount,\n      channelCountMode: node.channelCountMode,\n      channelInterpretation: node.channelInterpretation\n    };\n  };\n\n  Object.defineProperty(ToneAudioNode.prototype, \"channelCount\", {\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get: function () {\n      return this._getChannelProperties().channelCount;\n    },\n    set: function (channelCount) {\n      var props = this._getChannelProperties(); // merge it with the other properties\n\n\n      this._setChannelProperties(Object.assign(props, {\n        channelCount: channelCount\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioNode.prototype, \"channelCountMode\", {\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get: function () {\n      return this._getChannelProperties().channelCountMode;\n    },\n    set: function (channelCountMode) {\n      var props = this._getChannelProperties(); // merge it with the other properties\n\n\n      this._setChannelProperties(Object.assign(props, {\n        channelCountMode: channelCountMode\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioNode.prototype, \"channelInterpretation\", {\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get: function () {\n      return this._getChannelProperties().channelInterpretation;\n    },\n    set: function (channelInterpretation) {\n      var props = this._getChannelProperties(); // merge it with the other properties\n\n\n      this._setChannelProperties(Object.assign(props, {\n        channelInterpretation: channelInterpretation\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // CONNECTIONS\n  //-------------------------------------\n\n  /**\n   * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n   * @param destination The output to connect to\n   * @param outputNum The output to connect from\n   * @param inputNum The input to connect to\n   */\n\n  ToneAudioNode.prototype.connect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    }\n\n    connect(this, destination, outputNum, inputNum);\n    return this;\n  };\n  /**\n   * Connect the output to the context's destination node.\n   * @example\n   * const osc = new Tone.Oscillator().start();\n   * osc.toDestination();\n   */\n\n\n  ToneAudioNode.prototype.toDestination = function () {\n    this.connect(this.context.destination);\n    return this;\n  };\n  /**\n   * Connect the output to the context's destination node.\n   * See [[toDestination]]\n   * @deprecated\n   */\n\n\n  ToneAudioNode.prototype.toMaster = function () {\n    warn(\"toMaster() has been renamed toDestination()\");\n    return this.toDestination();\n  };\n  /**\n   * disconnect the output\n   */\n\n\n  ToneAudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    }\n\n    disconnect(this, destination, outputNum, inputNum);\n    return this;\n  };\n  /**\n   * Connect the output of this node to the rest of the nodes in series.\n   * @example\n   * const osc = new Tone.Oscillator().start();\n   * const filter = new Tone.Filter();\n   * const volume = new Tone.Volume(-8);\n   * // connect a node to the filter, volume and then to the master output\n   * osc.chain(filter, volume, Tone.Destination);\n   */\n\n\n  ToneAudioNode.prototype.chain = function () {\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    connectSeries.apply(void 0, __spread([this], nodes));\n    return this;\n  };\n  /**\n   * connect the output of this node to the rest of the nodes in parallel.\n   */\n\n\n  ToneAudioNode.prototype.fan = function () {\n    var _this = this;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    nodes.forEach(function (node) {\n      return _this.connect(node);\n    });\n    return this;\n  };\n  /**\n   * Dispose and disconnect\n   */\n\n\n  ToneAudioNode.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (isDefined(this.input)) {\n      if (this.input instanceof ToneAudioNode) {\n        this.input.dispose();\n      } else if (isAudioNode(this.input)) {\n        this.input.disconnect();\n      }\n    }\n\n    if (isDefined(this.output)) {\n      if (this.output instanceof ToneAudioNode) {\n        this.output.dispose();\n      } else if (isAudioNode(this.output)) {\n        this.output.disconnect();\n      }\n    }\n\n    this._internalChannels = [];\n    return this;\n  };\n\n  return ToneAudioNode;\n}(ToneWithContext);\n\nexport { ToneAudioNode }; //-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\n\nexport function connectSeries() {\n  var nodes = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nodes[_i] = arguments[_i];\n  }\n\n  var first = nodes.shift();\n  nodes.reduce(function (prev, current) {\n    if (prev instanceof ToneAudioNode) {\n      prev.connect(current);\n    } else if (isAudioNode(prev)) {\n      connect(prev, current);\n    }\n\n    return current;\n  }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\n\nexport function connect(srcNode, dstNode, outputNumber, inputNumber) {\n  if (outputNumber === void 0) {\n    outputNumber = 0;\n  }\n\n  if (inputNumber === void 0) {\n    inputNumber = 0;\n  }\n\n  assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n  assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n\n  if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n    assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n  }\n\n  assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\"); // resolve the input of the dstNode\n\n  while (dstNode instanceof ToneAudioNode || dstNode instanceof Param) {\n    if (isDefined(dstNode.input)) {\n      dstNode = dstNode.input;\n    }\n  }\n\n  while (srcNode instanceof ToneAudioNode) {\n    if (isDefined(srcNode.output)) {\n      srcNode = srcNode.output;\n    }\n  } // make the connection\n\n\n  if (isAudioParam(dstNode)) {\n    srcNode.connect(dstNode, outputNumber);\n  } else {\n    srcNode.connect(dstNode, outputNumber, inputNumber);\n  }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\n\nexport function disconnect(srcNode, dstNode, outputNumber, inputNumber) {\n  if (outputNumber === void 0) {\n    outputNumber = 0;\n  }\n\n  if (inputNumber === void 0) {\n    inputNumber = 0;\n  } // resolve the destination node\n\n\n  if (isDefined(dstNode)) {\n    while (dstNode instanceof ToneAudioNode) {\n      dstNode = dstNode.input;\n    }\n  } // resolve the src node\n\n\n  while (!isAudioNode(srcNode)) {\n    if (isDefined(srcNode.output)) {\n      srcNode = srcNode.output;\n    }\n  }\n\n  if (isAudioParam(dstNode)) {\n    srcNode.disconnect(dstNode, outputNumber);\n  } else if (isAudioNode(dstNode)) {\n    srcNode.disconnect(dstNode, outputNumber, inputNumber);\n  } else {\n    srcNode.disconnect();\n  }\n}","import { __extends } from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n */\n\nvar Gain =\n/** @class */\nfunction (_super) {\n  __extends(Gain, _super);\n\n  function Gain() {\n    var _this = _super.call(this, optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"])) || this;\n\n    _this.name = \"Gain\";\n    /**\n     * The wrapped GainNode.\n     */\n\n    _this._gainNode = _this.context.createGain(); // input = output\n\n    _this.input = _this._gainNode;\n    _this.output = _this._gainNode;\n    var options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n    _this.gain = new Param({\n      context: _this.context,\n      convert: options.convert,\n      param: _this._gainNode.gain,\n      units: options.units,\n      value: options.gain,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    readOnly(_this, \"gain\");\n    return _this;\n  }\n\n  Gain.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      convert: true,\n      gain: 1,\n      units: \"gain\"\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Gain.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gainNode.disconnect();\n\n    this.gain.dispose();\n    return this;\n  };\n\n  return Gain;\n}(ToneAudioNode);\n\nexport { Gain };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\n\nvar OneShotSource =\n/** @class */\nfunction (_super) {\n  __extends(OneShotSource, _super);\n\n  function OneShotSource(options) {\n    var _this = _super.call(this, options) || this;\n    /**\n     * The callback to invoke after the\n     * source is done playing.\n     */\n\n\n    _this.onended = noOp;\n    /**\n     * The start time\n     */\n\n    _this._startTime = -1;\n    /**\n     * The stop time\n     */\n\n    _this._stopTime = -1;\n    /**\n     * The id of the timeout\n     */\n\n    _this._timeout = -1;\n    /**\n     * The public output node\n     */\n\n    _this.output = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * The output gain node.\n     */\n\n    _this._gainNode = _this.output;\n    /**\n     * Get the playback state at the given time\n     */\n\n    _this.getStateAtTime = function (time) {\n      var computedTime = this.toSeconds(time);\n\n      if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {\n        return \"started\";\n      } else {\n        return \"stopped\";\n      }\n    };\n\n    _this._fadeIn = options.fadeIn;\n    _this._fadeOut = options.fadeOut;\n    _this._curve = options.curve;\n    _this.onended = options.onended;\n    return _this;\n  }\n\n  OneShotSource.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      curve: \"linear\",\n      fadeIn: 0,\n      fadeOut: 0,\n      onended: noOp\n    });\n  };\n  /**\n   * Start the source at the given time\n   * @param  time When to start the source\n   */\n\n\n  OneShotSource.prototype._startGain = function (time, gain) {\n    if (gain === void 0) {\n      gain = 1;\n    }\n\n    assert(this._startTime === -1, \"Source cannot be started more than once\"); // apply a fade in envelope\n\n    var fadeInTime = this.toSeconds(this._fadeIn); // record the start time\n\n    this._startTime = time + fadeInTime;\n    this._startTime = Math.max(this._startTime, this.context.currentTime); // schedule the envelope\n\n    if (fadeInTime > 0) {\n      this._gainNode.gain.setValueAtTime(0, time);\n\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n      } else {\n        this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n      }\n    } else {\n      this._gainNode.gain.setValueAtTime(gain, time);\n    }\n\n    return this;\n  };\n  /**\n   * Stop the source node at the given time.\n   * @param time When to stop the source\n   */\n\n\n  OneShotSource.prototype.stop = function (time) {\n    this.log(\"stop\", time);\n\n    this._stopGain(this.toSeconds(time));\n\n    return this;\n  };\n  /**\n   * Stop the source at the given time\n   * @param  time When to stop the source\n   */\n\n\n  OneShotSource.prototype._stopGain = function (time) {\n    var _this = this;\n\n    assert(this._startTime !== -1, \"'start' must be called before 'stop'\"); // cancel the previous stop\n\n    this.cancelStop(); // the fadeOut time\n\n    var fadeOutTime = this.toSeconds(this._fadeOut); // schedule the stop callback\n\n    this._stopTime = this.toSeconds(time) + fadeOutTime;\n    this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\n    if (fadeOutTime > 0) {\n      // start the fade out curve at the given time\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n      } else {\n        this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n      }\n    } else {\n      // stop any ongoing ramps, and set the value to 0\n      this._gainNode.gain.cancelAndHoldAtTime(time);\n\n      this._gainNode.gain.setValueAtTime(0, time);\n    }\n\n    this.context.clearTimeout(this._timeout);\n    this._timeout = this.context.setTimeout(function () {\n      // allow additional time for the exponential curve to fully decay\n      var additionalTail = _this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n\n      _this._stopSource(_this.now() + additionalTail);\n\n      _this._onended();\n    }, this._stopTime - this.context.currentTime);\n    return this;\n  };\n  /**\n   * Invoke the onended callback\n   */\n\n\n  OneShotSource.prototype._onended = function () {\n    var _this = this;\n\n    if (this.onended !== noOp) {\n      this.onended(this); // overwrite onended to make sure it only is called once\n\n      this.onended = noOp; // dispose when it's ended to free up for garbage collection only in the online context\n\n      if (!this.context.isOffline) {\n        setTimeout(function () {\n          return _this.dispose();\n        }, 1000);\n      }\n    }\n  };\n\n  Object.defineProperty(OneShotSource.prototype, \"state\", {\n    /**\n     * Get the playback state at the current time\n     */\n    get: function () {\n      return this.getStateAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Cancel a scheduled stop event\n   */\n\n  OneShotSource.prototype.cancelStop = function () {\n    this.log(\"cancelStop\");\n    assert(this._startTime !== -1, \"Source is not started\"); // cancel the stop envelope\n\n    this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\n    this.context.clearTimeout(this._timeout);\n    this._stopTime = -1;\n    return this;\n  };\n\n  OneShotSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gainNode.disconnect();\n\n    return this;\n  };\n\n  return OneShotSource;\n}(ToneAudioNode);\n\nexport { OneShotSource };","import { __extends } from \"tslib\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\n\nvar ToneConstantSource =\n/** @class */\nfunction (_super) {\n  __extends(ToneConstantSource, _super);\n\n  function ToneConstantSource() {\n    var _this = _super.call(this, optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"])) || this;\n\n    _this.name = \"ToneConstantSource\";\n    /**\n     * The signal generator\n     */\n\n    _this._source = _this.context.createConstantSource();\n    var options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n    connect(_this._source, _this._gainNode);\n    _this.offset = new Param({\n      context: _this.context,\n      convert: options.convert,\n      param: _this._source.offset,\n      units: options.units,\n      value: options.offset,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    return _this;\n  }\n\n  ToneConstantSource.getDefaults = function () {\n    return Object.assign(OneShotSource.getDefaults(), {\n      convert: true,\n      offset: 1,\n      units: \"number\"\n    });\n  };\n  /**\n   * Start the source node at the given time\n   * @param  time When to start the source\n   */\n\n\n  ToneConstantSource.prototype.start = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n\n    this._startGain(computedTime);\n\n    this._source.start(computedTime);\n\n    return this;\n  };\n\n  ToneConstantSource.prototype._stopSource = function (time) {\n    this._source.stop(time);\n  };\n\n  ToneConstantSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this.state === \"started\") {\n      this.stop();\n    }\n\n    this._source.disconnect();\n\n    this.offset.dispose();\n    return this;\n  };\n\n  return ToneConstantSource;\n}(OneShotSource);\n\nexport { ToneConstantSource };","import { __extends } from \"tslib\";\nimport { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\n\nvar Signal =\n/** @class */\nfunction (_super) {\n  __extends(Signal, _super);\n\n  function Signal() {\n    var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n\n    _this.name = \"Signal\";\n    /**\n     * Indicates if the value should be overridden on connection.\n     */\n\n    _this.override = true;\n    var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n    _this.output = _this._constantSource = new ToneConstantSource({\n      context: _this.context,\n      convert: options.convert,\n      offset: options.value,\n      units: options.units,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n\n    _this._constantSource.start(0);\n\n    _this.input = _this._param = _this._constantSource.offset;\n    return _this;\n  }\n\n  Signal.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      convert: true,\n      units: \"number\",\n      value: 0\n    });\n  };\n\n  Signal.prototype.connect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    } // start it only when connected to something\n\n\n    connectSignal(this, destination, outputNum, inputNum);\n    return this;\n  };\n\n  Signal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._param.dispose();\n\n    this._constantSource.dispose();\n\n    return this;\n  }; //-------------------------------------\n  // ABSTRACT PARAM INTERFACE\n  // just a proxy for the ConstantSourceNode's offset AudioParam\n  // all docs are generated from AbstractParam.ts\n  //-------------------------------------\n\n\n  Signal.prototype.setValueAtTime = function (value, time) {\n    this._param.setValueAtTime(value, time);\n\n    return this;\n  };\n\n  Signal.prototype.getValueAtTime = function (time) {\n    return this._param.getValueAtTime(time);\n  };\n\n  Signal.prototype.setRampPoint = function (time) {\n    this._param.setRampPoint(time);\n\n    return this;\n  };\n\n  Signal.prototype.linearRampToValueAtTime = function (value, time) {\n    this._param.linearRampToValueAtTime(value, time);\n\n    return this;\n  };\n\n  Signal.prototype.exponentialRampToValueAtTime = function (value, time) {\n    this._param.exponentialRampToValueAtTime(value, time);\n\n    return this;\n  };\n\n  Signal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    this._param.exponentialRampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Signal.prototype.linearRampTo = function (value, rampTime, startTime) {\n    this._param.linearRampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Signal.prototype.targetRampTo = function (value, rampTime, startTime) {\n    this._param.targetRampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Signal.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n    this._param.exponentialApproachValueAtTime(value, time, rampTime);\n\n    return this;\n  };\n\n  Signal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    this._param.setTargetAtTime(value, startTime, timeConstant);\n\n    return this;\n  };\n\n  Signal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n\n    return this;\n  };\n\n  Signal.prototype.cancelScheduledValues = function (time) {\n    this._param.cancelScheduledValues(time);\n\n    return this;\n  };\n\n  Signal.prototype.cancelAndHoldAtTime = function (time) {\n    this._param.cancelAndHoldAtTime(time);\n\n    return this;\n  };\n\n  Signal.prototype.rampTo = function (value, rampTime, startTime) {\n    this._param.rampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Object.defineProperty(Signal.prototype, \"value\", {\n    get: function () {\n      return this._param.value;\n    },\n    set: function (value) {\n      this._param.value = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"convert\", {\n    get: function () {\n      return this._param.convert;\n    },\n    set: function (convert) {\n      this._param.convert = convert;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"units\", {\n    get: function () {\n      return this._param.units;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"overridden\", {\n    get: function () {\n      return this._param.overridden;\n    },\n    set: function (overridden) {\n      this._param.overridden = overridden;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"maxValue\", {\n    get: function () {\n      return this._param.maxValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"minValue\", {\n    get: function () {\n      return this._param.minValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * See [[Param.apply]].\n   */\n\n  Signal.prototype.apply = function (param) {\n    this._param.apply(param);\n\n    return this;\n  };\n\n  return Signal;\n}(ToneAudioNode);\n\nexport { Signal };\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\n\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n  if (destination instanceof Param || isAudioParam(destination) || destination instanceof Signal && destination.override) {\n    // cancel changes\n    destination.cancelScheduledValues(0); // reset the value\n\n    destination.setValueAtTime(0, 0); // mark the value as overridden\n\n    if (destination instanceof Signal) {\n      destination.overridden = true;\n    }\n  }\n\n  connect(signal, destination, outputNum, inputNum);\n}","import { __extends } from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\n\nvar TickParam =\n/** @class */\nfunction (_super) {\n  __extends(TickParam, _super);\n\n  function TickParam() {\n    var _this = _super.call(this, optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"])) || this;\n\n    _this.name = \"TickParam\";\n    /**\n     * The timeline which tracks all of the automations.\n     */\n\n    _this._events = new Timeline(Infinity);\n    /**\n     * The internal holder for the multiplier value\n     */\n\n    _this._multiplier = 1;\n    var options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]); // set the multiplier\n\n    _this._multiplier = options.multiplier; // clear the ticks from the beginning\n\n    _this._events.cancel(0); // set an initial event\n\n\n    _this._events.add({\n      ticks: 0,\n      time: 0,\n      type: \"setValueAtTime\",\n      value: _this._fromType(options.value)\n    });\n\n    _this.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n\n  TickParam.getDefaults = function () {\n    return Object.assign(Param.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  };\n\n  TickParam.prototype.setTargetAtTime = function (value, time, constant) {\n    // approximate it with multiple linear ramps\n    time = this.toSeconds(time);\n    this.setRampPoint(time);\n\n    var computedValue = this._fromType(value); // start from previously scheduled value\n\n\n    var prevEvent = this._events.get(time);\n\n    var segments = Math.round(Math.max(1 / constant, 1));\n\n    for (var i = 0; i <= segments; i++) {\n      var segTime = constant * i + time;\n\n      var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n\n      this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n    }\n\n    return this;\n  };\n\n  TickParam.prototype.setValueAtTime = function (value, time) {\n    var computedTime = this.toSeconds(time);\n\n    _super.prototype.setValueAtTime.call(this, value, time);\n\n    var event = this._events.get(computedTime);\n\n    var previousEvent = this._events.previousEvent(event);\n\n    var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\n    event.ticks = Math.max(ticksUntilTime, 0);\n    return this;\n  };\n\n  TickParam.prototype.linearRampToValueAtTime = function (value, time) {\n    var computedTime = this.toSeconds(time);\n\n    _super.prototype.linearRampToValueAtTime.call(this, value, time);\n\n    var event = this._events.get(computedTime);\n\n    var previousEvent = this._events.previousEvent(event);\n\n    var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\n    event.ticks = Math.max(ticksUntilTime, 0);\n    return this;\n  };\n\n  TickParam.prototype.exponentialRampToValueAtTime = function (value, time) {\n    // aproximate it with multiple linear ramps\n    time = this.toSeconds(time);\n\n    var computedVal = this._fromType(value); // start from previously scheduled value\n\n\n    var prevEvent = this._events.get(time); // approx 10 segments per second\n\n\n    var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n    var segmentDur = (time - prevEvent.time) / segments;\n\n    for (var i = 0; i <= segments; i++) {\n      var segTime = segmentDur * i + prevEvent.time;\n\n      var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n\n      this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n    }\n\n    return this;\n  };\n  /**\n   * Returns the tick value at the time. Takes into account\n   * any automation curves scheduled on the signal.\n   * @param  event The time to get the tick count at\n   * @return The number of ticks which have elapsed at the time given any automations.\n   */\n\n\n  TickParam.prototype._getTicksUntilEvent = function (event, time) {\n    if (event === null) {\n      event = {\n        ticks: 0,\n        time: 0,\n        type: \"setValueAtTime\",\n        value: 0\n      };\n    } else if (isUndef(event.ticks)) {\n      var previousEvent = this._events.previousEvent(event);\n\n      event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n    }\n\n    var val0 = this._fromType(this.getValueAtTime(event.time));\n\n    var val1 = this._fromType(this.getValueAtTime(time)); // if it's right on the line, take the previous value\n\n\n    var onTheLineEvent = this._events.get(time);\n\n    if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n      val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n    }\n\n    return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n  };\n  /**\n   * Returns the tick value at the time. Takes into account\n   * any automation curves scheduled on the signal.\n   * @param  time The time to get the tick count at\n   * @return The number of ticks which have elapsed at the time given any automations.\n   */\n\n\n  TickParam.prototype.getTicksAtTime = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    var event = this._events.get(computedTime);\n\n    return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n  };\n  /**\n   * Return the elapsed time of the number of ticks from the given time\n   * @param ticks The number of ticks to calculate\n   * @param  time The time to get the next tick from\n   * @return The duration of the number of ticks from the given time in seconds\n   */\n\n\n  TickParam.prototype.getDurationOfTicks = function (ticks, time) {\n    var computedTime = this.toSeconds(time);\n    var currentTick = this.getTicksAtTime(time);\n    return this.getTimeOfTick(currentTick + ticks) - computedTime;\n  };\n  /**\n   * Given a tick, returns the time that tick occurs at.\n   * @return The time that the tick occurs.\n   */\n\n\n  TickParam.prototype.getTimeOfTick = function (tick) {\n    var before = this._events.get(tick, \"ticks\");\n\n    var after = this._events.getAfter(tick, \"ticks\");\n\n    if (before && before.ticks === tick) {\n      return before.time;\n    } else if (before && after && after.type === \"linearRampToValueAtTime\" && before.value !== after.value) {\n      var val0 = this._fromType(this.getValueAtTime(before.time));\n\n      var val1 = this._fromType(this.getValueAtTime(after.time));\n\n      var delta = (val1 - val0) / (after.time - before.time);\n      var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n      var sol1 = (-val0 + k) / delta;\n      var sol2 = (-val0 - k) / delta;\n      return (sol1 > 0 ? sol1 : sol2) + before.time;\n    } else if (before) {\n      if (before.value === 0) {\n        return Infinity;\n      } else {\n        return before.time + (tick - before.ticks) / before.value;\n      }\n    } else {\n      return tick / this._initialValue;\n    }\n  };\n  /**\n   * Convert some number of ticks their the duration in seconds accounting\n   * for any automation curves starting at the given time.\n   * @param  ticks The number of ticks to convert to seconds.\n   * @param  when  When along the automation timeline to convert the ticks.\n   * @return The duration in seconds of the ticks.\n   */\n\n\n  TickParam.prototype.ticksToTime = function (ticks, when) {\n    return this.getDurationOfTicks(ticks, when);\n  };\n  /**\n   * The inverse of [[ticksToTime]]. Convert a duration in\n   * seconds to the corresponding number of ticks accounting for any\n   * automation curves starting at the given time.\n   * @param  duration The time interval to convert to ticks.\n   * @param  when When along the automation timeline to convert the ticks.\n   * @return The duration in ticks.\n   */\n\n\n  TickParam.prototype.timeToTicks = function (duration, when) {\n    var computedTime = this.toSeconds(when);\n    var computedDuration = this.toSeconds(duration);\n    var startTicks = this.getTicksAtTime(computedTime);\n    var endTicks = this.getTicksAtTime(computedTime + computedDuration);\n    return endTicks - startTicks;\n  };\n  /**\n   * Convert from the type when the unit value is BPM\n   */\n\n\n  TickParam.prototype._fromType = function (val) {\n    if (this.units === \"bpm\" && this.multiplier) {\n      return 1 / (60 / val / this.multiplier);\n    } else {\n      return _super.prototype._fromType.call(this, val);\n    }\n  };\n  /**\n   * Special case of type conversion where the units === \"bpm\"\n   */\n\n\n  TickParam.prototype._toType = function (val) {\n    if (this.units === \"bpm\" && this.multiplier) {\n      return val / this.multiplier * 60;\n    } else {\n      return _super.prototype._toType.call(this, val);\n    }\n  };\n\n  Object.defineProperty(TickParam.prototype, \"multiplier\", {\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get: function () {\n      return this._multiplier;\n    },\n    set: function (m) {\n      // get and reset the current value with the new multiplier\n      // might be necessary to clear all the previous values\n      var currentVal = this.value;\n      this._multiplier = m;\n      this.cancelScheduledValues(0);\n      this.setValueAtTime(currentVal, 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TickParam;\n}(Param);\n\nexport { TickParam };","import { __extends } from \"tslib\";\nimport { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\n\nvar TickSignal =\n/** @class */\nfunction (_super) {\n  __extends(TickSignal, _super);\n\n  function TickSignal() {\n    var _this = _super.call(this, optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"])) || this;\n\n    _this.name = \"TickSignal\";\n    var options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n    _this.input = _this._param = new TickParam({\n      context: _this.context,\n      convert: options.convert,\n      multiplier: options.multiplier,\n      param: _this._constantSource.offset,\n      units: options.units,\n      value: options.value\n    });\n    return _this;\n  }\n\n  TickSignal.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  };\n\n  TickSignal.prototype.ticksToTime = function (ticks, when) {\n    return this._param.ticksToTime(ticks, when);\n  };\n\n  TickSignal.prototype.timeToTicks = function (duration, when) {\n    return this._param.timeToTicks(duration, when);\n  };\n\n  TickSignal.prototype.getTimeOfTick = function (tick) {\n    return this._param.getTimeOfTick(tick);\n  };\n\n  TickSignal.prototype.getDurationOfTicks = function (ticks, time) {\n    return this._param.getDurationOfTicks(ticks, time);\n  };\n\n  TickSignal.prototype.getTicksAtTime = function (time) {\n    return this._param.getTicksAtTime(time);\n  };\n\n  Object.defineProperty(TickSignal.prototype, \"multiplier\", {\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get: function () {\n      return this._param.multiplier;\n    },\n    set: function (m) {\n      this._param.multiplier = m;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TickSignal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._param.dispose();\n\n    return this;\n  };\n\n  return TickSignal;\n}(Signal);\n\nexport { TickSignal };","import { __extends } from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\n\nvar TickSource =\n/** @class */\nfunction (_super) {\n  __extends(TickSource, _super);\n\n  function TickSource() {\n    var _this = _super.call(this, optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"TickSource\";\n    /**\n     * The state timeline\n     */\n\n    _this._state = new StateTimeline();\n    /**\n     * The offset values of the ticks\n     */\n\n    _this._tickOffset = new Timeline();\n    var options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n    _this.frequency = new TickSignal({\n      context: _this.context,\n      units: options.units,\n      value: options.frequency\n    });\n    readOnly(_this, \"frequency\"); // set the initial state\n\n    _this._state.setStateAtTime(\"stopped\", 0); // add the first event\n\n\n    _this.setTicksAtTime(0, 0);\n\n    return _this;\n  }\n\n  TickSource.getDefaults = function () {\n    return Object.assign({\n      frequency: 1,\n      units: \"hertz\"\n    }, ToneWithContext.getDefaults());\n  };\n\n  Object.defineProperty(TickSource.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get: function () {\n      return this.getStateAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the clock at the given time. Optionally pass in an offset\n   * of where to start the tick counter from.\n   * @param  time    The time the clock should start\n   * @param offset The number of ticks to start the source at\n   */\n\n  TickSource.prototype.start = function (time, offset) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(computedTime) !== \"started\") {\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      if (isDefined(offset)) {\n        this.setTicksAtTime(offset, computedTime);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Stop the clock. Stopping the clock resets the tick counter to 0.\n   * @param time The time when the clock should stop.\n   */\n\n\n  TickSource.prototype.stop = function (time) {\n    var computedTime = this.toSeconds(time); // cancel the previous stop\n\n    if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n      var event_1 = this._state.get(computedTime);\n\n      if (event_1 && event_1.time > 0) {\n        this._tickOffset.cancel(event_1.time);\n\n        this._state.cancel(event_1.time);\n      }\n    }\n\n    this._state.cancel(computedTime);\n\n    this._state.setStateAtTime(\"stopped\", computedTime);\n\n    this.setTicksAtTime(0, computedTime);\n    return this;\n  };\n  /**\n   * Pause the clock. Pausing does not reset the tick counter.\n   * @param time The time when the clock should stop.\n   */\n\n\n  TickSource.prototype.pause = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      this._state.setStateAtTime(\"paused\", computedTime);\n    }\n\n    return this;\n  };\n  /**\n   * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n   * @param time When to clear the events after\n   */\n\n\n  TickSource.prototype.cancel = function (time) {\n    time = this.toSeconds(time);\n\n    this._state.cancel(time);\n\n    this._tickOffset.cancel(time);\n\n    return this;\n  };\n  /**\n   * Get the elapsed ticks at the given time\n   * @param  time  When to get the tick value\n   * @return The number of ticks\n   */\n\n\n  TickSource.prototype.getTicksAtTime = function (time) {\n    var _this = this;\n\n    var computedTime = this.toSeconds(time);\n\n    var stopEvent = this._state.getLastState(\"stopped\", computedTime); // this event allows forEachBetween to iterate until the current time\n\n\n    var tmpEvent = {\n      state: \"paused\",\n      time: computedTime\n    };\n\n    this._state.add(tmpEvent); // keep track of the previous offset event\n\n\n    var lastState = stopEvent;\n    var elapsedTicks = 0; // iterate through all the events since the last stop\n\n    this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, function (e) {\n      var periodStartTime = lastState.time; // if there is an offset event in this period use that\n\n      var offsetEvent = _this._tickOffset.get(e.time);\n\n      if (offsetEvent && offsetEvent.time >= lastState.time) {\n        elapsedTicks = offsetEvent.ticks;\n        periodStartTime = offsetEvent.time;\n      }\n\n      if (lastState.state === \"started\" && e.state !== \"started\") {\n        elapsedTicks += _this.frequency.getTicksAtTime(e.time) - _this.frequency.getTicksAtTime(periodStartTime);\n      }\n\n      lastState = e;\n    }); // remove the temporary event\n\n\n    this._state.remove(tmpEvent); // return the ticks\n\n\n    return elapsedTicks;\n  };\n\n  Object.defineProperty(TickSource.prototype, \"ticks\", {\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get: function () {\n      return this.getTicksAtTime(this.now());\n    },\n    set: function (t) {\n      this.setTicksAtTime(t, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TickSource.prototype, \"seconds\", {\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get: function () {\n      return this.getSecondsAtTime(this.now());\n    },\n    set: function (s) {\n      var now = this.now();\n      var ticks = this.frequency.timeToTicks(s, now);\n      this.setTicksAtTime(ticks, now);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Return the elapsed seconds at the given time.\n   * @param  time  When to get the elapsed seconds\n   * @return  The number of elapsed seconds\n   */\n\n  TickSource.prototype.getSecondsAtTime = function (time) {\n    var _this = this;\n\n    time = this.toSeconds(time);\n\n    var stopEvent = this._state.getLastState(\"stopped\", time); // this event allows forEachBetween to iterate until the current time\n\n\n    var tmpEvent = {\n      state: \"paused\",\n      time: time\n    };\n\n    this._state.add(tmpEvent); // keep track of the previous offset event\n\n\n    var lastState = stopEvent;\n    var elapsedSeconds = 0; // iterate through all the events since the last stop\n\n    this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {\n      var periodStartTime = lastState.time; // if there is an offset event in this period use that\n\n      var offsetEvent = _this._tickOffset.get(e.time);\n\n      if (offsetEvent && offsetEvent.time >= lastState.time) {\n        elapsedSeconds = offsetEvent.seconds;\n        periodStartTime = offsetEvent.time;\n      }\n\n      if (lastState.state === \"started\" && e.state !== \"started\") {\n        elapsedSeconds += e.time - periodStartTime;\n      }\n\n      lastState = e;\n    }); // remove the temporary event\n\n\n    this._state.remove(tmpEvent); // return the ticks\n\n\n    return elapsedSeconds;\n  };\n  /**\n   * Set the clock's ticks at the given time.\n   * @param  ticks The tick value to set\n   * @param  time  When to set the tick value\n   */\n\n\n  TickSource.prototype.setTicksAtTime = function (ticks, time) {\n    time = this.toSeconds(time);\n\n    this._tickOffset.cancel(time);\n\n    this._tickOffset.add({\n      seconds: this.frequency.getDurationOfTicks(ticks, time),\n      ticks: ticks,\n      time: time\n    });\n\n    return this;\n  };\n  /**\n   * Returns the scheduled state at the given time.\n   * @param  time  The time to query.\n   */\n\n\n  TickSource.prototype.getStateAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this._state.getValueAtTime(time);\n  };\n  /**\n   * Get the time of the given tick. The second argument\n   * is when to test before. Since ticks can be set (with setTicksAtTime)\n   * there may be multiple times for a given tick value.\n   * @param  tick The tick number.\n   * @param  before When to measure the tick value from.\n   * @return The time of the tick\n   */\n\n\n  TickSource.prototype.getTimeOfTick = function (tick, before) {\n    if (before === void 0) {\n      before = this.now();\n    }\n\n    var offset = this._tickOffset.get(before);\n\n    var event = this._state.get(before);\n\n    var startTime = Math.max(offset.time, event.time);\n    var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n    return this.frequency.getTimeOfTick(absoluteTicks);\n  };\n  /**\n   * Invoke the callback event at all scheduled ticks between the\n   * start time and the end time\n   * @param  startTime  The beginning of the search range\n   * @param  endTime    The end of the search range\n   * @param  callback   The callback to invoke with each tick\n   */\n\n\n  TickSource.prototype.forEachTickBetween = function (startTime, endTime, callback) {\n    var _this = this; // only iterate through the sections where it is \"started\"\n\n\n    var lastStateEvent = this._state.get(startTime);\n\n    this._state.forEachBetween(startTime, endTime, function (event) {\n      if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n        _this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - _this.sampleTime, callback);\n      }\n\n      lastStateEvent = event;\n    });\n\n    var error = null;\n\n    if (lastStateEvent && lastStateEvent.state === \"started\") {\n      var maxStartTime = Math.max(lastStateEvent.time, startTime); // figure out the difference between the frequency ticks and the\n\n      var startTicks = this.frequency.getTicksAtTime(maxStartTime);\n      var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n      var diff = startTicks - ticksAtStart;\n      var offset = Math.ceil(diff) - diff; // guard against floating point issues\n\n      offset = EQ(offset, 1) ? 0 : offset;\n      var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\n      while (nextTickTime < endTime) {\n        try {\n          callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n        } catch (e) {\n          error = e;\n          break;\n        }\n\n        nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n      }\n    }\n\n    if (error) {\n      throw error;\n    }\n\n    return this;\n  };\n  /**\n   * Clean up\n   */\n\n\n  TickSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._state.dispose();\n\n    this._tickOffset.dispose();\n\n    this.frequency.dispose();\n    return this;\n  };\n\n  return TickSource;\n}(ToneWithContext);\n\nexport { TickSource };","import { __extends } from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\n\nvar Clock =\n/** @class */\nfunction (_super) {\n  __extends(Clock, _super);\n\n  function Clock() {\n    var _this = _super.call(this, optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"])) || this;\n\n    _this.name = \"Clock\";\n    /**\n     * The callback function to invoke at the scheduled tick.\n     */\n\n    _this.callback = noOp;\n    /**\n     * The last time the loop callback was invoked\n     */\n\n    _this._lastUpdate = 0;\n    /**\n     * Keep track of the playback state\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * Context bound reference to the _loop method\n     * This is necessary to remove the event in the end.\n     */\n\n    _this._boundLoop = _this._loop.bind(_this);\n    var options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n    _this.callback = options.callback;\n    _this._tickSource = new TickSource({\n      context: _this.context,\n      frequency: options.frequency,\n      units: options.units\n    });\n    _this._lastUpdate = 0;\n    _this.frequency = _this._tickSource.frequency;\n    readOnly(_this, \"frequency\"); // add an initial state\n\n    _this._state.setStateAtTime(\"stopped\", 0); // bind a callback to the worker thread\n\n\n    _this.context.on(\"tick\", _this._boundLoop);\n\n    return _this;\n  }\n\n  Clock.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      callback: noOp,\n      frequency: 1,\n      units: \"hertz\"\n    });\n  };\n\n  Object.defineProperty(Clock.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get: function () {\n      return this._state.getValueAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the clock at the given time. Optionally pass in an offset\n   * of where to start the tick counter from.\n   * @param  time    The time the clock should start\n   * @param offset  Where the tick counter starts counting from.\n   */\n\n  Clock.prototype.start = function (time, offset) {\n    // make sure the context is running\n    assertContextRunning(this.context); // start the loop\n\n    var computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n\n    if (this._state.getValueAtTime(computedTime) !== \"started\") {\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      this._tickSource.start(computedTime, offset);\n\n      if (computedTime < this._lastUpdate) {\n        this.emit(\"start\", computedTime, offset);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Stop the clock. Stopping the clock resets the tick counter to 0.\n   * @param time The time when the clock should stop.\n   * @example\n   * const clock = new Tone.Clock(time => {\n   * \tconsole.log(time);\n   * }, 1);\n   * clock.start();\n   * // stop the clock after 10 seconds\n   * clock.stop(\"+10\");\n   */\n\n\n  Clock.prototype.stop = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"stop\", computedTime);\n\n    this._state.cancel(computedTime);\n\n    this._state.setStateAtTime(\"stopped\", computedTime);\n\n    this._tickSource.stop(computedTime);\n\n    if (computedTime < this._lastUpdate) {\n      this.emit(\"stop\", computedTime);\n    }\n\n    return this;\n  };\n  /**\n   * Pause the clock. Pausing does not reset the tick counter.\n   * @param time The time when the clock should stop.\n   */\n\n\n  Clock.prototype.pause = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      this._state.setStateAtTime(\"paused\", computedTime);\n\n      this._tickSource.pause(computedTime);\n\n      if (computedTime < this._lastUpdate) {\n        this.emit(\"pause\", computedTime);\n      }\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(Clock.prototype, \"ticks\", {\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get: function () {\n      return Math.ceil(this.getTicksAtTime(this.now()));\n    },\n    set: function (t) {\n      this._tickSource.ticks = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Clock.prototype, \"seconds\", {\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get: function () {\n      return this._tickSource.seconds;\n    },\n    set: function (s) {\n      this._tickSource.seconds = s;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Return the elapsed seconds at the given time.\n   * @param  time  When to get the elapsed seconds\n   * @return  The number of elapsed seconds\n   */\n\n  Clock.prototype.getSecondsAtTime = function (time) {\n    return this._tickSource.getSecondsAtTime(time);\n  };\n  /**\n   * Set the clock's ticks at the given time.\n   * @param  ticks The tick value to set\n   * @param  time  When to set the tick value\n   */\n\n\n  Clock.prototype.setTicksAtTime = function (ticks, time) {\n    this._tickSource.setTicksAtTime(ticks, time);\n\n    return this;\n  };\n  /**\n   * Get the time of the given tick. The second argument\n   * is when to test before. Since ticks can be set (with setTicksAtTime)\n   * there may be multiple times for a given tick value.\n   * @param  tick The tick number.\n   * @param  before When to measure the tick value from.\n   * @return The time of the tick\n   */\n\n\n  Clock.prototype.getTimeOfTick = function (tick, before) {\n    if (before === void 0) {\n      before = this.now();\n    }\n\n    return this._tickSource.getTimeOfTick(tick, before);\n  };\n  /**\n   * Get the clock's ticks at the given time.\n   * @param  time  When to get the tick value\n   * @return The tick value at the given time.\n   */\n\n\n  Clock.prototype.getTicksAtTime = function (time) {\n    return this._tickSource.getTicksAtTime(time);\n  };\n  /**\n   * Get the time of the next tick\n   * @param  offset The tick number.\n   */\n\n\n  Clock.prototype.nextTickTime = function (offset, when) {\n    var computedTime = this.toSeconds(when);\n    var currentTick = this.getTicksAtTime(computedTime);\n    return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n  };\n  /**\n   * The scheduling loop.\n   */\n\n\n  Clock.prototype._loop = function () {\n    var _this = this;\n\n    var startTime = this._lastUpdate;\n    var endTime = this.now();\n    this._lastUpdate = endTime;\n    this.log(\"loop\", startTime, endTime);\n\n    if (startTime !== endTime) {\n      // the state change events\n      this._state.forEachBetween(startTime, endTime, function (e) {\n        switch (e.state) {\n          case \"started\":\n            var offset = _this._tickSource.getTicksAtTime(e.time);\n\n            _this.emit(\"start\", e.time, offset);\n\n            break;\n\n          case \"stopped\":\n            if (e.time !== 0) {\n              _this.emit(\"stop\", e.time);\n            }\n\n            break;\n\n          case \"paused\":\n            _this.emit(\"pause\", e.time);\n\n            break;\n        }\n      }); // the tick callbacks\n\n\n      this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {\n        _this.callback(time, ticks);\n      });\n    }\n  };\n  /**\n   * Returns the scheduled state at the given time.\n   * @param  time  The time to query.\n   * @return  The name of the state input in setStateAtTime.\n   * @example\n   * const clock = new Tone.Clock();\n   * clock.start(\"+0.1\");\n   * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n   */\n\n\n  Clock.prototype.getStateAtTime = function (time) {\n    var computedTime = this.toSeconds(time);\n    return this._state.getValueAtTime(computedTime);\n  };\n  /**\n   * Clean up\n   */\n\n\n  Clock.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.context.off(\"tick\", this._boundLoop);\n\n    this._tickSource.dispose();\n\n    this._state.dispose();\n\n    return this;\n  };\n\n  return Clock;\n}(ToneWithContext);\n\nexport { Clock };\nEmitter.mixin(Clock);","import { __extends } from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\n\nvar TimelineValue =\n/** @class */\nfunction (_super) {\n  __extends(TimelineValue, _super);\n  /**\n   * @param initialValue The value to return if there is no scheduled values\n   */\n\n\n  function TimelineValue(initialValue) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"TimelineValue\";\n    /**\n     * The timeline which stores the values\n     */\n\n    _this._timeline = new Timeline({\n      memory: 10\n    });\n    _this._initialValue = initialValue;\n    return _this;\n  }\n  /**\n   * Set the value at the given time\n   */\n\n\n  TimelineValue.prototype.set = function (value, time) {\n    this._timeline.add({\n      value: value,\n      time: time\n    });\n\n    return this;\n  };\n  /**\n   * Get the value at the given time\n   */\n\n\n  TimelineValue.prototype.get = function (time) {\n    var event = this._timeline.get(time);\n\n    if (event) {\n      return event.value;\n    } else {\n      return this._initialValue;\n    }\n  };\n\n  return TimelineValue;\n}(Tone);\n\nexport { TimelineValue };","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\n\nvar TicksClass =\n/** @class */\nfunction (_super) {\n  __extends(TicksClass, _super);\n\n  function TicksClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Ticks\";\n    _this.defaultUnits = \"i\";\n    return _this;\n  }\n  /**\n   * Get the current time in the given units\n   */\n\n\n  TicksClass.prototype._now = function () {\n    return this.context.transport.ticks;\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  TicksClass.prototype._beatsToUnits = function (beats) {\n    return this._getPPQ() * beats;\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  TicksClass.prototype._secondsToUnits = function (seconds) {\n    return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  TicksClass.prototype._ticksToUnits = function (ticks) {\n    return ticks;\n  };\n  /**\n   * Return the time in ticks\n   */\n\n\n  TicksClass.prototype.toTicks = function () {\n    return this.valueOf();\n  };\n  /**\n   * Return the time in seconds\n   */\n\n\n  TicksClass.prototype.toSeconds = function () {\n    return this.valueOf() / this._getPPQ() * (60 / this._getBpm());\n  };\n\n  return TicksClass;\n}(TransportTimeClass);\n\nexport { TicksClass };\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\n\nexport function Ticks(value, units) {\n  return new TicksClass(getContext(), value, units);\n}","import { __extends, __values } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\n\nvar IntervalTimeline =\n/** @class */\nfunction (_super) {\n  __extends(IntervalTimeline, _super);\n\n  function IntervalTimeline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"IntervalTimeline\";\n    /**\n     * The root node of the inteval tree\n     */\n\n    _this._root = null;\n    /**\n     * Keep track of the length of the timeline.\n     */\n\n    _this._length = 0;\n    return _this;\n  }\n  /**\n   * The event to add to the timeline. All events must\n   * have a time and duration value\n   * @param  event  The event to add to the timeline\n   */\n\n\n  IntervalTimeline.prototype.add = function (event) {\n    assert(isDefined(event.time), \"Events must have a time property\");\n    assert(isDefined(event.duration), \"Events must have a duration parameter\");\n    event.time = event.time.valueOf();\n    var node = new IntervalNode(event.time, event.time + event.duration, event);\n\n    if (this._root === null) {\n      this._root = node;\n    } else {\n      this._root.insert(node);\n    }\n\n    this._length++; // Restructure tree to be balanced\n\n    while (node !== null) {\n      node.updateHeight();\n      node.updateMax();\n\n      this._rebalance(node);\n\n      node = node.parent;\n    }\n\n    return this;\n  };\n  /**\n   * Remove an event from the timeline.\n   * @param  event  The event to remove from the timeline\n   */\n\n\n  IntervalTimeline.prototype.remove = function (event) {\n    var e_1, _a;\n\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.search(event.time, results);\n\n      try {\n        for (var results_1 = __values(results), results_1_1 = results_1.next(); !results_1_1.done; results_1_1 = results_1.next()) {\n          var node = results_1_1.value;\n\n          if (node.event === event) {\n            this._removeNode(node);\n\n            this._length--;\n            break;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (results_1_1 && !results_1_1.done && (_a = results_1.return)) _a.call(results_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(IntervalTimeline.prototype, \"length\", {\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get: function () {\n      return this._length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Remove events whose time time is after the given time\n   * @param  after  The time to query.\n   */\n\n  IntervalTimeline.prototype.cancel = function (after) {\n    var _this = this;\n\n    this.forEachFrom(after, function (event) {\n      return _this.remove(event);\n    });\n    return this;\n  };\n  /**\n   * Set the root node as the given node\n   */\n\n\n  IntervalTimeline.prototype._setRoot = function (node) {\n    this._root = node;\n\n    if (this._root !== null) {\n      this._root.parent = null;\n    }\n  };\n  /**\n   * Replace the references to the node in the node's parent\n   * with the replacement node.\n   */\n\n\n  IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n    if (node.parent !== null) {\n      if (node.isLeftChild()) {\n        node.parent.left = replacement;\n      } else {\n        node.parent.right = replacement;\n      }\n\n      this._rebalance(node.parent);\n    } else {\n      this._setRoot(replacement);\n    }\n  };\n  /**\n   * Remove the node from the tree and replace it with\n   * a successor which follows the schema.\n   */\n\n\n  IntervalTimeline.prototype._removeNode = function (node) {\n    if (node.left === null && node.right === null) {\n      this._replaceNodeInParent(node, null);\n    } else if (node.right === null) {\n      this._replaceNodeInParent(node, node.left);\n    } else if (node.left === null) {\n      this._replaceNodeInParent(node, node.right);\n    } else {\n      var balance = node.getBalance();\n      var replacement = void 0;\n      var temp = null;\n\n      if (balance > 0) {\n        if (node.left.right === null) {\n          replacement = node.left;\n          replacement.right = node.right;\n          temp = replacement;\n        } else {\n          replacement = node.left.right;\n\n          while (replacement.right !== null) {\n            replacement = replacement.right;\n          }\n\n          if (replacement.parent) {\n            replacement.parent.right = replacement.left;\n            temp = replacement.parent;\n            replacement.left = node.left;\n            replacement.right = node.right;\n          }\n        }\n      } else if (node.right.left === null) {\n        replacement = node.right;\n        replacement.left = node.left;\n        temp = replacement;\n      } else {\n        replacement = node.right.left;\n\n        while (replacement.left !== null) {\n          replacement = replacement.left;\n        }\n\n        if (replacement.parent) {\n          replacement.parent.left = replacement.right;\n          temp = replacement.parent;\n          replacement.left = node.left;\n          replacement.right = node.right;\n        }\n      }\n\n      if (node.parent !== null) {\n        if (node.isLeftChild()) {\n          node.parent.left = replacement;\n        } else {\n          node.parent.right = replacement;\n        }\n      } else {\n        this._setRoot(replacement);\n      }\n\n      if (temp) {\n        this._rebalance(temp);\n      }\n    }\n\n    node.dispose();\n  };\n  /**\n   * Rotate the tree to the left\n   */\n\n\n  IntervalTimeline.prototype._rotateLeft = function (node) {\n    var parent = node.parent;\n    var isLeftChild = node.isLeftChild(); // Make node.right the new root of this sub tree (instead of node)\n\n    var pivotNode = node.right;\n\n    if (pivotNode) {\n      node.right = pivotNode.left;\n      pivotNode.left = node;\n    }\n\n    if (parent !== null) {\n      if (isLeftChild) {\n        parent.left = pivotNode;\n      } else {\n        parent.right = pivotNode;\n      }\n    } else {\n      this._setRoot(pivotNode);\n    }\n  };\n  /**\n   * Rotate the tree to the right\n   */\n\n\n  IntervalTimeline.prototype._rotateRight = function (node) {\n    var parent = node.parent;\n    var isLeftChild = node.isLeftChild(); // Make node.left the new root of this sub tree (instead of node)\n\n    var pivotNode = node.left;\n\n    if (pivotNode) {\n      node.left = pivotNode.right;\n      pivotNode.right = node;\n    }\n\n    if (parent !== null) {\n      if (isLeftChild) {\n        parent.left = pivotNode;\n      } else {\n        parent.right = pivotNode;\n      }\n    } else {\n      this._setRoot(pivotNode);\n    }\n  };\n  /**\n   * Balance the BST\n   */\n\n\n  IntervalTimeline.prototype._rebalance = function (node) {\n    var balance = node.getBalance();\n\n    if (balance > 1 && node.left) {\n      if (node.left.getBalance() < 0) {\n        this._rotateLeft(node.left);\n      } else {\n        this._rotateRight(node);\n      }\n    } else if (balance < -1 && node.right) {\n      if (node.right.getBalance() > 0) {\n        this._rotateRight(node.right);\n      } else {\n        this._rotateLeft(node);\n      }\n    }\n  };\n  /**\n   * Get an event whose time and duration span the give time. Will\n   * return the match whose \"time\" value is closest to the given time.\n   * @return  The event which spans the desired time\n   */\n\n\n  IntervalTimeline.prototype.get = function (time) {\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.search(time, results);\n\n      if (results.length > 0) {\n        var max = results[0];\n\n        for (var i = 1; i < results.length; i++) {\n          if (results[i].low > max.low) {\n            max = results[i];\n          }\n        }\n\n        return max.event;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Iterate over everything in the timeline.\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  IntervalTimeline.prototype.forEach = function (callback) {\n    if (this._root !== null) {\n      var allNodes_1 = [];\n\n      this._root.traverse(function (node) {\n        return allNodes_1.push(node);\n      });\n\n      allNodes_1.forEach(function (node) {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array in which the given time\n   * overlaps with the time and duration time of the event.\n   * @param  time The time to check if items are overlapping\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.search(time, results);\n\n      results.forEach(function (node) {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array in which the time is greater\n   * than or equal to the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  IntervalTimeline.prototype.forEachFrom = function (time, callback) {\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.searchAfter(time, results);\n\n      results.forEach(function (node) {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Clean up\n   */\n\n\n  IntervalTimeline.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._root !== null) {\n      this._root.traverse(function (node) {\n        return node.dispose();\n      });\n    }\n\n    this._root = null;\n    return this;\n  };\n\n  return IntervalTimeline;\n}(Tone);\n\nexport { IntervalTimeline }; //-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\n\nvar IntervalNode =\n/** @class */\nfunction () {\n  function IntervalNode(low, high, event) {\n    // the nodes to the left\n    this._left = null; // the nodes to the right\n\n    this._right = null; // the parent node\n\n    this.parent = null; // the number of child nodes\n\n    this.height = 0;\n    this.event = event; // the low value\n\n    this.low = low; // the high value\n\n    this.high = high; // the high value for this and all child nodes\n\n    this.max = this.high;\n  }\n  /**\n   * Insert a node into the correct spot in the tree\n   */\n\n\n  IntervalNode.prototype.insert = function (node) {\n    if (node.low <= this.low) {\n      if (this.left === null) {\n        this.left = node;\n      } else {\n        this.left.insert(node);\n      }\n    } else if (this.right === null) {\n      this.right = node;\n    } else {\n      this.right.insert(node);\n    }\n  };\n  /**\n   * Search the tree for nodes which overlap\n   * with the given point\n   * @param  point  The point to query\n   * @param  results  The array to put the results\n   */\n\n\n  IntervalNode.prototype.search = function (point, results) {\n    // If p is to the right of the rightmost point of any interval\n    // in this node and all children, there won't be any matches.\n    if (point > this.max) {\n      return;\n    } // Search left children\n\n\n    if (this.left !== null) {\n      this.left.search(point, results);\n    } // Check this node\n\n\n    if (this.low <= point && this.high > point) {\n      results.push(this);\n    } // If p is to the left of the time of this interval,\n    // then it can't be in any child to the right.\n\n\n    if (this.low > point) {\n      return;\n    } // Search right children\n\n\n    if (this.right !== null) {\n      this.right.search(point, results);\n    }\n  };\n  /**\n   * Search the tree for nodes which are less\n   * than the given point\n   * @param  point  The point to query\n   * @param  results  The array to put the results\n   */\n\n\n  IntervalNode.prototype.searchAfter = function (point, results) {\n    // Check this node\n    if (this.low >= point) {\n      results.push(this);\n\n      if (this.left !== null) {\n        this.left.searchAfter(point, results);\n      }\n    } // search the right side\n\n\n    if (this.right !== null) {\n      this.right.searchAfter(point, results);\n    }\n  };\n  /**\n   * Invoke the callback on this element and both it's branches\n   * @param  {Function}  callback\n   */\n\n\n  IntervalNode.prototype.traverse = function (callback) {\n    callback(this);\n\n    if (this.left !== null) {\n      this.left.traverse(callback);\n    }\n\n    if (this.right !== null) {\n      this.right.traverse(callback);\n    }\n  };\n  /**\n   * Update the height of the node\n   */\n\n\n  IntervalNode.prototype.updateHeight = function () {\n    if (this.left !== null && this.right !== null) {\n      this.height = Math.max(this.left.height, this.right.height) + 1;\n    } else if (this.right !== null) {\n      this.height = this.right.height + 1;\n    } else if (this.left !== null) {\n      this.height = this.left.height + 1;\n    } else {\n      this.height = 0;\n    }\n  };\n  /**\n   * Update the height of the node\n   */\n\n\n  IntervalNode.prototype.updateMax = function () {\n    this.max = this.high;\n\n    if (this.left !== null) {\n      this.max = Math.max(this.max, this.left.max);\n    }\n\n    if (this.right !== null) {\n      this.max = Math.max(this.max, this.right.max);\n    }\n  };\n  /**\n   * The balance is how the leafs are distributed on the node\n   * @return  Negative numbers are balanced to the right\n   */\n\n\n  IntervalNode.prototype.getBalance = function () {\n    var balance = 0;\n\n    if (this.left !== null && this.right !== null) {\n      balance = this.left.height - this.right.height;\n    } else if (this.left !== null) {\n      balance = this.left.height + 1;\n    } else if (this.right !== null) {\n      balance = -(this.right.height + 1);\n    }\n\n    return balance;\n  };\n  /**\n   * @returns true if this node is the left child of its parent\n   */\n\n\n  IntervalNode.prototype.isLeftChild = function () {\n    return this.parent !== null && this.parent.left === this;\n  };\n\n  Object.defineProperty(IntervalNode.prototype, \"left\", {\n    /**\n     * get/set the left node\n     */\n    get: function () {\n      return this._left;\n    },\n    set: function (node) {\n      this._left = node;\n\n      if (node !== null) {\n        node.parent = this;\n      }\n\n      this.updateHeight();\n      this.updateMax();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IntervalNode.prototype, \"right\", {\n    /**\n     * get/set the right node\n     */\n    get: function () {\n      return this._right;\n    },\n    set: function (node) {\n      this._right = node;\n\n      if (node !== null) {\n        node.parent = this;\n      }\n\n      this.updateHeight();\n      this.updateMax();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * null out references.\n   */\n\n  IntervalNode.prototype.dispose = function () {\n    this.parent = null;\n    this._left = null;\n    this._right = null;\n    this.event = null;\n  };\n\n  return IntervalNode;\n}();","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\n\nvar TransportEvent =\n/** @class */\nfunction () {\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n  function TransportEvent(transport, opts) {\n    /**\n     * The unique id of the event\n     */\n    this.id = TransportEvent._eventId++;\n    var options = Object.assign(TransportEvent.getDefaults(), opts);\n    this.transport = transport;\n    this.callback = options.callback;\n    this._once = options.once;\n    this.time = options.time;\n  }\n\n  TransportEvent.getDefaults = function () {\n    return {\n      callback: noOp,\n      once: false,\n      time: 0\n    };\n  };\n  /**\n   * Invoke the event callback.\n   * @param  time  The AudioContext time in seconds of the event\n   */\n\n\n  TransportEvent.prototype.invoke = function (time) {\n    if (this.callback) {\n      this.callback(time);\n\n      if (this._once) {\n        this.transport.clear(this.id);\n      }\n    }\n  };\n  /**\n   * Clean up\n   */\n\n\n  TransportEvent.prototype.dispose = function () {\n    this.callback = undefined;\n    return this;\n  };\n  /**\n   * Current ID counter\n   */\n\n\n  TransportEvent._eventId = 0;\n  return TransportEvent;\n}();\n\nexport { TransportEvent };","import { __extends } from \"tslib\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\n\nvar TransportRepeatEvent =\n/** @class */\nfunction (_super) {\n  __extends(TransportRepeatEvent, _super);\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n\n\n  function TransportRepeatEvent(transport, opts) {\n    var _this = _super.call(this, transport, opts) || this;\n    /**\n     * The ID of the current timeline event\n     */\n\n\n    _this._currentId = -1;\n    /**\n     * The ID of the next timeline event\n     */\n\n    _this._nextId = -1;\n    /**\n     * The time of the next event\n     */\n\n    _this._nextTick = _this.time;\n    /**\n     * a reference to the bound start method\n     */\n\n    _this._boundRestart = _this._restart.bind(_this);\n    var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n    _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n    _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n    _this._nextTick = options.time;\n\n    _this.transport.on(\"start\", _this._boundRestart);\n\n    _this.transport.on(\"loopStart\", _this._boundRestart);\n\n    _this.context = _this.transport.context;\n\n    _this._restart();\n\n    return _this;\n  }\n\n  TransportRepeatEvent.getDefaults = function () {\n    return Object.assign({}, TransportEvent.getDefaults(), {\n      duration: Infinity,\n      interval: 1,\n      once: false\n    });\n  };\n  /**\n   * Invoke the callback. Returns the tick time which\n   * the next event should be scheduled at.\n   * @param  time  The AudioContext time in seconds of the event\n   */\n\n\n  TransportRepeatEvent.prototype.invoke = function (time) {\n    // create more events if necessary\n    this._createEvents(time); // call the super class\n\n\n    _super.prototype.invoke.call(this, time);\n  };\n  /**\n   * Push more events onto the timeline to keep up with the position of the timeline\n   */\n\n\n  TransportRepeatEvent.prototype._createEvents = function (time) {\n    // schedule the next event\n    var ticks = this.transport.getTicksAtTime(time);\n\n    if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n      this._nextTick += this._interval;\n      this._currentId = this._nextId;\n      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n  };\n  /**\n   * Push more events onto the timeline to keep up with the position of the timeline\n   */\n\n\n  TransportRepeatEvent.prototype._restart = function (time) {\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this._nextTick = this.time;\n    var ticks = this.transport.getTicksAtTime(time);\n\n    if (ticks > this.time) {\n      this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n    }\n\n    this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    this._nextTick += this._interval;\n    this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n  };\n  /**\n   * Clean up\n   */\n\n\n  TransportRepeatEvent.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this.transport.off(\"start\", this._boundRestart);\n    this.transport.off(\"loopStart\", this._boundRestart);\n    return this;\n  };\n\n  return TransportRepeatEvent;\n}(TransportEvent);\n\nexport { TransportRepeatEvent };","import { __extends } from \"tslib\";\nimport { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\n\nvar Transport =\n/** @class */\nfunction (_super) {\n  __extends(Transport, _super);\n\n  function Transport() {\n    var _this = _super.call(this, optionsFromArguments(Transport.getDefaults(), arguments)) || this;\n\n    _this.name = \"Transport\"; //-------------------------------------\n    // \tLOOPING\n    //-------------------------------------\n\n    /**\n     * If the transport loops or not.\n     */\n\n    _this._loop = new TimelineValue(false);\n    /**\n     * The loop start position in ticks\n     */\n\n    _this._loopStart = 0;\n    /**\n     * The loop end position in ticks\n     */\n\n    _this._loopEnd = 0; //-------------------------------------\n    // \tTIMELINE EVENTS\n    //-------------------------------------\n\n    /**\n     * All the events in an object to keep track by ID\n     */\n\n    _this._scheduledEvents = {};\n    /**\n     * The scheduled events.\n     */\n\n    _this._timeline = new Timeline();\n    /**\n     * Repeated events\n     */\n\n    _this._repeatedEvents = new IntervalTimeline();\n    /**\n     * All of the synced Signals\n     */\n\n    _this._syncedSignals = [];\n    /**\n     * The swing amount\n     */\n\n    _this._swingAmount = 0;\n    var options = optionsFromArguments(Transport.getDefaults(), arguments); // CLOCK/TEMPO\n\n    _this._ppq = options.ppq;\n    _this._clock = new Clock({\n      callback: _this._processTick.bind(_this),\n      context: _this.context,\n      frequency: 0,\n      units: \"bpm\"\n    });\n\n    _this._bindClockEvents();\n\n    _this.bpm = _this._clock.frequency;\n    _this._clock.frequency.multiplier = options.ppq;\n\n    _this.bpm.setValueAtTime(options.bpm, 0);\n\n    readOnly(_this, \"bpm\");\n    _this._timeSignature = options.timeSignature; // SWING\n\n    _this._swingTicks = options.ppq / 2; // 8n\n\n    return _this;\n  }\n\n  Transport.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      bpm: 120,\n      loopEnd: \"4m\",\n      loopStart: 0,\n      ppq: 192,\n      swing: 0,\n      swingSubdivision: \"8n\",\n      timeSignature: 4\n    });\n  }; //-------------------------------------\n  // \tTICKS\n  //-------------------------------------\n\n  /**\n   * called on every tick\n   * @param  tickTime clock relative tick time\n   */\n\n\n  Transport.prototype._processTick = function (tickTime, ticks) {\n    // handle swing\n    if (this._swingAmount > 0 && ticks % this._ppq !== 0 && // not on a downbeat\n    ticks % (this._swingTicks * 2) !== 0) {\n      // add some swing\n      var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\n      var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\n      tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n    } // do the loop test\n\n\n    if (this._loop.get(tickTime)) {\n      if (ticks >= this._loopEnd) {\n        this.emit(\"loopEnd\", tickTime);\n\n        this._clock.setTicksAtTime(this._loopStart, tickTime);\n\n        ticks = this._loopStart;\n        this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n        this.emit(\"loop\", tickTime);\n      }\n    } // invoke the timeline events scheduled on this tick\n\n\n    this._timeline.forEachAtTime(ticks, function (event) {\n      return event.invoke(tickTime);\n    });\n  }; //-------------------------------------\n  // \tSCHEDULABLE EVENTS\n  //-------------------------------------\n\n  /**\n   * Schedule an event along the timeline.\n   * @param callback The callback to be invoked at the time.\n   * @param time The time to invoke the callback at.\n   * @return The id of the event which can be used for canceling the event.\n   * @example\n   * // schedule an event on the 16th measure\n   * Tone.Transport.schedule((time) => {\n   * \t// invoked on measure 16\n   * \tconsole.log(\"measure 16!\");\n   * }, \"16:0:0\");\n   */\n\n\n  Transport.prototype.schedule = function (callback, time) {\n    var event = new TransportEvent(this, {\n      callback: callback,\n      time: new TransportTimeClass(this.context, time).toTicks()\n    });\n    return this._addEvent(event, this._timeline);\n  };\n  /**\n   * Schedule a repeated event along the timeline. The event will fire\n   * at the `interval` starting at the `startTime` and for the specified\n   * `duration`.\n   * @param  callback   The callback to invoke.\n   * @param  interval   The duration between successive callbacks. Must be a positive number.\n   * @param  startTime  When along the timeline the events should start being invoked.\n   * @param  duration How long the event should repeat.\n   * @return  The ID of the scheduled event. Use this to cancel the event.\n   * @example\n   * const osc = new Tone.Oscillator().toDestination().start();\n   * // a callback invoked every eighth note after the first measure\n   * Tone.Transport.scheduleRepeat((time) => {\n   * \tosc.start(time).stop(time + 0.1);\n   * }, \"8n\", \"1m\");\n   */\n\n\n  Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n    if (duration === void 0) {\n      duration = Infinity;\n    }\n\n    var event = new TransportRepeatEvent(this, {\n      callback: callback,\n      duration: new TimeClass(this.context, duration).toTicks(),\n      interval: new TimeClass(this.context, interval).toTicks(),\n      time: new TransportTimeClass(this.context, startTime).toTicks()\n    }); // kick it off if the Transport is started\n    // @ts-ignore\n\n    return this._addEvent(event, this._repeatedEvents);\n  };\n  /**\n   * Schedule an event that will be removed after it is invoked.\n   * @param callback The callback to invoke once.\n   * @param time The time the callback should be invoked.\n   * @returns The ID of the scheduled event.\n   */\n\n\n  Transport.prototype.scheduleOnce = function (callback, time) {\n    var event = new TransportEvent(this, {\n      callback: callback,\n      once: true,\n      time: new TransportTimeClass(this.context, time).toTicks()\n    });\n    return this._addEvent(event, this._timeline);\n  };\n  /**\n   * Clear the passed in event id from the timeline\n   * @param eventId The id of the event.\n   */\n\n\n  Transport.prototype.clear = function (eventId) {\n    if (this._scheduledEvents.hasOwnProperty(eventId)) {\n      var item = this._scheduledEvents[eventId.toString()];\n\n      item.timeline.remove(item.event);\n      item.event.dispose();\n      delete this._scheduledEvents[eventId.toString()];\n    }\n\n    return this;\n  };\n  /**\n   * Add an event to the correct timeline. Keep track of the\n   * timeline it was added to.\n   * @returns the event id which was just added\n   */\n\n\n  Transport.prototype._addEvent = function (event, timeline) {\n    this._scheduledEvents[event.id.toString()] = {\n      event: event,\n      timeline: timeline\n    };\n    timeline.add(event);\n    return event.id;\n  };\n  /**\n   * Remove scheduled events from the timeline after\n   * the given time. Repeated events will be removed\n   * if their startTime is after the given time\n   * @param after Clear all events after this time.\n   */\n\n\n  Transport.prototype.cancel = function (after) {\n    var _this = this;\n\n    if (after === void 0) {\n      after = 0;\n    }\n\n    var computedAfter = this.toTicks(after);\n\n    this._timeline.forEachFrom(computedAfter, function (event) {\n      return _this.clear(event.id);\n    });\n\n    this._repeatedEvents.forEachFrom(computedAfter, function (event) {\n      return _this.clear(event.id);\n    });\n\n    return this;\n  }; //-------------------------------------\n  // \tSTART/STOP/PAUSE\n  //-------------------------------------\n\n  /**\n   * Bind start/stop/pause events from the clock and emit them.\n   */\n\n\n  Transport.prototype._bindClockEvents = function () {\n    var _this = this;\n\n    this._clock.on(\"start\", function (time, offset) {\n      offset = new TicksClass(_this.context, offset).toSeconds();\n\n      _this.emit(\"start\", time, offset);\n    });\n\n    this._clock.on(\"stop\", function (time) {\n      _this.emit(\"stop\", time);\n    });\n\n    this._clock.on(\"pause\", function (time) {\n      _this.emit(\"pause\", time);\n    });\n  };\n\n  Object.defineProperty(Transport.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get: function () {\n      return this._clock.getStateAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the transport and all sources synced to the transport.\n   * @param  time The time when the transport should start.\n   * @param  offset The timeline offset to start the transport.\n   * @example\n   * // start the transport in one second starting at beginning of the 5th measure.\n   * Tone.Transport.start(\"+1\", \"4:0:0\");\n   */\n\n  Transport.prototype.start = function (time, offset) {\n    var offsetTicks;\n\n    if (isDefined(offset)) {\n      offsetTicks = this.toTicks(offset);\n    } // start the clock\n\n\n    this._clock.start(time, offsetTicks);\n\n    return this;\n  };\n  /**\n   * Stop the transport and all sources synced to the transport.\n   * @param time The time when the transport should stop.\n   * @example\n   * Tone.Transport.stop();\n   */\n\n\n  Transport.prototype.stop = function (time) {\n    this._clock.stop(time);\n\n    return this;\n  };\n  /**\n   * Pause the transport and all sources synced to the transport.\n   */\n\n\n  Transport.prototype.pause = function (time) {\n    this._clock.pause(time);\n\n    return this;\n  };\n  /**\n   * Toggle the current state of the transport. If it is\n   * started, it will stop it, otherwise it will start the Transport.\n   * @param  time The time of the event\n   */\n\n\n  Transport.prototype.toggle = function (time) {\n    time = this.toSeconds(time);\n\n    if (this._clock.getStateAtTime(time) !== \"started\") {\n      this.start(time);\n    } else {\n      this.stop(time);\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(Transport.prototype, \"timeSignature\", {\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get: function () {\n      return this._timeSignature;\n    },\n    set: function (timeSig) {\n      if (isArray(timeSig)) {\n        timeSig = timeSig[0] / timeSig[1] * 4;\n      }\n\n      this._timeSignature = timeSig;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"loopStart\", {\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get: function () {\n      return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    },\n    set: function (startPosition) {\n      this._loopStart = this.toTicks(startPosition);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"loopEnd\", {\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get: function () {\n      return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    },\n    set: function (endPosition) {\n      this._loopEnd = this.toTicks(endPosition);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"loop\", {\n    /**\n     * If the transport loops or not.\n     */\n    get: function () {\n      return this._loop.get(this.now());\n    },\n    set: function (loop) {\n      this._loop.set(loop, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Set the loop start and stop at the same time.\n   * @example\n   * // loop over the first measure\n   * Tone.Transport.setLoopPoints(0, \"1m\");\n   * Tone.Transport.loop = true;\n   */\n\n  Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n    this.loopStart = startPosition;\n    this.loopEnd = endPosition;\n    return this;\n  };\n\n  Object.defineProperty(Transport.prototype, \"swing\", {\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get: function () {\n      return this._swingAmount;\n    },\n    set: function (amount) {\n      // scale the values to a normal range\n      this._swingAmount = amount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"swingSubdivision\", {\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._swingTicks).toNotation();\n    },\n    set: function (subdivision) {\n      this._swingTicks = this.toTicks(subdivision);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"position\", {\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get: function () {\n      var now = this.now();\n\n      var ticks = this._clock.getTicksAtTime(now);\n\n      return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    },\n    set: function (progress) {\n      var ticks = this.toTicks(progress);\n      this.ticks = ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"seconds\", {\n    /**\n     * The Transport's position in seconds\n     * Setting the value will jump to that position right away.\n     */\n    get: function () {\n      return this._clock.seconds;\n    },\n    set: function (s) {\n      var now = this.now();\n\n      var ticks = this._clock.frequency.timeToTicks(s, now);\n\n      this.ticks = ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"progress\", {\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the transport if loop is not true.\n     */\n    get: function () {\n      if (this.loop) {\n        var now = this.now();\n\n        var ticks = this._clock.getTicksAtTime(now);\n\n        return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"ticks\", {\n    /**\n     * The transports current tick position.\n     */\n    get: function () {\n      return this._clock.ticks;\n    },\n    set: function (t) {\n      if (this._clock.ticks !== t) {\n        var now = this.now(); // stop everything synced to the transport\n\n        if (this.state === \"started\") {\n          var ticks = this._clock.getTicksAtTime(now); // schedule to start on the next tick, #573\n\n\n          var time = this._clock.getTimeOfTick(Math.ceil(ticks));\n\n          this.emit(\"stop\", time);\n\n          this._clock.setTicksAtTime(t, time); // restart it with the new time\n\n\n          this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n        } else {\n          this._clock.setTicksAtTime(t, now);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the clock's ticks at the given time.\n   * @param  time  When to get the tick value\n   * @return The tick value at the given time.\n   */\n\n  Transport.prototype.getTicksAtTime = function (time) {\n    return Math.round(this._clock.getTicksAtTime(time));\n  };\n  /**\n   * Return the elapsed seconds at the given time.\n   * @param  time  When to get the elapsed seconds\n   * @return  The number of elapsed seconds\n   */\n\n\n  Transport.prototype.getSecondsAtTime = function (time) {\n    return this._clock.getSecondsAtTime(time);\n  };\n\n  Object.defineProperty(Transport.prototype, \"PPQ\", {\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get: function () {\n      return this._clock.frequency.multiplier;\n    },\n    set: function (ppq) {\n      this._clock.frequency.multiplier = ppq;\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // \tSYNCING\n  //-------------------------------------\n\n  /**\n   * Returns the time aligned to the next subdivision\n   * of the Transport. If the Transport is not started,\n   * it will return 0.\n   * Note: this will not work precisely during tempo ramps.\n   * @param  subdivision  The subdivision to quantize to\n   * @return  The context time of the next subdivision.\n   * @example\n   * // the transport must be started, otherwise returns 0\n   * Tone.Transport.start();\n   * Tone.Transport.nextSubdivision(\"4n\");\n   */\n\n  Transport.prototype.nextSubdivision = function (subdivision) {\n    subdivision = this.toTicks(subdivision);\n\n    if (this.state !== \"started\") {\n      // if the transport's not started, return 0\n      return 0;\n    } else {\n      var now = this.now(); // the remainder of the current ticks and the subdivision\n\n      var transportPos = this.getTicksAtTime(now);\n      var remainingTicks = subdivision - transportPos % subdivision;\n      return this._clock.nextTickTime(remainingTicks, now);\n    }\n  };\n  /**\n   * Attaches the signal to the tempo control signal so that\n   * any changes in the tempo will change the signal in the same\n   * ratio.\n   *\n   * @param signal\n   * @param ratio Optionally pass in the ratio between the two signals.\n   * \t\t\tOtherwise it will be computed based on their current values.\n   */\n\n\n  Transport.prototype.syncSignal = function (signal, ratio) {\n    if (!ratio) {\n      // get the sync ratio\n      var now = this.now();\n\n      if (signal.getValueAtTime(now) !== 0) {\n        var bpm = this.bpm.getValueAtTime(now);\n        var computedFreq = 1 / (60 / bpm / this.PPQ);\n        ratio = signal.getValueAtTime(now) / computedFreq;\n      } else {\n        ratio = 0;\n      }\n    }\n\n    var ratioSignal = new Gain(ratio); // @ts-ignore\n\n    this.bpm.connect(ratioSignal); // @ts-ignore\n\n    ratioSignal.connect(signal._param);\n\n    this._syncedSignals.push({\n      initial: signal.value,\n      ratio: ratioSignal,\n      signal: signal\n    });\n\n    signal.value = 0;\n    return this;\n  };\n  /**\n   * Unsyncs a previously synced signal from the transport's control.\n   * See Transport.syncSignal.\n   */\n\n\n  Transport.prototype.unsyncSignal = function (signal) {\n    for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n      var syncedSignal = this._syncedSignals[i];\n\n      if (syncedSignal.signal === signal) {\n        syncedSignal.ratio.dispose();\n        syncedSignal.signal.value = syncedSignal.initial;\n\n        this._syncedSignals.splice(i, 1);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Transport.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._clock.dispose();\n\n    writable(this, \"bpm\");\n\n    this._timeline.dispose();\n\n    this._repeatedEvents.dispose();\n\n    return this;\n  };\n\n  return Transport;\n}(ToneWithContext);\n\nexport { Transport };\nEmitter.mixin(Transport); //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.transport = new Transport({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.transport.dispose();\n});","import { __extends } from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n */\n\nvar Delay =\n/** @class */\nfunction (_super) {\n  __extends(Delay, _super);\n\n  function Delay() {\n    var _this = _super.call(this, optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"])) || this;\n\n    _this.name = \"Delay\";\n    var options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n\n    var maxDelayInSeconds = _this.toSeconds(options.maxDelay);\n\n    _this._maxDelay = Math.max(maxDelayInSeconds, _this.toSeconds(options.delayTime));\n    _this._delayNode = _this.input = _this.output = _this.context.createDelay(maxDelayInSeconds);\n    _this.delayTime = new Param({\n      context: _this.context,\n      param: _this._delayNode.delayTime,\n      units: \"time\",\n      value: options.delayTime,\n      minValue: 0,\n      maxValue: _this.maxDelay\n    });\n    readOnly(_this, \"delayTime\");\n    return _this;\n  }\n\n  Delay.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      delayTime: 0,\n      maxDelay: 1\n    });\n  };\n\n  Object.defineProperty(Delay.prototype, \"maxDelay\", {\n    /**\n     * The maximum delay time. This cannot be changed after\n     * the value is passed into the constructor.\n     */\n    get: function () {\n      return this._maxDelay;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  Delay.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._delayNode.disconnect();\n\n    this.delayTime.dispose();\n    return this;\n  };\n\n  return Delay;\n}(ToneAudioNode);\n\nexport { Delay };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\n\nvar Volume =\n/** @class */\nfunction (_super) {\n  __extends(Volume, _super);\n\n  function Volume() {\n    var _this = _super.call(this, optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"])) || this;\n\n    _this.name = \"Volume\";\n    var options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n    _this.input = _this.output = new Gain({\n      context: _this.context,\n      gain: options.volume,\n      units: \"decibels\"\n    });\n    _this.volume = _this.output.gain;\n    readOnly(_this, \"volume\");\n    _this._unmutedVolume = options.volume; // set the mute initially\n\n    _this.mute = options.mute;\n    return _this;\n  }\n\n  Volume.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Volume.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get: function () {\n      return this.volume.value === -Infinity;\n    },\n    set: function (mute) {\n      if (!this.mute && mute) {\n        this._unmutedVolume = this.volume.value; // maybe it should ramp here?\n\n        this.volume.value = -Infinity;\n      } else if (this.mute && !mute) {\n        this.volume.value = this._unmutedVolume;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * clean up\n   */\n\n  Volume.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.volume.dispose();\n    return this;\n  };\n\n  return Volume;\n}(ToneAudioNode);\n\nexport { Volume };","import { __extends, __read, __spread } from \"tslib\";\nimport { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Destination);\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * // these two are equivalent.\n * @category Core\n */\n\nvar Destination =\n/** @class */\nfunction (_super) {\n  __extends(Destination, _super);\n\n  function Destination() {\n    var _this = _super.call(this, optionsFromArguments(Destination.getDefaults(), arguments)) || this;\n\n    _this.name = \"Destination\";\n    _this.input = new Volume({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n    /**\n     * The volume of the master output.\n     */\n\n    _this.volume = _this.input.volume;\n    var options = optionsFromArguments(Destination.getDefaults(), arguments);\n    connectSeries(_this.input, _this.output, _this.context.rawContext.destination);\n    _this.mute = options.mute;\n    _this._internalChannels = [_this.input, _this.context.rawContext.destination, _this.output];\n    return _this;\n  }\n\n  Destination.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Destination.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * // mute the output\n     * Tone.Destination.mute = true;\n     */\n    get: function () {\n      return this.input.mute;\n    },\n    set: function (mute) {\n      this.input.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n   * chained in the master effects chain.\n   * @param args All arguments will be connected in a row and the Master will be routed through it.\n   * @return  {Destination}  this\n   * @example\n   * // some overall compression to keep the levels in check\n   * const masterCompressor = new Tone.Compressor({\n   * \tthreshold: -6,\n   * \tratio: 3,\n   * \tattack: 0.5,\n   * \trelease: 0.1\n   * });\n   * // give a little boost to the lows\n   * const lowBump = new Tone.Filter(200, \"lowshelf\");\n   * // route everything through the filter and compressor before going to the speakers\n   * Tone.Destination.chain(lowBump, masterCompressor);\n   */\n\n  Destination.prototype.chain = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this.input.disconnect();\n    args.unshift(this.input);\n    args.push(this.output);\n    connectSeries.apply(void 0, __spread(args));\n    return this;\n  };\n\n  Object.defineProperty(Destination.prototype, \"maxChannelCount\", {\n    /**\n     * The maximum number of channels the system can output\n     */\n    get: function () {\n      return this.context.rawContext.destination.maxChannelCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  Destination.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.volume.dispose();\n    return this;\n  };\n\n  return Destination;\n}(ToneAudioNode);\n\nexport { Destination }; //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.destination = new Destination({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.destination.dispose();\n});","import { __extends, __read } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tC1: \"https://tonejs.github.io/examples/audio/casio/C1.mp3\",\n * \tC2: \"https://tonejs.github.io/examples/audio/casio/C2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t C1: \"C1.mp3\",\n * \t\t C2: \"C2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/examples/audio/casio/\"\n * });\n * @category Core\n */\n\nvar ToneAudioBuffers =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioBuffers, _super);\n\n  function ToneAudioBuffers() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"ToneAudioBuffers\";\n    /**\n     * All of the buffers\n     */\n\n    _this._buffers = new Map();\n    /**\n     * Keep track of the number of loaded buffers\n     */\n\n    _this._loadingCount = 0;\n    var options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    _this.baseUrl = options.baseUrl; // add each one\n\n    Object.keys(options.urls).forEach(function (name) {\n      _this._loadingCount++;\n      var url = options.urls[name];\n\n      _this.add(name, url, _this._bufferLoaded.bind(_this, options.onload), options.onerror);\n    });\n    return _this;\n  }\n\n  ToneAudioBuffers.getDefaults = function () {\n    return {\n      baseUrl: \"\",\n      onerror: noOp,\n      onload: noOp,\n      urls: {}\n    };\n  };\n  /**\n   * True if the buffers object has a buffer by that name.\n   * @param  name  The key or index of the buffer.\n   */\n\n\n  ToneAudioBuffers.prototype.has = function (name) {\n    return this._buffers.has(name.toString());\n  };\n  /**\n   * Get a buffer by name. If an array was loaded,\n   * then use the array index.\n   * @param  name  The key or index of the buffer.\n   */\n\n\n  ToneAudioBuffers.prototype.get = function (name) {\n    assert(this.has(name), \"ToneAudioBuffers has no buffer named: \" + name);\n    return this._buffers.get(name.toString());\n  };\n  /**\n   * A buffer was loaded. decrement the counter.\n   */\n\n\n  ToneAudioBuffers.prototype._bufferLoaded = function (callback) {\n    this._loadingCount--;\n\n    if (this._loadingCount === 0 && callback) {\n      callback();\n    }\n  };\n\n  Object.defineProperty(ToneAudioBuffers.prototype, \"loaded\", {\n    /**\n     * If the buffers are loaded or not\n     */\n    get: function () {\n      return Array.from(this._buffers).every(function (_a) {\n        var _b = __read(_a, 2),\n            _ = _b[0],\n            buffer = _b[1];\n\n        return buffer.loaded;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add a buffer by name and url to the Buffers\n   * @param  name      A unique name to give the buffer\n   * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n   * @param  callback  The callback to invoke when the url is loaded.\n   * @param  onerror  Invoked if the buffer can't be loaded\n   */\n\n  ToneAudioBuffers.prototype.add = function (name, url, callback, onerror) {\n    if (callback === void 0) {\n      callback = noOp;\n    }\n\n    if (onerror === void 0) {\n      onerror = noOp;\n    }\n\n    if (isString(url)) {\n      this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n    } else {\n      this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n    }\n\n    return this;\n  };\n\n  ToneAudioBuffers.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffers.forEach(function (buffer) {\n      return buffer.dispose();\n    });\n\n    this._buffers.clear();\n\n    return this;\n  };\n\n  return ToneAudioBuffers;\n}(Tone);\n\nexport { ToneAudioBuffers };","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\n\nvar MidiClass =\n/** @class */\nfunction (_super) {\n  __extends(MidiClass, _super);\n\n  function MidiClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"MidiClass\";\n    _this.defaultUnits = \"midi\";\n    return _this;\n  }\n  /**\n   * Returns the value of a frequency in the current units\n   */\n\n\n  MidiClass.prototype._frequencyToUnits = function (freq) {\n    return ftom(_super.prototype._frequencyToUnits.call(this, freq));\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  MidiClass.prototype._ticksToUnits = function (ticks) {\n    return ftom(_super.prototype._ticksToUnits.call(this, ticks));\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  MidiClass.prototype._beatsToUnits = function (beats) {\n    return ftom(_super.prototype._beatsToUnits.call(this, beats));\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  MidiClass.prototype._secondsToUnits = function (seconds) {\n    return ftom(_super.prototype._secondsToUnits.call(this, seconds));\n  };\n  /**\n   * Return the value of the frequency as a MIDI note\n   * @example\n   * Tone.Midi(60).toMidi(); // 60\n   */\n\n\n  MidiClass.prototype.toMidi = function () {\n    return this.valueOf();\n  };\n  /**\n   * Return the value of the frequency as a MIDI note\n   * @example\n   * Tone.Midi(60).toFrequency(); // 261.6255653005986\n   */\n\n\n  MidiClass.prototype.toFrequency = function () {\n    return mtof(this.toMidi());\n  };\n  /**\n   * Transposes the frequency by the given number of semitones.\n   * @return A new transposed MidiClass\n   * @example\n   * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n   */\n\n\n  MidiClass.prototype.transpose = function (interval) {\n    return new MidiClass(this.context, this.toMidi() + interval);\n  };\n\n  return MidiClass;\n}(FrequencyClass);\n\nexport { MidiClass };\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\n\nexport function Midi(value, units) {\n  return new MidiClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n *  \t// use the time argument to schedule a callback with Draw\n *  \tTone.Draw.schedule(() => {\n *  \t\t// do drawing or DOM manipulation here\n *  \t}, time);\n * }, \"+0.5\");\n * @category Core\n */\n\nvar Draw =\n/** @class */\nfunction (_super) {\n  __extends(Draw, _super);\n\n  function Draw() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Draw\";\n    /**\n     * The duration after which events are not invoked.\n     */\n\n    _this.expiration = 0.25;\n    /**\n     * The amount of time before the scheduled time\n     * that the callback can be invoked. Default is\n     * half the time of an animation frame (0.008 seconds).\n     */\n\n    _this.anticipation = 0.008;\n    /**\n     * All of the events.\n     */\n\n    _this._events = new Timeline();\n    /**\n     * The draw loop\n     */\n\n    _this._boundDrawLoop = _this._drawLoop.bind(_this);\n    /**\n     * The animation frame id\n     */\n\n    _this._animationFrame = -1;\n    return _this;\n  }\n  /**\n   * Schedule a function at the given time to be invoked\n   * on the nearest animation frame.\n   * @param  callback  Callback is invoked at the given time.\n   * @param  time      The time relative to the AudioContext time to invoke the callback.\n   */\n\n\n  Draw.prototype.schedule = function (callback, time) {\n    this._events.add({\n      callback: callback,\n      time: this.toSeconds(time)\n    }); // start the draw loop on the first event\n\n\n    if (this._events.length === 1) {\n      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n    }\n\n    return this;\n  };\n  /**\n   * Cancel events scheduled after the given time\n   * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n   */\n\n\n  Draw.prototype.cancel = function (after) {\n    this._events.cancel(this.toSeconds(after));\n\n    return this;\n  };\n  /**\n   * The draw loop\n   */\n\n\n  Draw.prototype._drawLoop = function () {\n    var now = this.context.currentTime;\n\n    while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n      var event_1 = this._events.shift();\n\n      if (event_1 && now - event_1.time <= this.expiration) {\n        event_1.callback();\n      }\n    }\n\n    if (this._events.length > 0) {\n      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n    }\n  };\n\n  Draw.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._events.dispose();\n\n    cancelAnimationFrame(this._animationFrame);\n    return this;\n  };\n\n  return Draw;\n}(ToneWithContext);\n\nexport { Draw }; //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.draw = new Draw({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.draw.dispose();\n});","import { __extends } from \"tslib\";\nimport { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\n\nvar Source =\n/** @class */\nfunction (_super) {\n  __extends(Source, _super);\n\n  function Source(options) {\n    var _this = _super.call(this, options) || this;\n    /**\n     * Sources have no inputs\n     */\n\n\n    _this.input = undefined;\n    /**\n     * Keep track of the scheduled state.\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * The synced `start` callback function from the transport\n     */\n\n    _this._synced = false;\n    /**\n     * Keep track of all of the scheduled event ids\n     */\n\n    _this._scheduled = [];\n    /**\n     * Placeholder functions for syncing/unsyncing to transport\n     */\n\n    _this._syncedStart = noOp;\n    _this._syncedStop = noOp;\n    _this._state.memory = 100;\n    _this._state.increasing = true;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      mute: options.mute,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    _this.onstop = options.onstop;\n    return _this;\n  }\n\n  Source.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      onstop: noOp,\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Source.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get: function () {\n      if (this._synced) {\n        if (this.context.transport.state === \"started\") {\n          return this._state.getValueAtTime(this.context.transport.seconds);\n        } else {\n          return \"stopped\";\n        }\n      } else {\n        return this._state.getValueAtTime(this.now());\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Source.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Ensure that the scheduled time is not before the current time.\n   * Should only be used when scheduled unsynced.\n   */\n\n  Source.prototype._clampToCurrentTime = function (time) {\n    if (this._synced) {\n      return time;\n    } else {\n      return Math.max(time, this.context.currentTime);\n    }\n  };\n  /**\n   * Start the source at the specified time. If no time is given,\n   * start the source now.\n   * @param  time When the source should be started.\n   * @example\n   * const source = new Tone.Oscillator().toDestination();\n   * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n   */\n\n\n  Source.prototype.start = function (time, offset, duration) {\n    var _this = this;\n\n    var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n    computedTime = this._clampToCurrentTime(computedTime); // if it's started, stop it and restart it\n\n    if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n      // time should be strictly greater than the previous start time\n      assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n\n      this._state.cancel(computedTime);\n\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      this.log(\"restart\", computedTime);\n      this.restart(computedTime, offset, duration);\n    } else {\n      this.log(\"start\", computedTime);\n\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      if (this._synced) {\n        // add the offset time to the event\n        var event_1 = this._state.get(computedTime);\n\n        if (event_1) {\n          event_1.offset = this.toSeconds(defaultArg(offset, 0));\n          event_1.duration = duration ? this.toSeconds(duration) : undefined;\n        }\n\n        var sched = this.context.transport.schedule(function (t) {\n          _this._start(t, offset, duration);\n        }, computedTime);\n\n        this._scheduled.push(sched); // if it's already started\n\n\n        if (this.context.transport.state === \"started\") {\n          this._syncedStart(this.now(), this.context.transport.seconds);\n        }\n      } else {\n        this._start(computedTime, offset, duration);\n      }\n\n      assertContextRunning(this.context);\n    }\n\n    return this;\n  };\n  /**\n   * Stop the source at the specified time. If no time is given,\n   * stop the source now.\n   * @param  time When the source should be stopped.\n   * @example\n   * const source = new Tone.Oscillator().toDestination();\n   * source.start();\n   * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n   */\n\n\n  Source.prototype.stop = function (time) {\n    var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n    computedTime = this._clampToCurrentTime(computedTime);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n      this.log(\"stop\", computedTime);\n\n      if (!this._synced) {\n        this._stop(computedTime);\n      } else {\n        var sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n\n        this._scheduled.push(sched);\n      }\n\n      this._state.cancel(computedTime);\n\n      this._state.setStateAtTime(\"stopped\", computedTime);\n    }\n\n    return this;\n  };\n  /**\n   * Restart the source.\n   */\n\n\n  Source.prototype.restart = function (time, offset, duration) {\n    time = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(time) === \"started\") {\n      this._state.cancel(time);\n\n      this._restart(time, offset, duration);\n    }\n\n    return this;\n  };\n  /**\n   * Sync the source to the Transport so that all subsequent\n   * calls to `start` and `stop` are synced to the TransportTime\n   * instead of the AudioContext time.\n   *\n   * @example\n   * const osc = new Tone.Oscillator().toDestination();\n   * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n   * osc.sync().start(0).stop(0.3);\n   * // start the transport.\n   * Tone.Transport.start();\n   * // set it to loop once a second\n   * Tone.Transport.loop = true;\n   * Tone.Transport.loopEnd = 1;\n   */\n\n\n  Source.prototype.sync = function () {\n    var _this = this;\n\n    if (!this._synced) {\n      this._synced = true;\n\n      this._syncedStart = function (time, offset) {\n        if (offset > 0) {\n          // get the playback state at that time\n          var stateEvent = _this._state.get(offset); // listen for start events which may occur in the middle of the sync'ed time\n\n\n          if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n            // get the offset\n            var startOffset = offset - _this.toSeconds(stateEvent.time);\n\n            var duration = void 0;\n\n            if (stateEvent.duration) {\n              duration = _this.toSeconds(stateEvent.duration) - startOffset;\n            }\n\n            _this._start(time, _this.toSeconds(stateEvent.offset) + startOffset, duration);\n          }\n        }\n      };\n\n      this._syncedStop = function (time) {\n        var seconds = _this.context.transport.getSecondsAtTime(Math.max(time - _this.sampleTime, 0));\n\n        if (_this._state.getValueAtTime(seconds) === \"started\") {\n          _this._stop(time);\n        }\n      };\n\n      this.context.transport.on(\"start\", this._syncedStart);\n      this.context.transport.on(\"loopStart\", this._syncedStart);\n      this.context.transport.on(\"stop\", this._syncedStop);\n      this.context.transport.on(\"pause\", this._syncedStop);\n      this.context.transport.on(\"loopEnd\", this._syncedStop);\n    }\n\n    return this;\n  };\n  /**\n   * Unsync the source to the Transport. See Source.sync\n   */\n\n\n  Source.prototype.unsync = function () {\n    var _this = this;\n\n    if (this._synced) {\n      this.context.transport.off(\"stop\", this._syncedStop);\n      this.context.transport.off(\"pause\", this._syncedStop);\n      this.context.transport.off(\"loopEnd\", this._syncedStop);\n      this.context.transport.off(\"start\", this._syncedStart);\n      this.context.transport.off(\"loopStart\", this._syncedStart);\n    }\n\n    this._synced = false; // clear all of the scheduled ids\n\n    this._scheduled.forEach(function (id) {\n      return _this.context.transport.clear(id);\n    });\n\n    this._scheduled = [];\n\n    this._state.cancel(0);\n\n    return this;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Source.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.onstop = noOp;\n    this.unsync();\n\n    this._volume.dispose();\n\n    this._state.dispose();\n\n    return this;\n  };\n\n  return Source;\n}(ToneAudioNode);\n\nexport { Source };","import { __extends } from \"tslib\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\n\nvar ToneBufferSource =\n/** @class */\nfunction (_super) {\n  __extends(ToneBufferSource, _super);\n\n  function ToneBufferSource() {\n    var _this = _super.call(this, optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"ToneBufferSource\";\n    /**\n     * The oscillator\n     */\n\n    _this._source = _this.context.createBufferSource();\n    _this._internalChannels = [_this._source];\n    /**\n     * indicators if the source has started/stopped\n     */\n\n    _this._sourceStarted = false;\n    _this._sourceStopped = false;\n    var options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n    connect(_this._source, _this._gainNode);\n\n    _this._source.onended = function () {\n      return _this._stopSource();\n    };\n    /**\n     * The playbackRate of the buffer\n     */\n\n\n    _this.playbackRate = new Param({\n      context: _this.context,\n      param: _this._source.playbackRate,\n      units: \"positive\",\n      value: options.playbackRate\n    }); // set some values initially\n\n    _this.loop = options.loop;\n    _this.loopStart = options.loopStart;\n    _this.loopEnd = options.loopEnd;\n    _this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n\n    _this._internalChannels.push(_this._source);\n\n    return _this;\n  }\n\n  ToneBufferSource.getDefaults = function () {\n    return Object.assign(OneShotSource.getDefaults(), {\n      url: new ToneAudioBuffer(),\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      onload: noOp,\n      onerror: noOp,\n      playbackRate: 1\n    });\n  };\n\n  Object.defineProperty(ToneBufferSource.prototype, \"fadeIn\", {\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeIn;\n    },\n    set: function (t) {\n      this._fadeIn = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"fadeOut\", {\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeOut;\n    },\n    set: function (t) {\n      this._fadeOut = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"curve\", {\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get: function () {\n      return this._curve;\n    },\n    set: function (t) {\n      this._curve = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the buffer\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n   * @param  gain  The gain to play the buffer back at.\n   */\n\n  ToneBufferSource.prototype.start = function (time, offset, duration, gain) {\n    if (gain === void 0) {\n      gain = 1;\n    }\n\n    assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n    var computedTime = this.toSeconds(time); // apply the gain envelope\n\n    this._startGain(computedTime, gain); // if it's a loop the default offset is the loopstart point\n\n\n    if (this.loop) {\n      offset = defaultArg(offset, this.loopStart);\n    } else {\n      // otherwise the default offset is 0\n      offset = defaultArg(offset, 0);\n    } // make sure the offset is not less than 0\n\n\n    var computedOffset = Math.max(this.toSeconds(offset), 0); // start the buffer source\n\n    if (this.loop) {\n      // modify the offset if it's greater than the loop time\n      var loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n      var loopStart = this.toSeconds(this.loopStart);\n      var loopDuration = loopEnd - loopStart; // move the offset back\n\n      if (GTE(computedOffset, loopEnd)) {\n        computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;\n      } // when the offset is very close to the duration, set it to 0\n\n\n      if (EQ(computedOffset, this.buffer.duration)) {\n        computedOffset = 0;\n      }\n    } // this.buffer.loaded would have return false if the AudioBuffer was undefined\n\n\n    this._source.buffer = this.buffer.get();\n    this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\n    if (LT(computedOffset, this.buffer.duration)) {\n      this._sourceStarted = true;\n\n      this._source.start(computedTime, computedOffset);\n    } // if a duration is given, schedule a stop\n\n\n    if (isDefined(duration)) {\n      var computedDur = this.toSeconds(duration); // make sure it's never negative\n\n      computedDur = Math.max(computedDur, 0);\n      this.stop(computedTime + computedDur);\n    }\n\n    return this;\n  };\n\n  ToneBufferSource.prototype._stopSource = function (time) {\n    if (!this._sourceStopped && this._sourceStarted) {\n      this._sourceStopped = true;\n\n      this._source.stop(this.toSeconds(time));\n\n      this._onended();\n    }\n  };\n\n  Object.defineProperty(ToneBufferSource.prototype, \"loopStart\", {\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get: function () {\n      return this._source.loopStart;\n    },\n    set: function (loopStart) {\n      this._source.loopStart = this.toSeconds(loopStart);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"loopEnd\", {\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get: function () {\n      return this._source.loopEnd;\n    },\n    set: function (loopEnd) {\n      this._source.loopEnd = this.toSeconds(loopEnd);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"buffer\", {\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get: function () {\n      return this._buffer;\n    },\n    set: function (buffer) {\n      this._buffer.set(buffer);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"loop\", {\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get: function () {\n      return this._source.loop;\n    },\n    set: function (loop) {\n      this._source.loop = loop;\n\n      if (this._sourceStarted) {\n        this.cancelStop();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  ToneBufferSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._source.onended = null;\n\n    this._source.disconnect();\n\n    this._buffer.dispose();\n\n    this.playbackRate.dispose();\n    return this;\n  };\n\n  return ToneBufferSource;\n}(OneShotSource);\n\nexport { ToneBufferSource };","import { __extends } from \"tslib\";\nimport { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\n\nvar Noise =\n/** @class */\nfunction (_super) {\n  __extends(Noise, _super);\n\n  function Noise() {\n    var _this = _super.call(this, optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"])) || this;\n\n    _this.name = \"Noise\";\n    /**\n     * Private reference to the source\n     */\n\n    _this._source = null;\n    var options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n    _this._playbackRate = options.playbackRate;\n    _this.type = options.type;\n    _this._fadeIn = options.fadeIn;\n    _this._fadeOut = options.fadeOut;\n    return _this;\n  }\n\n  Noise.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      fadeIn: 0,\n      fadeOut: 0,\n      playbackRate: 1,\n      type: \"white\"\n    });\n  };\n\n  Object.defineProperty(Noise.prototype, \"type\", {\n    /**\n     * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n     * @example\n     * const noise = new Tone.Noise().toDestination().start();\n     * noise.type = \"brown\";\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n\n      if (this._type !== type) {\n        this._type = type; // if it's playing, stop and restart it\n\n        if (this.state === \"started\") {\n          var now = this.now();\n\n          this._stop(now);\n\n          this._start(now);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Noise.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the noise. Affects\n     * the \"frequency\" of the noise.\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n\n      if (this._source) {\n        this._source.playbackRate.value = rate;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * internal start method\n   */\n\n  Noise.prototype._start = function (time) {\n    var _this = this;\n\n    var buffer = _noiseBuffers[this._type];\n    this._source = new ToneBufferSource({\n      url: buffer,\n      context: this.context,\n      fadeIn: this._fadeIn,\n      fadeOut: this._fadeOut,\n      loop: true,\n      onended: function () {\n        return _this.onstop(_this);\n      },\n      playbackRate: this._playbackRate\n    }).connect(this.output);\n\n    this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n  };\n  /**\n   * internal stop method\n   */\n\n\n  Noise.prototype._stop = function (time) {\n    if (this._source) {\n      this._source.stop(this.toSeconds(time));\n\n      this._source = null;\n    }\n  };\n\n  Object.defineProperty(Noise.prototype, \"fadeIn\", {\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeIn;\n    },\n    set: function (time) {\n      this._fadeIn = time;\n\n      if (this._source) {\n        this._source.fadeIn = this._fadeIn;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Noise.prototype, \"fadeOut\", {\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeOut;\n    },\n    set: function (time) {\n      this._fadeOut = time;\n\n      if (this._source) {\n        this._source.fadeOut = this._fadeOut;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Noise.prototype._restart = function (time) {\n    // TODO could be optimized by cancelling the buffer source 'stop'\n    this._stop(time);\n\n    this._start(time);\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Noise.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._source) {\n      this._source.disconnect();\n    }\n\n    return this;\n  };\n\n  return Noise;\n}(Source);\n\nexport { Noise }; //--------------------\n// THE NOISE BUFFERS\n//--------------------\n// Noise buffer stats\n\nvar BUFFER_LENGTH = 44100 * 5;\nvar NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\n\nvar _noiseCache = {\n  brown: null,\n  pink: null,\n  white: null\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\n\nvar _noiseBuffers = {\n  get brown() {\n    if (!_noiseCache.brown) {\n      var buffer = [];\n\n      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        var channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        var lastOut = 0.0;\n\n        for (var i = 0; i < BUFFER_LENGTH; i++) {\n          var white = Math.random() * 2 - 1;\n          channel[i] = (lastOut + 0.02 * white) / 1.02;\n          lastOut = channel[i];\n          channel[i] *= 3.5; // (roughly) compensate for gain\n        }\n      }\n\n      _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n    }\n\n    return _noiseCache.brown;\n  },\n\n  get pink() {\n    if (!_noiseCache.pink) {\n      var buffer = [];\n\n      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        var channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        var b0 = void 0,\n            b1 = void 0,\n            b2 = void 0,\n            b3 = void 0,\n            b4 = void 0,\n            b5 = void 0,\n            b6 = void 0;\n        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\n        for (var i = 0; i < BUFFER_LENGTH; i++) {\n          var white = Math.random() * 2 - 1;\n          b0 = 0.99886 * b0 + white * 0.0555179;\n          b1 = 0.99332 * b1 + white * 0.0750759;\n          b2 = 0.96900 * b2 + white * 0.1538520;\n          b3 = 0.86650 * b3 + white * 0.3104856;\n          b4 = 0.55000 * b4 + white * 0.5329522;\n          b5 = -0.7616 * b5 - white * 0.0168980;\n          channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n          channel[i] *= 0.11; // (roughly) compensate for gain\n\n          b6 = white * 0.115926;\n        }\n      }\n\n      _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n    }\n\n    return _noiseCache.pink;\n  },\n\n  get white() {\n    if (!_noiseCache.white) {\n      var buffer = [];\n\n      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        var channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n\n        for (var i = 0; i < BUFFER_LENGTH; i++) {\n          channel[i] = Math.random() * 2 - 1;\n        }\n      }\n\n      _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n    }\n\n    return _noiseCache.white;\n  }\n\n};","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { connect, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.\n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * const mic = new Tone.UserMedia();\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * });\n * @category Source\n */\n\nvar UserMedia =\n/** @class */\nfunction (_super) {\n  __extends(UserMedia, _super);\n\n  function UserMedia() {\n    var _this = _super.call(this, optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"])) || this;\n\n    _this.name = \"UserMedia\";\n    var options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    _this.mute = options.mute;\n    return _this;\n  }\n\n  UserMedia.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  };\n  /**\n   * Open the media stream. If a string is passed in, it is assumed\n   * to be the label or id of the stream, if a number is passed in,\n   * it is the input number of the stream.\n   * @param  labelOrId The label or id of the audio input media device.\n   *                   With no argument, the default stream is opened.\n   * @return The promise is resolved when the stream is open.\n   */\n\n\n  UserMedia.prototype.open = function (labelOrId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices, constraints, stream, mediaStreamNode;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(UserMedia.supported, \"UserMedia is not supported\"); // close the previous stream\n\n            if (this.state === \"started\") {\n              this.close();\n            }\n\n            return [4\n            /*yield*/\n            , UserMedia.enumerateDevices()];\n\n          case 1:\n            devices = _a.sent();\n\n            if (isNumber(labelOrId)) {\n              this._device = devices[labelOrId];\n            } else {\n              this._device = devices.find(function (device) {\n                return device.label === labelOrId || device.deviceId === labelOrId;\n              }); // didn't find a matching device\n\n              if (!this._device && devices.length > 0) {\n                this._device = devices[0];\n              }\n\n              assert(isDefined(this._device), \"No matching device \" + labelOrId);\n            }\n\n            constraints = {\n              audio: {\n                echoCancellation: false,\n                sampleRate: this.context.sampleRate,\n                noiseSuppression: false,\n                mozNoiseSuppression: false\n              }\n            };\n\n            if (this._device) {\n              // @ts-ignore\n              constraints.audio.deviceId = this._device.deviceId;\n            }\n\n            return [4\n            /*yield*/\n            , navigator.mediaDevices.getUserMedia(constraints)];\n\n          case 2:\n            stream = _a.sent(); // start a new source only if the previous one is closed\n\n            if (!this._stream) {\n              this._stream = stream;\n              mediaStreamNode = this.context.createMediaStreamSource(stream); // Connect the MediaStreamSourceNode to a gate gain node\n\n              connect(mediaStreamNode, this.output);\n              this._mediaStream = mediaStreamNode;\n            }\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * Close the media stream\n   */\n\n\n  UserMedia.prototype.close = function () {\n    if (this._stream && this._mediaStream) {\n      this._stream.getAudioTracks().forEach(function (track) {\n        track.stop();\n      });\n\n      this._stream = undefined; // remove the old media stream\n\n      this._mediaStream.disconnect();\n\n      this._mediaStream = undefined;\n    }\n\n    this._device = undefined;\n    return this;\n  };\n  /**\n   * Returns a promise which resolves with the list of audio input devices available.\n   * @return The promise that is resolved with the devices\n   * @example\n   * Tone.UserMedia.enumerateDevices().then((devices) => {\n   * \t// print the device labels\n   * \tconsole.log(devices.map(device => device.label));\n   * });\n   */\n\n\n  UserMedia.enumerateDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allDevices;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , navigator.mediaDevices.enumerateDevices()];\n\n          case 1:\n            allDevices = _a.sent();\n            return [2\n            /*return*/\n            , allDevices.filter(function (device) {\n              return device.kind === \"audioinput\";\n            })];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(UserMedia.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, \"started\" when the microphone is open\n     * and \"stopped\" when the mic is closed.\n     */\n    get: function () {\n      return this._stream && this._stream.active ? \"started\" : \"stopped\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"deviceId\", {\n    /**\n     * Returns an identifier for the represented device that is\n     * persisted across sessions. It is un-guessable by other applications and\n     * unique to the origin of the calling application. It is reset when the\n     * user clears cookies (for Private Browsing, a different identifier is\n     * used that is not persisted across sessions). Returns undefined when the\n     * device is not open.\n     */\n    get: function () {\n      if (this._device) {\n        return this._device.deviceId;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"groupId\", {\n    /**\n     * Returns a group identifier. Two devices have the\n     * same group identifier if they belong to the same physical device.\n     * Returns null  when the device is not open.\n     */\n    get: function () {\n      if (this._device) {\n        return this._device.groupId;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"label\", {\n    /**\n     * Returns a label describing this device (for example \"Built-in Microphone\").\n     * Returns undefined when the device is not open or label is not available\n     * because of permissions.\n     */\n    get: function () {\n      if (this._device) {\n        return this._device.label;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const mic = new Tone.UserMedia();\n     * mic.open().then(() => {\n     * \t// promise resolves when input is available\n     * });\n     * // mute the output\n     * mic.mute = true;\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  UserMedia.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.close();\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n    return this;\n  };\n\n  Object.defineProperty(UserMedia, \"supported\", {\n    /**\n     * If getUserMedia is supported by the browser.\n     */\n    get: function () {\n      return isDefined(navigator.mediaDevices) && isDefined(navigator.mediaDevices.getUserMedia);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return UserMedia;\n}(ToneAudioNode);\n\nexport { UserMedia };","import { __awaiter, __generator } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\n\nexport function generateWaveform(instance, length) {\n  return __awaiter(this, void 0, void 0, function () {\n    var duration, context, clone, buffer;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          duration = length / instance.context.sampleRate;\n          context = new OfflineContext(1, duration, instance.context.sampleRate);\n          clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context: context\n          })).toDestination();\n          clone.start(0);\n          return [4\n          /*yield*/\n          , context.render()];\n\n        case 1:\n          buffer = _a.sent();\n          return [2\n          /*return*/\n          , buffer.getChannelData(0)];\n      }\n    });\n  });\n}","import { __extends } from \"tslib\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\n\nvar ToneOscillatorNode =\n/** @class */\nfunction (_super) {\n  __extends(ToneOscillatorNode, _super);\n\n  function ToneOscillatorNode() {\n    var _this = _super.call(this, optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"ToneOscillatorNode\";\n    /**\n     * The oscillator\n     */\n\n    _this._oscillator = _this.context.createOscillator();\n    _this._internalChannels = [_this._oscillator];\n    var options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    connect(_this._oscillator, _this._gainNode);\n    _this.type = options.type;\n    _this.frequency = new Param({\n      context: _this.context,\n      param: _this._oscillator.frequency,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Param({\n      context: _this.context,\n      param: _this._oscillator.detune,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_this, [\"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  ToneOscillatorNode.getDefaults = function () {\n    return Object.assign(OneShotSource.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      type: \"sine\"\n    });\n  };\n  /**\n   * Start the oscillator node at the given time\n   * @param  time When to start the oscillator\n   */\n\n\n  ToneOscillatorNode.prototype.start = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n\n    this._startGain(computedTime);\n\n    this._oscillator.start(computedTime);\n\n    return this;\n  };\n\n  ToneOscillatorNode.prototype._stopSource = function (time) {\n    this._oscillator.stop(time);\n  };\n  /**\n   * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n   * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n   */\n\n\n  ToneOscillatorNode.prototype.setPeriodicWave = function (periodicWave) {\n    this._oscillator.setPeriodicWave(periodicWave);\n\n    return this;\n  };\n\n  Object.defineProperty(ToneOscillatorNode.prototype, \"type\", {\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get: function () {\n      return this._oscillator.type;\n    },\n    set: function (type) {\n      this._oscillator.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  ToneOscillatorNode.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this.state === \"started\") {\n      this.stop();\n    }\n\n    this._oscillator.disconnect();\n\n    this.frequency.dispose();\n    this.detune.dispose();\n    return this;\n  };\n\n  return ToneOscillatorNode;\n}(OneShotSource);\n\nexport { ToneOscillatorNode };","import { __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\n\nvar Oscillator =\n/** @class */\nfunction (_super) {\n  __extends(Oscillator, _super);\n\n  function Oscillator() {\n    var _this = _super.call(this, optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"Oscillator\";\n    /**\n     * the main oscillator\n     */\n\n    _this._oscillator = null;\n    var options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    readOnly(_this, \"frequency\");\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_this, \"detune\");\n    _this._partials = options.partials;\n    _this._partialCount = options.partialCount;\n    _this._type = options.type;\n\n    if (options.partialCount && options.type !== \"custom\") {\n      _this._type = _this.baseType + options.partialCount.toString();\n    }\n\n    _this.phase = options.phase;\n    return _this;\n  }\n\n  Oscillator.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      partialCount: 0,\n      partials: [],\n      phase: 0,\n      type: \"sine\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  Oscillator.prototype._start = function (time) {\n    var _this = this;\n\n    var computedTime = this.toSeconds(time); // new oscillator with previous values\n\n    var oscillator = new ToneOscillatorNode({\n      context: this.context,\n      onended: function () {\n        return _this.onstop(_this);\n      }\n    });\n    this._oscillator = oscillator;\n\n    if (this._wave) {\n      this._oscillator.setPeriodicWave(this._wave);\n    } else {\n      this._oscillator.type = this._type;\n    } // connect the control signal to the oscillator frequency & detune\n\n\n    this._oscillator.connect(this.output);\n\n    this.frequency.connect(this._oscillator.frequency);\n    this.detune.connect(this._oscillator.detune); // start the oscillator\n\n    this._oscillator.start(computedTime);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  Oscillator.prototype._stop = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._oscillator) {\n      this._oscillator.stop(computedTime);\n    }\n  };\n  /**\n   * Restart the oscillator. Does not stop the oscillator, but instead\n   * just cancels any scheduled 'stop' from being invoked.\n   */\n\n\n  Oscillator.prototype._restart = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"restart\", computedTime);\n\n    if (this._oscillator) {\n      this._oscillator.cancelStop();\n    }\n\n    this._state.cancel(computedTime);\n\n    return this;\n  };\n  /**\n   * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n   * will also affect the oscillators frequency.\n   * @example\n   * const osc = new Tone.Oscillator().toDestination().start();\n   * osc.frequency.value = 440;\n   * // the ratio between the bpm and the frequency will be maintained\n   * osc.syncFrequency();\n   * // double the tempo\n   * Tone.Transport.bpm.value *= 2;\n   * // the frequency of the oscillator is doubled to 880\n   */\n\n\n  Oscillator.prototype.syncFrequency = function () {\n    this.context.transport.syncSignal(this.frequency);\n    return this;\n  };\n  /**\n   * Unsync the oscillator's frequency from the Transport.\n   * See Oscillator.syncFrequency\n   */\n\n\n  Oscillator.prototype.unsyncFrequency = function () {\n    this.context.transport.unsyncSignal(this.frequency);\n    return this;\n  };\n  /**\n   * Get a cached periodic wave. Avoids having to recompute\n   * the oscillator values when they have already been computed\n   * with the same values.\n   */\n\n\n  Oscillator.prototype._getCachedPeriodicWave = function () {\n    var _this = this;\n\n    if (this._type === \"custom\") {\n      var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n        return description.phase === _this._phase && deepEquals(description.partials, _this._partials);\n      });\n\n      return oscProps;\n    } else {\n      var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n        return description.type === _this._type && description.phase === _this._phase;\n      });\n\n      this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n      return oscProps;\n    }\n  };\n\n  Object.defineProperty(Oscillator.prototype, \"type\", {\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._type = type;\n      var isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n\n      if (this._phase === 0 && isBasicType) {\n        this._wave = undefined;\n        this._partialCount = 0; // just go with the basic approach\n\n        if (this._oscillator !== null) {\n          // already tested that it's a basic type\n          this._oscillator.type = type;\n        }\n      } else {\n        // first check if the value is cached\n        var cache = this._getCachedPeriodicWave();\n\n        if (isDefined(cache)) {\n          var partials = cache.partials,\n              wave = cache.wave;\n          this._wave = wave;\n          this._partials = partials;\n\n          if (this._oscillator !== null) {\n            this._oscillator.setPeriodicWave(this._wave);\n          }\n        } else {\n          var _a = __read(this._getRealImaginary(type, this._phase), 2),\n              real = _a[0],\n              imag = _a[1];\n\n          var periodicWave = this.context.createPeriodicWave(real, imag);\n          this._wave = periodicWave;\n\n          if (this._oscillator !== null) {\n            this._oscillator.setPeriodicWave(this._wave);\n          } // set the cache\n\n\n          Oscillator._periodicWaveCache.push({\n            imag: imag,\n            partialCount: this._partialCount,\n            partials: this._partials,\n            phase: this._phase,\n            real: real,\n            type: this._type,\n            wave: this._wave\n          });\n\n          if (Oscillator._periodicWaveCache.length > 100) {\n            Oscillator._periodicWaveCache.shift();\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Oscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._type.replace(this.partialCount.toString(), \"\");\n    },\n    set: function (baseType) {\n      if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n        this.type = baseType + this.partialCount;\n      } else {\n        this.type = baseType;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Oscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._partialCount;\n    },\n    set: function (p) {\n      assertRange(p, 0);\n      var type = this._type;\n      var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\n      if (partial) {\n        type = partial[1];\n      }\n\n      if (this._type !== \"custom\") {\n        if (p === 0) {\n          this.type = type;\n        } else {\n          this.type = type + p.toString();\n        }\n      } else {\n        // extend or shorten the partials array\n        var fullPartials_1 = new Float32Array(p); // copy over the partials array\n\n        this._partials.forEach(function (v, i) {\n          return fullPartials_1[i] = v;\n        });\n\n        this._partials = Array.from(fullPartials_1);\n        this.type = this._type;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Returns the real and imaginary components based\n   * on the oscillator type.\n   * @returns [real: Float32Array, imaginary: Float32Array]\n   */\n\n  Oscillator.prototype._getRealImaginary = function (type, phase) {\n    var fftSize = 4096;\n    var periodicWaveSize = fftSize / 2;\n    var real = new Float32Array(periodicWaveSize);\n    var imag = new Float32Array(periodicWaveSize);\n    var partialCount = 1;\n\n    if (type === \"custom\") {\n      partialCount = this._partials.length + 1;\n      this._partialCount = this._partials.length;\n      periodicWaveSize = partialCount; // if the partial count is 0, don't bother doing any computation\n\n      if (this._partials.length === 0) {\n        return [real, imag];\n      }\n    } else {\n      var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\n      if (partial) {\n        partialCount = parseInt(partial[2], 10) + 1;\n        this._partialCount = parseInt(partial[2], 10);\n        type = partial[1];\n        partialCount = Math.max(partialCount, 2);\n        periodicWaveSize = partialCount;\n      } else {\n        this._partialCount = 0;\n      }\n\n      this._partials = [];\n    }\n\n    for (var n = 1; n < periodicWaveSize; ++n) {\n      var piFactor = 2 / (n * Math.PI);\n      var b = void 0;\n\n      switch (type) {\n        case \"sine\":\n          b = n <= partialCount ? 1 : 0;\n          this._partials[n - 1] = b;\n          break;\n\n        case \"square\":\n          b = n & 1 ? 2 * piFactor : 0;\n          this._partials[n - 1] = b;\n          break;\n\n        case \"sawtooth\":\n          b = piFactor * (n & 1 ? 1 : -1);\n          this._partials[n - 1] = b;\n          break;\n\n        case \"triangle\":\n          if (n & 1) {\n            b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n          } else {\n            b = 0;\n          }\n\n          this._partials[n - 1] = b;\n          break;\n\n        case \"custom\":\n          b = this._partials[n - 1];\n          break;\n\n        default:\n          throw new TypeError(\"Oscillator: invalid type: \" + type);\n      }\n\n      if (b !== 0) {\n        real[n] = -b * Math.sin(phase * n);\n        imag[n] = b * Math.cos(phase * n);\n      } else {\n        real[n] = 0;\n        imag[n] = 0;\n      }\n    }\n\n    return [real, imag];\n  };\n  /**\n   * Compute the inverse FFT for a given phase.\n   */\n\n\n  Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n    var sum = 0;\n    var len = real.length;\n\n    for (var i = 0; i < len; i++) {\n      sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n    }\n\n    return sum;\n  };\n  /**\n   * Returns the initial value of the oscillator when stopped.\n   * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n   */\n\n\n  Oscillator.prototype.getInitialValue = function () {\n    var _a = __read(this._getRealImaginary(this._type, 0), 2),\n        real = _a[0],\n        imag = _a[1];\n\n    var maxValue = 0;\n    var twoPi = Math.PI * 2;\n    var testPositions = 32; // check for peaks in 16 places\n\n    for (var i = 0; i < testPositions; i++) {\n      maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);\n    }\n\n    return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n  };\n\n  Object.defineProperty(Oscillator.prototype, \"partials\", {\n    get: function () {\n      return this._partials.slice(0, this.partialCount);\n    },\n    set: function (partials) {\n      this._partials = partials;\n      this._partialCount = this._partials.length;\n\n      if (partials.length) {\n        this.type = \"custom\";\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Oscillator.prototype, \"phase\", {\n    get: function () {\n      return this._phase * (180 / Math.PI);\n    },\n    set: function (phase) {\n      this._phase = phase * Math.PI / 180; // reset the type\n\n      this.type = this._type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Oscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n\n  Oscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._oscillator !== null) {\n      this._oscillator.dispose();\n    }\n\n    this._wave = undefined;\n    this.frequency.dispose();\n    this.detune.dispose();\n    return this;\n  };\n  /**\n   * Cache the periodic waves to avoid having to redo computations\n   */\n\n\n  Oscillator._periodicWaveCache = [];\n  return Oscillator;\n}(Source);\n\nexport { Oscillator };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\n\nvar SignalOperator =\n/** @class */\nfunction (_super) {\n  __extends(SignalOperator, _super);\n\n  function SignalOperator() {\n    return _super.call(this, Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"]))) || this;\n  }\n\n  SignalOperator.prototype.connect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    }\n\n    connectSignal(this, destination, outputNum, inputNum);\n    return this;\n  };\n\n  return SignalOperator;\n}(ToneAudioNode);\n\nexport { SignalOperator };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\n\nvar WaveShaper =\n/** @class */\nfunction (_super) {\n  __extends(WaveShaper, _super);\n\n  function WaveShaper() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]))) || this;\n\n    _this.name = \"WaveShaper\";\n    /**\n     * the waveshaper node\n     */\n\n    _this._shaper = _this.context.createWaveShaper();\n    /**\n     * The input to the waveshaper node.\n     */\n\n    _this.input = _this._shaper;\n    /**\n     * The output from the waveshaper node\n     */\n\n    _this.output = _this._shaper;\n    var options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n\n    if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n      _this.curve = Float32Array.from(options.mapping);\n    } else if (isFunction(options.mapping)) {\n      _this.setMap(options.mapping, options.length);\n    }\n\n    return _this;\n  }\n\n  WaveShaper.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      length: 1024\n    });\n  };\n  /**\n   * Uses a mapping function to set the value of the curve.\n   * @param mapping The function used to define the values.\n   *                The mapping function take two arguments:\n   *                the first is the value at the current position\n   *                which goes from -1 to 1 over the number of elements\n   *                in the curve array. The second argument is the array position.\n   * @example\n   * const shaper = new Tone.WaveShaper();\n   * // map the input signal from [-1, 1] to [0, 10]\n   * shaper.setMap((val, index) => (val + 1) * 5);\n   */\n\n\n  WaveShaper.prototype.setMap = function (mapping, length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    var array = new Float32Array(length);\n\n    for (var i = 0, len = length; i < len; i++) {\n      var normalized = i / (len - 1) * 2 - 1;\n      array[i] = mapping(normalized, i);\n    }\n\n    this.curve = array;\n    return this;\n  };\n\n  Object.defineProperty(WaveShaper.prototype, \"curve\", {\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get: function () {\n      return this._shaper.curve;\n    },\n    set: function (mapping) {\n      this._shaper.curve = mapping;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WaveShaper.prototype, \"oversample\", {\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get: function () {\n      return this._shaper.oversample;\n    },\n    set: function (oversampling) {\n      var isOverSampleType = [\"none\", \"2x\", \"4x\"].some(function (str) {\n        return str.includes(oversampling);\n      });\n      assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n      this._shaper.oversample = oversampling;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  WaveShaper.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._shaper.disconnect();\n\n    return this;\n  };\n\n  return WaveShaper;\n}(SignalOperator);\n\nexport { WaveShaper };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See {@link GainToAudio}.\n * @category Signal\n */\n\nvar AudioToGain =\n/** @class */\nfunction (_super) {\n  __extends(AudioToGain, _super);\n\n  function AudioToGain() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"AudioToGain\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function (x) {\n        return (x + 1) / 2;\n      }\n    });\n    /**\n     * The AudioRange input [-1, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The GainRange output [0, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  AudioToGain.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._norm.dispose();\n\n    return this;\n  };\n\n  return AudioToGain;\n}(SignalOperator);\n\nexport { AudioToGain };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\n\nvar Multiply =\n/** @class */\nfunction (_super) {\n  __extends(Multiply, _super);\n\n  function Multiply() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.name = \"Multiply\";\n    /**\n     * Indicates if the value should be overridden on connection\n     */\n\n    _this.override = false;\n    var options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n    _this._mult = _this.input = _this.output = new Gain({\n      context: _this.context,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    _this.factor = _this._param = _this._mult.gain;\n\n    _this.factor.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n\n  Multiply.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  Multiply.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._mult.dispose();\n\n    return this;\n  };\n\n  return Multiply;\n}(Signal);\n\nexport { Multiply };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n *\n * @example\n * // a sine oscillator amplitude-modulated by a square wave\n * const amOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toDestination().start().stop(\"+5\");\n * // schedule a series of notes\n * amOsc.frequency.setValueAtTime(\"F3\", \"+0.25\");\n * amOsc.frequency.setValueAtTime(\"C4\", \"+0.5\");\n * amOsc.frequency.setValueAtTime(\"Bb3\", \"+1\");\n * // schedule harmonicity changes along with those notes\n * amOsc.harmonicity.setValueAtTime(0.5, \"+0.25\");\n * amOsc.harmonicity.setValueAtTime(1, \"+1\");\n * amOsc.harmonicity.linearRampTo(1.1, 2, \"+1\");\n * // fade it out all the way at the end\n * amOsc.volume.exponentialRampTo(-Infinity, 3, \"+2,\");\n * @category Source\n */\n\nvar AMOscillator =\n/** @class */\nfunction (_super) {\n  __extends(AMOscillator, _super);\n\n  function AMOscillator() {\n    var _this = _super.call(this, optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n\n    _this.name = \"AMOscillator\";\n    /**\n     * convert the -1,1 output to 0,1\n     */\n\n    _this._modulationScale = new AudioToGain({\n      context: _this.context\n    });\n    /**\n     * the node where the modulation happens\n     */\n\n    _this._modulationNode = new Gain({\n      context: _this.context\n    });\n    var options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n    _this._carrier = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase,\n      type: options.type\n    });\n    _this.frequency = _this._carrier.frequency, _this.detune = _this._carrier.detune;\n    _this._modulator = new Oscillator({\n      context: _this.context,\n      phase: options.phase,\n      type: options.modulationType\n    });\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    }); // connections\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n\n    _this._carrier.chain(_this._modulationNode, _this.output);\n\n    readOnly(_this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    return _this;\n  }\n\n  AMOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), {\n      harmonicity: 1,\n      modulationType: \"square\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  AMOscillator.prototype._start = function (time) {\n    this._modulator.start(time);\n\n    this._carrier.start(time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  AMOscillator.prototype._stop = function (time) {\n    this._modulator.stop(time);\n\n    this._carrier.stop(time);\n  };\n\n  AMOscillator.prototype._restart = function (time) {\n    this._modulator.restart(time);\n\n    this._carrier.restart(time);\n  };\n\n  Object.defineProperty(AMOscillator.prototype, \"type\", {\n    /**\n     * The type of the carrier oscillator\n     */\n    get: function () {\n      return this._carrier.type;\n    },\n    set: function (type) {\n      this._carrier.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._carrier.baseType;\n    },\n    set: function (baseType) {\n      this._carrier.baseType = baseType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._carrier.partialCount;\n    },\n    set: function (partialCount) {\n      this._carrier.partialCount = partialCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"modulationType\", {\n    /**\n     * The type of the modulator oscillator\n     */\n    get: function () {\n      return this._modulator.type;\n    },\n    set: function (type) {\n      this._modulator.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._carrier.phase;\n    },\n    set: function (phase) {\n      this._carrier.phase = phase;\n      this._modulator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"partials\", {\n    get: function () {\n      return this._carrier.partials;\n    },\n    set: function (partials) {\n      this._carrier.partials = partials;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AMOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  AMOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n    this.detune.dispose();\n    this.harmonicity.dispose();\n\n    this._carrier.dispose();\n\n    this._modulator.dispose();\n\n    this._modulationNode.dispose();\n\n    this._modulationScale.dispose();\n\n    return this;\n  };\n\n  return AMOscillator;\n}(Source);\n\nexport { AMOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @offline 0.1 1\n * @example\n * const fmOsc = new Tone.FMOscillator({\n * \tfrequency: 20,\n * \ttype: \"square\",\n * \tmodulationType: \"triangle\",\n * \tharmonicity: 0.2,\n * \tmodulationIndex: 3\n * }).toDestination().start();\n * @category Source\n */\n\nvar FMOscillator =\n/** @class */\nfunction (_super) {\n  __extends(FMOscillator, _super);\n\n  function FMOscillator() {\n    var _this = _super.call(this, optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n\n    _this.name = \"FMOscillator\";\n    /**\n     * the node where the modulation happens\n     */\n\n    _this._modulationNode = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    var options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n    _this._carrier = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: 0,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase,\n      type: options.type\n    });\n    _this.detune = _this._carrier.detune;\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this._modulator = new Oscillator({\n      context: _this.context,\n      phase: options.phase,\n      type: options.modulationType\n    });\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    });\n    _this.modulationIndex = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.modulationIndex\n    }); // connections\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n\n    _this._modulator.connect(_this._modulationNode.gain);\n\n    _this._modulationNode.connect(_this._carrier.frequency);\n\n    _this._carrier.connect(_this.output);\n\n    _this.detune.connect(_this._modulator.detune);\n\n    readOnly(_this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    return _this;\n  }\n\n  FMOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), {\n      harmonicity: 1,\n      modulationIndex: 2,\n      modulationType: \"square\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  FMOscillator.prototype._start = function (time) {\n    this._modulator.start(time);\n\n    this._carrier.start(time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  FMOscillator.prototype._stop = function (time) {\n    this._modulator.stop(time);\n\n    this._carrier.stop(time);\n  };\n\n  FMOscillator.prototype._restart = function (time) {\n    this._modulator.restart(time);\n\n    this._carrier.restart(time);\n\n    return this;\n  };\n\n  Object.defineProperty(FMOscillator.prototype, \"type\", {\n    get: function () {\n      return this._carrier.type;\n    },\n    set: function (type) {\n      this._carrier.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._carrier.baseType;\n    },\n    set: function (baseType) {\n      this._carrier.baseType = baseType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._carrier.partialCount;\n    },\n    set: function (partialCount) {\n      this._carrier.partialCount = partialCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"modulationType\", {\n    /**\n     * The type of the modulator oscillator\n     */\n    get: function () {\n      return this._modulator.type;\n    },\n    set: function (type) {\n      this._modulator.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._carrier.phase;\n    },\n    set: function (phase) {\n      this._carrier.phase = phase;\n      this._modulator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"partials\", {\n    get: function () {\n      return this._carrier.partials;\n    },\n    set: function (partials) {\n      this._carrier.partials = partials;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FMOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  FMOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n    this.harmonicity.dispose();\n\n    this._carrier.dispose();\n\n    this._modulator.dispose();\n\n    this._modulationNode.dispose();\n\n    this.modulationIndex.dispose();\n    return this;\n  };\n\n  return FMOscillator;\n}(Source);\n\nexport { FMOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * const pulse = new Tone.PulseOscillator(\"E5\", 0.4).toDestination().start();\n * @category Source\n */\n\nvar PulseOscillator =\n/** @class */\nfunction (_super) {\n  __extends(PulseOscillator, _super);\n\n  function PulseOscillator() {\n    var _this = _super.call(this, optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"])) || this;\n\n    _this.name = \"PulseOscillator\";\n    /**\n     * gate the width amount\n     */\n\n    _this._widthGate = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * Threshold the signal to turn it into a square\n     */\n\n    _this._thresh = new WaveShaper({\n      context: _this.context,\n      mapping: function (val) {\n        return val <= 0 ? -1 : 1;\n      }\n    });\n    var options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n    _this.width = new Signal({\n      context: _this.context,\n      units: \"audioRange\",\n      value: options.width\n    });\n    _this._triangle = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase,\n      type: \"triangle\"\n    });\n    _this.frequency = _this._triangle.frequency;\n    _this.detune = _this._triangle.detune; // connections\n\n    _this._triangle.chain(_this._thresh, _this.output);\n\n    _this.width.chain(_this._widthGate, _this._thresh);\n\n    readOnly(_this, [\"width\", \"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  PulseOscillator.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      phase: 0,\n      type: \"pulse\",\n      width: 0.2\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  PulseOscillator.prototype._start = function (time) {\n    time = this.toSeconds(time);\n\n    this._triangle.start(time);\n\n    this._widthGate.gain.setValueAtTime(1, time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  PulseOscillator.prototype._stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._triangle.stop(time); // the width is still connected to the output.\n    // that needs to be stopped also\n\n\n    this._widthGate.gain.cancelScheduledValues(time);\n\n    this._widthGate.gain.setValueAtTime(0, time);\n  };\n\n  PulseOscillator.prototype._restart = function (time) {\n    this._triangle.restart(time);\n\n    this._widthGate.gain.cancelScheduledValues(time);\n\n    this._widthGate.gain.setValueAtTime(1, time);\n  };\n\n  Object.defineProperty(PulseOscillator.prototype, \"phase\", {\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get: function () {\n      return this._triangle.phase;\n    },\n    set: function (phase) {\n      this._triangle.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get: function () {\n      return \"pulse\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"baseType\", {\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get: function () {\n      return \"pulse\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"partials\", {\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get: function () {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"partialCount\", {\n    /**\n     * No partials for this waveform type.\n     */\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"carrierType\", {\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set: function (type) {\n      this._triangle.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PulseOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up method.\n   */\n\n\n  PulseOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._triangle.dispose();\n\n    this.width.dispose();\n\n    this._widthGate.dispose();\n\n    this._thresh.dispose();\n\n    return this;\n  };\n\n  return PulseOscillator;\n}(Source);\n\nexport { PulseOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\n\nvar FatOscillator =\n/** @class */\nfunction (_super) {\n  __extends(FatOscillator, _super);\n\n  function FatOscillator() {\n    var _this = _super.call(this, optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"])) || this;\n\n    _this.name = \"FatOscillator\";\n    /**\n     * The array of oscillators\n     */\n\n    _this._oscillators = [];\n    var options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    _this._spread = options.spread;\n    _this._type = options.type;\n    _this._phase = options.phase;\n    _this._partials = options.partials;\n    _this._partialCount = options.partialCount; // set the count initially\n\n    _this.count = options.count;\n    readOnly(_this, [\"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  FatOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), {\n      count: 3,\n      spread: 20,\n      type: \"sawtooth\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  FatOscillator.prototype._start = function (time) {\n    time = this.toSeconds(time);\n\n    this._forEach(function (osc) {\n      return osc.start(time);\n    });\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  FatOscillator.prototype._stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._forEach(function (osc) {\n      return osc.stop(time);\n    });\n  };\n\n  FatOscillator.prototype._restart = function (time) {\n    this._forEach(function (osc) {\n      return osc.restart(time);\n    });\n  };\n  /**\n   * Iterate over all of the oscillators\n   */\n\n\n  FatOscillator.prototype._forEach = function (iterator) {\n    for (var i = 0; i < this._oscillators.length; i++) {\n      iterator(this._oscillators[i], i);\n    }\n  };\n\n  Object.defineProperty(FatOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._type = type;\n\n      this._forEach(function (osc) {\n        return osc.type = type;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"spread\", {\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get: function () {\n      return this._spread;\n    },\n    set: function (spread) {\n      this._spread = spread;\n\n      if (this._oscillators.length > 1) {\n        var start_1 = -spread / 2;\n        var step_1 = spread / (this._oscillators.length - 1);\n\n        this._forEach(function (osc, i) {\n          return osc.detune.value = start_1 + step_1 * i;\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"count\", {\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get: function () {\n      return this._oscillators.length;\n    },\n    set: function (count) {\n      var _this = this;\n\n      assertRange(count, 1);\n\n      if (this._oscillators.length !== count) {\n        // dispose the previous oscillators\n        this._forEach(function (osc) {\n          return osc.dispose();\n        });\n\n        this._oscillators = [];\n\n        for (var i = 0; i < count; i++) {\n          var osc = new Oscillator({\n            context: this.context,\n            volume: -6 - count * 1.1,\n            type: this._type,\n            phase: this._phase + i / count * 360,\n            partialCount: this._partialCount,\n            onstop: i === 0 ? function () {\n              return _this.onstop(_this);\n            } : noOp\n          });\n\n          if (this.type === \"custom\") {\n            osc.partials = this._partials;\n          }\n\n          this.frequency.connect(osc.frequency);\n          this.detune.connect(osc.detune);\n          osc.detune.overridden = false;\n          osc.connect(this.output);\n          this._oscillators[i] = osc;\n        } // set the spread\n\n\n        this.spread = this._spread;\n\n        if (this.state === \"started\") {\n          this._forEach(function (osc) {\n            return osc.start();\n          });\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._phase;\n    },\n    set: function (phase) {\n      this._phase = phase;\n\n      this._forEach(function (osc) {\n        return osc.phase = phase;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._oscillators[0].baseType;\n    },\n    set: function (baseType) {\n      this._forEach(function (osc) {\n        return osc.baseType = baseType;\n      });\n\n      this._type = this._oscillators[0].type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"partials\", {\n    get: function () {\n      return this._oscillators[0].partials;\n    },\n    set: function (partials) {\n      this._partials = partials;\n      this._partialCount = this._partials.length;\n\n      if (partials.length) {\n        this._type = \"custom\";\n\n        this._forEach(function (osc) {\n          return osc.partials = partials;\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._oscillators[0].partialCount;\n    },\n    set: function (partialCount) {\n      this._partialCount = partialCount;\n\n      this._forEach(function (osc) {\n        return osc.partialCount = partialCount;\n      });\n\n      this._type = this._oscillators[0].type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FatOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  FatOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n    this.detune.dispose();\n\n    this._forEach(function (osc) {\n      return osc.dispose();\n    });\n\n    return this;\n  };\n\n  return FatOscillator;\n}(Source);\n\nexport { FatOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * const pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toDestination().start();\n * @category Source\n */\n\nvar PWMOscillator =\n/** @class */\nfunction (_super) {\n  __extends(PWMOscillator, _super);\n\n  function PWMOscillator() {\n    var _this = _super.call(this, optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"])) || this;\n\n    _this.name = \"PWMOscillator\";\n    _this.sourceType = \"pwm\";\n    /**\n     * Scale the oscillator so it doesn't go silent\n     * at the extreme values.\n     */\n\n    _this._scale = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    var options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n    _this._pulse = new PulseOscillator({\n      context: _this.context,\n      frequency: options.modulationFrequency\n    }); // change the pulse oscillator type\n\n    _this._pulse.carrierType = \"sine\";\n    _this.modulationFrequency = _this._pulse.frequency;\n    _this._modulator = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase\n    });\n    _this.frequency = _this._modulator.frequency;\n    _this.detune = _this._modulator.detune; // connections\n\n    _this._modulator.chain(_this._scale, _this._pulse.width);\n\n    _this._pulse.connect(_this.output);\n\n    readOnly(_this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  PWMOscillator.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      modulationFrequency: 0.4,\n      phase: 0,\n      type: \"pwm\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  PWMOscillator.prototype._start = function (time) {\n    time = this.toSeconds(time);\n\n    this._modulator.start(time);\n\n    this._pulse.start(time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  PWMOscillator.prototype._stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._modulator.stop(time);\n\n    this._pulse.stop(time);\n  };\n  /**\n   * restart the oscillator\n   */\n\n\n  PWMOscillator.prototype._restart = function (time) {\n    this._modulator.restart(time);\n\n    this._pulse.restart(time);\n  };\n\n  Object.defineProperty(PWMOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get: function () {\n      return \"pwm\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"baseType\", {\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get: function () {\n      return \"pwm\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"partials\", {\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get: function () {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"partialCount\", {\n    /**\n     * No partials for this waveform type.\n     */\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"phase\", {\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get: function () {\n      return this._modulator.phase;\n    },\n    set: function (phase) {\n      this._modulator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PWMOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  PWMOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._pulse.dispose();\n\n    this._scale.dispose();\n\n    this._modulator.dispose();\n\n    return this;\n  };\n\n  return PWMOscillator;\n}(Source);\n\nexport { PWMOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nvar OmniOscillatorSourceMap = {\n  am: AMOscillator,\n  fat: FatOscillator,\n  fm: FMOscillator,\n  oscillator: Oscillator,\n  pulse: PulseOscillator,\n  pwm: PWMOscillator\n};\n/**\n * OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n * Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n * into one class. The oscillator class can be changed by setting the `type`.\n * `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n * any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n * will use the FMOscillator, AMOscillator or FatOscillator respectively.\n * For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n * to a FatOscillator of type \"sawtooth\".\n * @example\n * const omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n * @category Source\n */\n\nvar OmniOscillator =\n/** @class */\nfunction (_super) {\n  __extends(OmniOscillator, _super);\n\n  function OmniOscillator() {\n    var _this = _super.call(this, optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"OmniOscillator\";\n    var options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_this, [\"frequency\", \"detune\"]); // set the options\n\n    _this.set(options);\n\n    return _this;\n  }\n\n  OmniOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  OmniOscillator.prototype._start = function (time) {\n    this._oscillator.start(time);\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  OmniOscillator.prototype._stop = function (time) {\n    this._oscillator.stop(time);\n  };\n\n  OmniOscillator.prototype._restart = function (time) {\n    this._oscillator.restart(time);\n\n    return this;\n  };\n\n  Object.defineProperty(OmniOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone..OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * // an square wave frequency modulated by a sawtooth\n     * omniOsc.type = \"fmsquare\";\n     * omniOsc.modulationType = \"sawtooth\";\n     */\n    get: function () {\n      var _this = this;\n\n      var prefix = \"\";\n\n      if ([\"am\", \"fm\", \"fat\"].some(function (p) {\n        return _this._sourceType === p;\n      })) {\n        prefix = this._sourceType;\n      }\n\n      return prefix + this._oscillator.type;\n    },\n    set: function (type) {\n      if (type.substr(0, 2) === \"fm\") {\n        this._createNewOscillator(\"fm\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type.substr(2);\n      } else if (type.substr(0, 2) === \"am\") {\n        this._createNewOscillator(\"am\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type.substr(2);\n      } else if (type.substr(0, 3) === \"fat\") {\n        this._createNewOscillator(\"fat\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type.substr(3);\n      } else if (type === \"pwm\") {\n        this._createNewOscillator(\"pwm\");\n\n        this._oscillator = this._oscillator;\n      } else if (type === \"pulse\") {\n        this._createNewOscillator(\"pulse\");\n      } else {\n        this._createNewOscillator(\"oscillator\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"partials\", {\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get: function () {\n      return this._oscillator.partials;\n    },\n    set: function (partials) {\n      if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n        this._oscillator.partials = partials;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._oscillator.partialCount;\n    },\n    set: function (partialCount) {\n      if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n        this._oscillator.partialCount = partialCount;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OmniOscillator.prototype.set = function (props) {\n    // make sure the type is set first\n    if (Reflect.has(props, \"type\") && props.type) {\n      this.type = props.type;\n    } // then set the rest\n\n\n    _super.prototype.set.call(this, props);\n\n    return this;\n  };\n  /**\n   * connect the oscillator to the frequency and detune signals\n   */\n\n\n  OmniOscillator.prototype._createNewOscillator = function (oscType) {\n    var _this = this;\n\n    if (oscType !== this._sourceType) {\n      this._sourceType = oscType;\n      var OscConstructor = OmniOscillatorSourceMap[oscType]; // short delay to avoid clicks on the change\n\n      var now = this.now();\n\n      if (this._oscillator) {\n        var oldOsc_1 = this._oscillator;\n        oldOsc_1.stop(now); // dispose the old one\n\n        this.context.setTimeout(function () {\n          return oldOsc_1.dispose();\n        }, this.blockTime);\n      }\n\n      this._oscillator = new OscConstructor({\n        context: this.context\n      });\n      this.frequency.connect(this._oscillator.frequency);\n      this.detune.connect(this._oscillator.detune);\n\n      this._oscillator.connect(this.output);\n\n      this._oscillator.onstop = function () {\n        return _this.onstop(_this);\n      };\n\n      if (this.state === \"started\") {\n        this._oscillator.start(now);\n      }\n    }\n  };\n\n  Object.defineProperty(OmniOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._oscillator.phase;\n    },\n    set: function (phase) {\n      this._oscillator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"sourceType\", {\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get: function () {\n      return this._sourceType;\n    },\n    set: function (sType) {\n      // the basetype defaults to sine\n      var baseType = \"sine\";\n\n      if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n        baseType = this._oscillator.type;\n      } // set the type\n\n\n      if (sType === \"fm\") {\n        this.type = \"fm\" + baseType;\n      } else if (sType === \"am\") {\n        this.type = \"am\" + baseType;\n      } else if (sType === \"fat\") {\n        this.type = \"fat\" + baseType;\n      } else if (sType === \"oscillator\") {\n        this.type = baseType;\n      } else if (sType === \"pulse\") {\n        this.type = \"pulse\";\n      } else if (sType === \"pwm\") {\n        this.type = \"pwm\";\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OmniOscillator.prototype._getOscType = function (osc, sourceType) {\n    return osc instanceof OmniOscillatorSourceMap[sourceType];\n  };\n\n  Object.defineProperty(OmniOscillator.prototype, \"baseType\", {\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * omniOsc.sourceType; // 'fm'\n     * omniOsc.baseType; // 'square'\n     * omniOsc.partialCount; // 4\n     */\n    get: function () {\n      return this._oscillator.baseType;\n    },\n    set: function (baseType) {\n      if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\") && baseType !== \"pulse\" && baseType !== \"pwm\") {\n        this._oscillator.baseType = baseType;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"width\", {\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n     * // can access the width attribute only if type === \"pulse\"\n     * omniOsc.width.value = 0.2;\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"pulse\")) {\n        return this._oscillator.width;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"count\", {\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fat\")) {\n        return this._oscillator.count;\n      } else {\n        return undefined;\n      }\n    },\n    set: function (count) {\n      if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n        this._oscillator.count = count;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"spread\", {\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fat\")) {\n        return this._oscillator.spread;\n      } else {\n        return undefined;\n      }\n    },\n    set: function (spread) {\n      if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n        this._oscillator.spread = spread;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"modulationType\", {\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n        return this._oscillator.modulationType;\n      } else {\n        return undefined;\n      }\n    },\n    set: function (mType) {\n      if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n        this._oscillator.modulationType = mType;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"modulationIndex\", {\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fm\")) {\n        return this._oscillator.modulationIndex;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"harmonicity\", {\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n        return this._oscillator.harmonicity;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"modulationFrequency\", {\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"pwm\")) {\n        return this._oscillator.modulationFrequency;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OmniOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n\n  OmniOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.detune.dispose();\n    this.frequency.dispose();\n\n    this._oscillator.dispose();\n\n    return this;\n  };\n\n  return OmniOscillator;\n}(Source);\n\nexport { OmniOscillator };","import { __extends } from \"tslib\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @offline 0.5 1\n * @example\n * const add = new Tone.Add(2).toDestination();\n * add.addend.setValueAtTime(1, 0.2);\n * const signal = new Tone.Signal(2);\n * // add a signal and a scalar\n * signal.connect(add);\n * signal.setValueAtTime(1, 0.1);\n * @category Signal\n */\n\nvar Add =\n/** @class */\nfunction (_super) {\n  __extends(Add, _super);\n\n  function Add() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.override = false;\n    _this.name = \"Add\";\n    /**\n     * the summing node\n     */\n\n    _this._sum = new Gain({\n      context: _this.context\n    });\n    _this.input = _this._sum;\n    _this.output = _this._sum;\n    /**\n     * The value which is added to the input signal\n     */\n\n    _this.addend = _this._param;\n    connectSeries(_this._constantSource, _this._sum);\n    return _this;\n  }\n\n  Add.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  Add.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._sum.dispose();\n\n    return this;\n  };\n\n  return Add;\n}(Signal);\n\nexport { Add };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\n\nvar Scale =\n/** @class */\nfunction (_super) {\n  __extends(Scale, _super);\n\n  function Scale() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]))) || this;\n\n    _this.name = \"Scale\";\n    var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n    _this._mult = _this.input = new Multiply({\n      context: _this.context,\n      value: options.max - options.min\n    });\n    _this._add = _this.output = new Add({\n      context: _this.context,\n      value: options.min\n    });\n    _this._min = options.min;\n    _this._max = options.max;\n\n    _this.input.connect(_this.output);\n\n    return _this;\n  }\n\n  Scale.getDefaults = function () {\n    return Object.assign(SignalOperator.getDefaults(), {\n      max: 1,\n      min: 0\n    });\n  };\n\n  Object.defineProperty(Scale.prototype, \"min\", {\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get: function () {\n      return this._min;\n    },\n    set: function (min) {\n      this._min = min;\n\n      this._setRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scale.prototype, \"max\", {\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get: function () {\n      return this._max;\n    },\n    set: function (max) {\n      this._max = max;\n\n      this._setRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * set the values\n   */\n\n  Scale.prototype._setRange = function () {\n    this._add.value = this._min;\n    this._mult.value = this._max - this._min;\n  };\n\n  Scale.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._add.dispose();\n\n    this._mult.dispose();\n\n    return this;\n  };\n\n  return Scale;\n}(SignalOperator);\n\nexport { Scale };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\n\nvar Zero =\n/** @class */\nfunction (_super) {\n  __extends(Zero, _super);\n\n  function Zero() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Zero.getDefaults(), arguments))) || this;\n\n    _this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n\n    _this._gain = new Gain({\n      context: _this.context\n    });\n    /**\n     * Only outputs 0\n     */\n\n    _this.output = _this._gain;\n    /**\n     * no input node\n     */\n\n    _this.input = undefined;\n    connect(_this.context.getConstant(0), _this._gain);\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  Zero.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    disconnect(this.context.getConstant(0), this._gain);\n    return this;\n  };\n\n  return Zero;\n}(SignalOperator);\n\nexport { Zero };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n *\n * @example\n * const filter = new Tone.Filter().toDestination();\n * const noise = new Tone.Noise().connect(filter).start();\n * const lfo = new Tone.LFO(\"4n\", 400, 4000).start();\n * // have it control the filters cutoff\n * lfo.connect(filter.frequency);\n * @category Source\n */\n\nvar LFO =\n/** @class */\nfunction (_super) {\n  __extends(LFO, _super);\n\n  function LFO() {\n    var _this = _super.call(this, optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"])) || this;\n\n    _this.name = \"LFO\";\n    /**\n     * The value that the LFO outputs when it's stopped\n     */\n\n    _this._stoppedValue = 0;\n    /**\n     * A private placeholder for the units\n     */\n\n    _this._units = \"number\";\n    /**\n     * If the input value is converted using the [[units]]\n     */\n\n    _this.convert = true;\n    /**\n     * Private methods borrowed from Param\n     */\n    // @ts-ignore\n\n    _this._fromType = Param.prototype._fromType; // @ts-ignore\n\n    _this._toType = Param.prototype._toType; // @ts-ignore\n\n    _this._is = Param.prototype._is; // @ts-ignore\n\n    _this._clampValue = Param.prototype._clampValue;\n    var options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]); // @ts-ignore\n\n    _this._oscillator = new Oscillator({\n      context: _this.context,\n      frequency: options.frequency,\n      type: options.type\n    });\n    _this.frequency = _this._oscillator.frequency;\n    _this._amplitudeGain = new Gain({\n      context: _this.context,\n      gain: options.amplitude,\n      units: \"normalRange\"\n    });\n    _this.amplitude = _this._amplitudeGain.gain;\n    _this._stoppedSignal = new Signal({\n      context: _this.context,\n      units: \"audioRange\",\n      value: 0\n    });\n    _this._zeros = new Zero({\n      context: _this.context\n    });\n    _this._a2g = new AudioToGain({\n      context: _this.context\n    });\n    _this._scaler = _this.output = new Scale({\n      context: _this.context,\n      max: options.max,\n      min: options.min\n    });\n    _this.units = options.units;\n    _this.min = options.min;\n    _this.max = options.max; // connect it up\n\n    _this._oscillator.chain(_this._a2g, _this._amplitudeGain, _this._scaler);\n\n    _this._zeros.connect(_this._a2g);\n\n    _this._stoppedSignal.connect(_this._a2g);\n\n    readOnly(_this, [\"amplitude\", \"frequency\"]);\n    _this.phase = options.phase;\n    return _this;\n  }\n\n  LFO.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      amplitude: 1,\n      frequency: \"4n\",\n      max: 1,\n      min: 0,\n      phase: 0,\n      type: \"sine\",\n      units: \"number\"\n    });\n  };\n  /**\n   * Start the LFO.\n   * @param time The time the LFO will start\n   */\n\n\n  LFO.prototype.start = function (time) {\n    time = this.toSeconds(time);\n\n    this._stoppedSignal.setValueAtTime(0, time);\n\n    this._oscillator.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the LFO.\n   * @param  time The time the LFO will stop\n   */\n\n\n  LFO.prototype.stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\n    this._oscillator.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the start/stop/pause to the transport\n   * and the frequency to the bpm of the transport\n   * @example\n   * const lfo = new Tone.LFO(\"8n\");\n   * lfo.sync().start(0);\n   * // the rate of the LFO will always be an eighth note, even as the tempo changes\n   */\n\n\n  LFO.prototype.sync = function () {\n    this._oscillator.sync();\n\n    this._oscillator.syncFrequency();\n\n    return this;\n  };\n  /**\n   * unsync the LFO from transport control\n   */\n\n\n  LFO.prototype.unsync = function () {\n    this._oscillator.unsync();\n\n    this._oscillator.unsyncFrequency();\n\n    return this;\n  };\n\n  Object.defineProperty(LFO.prototype, \"min\", {\n    /**\n     * The minimum output of the LFO.\n     */\n    get: function () {\n      return this._toType(this._scaler.min);\n    },\n    set: function (min) {\n      min = this._fromType(min);\n      this._scaler.min = min;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"max\", {\n    /**\n     * The maximum output of the LFO.\n     */\n    get: function () {\n      return this._toType(this._scaler.max);\n    },\n    set: function (max) {\n      max = this._fromType(max);\n      this._scaler.max = max;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"type\", {\n    /**\n     * The type of the oscillator: See [[Oscillator.type]]\n     */\n    get: function () {\n      return this._oscillator.type;\n    },\n    set: function (type) {\n      this._oscillator.type = type;\n      this._stoppedValue = this._oscillator.getInitialValue();\n      this._stoppedSignal.value = this._stoppedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"phase\", {\n    /**\n     * The phase of the LFO.\n     */\n    get: function () {\n      return this._oscillator.phase;\n    },\n    set: function (phase) {\n      this._oscillator.phase = phase;\n      this._stoppedValue = this._oscillator.getInitialValue();\n      this._stoppedSignal.value = this._stoppedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"units\", {\n    /**\n     * The output units of the LFO.\n     */\n    get: function () {\n      return this._units;\n    },\n    set: function (val) {\n      var currentMin = this.min;\n      var currentMax = this.max; // convert the min and the max\n\n      this._units = val;\n      this.min = currentMin;\n      this.max = currentMax;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     */\n    get: function () {\n      return this._oscillator.state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @param node the destination to connect to\n   * @param outputNum the optional output number\n   * @param inputNum the input number\n   */\n\n  LFO.prototype.connect = function (node, outputNum, inputNum) {\n    if (node instanceof Param || node instanceof Signal) {\n      this.convert = node.convert;\n      this.units = node.units;\n    }\n\n    connectSignal(this, node, outputNum, inputNum);\n    return this;\n  };\n\n  LFO.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._oscillator.dispose();\n\n    this._stoppedSignal.dispose();\n\n    this._zeros.dispose();\n\n    this._scaler.dispose();\n\n    this._a2g.dispose();\n\n    this._amplitudeGain.dispose();\n\n    this.amplitude.dispose();\n    return this;\n  };\n\n  return LFO;\n}(ToneAudioNode);\n\nexport { LFO };","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\n\nexport function range(min, max) {\n  if (max === void 0) {\n    max = Infinity;\n  }\n\n  var valueMap = new WeakMap();\n  return function (target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        return valueMap.get(this);\n      },\n      set: function (newValue) {\n        assertRange(newValue, min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\n\nexport function timeRange(min, max) {\n  if (max === void 0) {\n    max = Infinity;\n  }\n\n  var valueMap = new WeakMap();\n  return function (target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        return valueMap.get(this);\n      },\n      set: function (newValue) {\n        assertRange(this.toSeconds(newValue), min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}","import { __awaiter, __decorate, __extends, __generator } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\n\nvar Player =\n/** @class */\nfunction (_super) {\n  __extends(Player, _super);\n\n  function Player() {\n    var _this = _super.call(this, optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"Player\";\n    /**\n     * All of the active buffer source nodes\n     */\n\n    _this._activeSources = new Set();\n    var options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n    _this._buffer = new ToneAudioBuffer({\n      onload: _this._onload.bind(_this, options.onload),\n      onerror: options.onerror,\n      reverse: options.reverse,\n      url: options.url\n    });\n    _this.autostart = options.autostart;\n    _this._loop = options.loop;\n    _this._loopStart = options.loopStart;\n    _this._loopEnd = options.loopEnd;\n    _this._playbackRate = options.playbackRate;\n    _this.fadeIn = options.fadeIn;\n    _this.fadeOut = options.fadeOut;\n    return _this;\n  }\n\n  Player.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      autostart: false,\n      fadeIn: 0,\n      fadeOut: 0,\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      onload: noOp,\n      onerror: noOp,\n      playbackRate: 1,\n      reverse: false\n    });\n  };\n  /**\n   * Load the audio file as an audio buffer.\n   * Decodes the audio asynchronously and invokes\n   * the callback once the audio buffer loads.\n   * Note: this does not need to be called if a url\n   * was passed in to the constructor. Only use this\n   * if you want to manually load a new url.\n   * @param url The url of the buffer to load. Filetype support depends on the browser.\n   */\n\n\n  Player.prototype.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._buffer.load(url)];\n\n          case 1:\n            _a.sent();\n\n            this._onload();\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * Internal callback when the buffer is loaded.\n   */\n\n\n  Player.prototype._onload = function (callback) {\n    if (callback === void 0) {\n      callback = noOp;\n    }\n\n    callback();\n\n    if (this.autostart) {\n      this.start();\n    }\n  };\n  /**\n   * Internal callback when the buffer is done playing.\n   */\n\n\n  Player.prototype._onSourceEnd = function (source) {\n    // invoke the onstop function\n    this.onstop(this); // delete the source from the active sources\n\n    this._activeSources.delete(source);\n\n    if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === \"started\") {\n      this._state.setStateAtTime(\"stopped\", this.now());\n    }\n  };\n  /**\n   * Play the buffer at the given startTime. Optionally add an offset\n   * and/or duration which will play the buffer from a position\n   * within the buffer for the given duration.\n   *\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n   */\n\n\n  Player.prototype.start = function (time, offset, duration) {\n    _super.prototype.start.call(this, time, offset, duration);\n\n    return this;\n  };\n  /**\n   * Internal start method\n   */\n\n\n  Player.prototype._start = function (startTime, offset, duration) {\n    // if it's a loop the default offset is the loopStart point\n    if (this._loop) {\n      offset = defaultArg(offset, this._loopStart);\n    } else {\n      // otherwise the default offset is 0\n      offset = defaultArg(offset, 0);\n    } // compute the values in seconds\n\n\n    var computedOffset = this.toSeconds(offset); // if it's synced, it should factor in the playback rate for computing the offset\n\n    if (this._synced) {\n      computedOffset *= this._playbackRate;\n    } // compute the duration which is either the passed in duration of the buffer.duration - offset\n\n\n    var origDuration = duration;\n    duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n    var computedDuration = this.toSeconds(duration); // scale it by the playback rate\n\n    computedDuration = computedDuration / this._playbackRate; // get the start time\n\n    startTime = this.toSeconds(startTime); // make the source\n\n    var source = new ToneBufferSource({\n      url: this._buffer,\n      context: this.context,\n      fadeIn: this.fadeIn,\n      fadeOut: this.fadeOut,\n      loop: this._loop,\n      loopEnd: this._loopEnd,\n      loopStart: this._loopStart,\n      onended: this._onSourceEnd.bind(this),\n      playbackRate: this._playbackRate\n    }).connect(this.output); // set the looping properties\n\n    if (!this._loop && !this._synced) {\n      // cancel the previous stop\n      this._state.cancel(startTime + computedDuration); // if it's not looping, set the state change at the end of the sample\n\n\n      this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n        implicitEnd: true\n      });\n    } // add it to the array of active sources\n\n\n    this._activeSources.add(source); // start it\n\n\n    if (this._loop && isUndef(origDuration)) {\n      source.start(startTime, computedOffset);\n    } else {\n      // subtract the fade out time\n      source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n    }\n  };\n  /**\n   * Stop playback.\n   */\n\n\n  Player.prototype._stop = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    this._activeSources.forEach(function (source) {\n      return source.stop(computedTime);\n    });\n  };\n  /**\n   * Stop and then restart the player from the beginning (or offset)\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given,\n   * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n   */\n\n\n  Player.prototype.restart = function (time, offset, duration) {\n    _super.prototype.restart.call(this, time, offset, duration);\n\n    return this;\n  };\n\n  Player.prototype._restart = function (time, offset, duration) {\n    this._stop(time);\n\n    this._start(time, offset, duration);\n  };\n  /**\n   * Seek to a specific time in the player's buffer. If the\n   * source is no longer playing at that time, it will stop.\n   * @param offset The time to seek to.\n   * @param when The time for the seek event to occur.\n   * @example\n   * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n   * \tplayer.start();\n   * \t// seek to the offset in 1 second from now\n   * \tplayer.seek(0.4, \"+1\");\n   * }).toDestination();\n   */\n\n\n  Player.prototype.seek = function (offset, when) {\n    var computedTime = this.toSeconds(when);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      var computedOffset = this.toSeconds(offset); // if it's currently playing, stop it\n\n      this._stop(computedTime); // restart it at the given time\n\n\n      this._start(computedTime, computedOffset);\n    }\n\n    return this;\n  };\n  /**\n   * Set the loop start and end. Will only loop if loop is set to true.\n   * @param loopStart The loop start time\n   * @param loopEnd The loop end time\n   * @example\n   * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n   * // loop between the given points\n   * player.setLoopPoints(0.2, 0.3);\n   * player.loop = true;\n   * player.autostart = true;\n   */\n\n\n  Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n    this.loopStart = loopStart;\n    this.loopEnd = loopEnd;\n    return this;\n  };\n\n  Object.defineProperty(Player.prototype, \"loopStart\", {\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get: function () {\n      return this._loopStart;\n    },\n    set: function (loopStart) {\n      this._loopStart = loopStart;\n\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n      } // get the current source\n\n\n      this._activeSources.forEach(function (source) {\n        source.loopStart = loopStart;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"loopEnd\", {\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get: function () {\n      return this._loopEnd;\n    },\n    set: function (loopEnd) {\n      this._loopEnd = loopEnd;\n\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n      } // get the current source\n\n\n      this._activeSources.forEach(function (source) {\n        source.loopEnd = loopEnd;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"buffer\", {\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get: function () {\n      return this._buffer;\n    },\n    set: function (buffer) {\n      this._buffer.set(buffer);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"loop\", {\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get: function () {\n      return this._loop;\n    },\n    set: function (loop) {\n      // if no change, do nothing\n      if (this._loop === loop) {\n        return;\n      }\n\n      this._loop = loop; // set the loop of all of the sources\n\n      this._activeSources.forEach(function (source) {\n        source.loop = loop;\n      });\n\n      if (loop) {\n        // remove the next stopEvent\n        var stopEvent = this._state.getNextState(\"stopped\", this.now());\n\n        if (stopEvent) {\n          this._state.cancel(stopEvent.time);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"playbackRate\", {\n    /**\n     * The playback speed. 1 is normal speed. This is not a signal because\n     * Safari and iOS currently don't support playbackRate as a signal.\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n      var now = this.now(); // cancel the stop event since it's at a different time now\n\n      var stopEvent = this._state.getNextState(\"stopped\", now);\n\n      if (stopEvent && stopEvent.implicitEnd) {\n        this._state.cancel(stopEvent.time);\n\n        this._activeSources.forEach(function (source) {\n          return source.cancelStop();\n        });\n      } // set all the sources\n\n\n      this._activeSources.forEach(function (source) {\n        source.playbackRate.setValueAtTime(rate, now);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"reverse\", {\n    /**\n     * The direction the buffer should play in\n     */\n    get: function () {\n      return this._buffer.reverse;\n    },\n    set: function (rev) {\n      this._buffer.reverse = rev;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"loaded\", {\n    /**\n     * If the buffer is loaded\n     */\n    get: function () {\n      return this._buffer.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Player.prototype.dispose = function () {\n    _super.prototype.dispose.call(this); // disconnect all of the players\n\n\n    this._activeSources.forEach(function (source) {\n      return source.dispose();\n    });\n\n    this._activeSources.clear();\n\n    this._buffer.dispose();\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Player.prototype, \"fadeIn\", void 0);\n\n  __decorate([timeRange(0)], Player.prototype, \"fadeOut\", void 0);\n\n  return Player;\n}(Source);\n\nexport { Player };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * Return the absolute value of an incoming signal.\n *\n * @offline 0.5 1\n * @example\n * const abs = new Tone.Abs().toDestination();\n * const signal = new Tone.Signal(1);\n * signal.rampTo(-1, 0.5);\n * signal.connect(abs);\n * @category Signal\n */\n\nvar Abs =\n/** @class */\nfunction (_super) {\n  __extends(Abs, _super);\n\n  function Abs() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Abs\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._abs = new WaveShaper({\n      context: _this.context,\n      mapping: function (val) {\n        if (Math.abs(val) < 0.001) {\n          return 0;\n        } else {\n          return Math.abs(val);\n        }\n      }\n    });\n    /**\n     * The AudioRange input [-1, 1]\n     */\n\n    _this.input = _this._abs;\n    /**\n     * The output range [0, 1]\n     */\n\n    _this.output = _this._abs;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  Abs.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._abs.dispose();\n\n    return this;\n  };\n\n  return Abs;\n}(SignalOperator);\n\nexport { Abs };","import { __extends, __read } from \"tslib\";\nimport { Volume } from \"../../component/channel/Volume\";\nimport { ToneAudioBuffers } from \"../../core/context/ToneAudioBuffers\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Source } from \"../Source\";\nimport { Player } from \"./Player\";\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\n\nvar Players =\n/** @class */\nfunction (_super) {\n  __extends(Players, _super);\n\n  function Players() {\n    var _this = _super.call(this, optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\")) || this;\n\n    _this.name = \"Players\";\n    /**\n     * Players has no input.\n     */\n\n    _this.input = undefined;\n    /**\n     * The container of all of the players\n     */\n\n    _this._players = new Map();\n    var options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n    /**\n     * The output volume node\n     */\n\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    _this._buffers = new ToneAudioBuffers({\n      urls: options.urls,\n      onload: options.onload,\n      baseUrl: options.baseUrl,\n      onerror: options.onerror\n    }); // mute initially\n\n    _this.mute = options.mute;\n    _this._fadeIn = options.fadeIn;\n    _this._fadeOut = options.fadeOut;\n    return _this;\n  }\n\n  Players.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      baseUrl: \"\",\n      fadeIn: 0,\n      fadeOut: 0,\n      mute: false,\n      onload: noOp,\n      onerror: noOp,\n      urls: {},\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Players.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Players.prototype, \"fadeIn\", {\n    /**\n     * The fadeIn time of the envelope applied to the source.\n     */\n    get: function () {\n      return this._fadeIn;\n    },\n    set: function (fadeIn) {\n      this._fadeIn = fadeIn;\n\n      this._players.forEach(function (player) {\n        player.fadeIn = fadeIn;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Players.prototype, \"fadeOut\", {\n    /**\n     * The fadeOut time of the each of the sources.\n     */\n    get: function () {\n      return this._fadeOut;\n    },\n    set: function (fadeOut) {\n      this._fadeOut = fadeOut;\n\n      this._players.forEach(function (player) {\n        player.fadeOut = fadeOut;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Players.prototype, \"state\", {\n    /**\n     * The state of the players object. Returns \"started\" if any of the players are playing.\n     */\n    get: function () {\n      var playing = Array.from(this._players).some(function (_a) {\n        var _b = __read(_a, 2),\n            _ = _b[0],\n            player = _b[1];\n\n        return player.state === \"started\";\n      });\n      return playing ? \"started\" : \"stopped\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * True if the buffers object has a buffer by that name.\n   * @param name  The key or index of the buffer.\n   */\n\n  Players.prototype.has = function (name) {\n    return this._buffers.has(name);\n  };\n  /**\n   * Get a player by name.\n   * @param  name  The players name as defined in the constructor object or `add` method.\n   */\n\n\n  Players.prototype.player = function (name) {\n    assert(this.has(name), \"No Player with the name \" + name + \" exists on this object\");\n\n    if (!this._players.has(name)) {\n      var player = new Player({\n        context: this.context,\n        fadeIn: this._fadeIn,\n        fadeOut: this._fadeOut,\n        url: this._buffers.get(name)\n      }).connect(this.output);\n\n      this._players.set(name, player);\n    }\n\n    return this._players.get(name);\n  };\n\n  Object.defineProperty(Players.prototype, \"loaded\", {\n    /**\n     * If all the buffers are loaded or not\n     */\n    get: function () {\n      return this._buffers.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add a player by name and url to the Players\n   * @param  name A unique name to give the player\n   * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n   * @param callback  The callback to invoke when the url is loaded.\n   */\n\n  Players.prototype.add = function (name, url, callback) {\n    assert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\n    this._buffers.add(name, url, callback);\n\n    return this;\n  };\n  /**\n   * Stop all of the players at the given time\n   * @param time The time to stop all of the players.\n   */\n\n\n  Players.prototype.stopAll = function (time) {\n    this._players.forEach(function (player) {\n      return player.stop(time);\n    });\n\n    return this;\n  };\n\n  Players.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n\n    this._players.forEach(function (player) {\n      return player.dispose();\n    });\n\n    this._buffers.dispose();\n\n    return this;\n  };\n\n  return Players;\n}(ToneAudioNode);\n\nexport { Players };","import { __extends } from \"tslib\";\nimport { Source } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\n\nvar GrainPlayer =\n/** @class */\nfunction (_super) {\n  __extends(GrainPlayer, _super);\n\n  function GrainPlayer() {\n    var _this = _super.call(this, optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"GrainPlayer\";\n    /**\n     * Internal loopStart value\n     */\n\n    _this._loopStart = 0;\n    /**\n     * Internal loopStart value\n     */\n\n    _this._loopEnd = 0;\n    /**\n     * All of the currently playing BufferSources\n     */\n\n    _this._activeSources = [];\n    var options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n    _this.buffer = new ToneAudioBuffer({\n      onload: options.onload,\n      onerror: options.onerror,\n      reverse: options.reverse,\n      url: options.url\n    });\n    _this._clock = new Clock({\n      context: _this.context,\n      callback: _this._tick.bind(_this),\n      frequency: 1 / options.grainSize\n    });\n    _this._playbackRate = options.playbackRate;\n    _this._grainSize = options.grainSize;\n    _this._overlap = options.overlap;\n    _this.detune = options.detune; // setup\n\n    _this.overlap = options.overlap;\n    _this.loop = options.loop;\n    _this.playbackRate = options.playbackRate;\n    _this.grainSize = options.grainSize;\n    _this.loopStart = options.loopStart;\n    _this.loopEnd = options.loopEnd;\n    _this.reverse = options.reverse;\n\n    _this._clock.on(\"stop\", _this._onstop.bind(_this));\n\n    return _this;\n  }\n\n  GrainPlayer.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      onload: noOp,\n      onerror: noOp,\n      overlap: 0.1,\n      grainSize: 0.2,\n      playbackRate: 1,\n      detune: 0,\n      loop: false,\n      loopStart: 0,\n      loopEnd: 0,\n      reverse: false\n    });\n  };\n  /**\n   * Internal start method\n   */\n\n\n  GrainPlayer.prototype._start = function (time, offset, duration) {\n    offset = defaultArg(offset, 0);\n    offset = this.toSeconds(offset);\n    time = this.toSeconds(time);\n\n    var grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n\n    this._clock.start(time, offset / grainSize);\n\n    if (duration) {\n      this.stop(time + this.toSeconds(duration));\n    }\n  };\n  /**\n   * Stop and then restart the player from the beginning (or offset)\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given,\n   * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n   */\n\n\n  GrainPlayer.prototype.restart = function (time, offset, duration) {\n    _super.prototype.restart.call(this, time, offset, duration);\n\n    return this;\n  };\n\n  GrainPlayer.prototype._restart = function (time, offset, duration) {\n    this._stop(time);\n\n    this._start(time, offset, duration);\n  };\n  /**\n   * Internal stop method\n   */\n\n\n  GrainPlayer.prototype._stop = function (time) {\n    this._clock.stop(time);\n  };\n  /**\n   * Invoked when the clock is stopped\n   */\n\n\n  GrainPlayer.prototype._onstop = function (time) {\n    // stop the players\n    this._activeSources.forEach(function (source) {\n      source.fadeOut = 0;\n      source.stop(time);\n    });\n\n    this.onstop(this);\n  };\n  /**\n   * Invoked on each clock tick. scheduled a new grain at this time.\n   */\n\n\n  GrainPlayer.prototype._tick = function (time) {\n    var _this = this; // check if it should stop looping\n\n\n    var ticks = this._clock.getTicksAtTime(time);\n\n    var grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n\n    var offset = ticks * grainSize;\n    this.log(\"offset\", offset);\n\n    if (!this.loop && offset > this.buffer.duration) {\n      this.stop(time);\n      return;\n    } // at the beginning of the file, the fade in should be 0\n\n\n    var fadeIn = offset < this._overlap ? 0 : this._overlap; // create a buffer source\n\n    var source = new ToneBufferSource({\n      context: this.context,\n      url: this.buffer,\n      fadeIn: fadeIn,\n      fadeOut: this._overlap,\n      loop: this.loop,\n      loopStart: this._loopStart,\n      loopEnd: this._loopEnd,\n      // compute the playbackRate based on the detune\n      playbackRate: intervalToFrequencyRatio(this.detune / 100)\n    }).connect(this.output);\n    source.start(time, this._grainSize * ticks);\n    source.stop(time + this._grainSize / this.playbackRate); // add it to the active sources\n\n    this._activeSources.push(source); // remove it when it's done\n\n\n    source.onended = function () {\n      var index = _this._activeSources.indexOf(source);\n\n      if (index !== -1) {\n        _this._activeSources.splice(index, 1);\n      }\n    };\n  };\n\n  Object.defineProperty(GrainPlayer.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the sample\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      assertRange(rate, 0.001);\n      this._playbackRate = rate;\n      this.grainSize = this._grainSize;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"loopStart\", {\n    /**\n     * The loop start time.\n     */\n    get: function () {\n      return this._loopStart;\n    },\n    set: function (time) {\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(time), 0, this.buffer.duration);\n      }\n\n      this._loopStart = this.toSeconds(time);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"loopEnd\", {\n    /**\n     * The loop end time.\n     */\n    get: function () {\n      return this._loopEnd;\n    },\n    set: function (time) {\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(time), 0, this.buffer.duration);\n      }\n\n      this._loopEnd = this.toSeconds(time);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"reverse\", {\n    /**\n     * The direction the buffer should play in\n     */\n    get: function () {\n      return this.buffer.reverse;\n    },\n    set: function (rev) {\n      this.buffer.reverse = rev;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"grainSize\", {\n    /**\n     * The size of each chunk of audio that the\n     * buffer is chopped into and played back at.\n     */\n    get: function () {\n      return this._grainSize;\n    },\n    set: function (size) {\n      this._grainSize = this.toSeconds(size);\n\n      this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"overlap\", {\n    /**\n     * The duration of the cross-fade between successive grains.\n     */\n    get: function () {\n      return this._overlap;\n    },\n    set: function (time) {\n      this._overlap = this.toSeconds(time);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"loaded\", {\n    /**\n     * If all the buffer is loaded\n     */\n    get: function () {\n      return this.buffer.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  GrainPlayer.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.buffer.dispose();\n\n    this._clock.dispose();\n\n    this._activeSources.forEach(function (source) {\n      return source.dispose();\n    });\n\n    return this;\n  };\n\n  return GrainPlayer;\n}(Source);\n\nexport { GrainPlayer };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See {@link AudioToGain}.\n * @category Signal\n */\n\nvar GainToAudio =\n/** @class */\nfunction (_super) {\n  __extends(GainToAudio, _super);\n\n  function GainToAudio() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"GainToAudio\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function (x) {\n        return Math.abs(x) * 2 - 1;\n      }\n    });\n    /**\n     * The NormalRange input [0, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The AudioRange output [-1, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  GainToAudio.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._norm.dispose();\n\n    return this;\n  };\n\n  return GainToAudio;\n}(SignalOperator);\n\nexport { GainToAudio };","import { __extends } from \"tslib\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\n\nvar Negate =\n/** @class */\nfunction (_super) {\n  __extends(Negate, _super);\n\n  function Negate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Negate\";\n    /**\n     * negation is done by multiplying by -1\n     */\n\n    _this._multiply = new Multiply({\n      context: _this.context,\n      value: -1\n    });\n    /**\n     * The input and output are equal to the multiply node\n     */\n\n    _this.input = _this._multiply;\n    _this.output = _this._multiply;\n    return _this;\n  }\n  /**\n   * clean up\n   * @returns {Negate} this\n   */\n\n\n  Negate.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._multiply.dispose();\n\n    return this;\n  };\n\n  return Negate;\n}(SignalOperator);\n\nexport { Negate };","import { __extends } from \"tslib\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\n\nvar Subtract =\n/** @class */\nfunction (_super) {\n  __extends(Subtract, _super);\n\n  function Subtract() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.override = false;\n    _this.name = \"Subtract\";\n    /**\n     * the summing node\n     */\n\n    _this._sum = new Gain({\n      context: _this.context\n    });\n    _this.input = _this._sum;\n    _this.output = _this._sum;\n    /**\n     * Negate the input of the second input before connecting it to the summing node.\n     */\n\n    _this._neg = new Negate({\n      context: _this.context\n    });\n    /**\n     * The value which is subtracted from the main signal\n     */\n\n    _this.subtrahend = _this._param;\n    connectSeries(_this._constantSource, _this._neg, _this._sum);\n    return _this;\n  }\n\n  Subtract.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  Subtract.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._neg.dispose();\n\n    this._sum.dispose();\n\n    return this;\n  };\n\n  return Subtract;\n}(Signal);\n\nexport { Subtract };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @offline 0.1 1\n * @example\n * const gt0 = new Tone.GreaterThanZero().toDestination();\n * const sig = new Tone.Signal(0.5).connect(gt0);\n * sig.setValueAtTime(-1, 0.05);\n */\n\nvar GreaterThanZero =\n/** @class */\nfunction (_super) {\n  __extends(GreaterThanZero, _super);\n\n  function GreaterThanZero() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments))) || this;\n\n    _this.name = \"GreaterThanZero\";\n    _this._thresh = _this.output = new WaveShaper({\n      context: _this.context,\n      length: 127,\n      mapping: function (val) {\n        if (val <= 0) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    });\n    _this._scale = _this.input = new Multiply({\n      context: _this.context,\n      value: 10000\n    }); // connections\n\n    _this._scale.connect(_this._thresh);\n\n    return _this;\n  }\n\n  GreaterThanZero.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._scale.dispose();\n\n    this._thresh.dispose();\n\n    return this;\n  };\n\n  return GreaterThanZero;\n}(SignalOperator);\n\nexport { GreaterThanZero };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @offline 0.1 1\n * @example\n * const gt = new Tone.GreaterThan(2).toDestination();\n * const sig = new Tone.Signal(4).connect(gt);\n */\n\nvar GreaterThan =\n/** @class */\nfunction (_super) {\n  __extends(GreaterThan, _super);\n\n  function GreaterThan() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.name = \"GreaterThan\";\n    _this.override = false;\n    var options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    _this._subtract = _this.input = new Subtract({\n      context: _this.context,\n      value: options.value\n    });\n    _this._gtz = _this.output = new GreaterThanZero({\n      context: _this.context\n    });\n    _this.comparator = _this._param = _this._subtract.subtrahend;\n    readOnly(_this, \"comparator\"); // connect\n\n    _this._subtract.connect(_this._gtz);\n\n    return _this;\n  }\n\n  GreaterThan.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  GreaterThan.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gtz.dispose();\n\n    this._subtract.dispose();\n\n    this.comparator.dispose();\n    return this;\n  };\n\n  return GreaterThan;\n}(Signal);\n\nexport { GreaterThan };","import { __extends } from \"tslib\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25.\n * @category Signal\n */\n\nvar Pow =\n/** @class */\nfunction (_super) {\n  __extends(Pow, _super);\n\n  function Pow() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.name = \"Pow\";\n    var options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n    _this._exponentScaler = _this.input = _this.output = new WaveShaper({\n      context: _this.context,\n      mapping: _this._expFunc(options.value),\n      length: 8192\n    });\n    _this._exponent = options.value;\n    return _this;\n  }\n\n  Pow.getDefaults = function () {\n    return Object.assign(SignalOperator.getDefaults(), {\n      value: 1\n    });\n  };\n  /**\n   * the function which maps the waveshaper\n   * @param exponent exponent value\n   */\n\n\n  Pow.prototype._expFunc = function (exponent) {\n    return function (val) {\n      return Math.pow(Math.abs(val), exponent);\n    };\n  };\n\n  Object.defineProperty(Pow.prototype, \"value\", {\n    /**\n     * The value of the exponent.\n     */\n    get: function () {\n      return this._exponent;\n    },\n    set: function (exponent) {\n      this._exponent = exponent;\n\n      this._exponentScaler.setMap(this._expFunc(this._exponent));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  Pow.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._exponentScaler.dispose();\n\n    return this;\n  };\n\n  return Pow;\n}(SignalOperator);\n\nexport { Pow };","import { __extends } from \"tslib\";\nimport { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n */\n\nvar ScaleExp =\n/** @class */\nfunction (_super) {\n  __extends(ScaleExp, _super);\n\n  function ScaleExp() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]))) || this;\n\n    _this.name = \"ScaleExp\";\n    var options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n    _this.input = _this._exp = new Pow({\n      context: _this.context,\n      value: options.exponent\n    });\n\n    _this._exp.connect(_this._mult);\n\n    return _this;\n  }\n\n  ScaleExp.getDefaults = function () {\n    return Object.assign(Scale.getDefaults(), {\n      exponent: 1\n    });\n  };\n\n  Object.defineProperty(ScaleExp.prototype, \"exponent\", {\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    get: function () {\n      return this._exp.value;\n    },\n    set: function (exp) {\n      this._exp.value = exp;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ScaleExp.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._exp.dispose();\n\n    return this;\n  };\n\n  return ScaleExp;\n}(Scale);\n\nexport { ScaleExp };","import { __awaiter, __decorate, __extends, __generator } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @offline 2 1\n * @example\n * const env = new Tone.Envelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1,\n * \trelease: 0.8,\n * }).toDestination();\n * env.triggerAttackRelease(0.5);\n * @category Component\n */\n\nvar Envelope =\n/** @class */\nfunction (_super) {\n  __extends(Envelope, _super);\n\n  function Envelope() {\n    var _this = _super.call(this, optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n\n    _this.name = \"Envelope\";\n    /**\n     * the signal which is output.\n     */\n\n    _this._sig = new Signal({\n      context: _this.context,\n      value: 0\n    });\n    /**\n     * The output signal of the envelope\n     */\n\n    _this.output = _this._sig;\n    /**\n     * Envelope has no input\n     */\n\n    _this.input = undefined;\n    var options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n    _this.attack = options.attack;\n    _this.decay = options.decay;\n    _this.sustain = options.sustain;\n    _this.release = options.release;\n    _this.attackCurve = options.attackCurve;\n    _this.releaseCurve = options.releaseCurve;\n    _this.decayCurve = options.decayCurve;\n    return _this;\n  }\n\n  Envelope.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      attack: 0.01,\n      attackCurve: \"linear\",\n      decay: 0.1,\n      decayCurve: \"exponential\",\n      release: 1,\n      releaseCurve: \"exponential\",\n      sustain: 0.5\n    });\n  };\n\n  Object.defineProperty(Envelope.prototype, \"value\", {\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get: function () {\n      return this.getValueAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the curve\n   * @param  curve\n   * @param  direction  In/Out\n   * @return The curve name\n   */\n\n  Envelope.prototype._getCurve = function (curve, direction) {\n    if (isString(curve)) {\n      return curve;\n    } else {\n      // look up the name in the curves array\n      var curveName = void 0;\n\n      for (curveName in EnvelopeCurves) {\n        if (EnvelopeCurves[curveName][direction] === curve) {\n          return curveName;\n        }\n      } // return the custom curve\n\n\n      return curve;\n    }\n  };\n  /**\n   * Assign a the curve to the given name using the direction\n   * @param  name\n   * @param  direction In/Out\n   * @param  curve\n   */\n\n\n  Envelope.prototype._setCurve = function (name, direction, curve) {\n    // check if it's a valid type\n    if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n      var curveDef = EnvelopeCurves[curve];\n\n      if (isObject(curveDef)) {\n        if (name !== \"_decayCurve\") {\n          this[name] = curveDef[direction];\n        }\n      } else {\n        this[name] = curveDef;\n      }\n    } else if (isArray(curve) && name !== \"_decayCurve\") {\n      this[name] = curve;\n    } else {\n      throw new Error(\"Envelope: invalid curve: \" + curve);\n    }\n  };\n\n  Object.defineProperty(Envelope.prototype, \"attackCurve\", {\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope().toDestination();\n     * env.attackCurve = \"linear\";\n     * env.triggerAttack();\n     * @example\n     * const env = new Tone.Envelope().toDestination();\n     * // can also be an array\n     * env.attackCurve = [0, 0.2, 0.3, 0.4, 1];\n     * env.triggerAttack();\n     */\n    get: function () {\n      return this._getCurve(this._attackCurve, \"In\");\n    },\n    set: function (curve) {\n      this._setCurve(\"_attackCurve\", \"In\", curve);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Envelope.prototype, \"releaseCurve\", {\n    /**\n     * The shape of the release. See the attack curve types.\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope({\n     * \trelease: 0.5\n     * });\n     * env.releaseCurve = \"linear\";\n     * env.triggerAttack();\n     * env.triggerRelease(0.5);\n     */\n    get: function () {\n      return this._getCurve(this._releaseCurve, \"Out\");\n    },\n    set: function (curve) {\n      this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Envelope.prototype, \"decayCurve\", {\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope({\n     * \tsustain: 0.1,\n     * \tdecay: 0.5\n     * });\n     * env.decayCurve = \"linear\";\n     * env.triggerAttack();\n     */\n    get: function () {\n      return this._decayCurve;\n    },\n    set: function (curve) {\n      assert([\"linear\", \"exponential\"].some(function (c) {\n        return c === curve;\n      }), \"Invalid envelope curve: \" + curve);\n      this._decayCurve = curve;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Trigger the attack/decay portion of the ADSR envelope.\n   * @param  time When the attack should start.\n   * @param velocity The velocity of the envelope scales the vales.\n   *                             number between 0-1\n   * @example\n   * const env = new Tone.AmplitudeEnvelope().toDestination();\n   * const osc = new Tone.Oscillator().connect(env).start();\n   * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n   * env.triggerAttack(\"+0.5\", 0.2);\n   */\n\n  Envelope.prototype.triggerAttack = function (time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.log(\"triggerAttack\", time, velocity);\n    time = this.toSeconds(time);\n    var originalAttack = this.toSeconds(this.attack);\n    var attack = originalAttack;\n    var decay = this.toSeconds(this.decay); // check if it's not a complete attack\n\n    var currentValue = this.getValueAtTime(time);\n\n    if (currentValue > 0) {\n      // subtract the current value from the attack time\n      var attackRate = 1 / attack;\n      var remainingDistance = 1 - currentValue; // the attack is now the remaining time\n\n      attack = remainingDistance / attackRate;\n    } // attack\n\n\n    if (attack < this.sampleTime) {\n      this._sig.cancelScheduledValues(time); // case where the attack time is 0 should set instantly\n\n\n      this._sig.setValueAtTime(velocity, time);\n    } else if (this._attackCurve === \"linear\") {\n      this._sig.linearRampTo(velocity, attack, time);\n    } else if (this._attackCurve === \"exponential\") {\n      this._sig.targetRampTo(velocity, attack, time);\n    } else {\n      this._sig.cancelAndHoldAtTime(time);\n\n      var curve = this._attackCurve; // find the starting position in the curve\n\n      for (var i = 1; i < curve.length; i++) {\n        // the starting index is between the two values\n        if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n          curve = this._attackCurve.slice(i); // the first index is the current value\n\n          curve[0] = currentValue;\n          break;\n        }\n      }\n\n      this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n    } // decay\n\n\n    if (decay && this.sustain < 1) {\n      var decayValue = velocity * this.sustain;\n      var decayStart = time + attack;\n      this.log(\"decay\", decayStart);\n\n      if (this._decayCurve === \"linear\") {\n        this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n      } else {\n        this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Triggers the release of the envelope.\n   * @param  time When the release portion of the envelope should start.\n   * @example\n   * const env = new Tone.AmplitudeEnvelope().toDestination();\n   * const osc = new Tone.Oscillator({\n   * \ttype: \"sawtooth\"\n   * }).connect(env).start();\n   * env.triggerAttack();\n   * // trigger the release half a second after the attack\n   * env.triggerRelease(\"+0.5\");\n   */\n\n\n  Envelope.prototype.triggerRelease = function (time) {\n    this.log(\"triggerRelease\", time);\n    time = this.toSeconds(time);\n    var currentValue = this.getValueAtTime(time);\n\n    if (currentValue > 0) {\n      var release = this.toSeconds(this.release);\n\n      if (release < this.sampleTime) {\n        this._sig.setValueAtTime(0, time);\n      } else if (this._releaseCurve === \"linear\") {\n        this._sig.linearRampTo(0, release, time);\n      } else if (this._releaseCurve === \"exponential\") {\n        this._sig.targetRampTo(0, release, time);\n      } else {\n        assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n\n        this._sig.cancelAndHoldAtTime(time);\n\n        this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Get the scheduled value at the given time. This will\n   * return the unconverted (raw) value.\n   */\n\n\n  Envelope.prototype.getValueAtTime = function (time) {\n    return this._sig.getValueAtTime(time);\n  };\n  /**\n   * triggerAttackRelease is shorthand for triggerAttack, then waiting\n   * some duration, then triggerRelease.\n   * @param duration The duration of the sustain.\n   * @param time When the attack should be triggered.\n   * @param velocity The velocity of the envelope.\n   * @example\n   * const env = new Tone.AmplitudeEnvelope().toDestination();\n   * const osc = new Tone.Oscillator().connect(env).start();\n   * // trigger the release 0.5 seconds after the attack\n   * env.triggerAttackRelease(0.5);\n   */\n\n\n  Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    time = this.toSeconds(time);\n    this.triggerAttack(time, velocity);\n    this.triggerRelease(time + this.toSeconds(duration));\n    return this;\n  };\n  /**\n   * Cancels all scheduled envelope changes after the given time.\n   */\n\n\n  Envelope.prototype.cancel = function (after) {\n    this._sig.cancelScheduledValues(this.toSeconds(after));\n\n    return this;\n  };\n  /**\n   * Connect the envelope to a destination node.\n   */\n\n\n  Envelope.prototype.connect = function (destination, outputNumber, inputNumber) {\n    if (outputNumber === void 0) {\n      outputNumber = 0;\n    }\n\n    if (inputNumber === void 0) {\n      inputNumber = 0;\n    }\n\n    connectSignal(this, destination, outputNumber, inputNumber);\n    return this;\n  };\n  /**\n   * Render the envelope curve to an array of the given length.\n   * Good for visualizing the envelope curve. Rescales the duration of the\n   * envelope to fit the length.\n   */\n\n\n  Envelope.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var duration, context, attackPortion, envelopeDuration, sustainTime, totalDuration, clone, buffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            duration = length / this.context.sampleRate;\n            context = new OfflineContext(1, duration, this.context.sampleRate);\n            attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            envelopeDuration = attackPortion + this.toSeconds(this.release);\n            sustainTime = envelopeDuration * 0.1;\n            totalDuration = envelopeDuration + sustainTime;\n            clone = new this.constructor(Object.assign(this.get(), {\n              attack: duration * this.toSeconds(this.attack) / totalDuration,\n              decay: duration * this.toSeconds(this.decay) / totalDuration,\n              release: duration * this.toSeconds(this.release) / totalDuration,\n              context: context\n            }));\n\n            clone._sig.toDestination();\n\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            return [4\n            /*yield*/\n            , context.render()];\n\n          case 1:\n            buffer = _a.sent();\n            return [2\n            /*return*/\n            , buffer.getChannelData(0)];\n        }\n      });\n    });\n  };\n\n  Envelope.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._sig.dispose();\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Envelope.prototype, \"attack\", void 0);\n\n  __decorate([timeRange(0)], Envelope.prototype, \"decay\", void 0);\n\n  __decorate([range(0, 1)], Envelope.prototype, \"sustain\", void 0);\n\n  __decorate([timeRange(0)], Envelope.prototype, \"release\", void 0);\n\n  return Envelope;\n}(ToneAudioNode);\n\nexport { Envelope };\n/**\n * Generate some complex envelope curves.\n */\n\nvar EnvelopeCurves = function () {\n  var curveLen = 128;\n  var i;\n  var k; // cosine curve\n\n  var cosineCurve = [];\n\n  for (i = 0; i < curveLen; i++) {\n    cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n  } // ripple curve\n\n\n  var rippleCurve = [];\n  var rippleCurveFreq = 6.4;\n\n  for (i = 0; i < curveLen - 1; i++) {\n    k = i / (curveLen - 1);\n    var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n    rippleCurve[i] = sineWave / 10 + k * 0.83;\n  }\n\n  rippleCurve[curveLen - 1] = 1; // stairs curve\n\n  var stairsCurve = [];\n  var steps = 5;\n\n  for (i = 0; i < curveLen; i++) {\n    stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n  } // in-out easing curve\n\n\n  var sineCurve = [];\n\n  for (i = 0; i < curveLen; i++) {\n    k = i / (curveLen - 1);\n    sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n  } // a bounce curve\n\n\n  var bounceCurve = [];\n\n  for (i = 0; i < curveLen; i++) {\n    k = i / (curveLen - 1);\n    var freq = Math.pow(k, 3) * 4 + 0.2;\n    var val = Math.cos(freq * Math.PI * 2 * k);\n    bounceCurve[i] = Math.abs(val * (1 - k));\n  }\n  /**\n   * Invert a value curve to make it work for the release\n   */\n\n\n  function invertCurve(curve) {\n    var out = new Array(curve.length);\n\n    for (var j = 0; j < curve.length; j++) {\n      out[j] = 1 - curve[j];\n    }\n\n    return out;\n  }\n  /**\n   * reverse the curve\n   */\n\n\n  function reverseCurve(curve) {\n    return curve.slice(0).reverse();\n  }\n  /**\n   * attack and release curve arrays\n   */\n\n\n  return {\n    bounce: {\n      In: invertCurve(bounceCurve),\n      Out: bounceCurve\n    },\n    cosine: {\n      In: cosineCurve,\n      Out: reverseCurve(cosineCurve)\n    },\n    exponential: \"exponential\",\n    linear: \"linear\",\n    ripple: {\n      In: rippleCurve,\n      Out: invertCurve(rippleCurve)\n    },\n    sine: {\n      In: sineCurve,\n      Out: invertCurve(sineCurve)\n    },\n    step: {\n      In: stairsCurve,\n      Out: invertCurve(stairsCurve)\n    }\n  };\n}();","import { __extends } from \"tslib\";\nimport { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\n\nvar SyncedSignal =\n/** @class */\nfunction (_super) {\n  __extends(SyncedSignal, _super);\n\n  function SyncedSignal() {\n    var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n\n    _this.name = \"SyncedSignal\";\n    /**\n     * Don't override when something is connected to the input\n     */\n\n    _this.override = false;\n    var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n    _this._lastVal = options.value;\n    _this._synced = _this.context.transport.scheduleRepeat(_this._onTick.bind(_this), \"1i\");\n    _this._syncedCallback = _this._anchorValue.bind(_this);\n\n    _this.context.transport.on(\"start\", _this._syncedCallback);\n\n    _this.context.transport.on(\"pause\", _this._syncedCallback);\n\n    _this.context.transport.on(\"stop\", _this._syncedCallback); // disconnect the constant source from the output and replace it with another one\n\n\n    _this._constantSource.disconnect();\n\n    _this._constantSource.stop(0); // create a new one\n\n\n    _this._constantSource = _this.output = new ToneConstantSource({\n      context: _this.context,\n      offset: options.value,\n      units: options.units\n    }).start(0);\n\n    _this.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n  /**\n   * Callback which is invoked every tick.\n   */\n\n\n  SyncedSignal.prototype._onTick = function (time) {\n    var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds); // approximate ramp curves with linear ramps\n\n\n    if (this._lastVal !== val) {\n      this._lastVal = val;\n\n      this._constantSource.offset.setValueAtTime(val, time);\n    }\n  };\n  /**\n   * Anchor the value at the start and stop of the Transport\n   */\n\n\n  SyncedSignal.prototype._anchorValue = function (time) {\n    var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n\n    this._lastVal = val;\n\n    this._constantSource.offset.cancelAndHoldAtTime(time);\n\n    this._constantSource.offset.setValueAtTime(val, time);\n  };\n\n  SyncedSignal.prototype.getValueAtTime = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n    return _super.prototype.getValueAtTime.call(this, computedTime);\n  };\n\n  SyncedSignal.prototype.setValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.setValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.linearRampToValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.linearRampToValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.exponentialRampToValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.setTargetAtTime.call(this, value, computedTime, timeConstant);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.cancelScheduledValues = function (startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.cancelScheduledValues.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n    duration = this.toSeconds(duration);\n\n    _super.prototype.setValueCurveAtTime.call(this, values, computedTime, duration, scaling);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.cancelAndHoldAtTime = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.cancelAndHoldAtTime.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setRampPoint = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.setRampPoint.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.exponentialRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.linearRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.linearRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.targetRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.targetRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.context.transport.clear(this._synced);\n    this.context.transport.off(\"start\", this._syncedCallback);\n    this.context.transport.off(\"pause\", this._syncedCallback);\n    this.context.transport.off(\"stop\", this._syncedCallback);\n\n    this._constantSource.dispose();\n\n    return this;\n  };\n\n  return SyncedSignal;\n}(Signal);\n\nexport { SyncedSignal };","import { __extends } from \"tslib\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\n\nvar Instrument =\n/** @class */\nfunction (_super) {\n  __extends(Instrument, _super);\n\n  function Instrument() {\n    var _this = _super.call(this, optionsFromArguments(Instrument.getDefaults(), arguments)) || this;\n    /**\n     * Keep track of all events scheduled to the transport\n     * when the instrument is 'synced'\n     */\n\n\n    _this._scheduledEvents = [];\n    /**\n     * If the instrument is currently synced\n     */\n\n    _this._synced = false;\n    _this._original_triggerAttack = _this.triggerAttack;\n    _this._original_triggerRelease = _this.triggerRelease;\n    var options = optionsFromArguments(Instrument.getDefaults(), arguments);\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    return _this;\n  }\n\n  Instrument.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      volume: 0\n    });\n  };\n  /**\n   * Sync the instrument to the Transport. All subsequent calls of\n   * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n   * @example\n   * const fmSynth = new Tone.FMSynth().toDestination();\n   * fmSynth.volume.value = -6;\n   * fmSynth.sync();\n   * // schedule 3 notes when the transport first starts\n   * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n   * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n   * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n   * // start the transport to hear the notes\n   * Tone.Transport.start();\n   */\n\n\n  Instrument.prototype.sync = function () {\n    if (!this._synced) {\n      this._synced = true;\n\n      this._syncMethod(\"triggerAttack\", 1);\n\n      this._syncMethod(\"triggerRelease\", 0);\n    }\n\n    return this;\n  };\n  /**\n   * Wrap the given method so that it can be synchronized\n   * @param method Which method to wrap and sync\n   * @param  timePosition What position the time argument appears in\n   */\n\n\n  Instrument.prototype._syncMethod = function (method, timePosition) {\n    var _this = this;\n\n    var originalMethod = this[\"_original_\" + method] = this[method];\n\n    this[method] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var time = args[timePosition];\n\n      var id = _this.context.transport.schedule(function (t) {\n        args[timePosition] = t;\n        originalMethod.apply(_this, args);\n      }, time);\n\n      _this._scheduledEvents.push(id);\n    };\n  };\n  /**\n   * Unsync the instrument from the Transport\n   */\n\n\n  Instrument.prototype.unsync = function () {\n    var _this = this;\n\n    this._scheduledEvents.forEach(function (id) {\n      return _this.context.transport.clear(id);\n    });\n\n    this._scheduledEvents = [];\n\n    if (this._synced) {\n      this._synced = false;\n      this.triggerAttack = this._original_triggerAttack;\n      this.triggerRelease = this._original_triggerRelease;\n    }\n\n    return this;\n  };\n  /**\n   * Trigger the attack and then the release after the duration.\n   * @param  note     The note to trigger.\n   * @param  duration How long the note should be held for before\n   *                         triggering the release. This value must be greater than 0.\n   * @param time  When the note should be triggered.\n   * @param  velocity The velocity the note should be triggered at.\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * // trigger \"C4\" for the duration of an 8th note\n   * synth.triggerAttackRelease(\"C4\", \"8n\");\n   */\n\n\n  Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n    var computedTime = this.toSeconds(time);\n    var computedDuration = this.toSeconds(duration);\n    this.triggerAttack(note, computedTime, velocity);\n    this.triggerRelease(computedTime + computedDuration);\n    return this;\n  };\n  /**\n   * clean up\n   * @returns {Instrument} this\n   */\n\n\n  Instrument.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._volume.dispose();\n\n    this.unsync();\n    this._scheduledEvents = [];\n    return this;\n  };\n\n  return Instrument;\n}(ToneAudioNode);\n\nexport { Instrument };","import { __decorate, __extends } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\n\nvar Monophonic =\n/** @class */\nfunction (_super) {\n  __extends(Monophonic, _super);\n\n  function Monophonic() {\n    var _this = _super.call(this, optionsFromArguments(Monophonic.getDefaults(), arguments)) || this;\n\n    var options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n    _this.portamento = options.portamento;\n    _this.onsilence = options.onsilence;\n    return _this;\n  }\n\n  Monophonic.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      detune: 0,\n      onsilence: noOp,\n      portamento: 0\n    });\n  };\n  /**\n   * Trigger the attack of the note optionally with a given velocity.\n   * @param  note The note to trigger.\n   * @param  time When the note should start.\n   * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * // trigger the note a half second from now at half velocity\n   * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n   */\n\n\n  Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.log(\"triggerAttack\", note, time, velocity);\n    var seconds = this.toSeconds(time);\n\n    this._triggerEnvelopeAttack(seconds, velocity);\n\n    this.setNote(note, seconds);\n    return this;\n  };\n  /**\n   * Trigger the release portion of the envelope\n   * @param  time If no time is given, the release happens immediatly\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * synth.triggerAttack(\"C4\");\n   * // trigger the release a second from now\n   * synth.triggerRelease(\"+1\");\n   */\n\n\n  Monophonic.prototype.triggerRelease = function (time) {\n    this.log(\"triggerRelease\", time);\n    var seconds = this.toSeconds(time);\n\n    this._triggerEnvelopeRelease(seconds);\n\n    return this;\n  };\n  /**\n   * Set the note at the given time. If no time is given, the note\n   * will set immediately.\n   * @param note The note to change to.\n   * @param  time The time when the note should be set.\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * synth.triggerAttack(\"C4\");\n   * // change to F#6 in one quarter note from now.\n   * synth.setNote(\"F#6\", \"+4n\");\n   */\n\n\n  Monophonic.prototype.setNote = function (note, time) {\n    var computedTime = this.toSeconds(time);\n    var computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n\n    if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n      var portTime = this.toSeconds(this.portamento);\n      this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n    } else {\n      this.frequency.setValueAtTime(computedFrequency, computedTime);\n    }\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Monophonic.prototype, \"portamento\", void 0);\n\n  return Monophonic;\n}(Instrument);\n\nexport { Monophonic };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * const ampEnv = new Tone.AmplitudeEnvelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1.0,\n * \trelease: 0.8\n * }).toDestination();\n * // create an oscillator and connect it\n * const osc = new Tone.Oscillator().connect(ampEnv).start();\n * // trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n * @category Component\n */\n\nvar AmplitudeEnvelope =\n/** @class */\nfunction (_super) {\n  __extends(AmplitudeEnvelope, _super);\n\n  function AmplitudeEnvelope() {\n    var _this = _super.call(this, optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n\n    _this.name = \"AmplitudeEnvelope\";\n    _this._gainNode = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    _this.output = _this._gainNode;\n    _this.input = _this._gainNode;\n\n    _this._sig.connect(_this._gainNode.gain);\n\n    _this.output = _this._gainNode;\n    _this.input = _this._gainNode;\n    return _this;\n  }\n  /**\n   * Clean up\n   */\n\n\n  AmplitudeEnvelope.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gainNode.dispose();\n\n    return this;\n  };\n\n  return AmplitudeEnvelope;\n}(Envelope);\n\nexport { AmplitudeEnvelope };","import { __extends, __read, __spread } from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a {@link OmniOscillator} routed through an {@link AmplitudeEnvelope}.\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\n\nvar Synth =\n/** @class */\nfunction (_super) {\n  __extends(Synth, _super);\n\n  function Synth() {\n    var _this = _super.call(this, optionsFromArguments(Synth.getDefaults(), arguments)) || this;\n\n    _this.name = \"Synth\";\n    var options = optionsFromArguments(Synth.getDefaults(), arguments);\n    _this.oscillator = new OmniOscillator(Object.assign({\n      context: _this.context,\n      detune: options.detune,\n      onstop: function () {\n        return _this.onsilence(_this);\n      }\n    }, options.oscillator));\n    _this.frequency = _this.oscillator.frequency;\n    _this.detune = _this.oscillator.detune;\n    _this.envelope = new AmplitudeEnvelope(Object.assign({\n      context: _this.context\n    }, options.envelope)); // connect the oscillators to the output\n\n    _this.oscillator.chain(_this.envelope, _this.output);\n\n    readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    return _this;\n  }\n\n  Synth.getDefaults = function () {\n    return Object.assign(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.005,\n        decay: 0.1,\n        release: 1,\n        sustain: 0.3\n      }),\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), __spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n        type: \"triangle\"\n      })\n    });\n  };\n  /**\n   * start the attack portion of the envelope\n   * @param time the time the attack should start\n   * @param velocity the velocity of the note (0-1)\n   */\n\n\n  Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    // the envelopes\n    this.envelope.triggerAttack(time, velocity);\n    this.oscillator.start(time); // if there is no release portion, stop the oscillator\n\n    if (this.envelope.sustain === 0) {\n      var computedAttack = this.toSeconds(this.envelope.attack);\n      var computedDecay = this.toSeconds(this.envelope.decay);\n      this.oscillator.stop(time + computedAttack + computedDecay);\n    }\n  };\n  /**\n   * start the release portion of the envelope\n   * @param time the time the release should start\n   */\n\n\n  Synth.prototype._triggerEnvelopeRelease = function (time) {\n    this.envelope.triggerRelease(time);\n    this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n  };\n\n  Synth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n  /**\n   * clean up\n   */\n\n\n  Synth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.oscillator.dispose();\n    this.envelope.dispose();\n    return this;\n  };\n\n  return Synth;\n}(Monophonic);\n\nexport { Synth };","import { __extends, __read, __spread } from \"tslib\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Synth } from \"./Synth\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * Base class for both AM and FM synths\n */\n\nvar ModulationSynth =\n/** @class */\nfunction (_super) {\n  __extends(ModulationSynth, _super);\n\n  function ModulationSynth() {\n    var _this = _super.call(this, optionsFromArguments(ModulationSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"ModulationSynth\";\n    var options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n    _this._carrier = new Synth({\n      context: _this.context,\n      oscillator: options.oscillator,\n      envelope: options.envelope,\n      onsilence: function () {\n        return _this.onsilence(_this);\n      },\n      volume: -10\n    });\n    _this._modulator = new Synth({\n      context: _this.context,\n      oscillator: options.modulation,\n      envelope: options.modulationEnvelope,\n      volume: -10\n    });\n    _this.oscillator = _this._carrier.oscillator;\n    _this.envelope = _this._carrier.envelope;\n    _this.modulation = _this._modulator.oscillator;\n    _this.modulationEnvelope = _this._modulator.envelope;\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\"\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      value: options.detune,\n      units: \"cents\"\n    });\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      value: options.harmonicity,\n      minValue: 0\n    });\n    _this._modulationNode = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    readOnly(_this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n    return _this;\n  }\n\n  ModulationSynth.getDefaults = function () {\n    return Object.assign(Monophonic.getDefaults(), {\n      harmonicity: 3,\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), __spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n        type: \"sine\"\n      }),\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.01,\n        decay: 0.01,\n        sustain: 1,\n        release: 0.5\n      }),\n      modulation: Object.assign(omitFromObject(OmniOscillator.getDefaults(), __spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n        type: \"square\"\n      }),\n      modulationEnvelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.5,\n        decay: 0.0,\n        sustain: 1,\n        release: 0.5\n      })\n    });\n  };\n  /**\n   * Trigger the attack portion of the note\n   */\n\n\n  ModulationSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    // @ts-ignore\n    this._carrier._triggerEnvelopeAttack(time, velocity); // @ts-ignore\n\n\n    this._modulator._triggerEnvelopeAttack(time, velocity);\n  };\n  /**\n   * Trigger the release portion of the note\n   */\n\n\n  ModulationSynth.prototype._triggerEnvelopeRelease = function (time) {\n    // @ts-ignore\n    this._carrier._triggerEnvelopeRelease(time); // @ts-ignore\n\n\n    this._modulator._triggerEnvelopeRelease(time);\n\n    return this;\n  };\n\n  ModulationSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n\n  ModulationSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._carrier.dispose();\n\n    this._modulator.dispose();\n\n    this.frequency.dispose();\n    this.detune.dispose();\n    this.harmonicity.dispose();\n\n    this._modulationNode.dispose();\n\n    return this;\n  };\n\n  return ModulationSynth;\n}(Monophonic);\n\nexport { ModulationSynth };","import { __extends, __read, __spread } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\n\nvar Filter =\n/** @class */\nfunction (_super) {\n  __extends(Filter, _super);\n\n  function Filter() {\n    var _this = _super.call(this, optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"])) || this;\n\n    _this.name = \"Filter\";\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this._filters = [];\n    var options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n    _this._filters = [];\n    _this.Q = new Signal({\n      context: _this.context,\n      units: \"positive\",\n      value: options.Q\n    });\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    _this.gain = new Signal({\n      context: _this.context,\n      units: \"decibels\",\n      value: options.gain\n    });\n    _this._type = options.type;\n    _this.rolloff = options.rolloff;\n    readOnly(_this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    return _this;\n  }\n\n  Filter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      detune: 0,\n      frequency: 350,\n      gain: 0,\n      rolloff: -12,\n      type: \"lowpass\"\n    });\n  };\n\n  Object.defineProperty(Filter.prototype, \"type\", {\n    /**\n     * The type of the filter. Types: \"lowpass\", \"highpass\",\n     * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      var types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n      assert(types.indexOf(type) !== -1, \"Invalid filter type: \" + type);\n      this._type = type;\n\n      this._filters.forEach(function (filter) {\n        return filter.type = type;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Filter.prototype, \"rolloff\", {\n    /**\n     * The rolloff of the filter which is the drop in db\n     * per octave. Implemented internally by cascading filters.\n     * Only accepts the values -12, -24, -48 and -96.\n     */\n    get: function () {\n      return this._rolloff;\n    },\n    set: function (rolloff) {\n      var rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n      var possibilities = [-12, -24, -48, -96];\n      var cascadingCount = possibilities.indexOf(rolloffNum); // check the rolloff is valid\n\n      assert(cascadingCount !== -1, \"rolloff can only be \" + possibilities.join(\", \"));\n      cascadingCount += 1;\n      this._rolloff = rolloffNum;\n      this.input.disconnect();\n\n      this._filters.forEach(function (filter) {\n        return filter.disconnect();\n      });\n\n      this._filters = new Array(cascadingCount);\n\n      for (var count = 0; count < cascadingCount; count++) {\n        var filter = this.context.createBiquadFilter();\n        filter.type = this._type;\n        this.frequency.connect(filter.frequency);\n        this.detune.connect(filter.detune);\n        this.Q.connect(filter.Q);\n        this.gain.connect(filter.gain);\n        this._filters[count] = filter;\n      }\n\n      this._internalChannels = this._filters;\n      connectSeries.apply(void 0, __spread([this.input], this._internalChannels, [this.output]));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the frequency response curve. This curve represents how the filter\n   * responses to frequencies between 20hz-20khz.\n   * @param  len The number of values to return\n   * @return The frequency response curve between 20-20kHz\n   */\n\n  Filter.prototype.getFrequencyResponse = function (len) {\n    var _this = this;\n\n    if (len === void 0) {\n      len = 128;\n    } // start with all 1s\n\n\n    var totalResponse = new Float32Array(len).map(function () {\n      return 1;\n    });\n    var freqValues = new Float32Array(len);\n\n    for (var i = 0; i < len; i++) {\n      var norm = Math.pow(i / len, 2);\n      var freq = norm * (20000 - 20) + 20;\n      freqValues[i] = freq;\n    }\n\n    var magValues = new Float32Array(len);\n    var phaseValues = new Float32Array(len);\n\n    this._filters.forEach(function () {\n      var filterClone = _this.context.createBiquadFilter();\n\n      filterClone.type = _this._type;\n      filterClone.Q.value = _this.Q.value;\n      filterClone.frequency.value = _this.frequency.value;\n      filterClone.gain.value = _this.gain.value;\n      filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n      magValues.forEach(function (val, i) {\n        totalResponse[i] *= val;\n      });\n    });\n\n    return totalResponse;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Filter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._filters.forEach(function (filter) {\n      filter.disconnect();\n    });\n\n    writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    this.frequency.dispose();\n    this.Q.dispose();\n    this.detune.dispose();\n    this.gain.dispose();\n    return this;\n  };\n\n  return Filter;\n}(ToneAudioNode);\n\nexport { Filter };","import { __extends } from \"tslib\";\nimport { AudioToGain } from \"../signal/AudioToGain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n *\n * @category Instrument\n */\n\nvar AMSynth =\n/** @class */\nfunction (_super) {\n  __extends(AMSynth, _super);\n\n  function AMSynth() {\n    var _this = _super.call(this, optionsFromArguments(AMSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"AMSynth\";\n    _this._modulationScale = new AudioToGain({\n      context: _this.context\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n\n    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n\n    _this._carrier.chain(_this._modulationNode, _this.output);\n\n    return _this;\n  }\n\n  AMSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._modulationScale.dispose();\n\n    return this;\n  };\n\n  return AMSynth;\n}(ModulationSynth);\n\nexport { AMSynth };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps.\n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n */\n\nvar FrequencyEnvelope =\n/** @class */\nfunction (_super) {\n  __extends(FrequencyEnvelope, _super);\n\n  function FrequencyEnvelope() {\n    var _this = _super.call(this, optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n\n    _this.name = \"FrequencyEnvelope\";\n    var options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n    _this._octaves = options.octaves;\n    _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n    _this._exponent = _this.input = new Pow({\n      context: _this.context,\n      value: options.exponent\n    });\n    _this._scale = _this.output = new Scale({\n      context: _this.context,\n      min: _this._baseFrequency,\n      max: _this._baseFrequency * Math.pow(2, _this._octaves)\n    });\n\n    _this._sig.chain(_this._exponent, _this._scale);\n\n    return _this;\n  }\n\n  FrequencyEnvelope.getDefaults = function () {\n    return Object.assign(Envelope.getDefaults(), {\n      baseFrequency: 200,\n      exponent: 1,\n      octaves: 4\n    });\n  };\n\n  Object.defineProperty(FrequencyEnvelope.prototype, \"baseFrequency\", {\n    /**\n     * The envelope's minimum output value. This is the value which it\n     * starts at.\n     */\n    get: function () {\n      return this._baseFrequency;\n    },\n    set: function (min) {\n      var freq = this.toFrequency(min);\n      assertRange(freq, 0);\n      this._baseFrequency = freq;\n      this._scale.min = this._baseFrequency; // update the max value when the min changes\n\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FrequencyEnvelope.prototype, \"octaves\", {\n    /**\n     * The number of octaves above the baseFrequency that the\n     * envelope will scale to.\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (octaves) {\n      assertRange(octaves, 0);\n      this._octaves = octaves;\n      this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FrequencyEnvelope.prototype, \"exponent\", {\n    /**\n     * The envelope's exponent value.\n     */\n    get: function () {\n      return this._exponent.value;\n    },\n    set: function (exponent) {\n      this._exponent.value = exponent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  FrequencyEnvelope.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._exponent.dispose();\n\n    this._scale.dispose();\n\n    return this;\n  };\n\n  return FrequencyEnvelope;\n}(Envelope);\n\nexport { FrequencyEnvelope };","import { __extends } from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\n\nvar MonoSynth =\n/** @class */\nfunction (_super) {\n  __extends(MonoSynth, _super);\n\n  function MonoSynth() {\n    var _this = _super.call(this, optionsFromArguments(MonoSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"MonoSynth\";\n    var options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n    _this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n      context: _this.context,\n      detune: options.detune,\n      onstop: function () {\n        return _this.onsilence(_this);\n      }\n    }));\n    _this.frequency = _this.oscillator.frequency;\n    _this.detune = _this.oscillator.detune;\n    _this.filter = new Filter(Object.assign(options.filter, {\n      context: _this.context\n    }));\n    _this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, {\n      context: _this.context\n    }));\n    _this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, {\n      context: _this.context\n    })); // connect the oscillators to the output\n\n    _this.oscillator.chain(_this.filter, _this.envelope, _this.output); // connect the filter envelope\n\n\n    _this.filterEnvelope.connect(_this.filter.frequency);\n\n    readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    return _this;\n  }\n\n  MonoSynth.getDefaults = function () {\n    return Object.assign(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.005,\n        decay: 0.1,\n        release: 1,\n        sustain: 0.9\n      }),\n      filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        Q: 1,\n        rolloff: -12,\n        type: \"lowpass\"\n      }),\n      filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.6,\n        baseFrequency: 200,\n        decay: 0.2,\n        exponent: 2,\n        octaves: 3,\n        release: 2,\n        sustain: 0.5\n      }),\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n        type: \"sawtooth\"\n      })\n    });\n  };\n  /**\n   * start the attack portion of the envelope\n   * @param time the time the attack should start\n   * @param velocity the velocity of the note (0-1)\n   */\n\n\n  MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.envelope.triggerAttack(time, velocity);\n    this.filterEnvelope.triggerAttack(time);\n    this.oscillator.start(time);\n\n    if (this.envelope.sustain === 0) {\n      var computedAttack = this.toSeconds(this.envelope.attack);\n      var computedDecay = this.toSeconds(this.envelope.decay);\n      this.oscillator.stop(time + computedAttack + computedDecay);\n    }\n  };\n  /**\n   * start the release portion of the envelope\n   * @param time the time the release should start\n   */\n\n\n  MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n    this.envelope.triggerRelease(time);\n    this.filterEnvelope.triggerRelease(time);\n    this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n  };\n\n  MonoSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n\n  MonoSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.oscillator.dispose();\n    this.envelope.dispose();\n    this.filterEnvelope.dispose();\n    this.filter.dispose();\n    return this;\n  };\n\n  return MonoSynth;\n}(Monophonic);\n\nexport { MonoSynth };","import { __extends } from \"tslib\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\n\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).\n * @category Instrument\n */\n\nvar MetalSynth =\n/** @class */\nfunction (_super) {\n  __extends(MetalSynth, _super);\n\n  function MetalSynth() {\n    var _this = _super.call(this, optionsFromArguments(MetalSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"MetalSynth\";\n    /**\n     * The array of FMOscillators\n     */\n\n    _this._oscillators = [];\n    /**\n     * The frequency multipliers\n     */\n\n    _this._freqMultipliers = [];\n    var options = optionsFromArguments(MetalSynth.getDefaults(), arguments);\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\"\n    });\n    _this._amplitude = new Gain({\n      context: _this.context,\n      gain: 0\n    }).connect(_this.output);\n    _this._highpass = new Filter({\n      // Q: -3.0102999566398125,\n      Q: 0,\n      context: _this.context,\n      type: \"highpass\"\n    }).connect(_this._amplitude);\n\n    for (var i = 0; i < inharmRatios.length; i++) {\n      var osc = new FMOscillator({\n        context: _this.context,\n        harmonicity: options.harmonicity,\n        modulationIndex: options.modulationIndex,\n        modulationType: \"square\",\n        onstop: i === 0 ? function () {\n          return _this.onsilence(_this);\n        } : noOp,\n        type: \"square\"\n      });\n      osc.connect(_this._highpass);\n      _this._oscillators[i] = osc;\n      var mult = new Multiply({\n        context: _this.context,\n        value: inharmRatios[i]\n      });\n      _this._freqMultipliers[i] = mult;\n\n      _this.frequency.chain(mult, osc.frequency);\n\n      _this.detune.connect(osc.detune);\n    }\n\n    _this._filterFreqScaler = new Scale({\n      context: _this.context,\n      max: 7000,\n      min: _this.toFrequency(options.resonance)\n    });\n    _this.envelope = new Envelope({\n      attack: options.envelope.attack,\n      attackCurve: \"linear\",\n      context: _this.context,\n      decay: options.envelope.decay,\n      release: options.envelope.release,\n      sustain: 0\n    });\n\n    _this.envelope.chain(_this._filterFreqScaler, _this._highpass.frequency);\n\n    _this.envelope.connect(_this._amplitude.gain); // set the octaves\n\n\n    _this._octaves = options.octaves;\n    _this.octaves = options.octaves;\n    return _this;\n  }\n\n  MetalSynth.getDefaults = function () {\n    return deepMerge(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.001,\n        decay: 1.4,\n        release: 0.2\n      }),\n      harmonicity: 5.1,\n      modulationIndex: 32,\n      octaves: 1.5,\n      resonance: 4000\n    });\n  };\n  /**\n   * Trigger the attack.\n   * @param time When the attack should be triggered.\n   * @param velocity The velocity that the envelope should be triggered at.\n   */\n\n\n  MetalSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    var _this = this;\n\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.envelope.triggerAttack(time, velocity);\n\n    this._oscillators.forEach(function (osc) {\n      return osc.start(time);\n    });\n\n    if (this.envelope.sustain === 0) {\n      this._oscillators.forEach(function (osc) {\n        osc.stop(time + _this.toSeconds(_this.envelope.attack) + _this.toSeconds(_this.envelope.decay));\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Trigger the release of the envelope.\n   * @param time When the release should be triggered.\n   */\n\n\n  MetalSynth.prototype._triggerEnvelopeRelease = function (time) {\n    var _this = this;\n\n    this.envelope.triggerRelease(time);\n\n    this._oscillators.forEach(function (osc) {\n      return osc.stop(time + _this.toSeconds(_this.envelope.release));\n    });\n\n    return this;\n  };\n\n  MetalSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n\n  Object.defineProperty(MetalSynth.prototype, \"modulationIndex\", {\n    /**\n     * The modulationIndex of the oscillators which make up the source.\n     * see [[FMOscillator.modulationIndex]]\n     * @min 1\n     * @max 100\n     */\n    get: function () {\n      return this._oscillators[0].modulationIndex.value;\n    },\n    set: function (val) {\n      this._oscillators.forEach(function (osc) {\n        return osc.modulationIndex.value = val;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MetalSynth.prototype, \"harmonicity\", {\n    /**\n     * The harmonicity of the oscillators which make up the source.\n     * see Tone.FMOscillator.harmonicity\n     * @min 0.1\n     * @max 10\n     */\n    get: function () {\n      return this._oscillators[0].harmonicity.value;\n    },\n    set: function (val) {\n      this._oscillators.forEach(function (osc) {\n        return osc.harmonicity.value = val;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MetalSynth.prototype, \"resonance\", {\n    /**\n     * The lower level of the highpass filter which is attached to the envelope.\n     * This value should be between [0, 7000]\n     * @min 0\n     * @max 7000\n     */\n    get: function () {\n      return this._filterFreqScaler.min;\n    },\n    set: function (val) {\n      this._filterFreqScaler.min = this.toFrequency(val);\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MetalSynth.prototype, \"octaves\", {\n    /**\n     * The number of octaves above the \"resonance\" frequency\n     * that the filter ramps during the attack/decay envelope\n     * @min 0\n     * @max 8\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (val) {\n      this._octaves = val;\n      this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MetalSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._oscillators.forEach(function (osc) {\n      return osc.dispose();\n    });\n\n    this._freqMultipliers.forEach(function (freqMult) {\n      return freqMult.dispose();\n    });\n\n    this.frequency.dispose();\n    this.detune.dispose();\n\n    this._filterFreqScaler.dispose();\n\n    this._amplitude.dispose();\n\n    this.envelope.dispose();\n\n    this._highpass.dispose();\n\n    return this;\n  };\n\n  return MetalSynth;\n}(Monophonic);\n\nexport { MetalSynth };","import { __extends } from \"tslib\";\nimport { Monophonic } from \"./Monophonic\";\nimport { MonoSynth } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * const duoSynth = new Tone.DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\n\nvar DuoSynth =\n/** @class */\nfunction (_super) {\n  __extends(DuoSynth, _super);\n\n  function DuoSynth() {\n    var _this = _super.call(this, optionsFromArguments(DuoSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"DuoSynth\";\n    var options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n    _this.voice0 = new MonoSynth(Object.assign(options.voice0, {\n      context: _this.context,\n      onsilence: function () {\n        return _this.onsilence(_this);\n      }\n    }));\n    _this.voice1 = new MonoSynth(Object.assign(options.voice1, {\n      context: _this.context\n    }));\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    });\n    _this._vibrato = new LFO({\n      frequency: options.vibratoRate,\n      context: _this.context,\n      min: -50,\n      max: 50\n    }); // start the vibrato immediately\n\n    _this._vibrato.start();\n\n    _this.vibratoRate = _this._vibrato.frequency;\n    _this._vibratoGain = new Gain({\n      context: _this.context,\n      units: \"normalRange\",\n      gain: options.vibratoAmount\n    });\n    _this.vibratoAmount = _this._vibratoGain.gain;\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: 440\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this.voice0.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this.voice1.frequency);\n\n    _this._vibrato.connect(_this._vibratoGain);\n\n    _this._vibratoGain.fan(_this.voice0.detune, _this.voice1.detune);\n\n    _this.detune.fan(_this.voice0.detune, _this.voice1.detune);\n\n    _this.voice0.connect(_this.output);\n\n    _this.voice1.connect(_this.output);\n\n    readOnly(_this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n    return _this;\n  }\n\n  DuoSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n  };\n\n  DuoSynth.getDefaults = function () {\n    return deepMerge(Monophonic.getDefaults(), {\n      vibratoAmount: 0.5,\n      vibratoRate: 5,\n      harmonicity: 1.5,\n      voice0: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        }\n      }),\n      voice1: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        }\n      })\n    });\n  };\n  /**\n   * Trigger the attack portion of the note\n   */\n\n\n  DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    // @ts-ignore\n    this.voice0._triggerEnvelopeAttack(time, velocity); // @ts-ignore\n\n\n    this.voice1._triggerEnvelopeAttack(time, velocity);\n  };\n  /**\n   * Trigger the release portion of the note\n   */\n\n\n  DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n    // @ts-ignore\n    this.voice0._triggerEnvelopeRelease(time); // @ts-ignore\n\n\n    this.voice1._triggerEnvelopeRelease(time);\n\n    return this;\n  };\n\n  DuoSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.voice0.dispose();\n    this.voice1.dispose();\n    this.frequency.dispose();\n    this.detune.dispose();\n\n    this._vibrato.dispose();\n\n    this.vibratoRate.dispose();\n\n    this._vibratoGain.dispose();\n\n    this.harmonicity.dispose();\n    return this;\n  };\n\n  return DuoSynth;\n}(Monophonic);\n\nexport { DuoSynth };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n *\n * @category Instrument\n */\n\nvar FMSynth =\n/** @class */\nfunction (_super) {\n  __extends(FMSynth, _super);\n\n  function FMSynth() {\n    var _this = _super.call(this, optionsFromArguments(FMSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"FMSynth\";\n    var options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n    _this.modulationIndex = new Multiply({\n      context: _this.context,\n      value: options.modulationIndex\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n\n    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n\n    _this._modulator.connect(_this._modulationNode.gain);\n\n    _this._modulationNode.connect(_this._carrier.frequency);\n\n    _this._carrier.connect(_this.output);\n\n    return _this;\n  }\n\n  FMSynth.getDefaults = function () {\n    return Object.assign(ModulationSynth.getDefaults(), {\n      modulationIndex: 10\n    });\n  };\n\n  FMSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.modulationIndex.dispose();\n    return this;\n  };\n\n  return FMSynth;\n}(ModulationSynth);\n\nexport { FMSynth };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\n\nvar ToneAudioWorklet =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioWorklet, _super);\n\n  function ToneAudioWorklet(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"ToneAudioWorklet\";\n    /**\n     * The constructor options for the node\n     */\n\n    _this.workletOptions = {};\n    /**\n     * Callback which is invoked when there is an error in the processing\n     */\n\n    _this.onprocessorerror = noOp;\n    var blobUrl = URL.createObjectURL(new Blob([_this._audioWorklet()], {\n      type: \"text/javascript\"\n    }));\n\n    var name = _this._audioWorkletName(); // Register the processor\n\n\n    _this.context.addAudioWorkletModule(blobUrl, name).then(function () {\n      // create the worklet when it's read\n      if (!_this.disposed) {\n        _this._worklet = _this.context.createAudioWorkletNode(name, _this.workletOptions);\n        _this._worklet.onprocessorerror = _this.onprocessorerror.bind(_this);\n\n        _this.onReady(_this._worklet);\n      }\n    });\n\n    return _this;\n  }\n\n  ToneAudioWorklet.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._worklet) {\n      this._worklet.disconnect();\n    }\n\n    return this;\n  };\n\n  return ToneAudioWorklet;\n}(ToneAudioNode);\n\nexport { ToneAudioWorklet };","import { __decorate, __extends } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\n\nvar MembraneSynth =\n/** @class */\nfunction (_super) {\n  __extends(MembraneSynth, _super);\n\n  function MembraneSynth() {\n    var _this = _super.call(this, optionsFromArguments(MembraneSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"MembraneSynth\";\n    /**\n     * Portamento is ignored in this synth. use pitch decay instead.\n     */\n\n    _this.portamento = 0;\n    var options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n    _this.pitchDecay = options.pitchDecay;\n    _this.octaves = options.octaves;\n    readOnly(_this, [\"oscillator\", \"envelope\"]);\n    return _this;\n  }\n\n  MembraneSynth.getDefaults = function () {\n    return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n      envelope: {\n        attack: 0.001,\n        attackCurve: \"exponential\",\n        decay: 0.4,\n        release: 1.4,\n        sustain: 0.01\n      },\n      octaves: 10,\n      oscillator: {\n        type: \"sine\"\n      },\n      pitchDecay: 0.05\n    });\n  };\n\n  MembraneSynth.prototype.setNote = function (note, time) {\n    var seconds = this.toSeconds(time);\n    var hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n    var maxNote = hertz * this.octaves;\n    this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n    this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n    return this;\n  };\n\n  MembraneSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    return this;\n  };\n\n  __decorate([range(0)], MembraneSynth.prototype, \"octaves\", void 0);\n\n  __decorate([timeRange(0)], MembraneSynth.prototype, \"pitchDecay\", void 0);\n\n  return MembraneSynth;\n}(Synth);\n\nexport { MembraneSynth };","import { __extends } from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].\n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\n\nvar NoiseSynth =\n/** @class */\nfunction (_super) {\n  __extends(NoiseSynth, _super);\n\n  function NoiseSynth() {\n    var _this = _super.call(this, optionsFromArguments(NoiseSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"NoiseSynth\";\n    var options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n    _this.noise = new Noise(Object.assign({\n      context: _this.context\n    }, options.noise));\n    _this.envelope = new AmplitudeEnvelope(Object.assign({\n      context: _this.context\n    }, options.envelope)); // connect the noise to the output\n\n    _this.noise.chain(_this.envelope, _this.output);\n\n    return _this;\n  }\n\n  NoiseSynth.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        decay: 0.1,\n        sustain: 0.0\n      }),\n      noise: Object.assign(omitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())), {\n        type: \"white\"\n      })\n    });\n  };\n  /**\n   * Start the attack portion of the envelopes. Unlike other\n   * instruments, Tone.NoiseSynth doesn't have a note.\n   * @example\n   * const noiseSynth = new Tone.NoiseSynth().toDestination();\n   * noiseSynth.triggerAttack();\n   */\n\n\n  NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    time = this.toSeconds(time); // the envelopes\n\n    this.envelope.triggerAttack(time, velocity); // start the noise\n\n    this.noise.start(time);\n\n    if (this.envelope.sustain === 0) {\n      this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n    }\n\n    return this;\n  };\n  /**\n   * Start the release portion of the envelopes.\n   */\n\n\n  NoiseSynth.prototype.triggerRelease = function (time) {\n    time = this.toSeconds(time);\n    this.envelope.triggerRelease(time);\n    this.noise.stop(time + this.toSeconds(this.envelope.release));\n    return this;\n  };\n\n  NoiseSynth.prototype.sync = function () {\n    this._syncMethod(\"triggerAttack\", 0);\n\n    this._syncMethod(\"triggerRelease\", 0);\n\n    return this;\n  };\n\n  NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    time = this.toSeconds(time);\n    duration = this.toSeconds(duration);\n    this.triggerAttack(time, velocity);\n    this.triggerRelease(time + duration);\n    return this;\n  };\n\n  NoiseSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.noise.dispose();\n    this.envelope.dispose();\n    return this;\n  };\n\n  return NoiseSynth;\n}(Instrument);\n\nexport { NoiseSynth };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/context/ToneAudioWorklet\";\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the\n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the\n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.\n * @category Component\n */\n\nvar FeedbackCombFilter =\n/** @class */\nfunction (_super) {\n  __extends(FeedbackCombFilter, _super);\n\n  function FeedbackCombFilter() {\n    var _this = _super.call(this, optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"])) || this;\n\n    _this.name = \"FeedbackCombFilter\";\n    /**\n     * Default constructor options for the filter\n     */\n\n    _this.workletOptions = {\n      numberOfInputs: 1,\n      numberOfOutputs: 1,\n      channelCount: 1\n    };\n    var options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n\n    var dummyGain = _this.context.createGain();\n\n    _this.delayTime = new Param({\n      context: _this.context,\n      value: options.delayTime,\n      units: \"time\",\n      minValue: 0,\n      maxValue: 1,\n      param: dummyGain.gain,\n      swappable: true\n    });\n    _this.resonance = new Param({\n      context: _this.context,\n      value: options.resonance,\n      units: \"normalRange\",\n      param: dummyGain.gain,\n      swappable: true\n    });\n    readOnly(_this, [\"resonance\", \"delayTime\"]);\n    return _this;\n  }\n\n  FeedbackCombFilter.prototype._audioWorkletName = function () {\n    return \"feedback-comb-filter\";\n  };\n\n  FeedbackCombFilter.prototype._audioWorklet = function () {\n    return (\n      /* javascript */\n      \" \\n\\t\\t\\tregisterProcessor(\\\"\" + this._audioWorkletName() + \"\\\", class extends AudioWorkletProcessor {\\n\\t\\t\\t\\tstatic get parameterDescriptors() {\\n\\t\\t\\t\\t\\treturn [{\\n\\t\\t\\t\\t\\t\\tname: \\\"delayTime\\\",\\n\\t\\t\\t\\t\\t\\tdefaultValue: 0.1,\\n\\t\\t\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\t\\t\\tmaxValue: 1,\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tname: \\\"feedback\\\",\\n\\t\\t\\t\\t\\t\\tdefaultValue: 0.5,\\n\\t\\t\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\t\\t\\tmaxValue: 0.9999,\\n\\t\\t\\t\\t\\t}];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tconstructor(options) {\\n\\t\\t\\t\\t\\tsuper(options);\\n\\t\\t\\t\\t\\tthis.delayBuffer = new Float32Array(sampleRate);\\n\\t\\t\\t\\t\\tthis.fallbackInput = new Float32Array(128)\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tgetParameter(parameter, index) {\\n\\t\\t\\t\\t\\tif (parameter.length > 1) {\\n\\t\\t\\t\\t\\t\\treturn parameter[index];\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn parameter[0];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tprocess(inputs, outputs, parameters) {\\n\\t\\t\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t\\t\\tconst delayLength = this.delayBuffer.length;\\n\\t\\t\\t\\t\\tconst outputChannel = output[0];\\n\\t\\t\\t\\t\\tconst inputChannel = input[0] || this.fallbackInput;\\n\\t\\t\\t\\t\\tconst delayTimeParam = parameters.delayTime;\\n\\t\\t\\t\\t\\tconst feedbackParam = parameters.feedback;\\n\\t\\t\\t\\t\\tinputChannel.forEach((value, index) => {\\n\\t\\t\\t\\t\\t\\tconst delayTime = this.getParameter(delayTimeParam, index);\\n\\t\\t\\t\\t\\t\\tconst feedback = this.getParameter(feedbackParam, index);\\n\\t\\t\\t\\t\\t\\tconst delaySamples = Math.floor(delayTime * sampleRate);\\n\\t\\t\\t\\t\\t\\tconst currentIndex = (currentFrame + index) % delayLength;\\n\\t\\t\\t\\t\\t\\tconst delayedIndex = (currentFrame + index + delaySamples) % delayLength;\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// the current value to output\\n\\t\\t\\t\\t\\t\\tconst currentValue = this.delayBuffer[currentIndex];\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// write the current value to the delayBuffer in the future\\n\\t\\t\\t\\t\\t\\tthis.delayBuffer[delayedIndex] = value + currentValue * feedback;\\n\\n\\t\\t\\t\\t\\t\\t// set all of the output channels to the same value\\n\\t\\t\\t\\t\\t\\toutputChannel[index] = delaySamples > 0 ? currentValue : value;\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t// keep the processing alive\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\"\n    );\n  };\n  /**\n   * The default parameters\n   */\n\n\n  FeedbackCombFilter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  };\n\n  FeedbackCombFilter.prototype.onReady = function (node) {\n    connectSeries(this.input, node, this.output); // @ts-ignore\n\n    var delayTime = node.parameters.get(\"delayTime\");\n    this.delayTime.setParam(delayTime); // @ts-ignore\n\n    var feedback = node.parameters.get(\"feedback\");\n    this.resonance.setParam(feedback);\n  };\n\n  FeedbackCombFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n    this.delayTime.dispose();\n    this.resonance.dispose();\n    return this;\n  };\n\n  return FeedbackCombFilter;\n}(ToneAudioWorklet);\n\nexport { FeedbackCombFilter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\".\n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop.\n * References:\n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/\n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\n\nvar OnePoleFilter =\n/** @class */\nfunction (_super) {\n  __extends(OnePoleFilter, _super);\n\n  function OnePoleFilter() {\n    var _this = _super.call(this, optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"OnePoleFilter\";\n    var options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this._frequency = options.frequency;\n    _this._type = options.type;\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n\n    _this._createFilter();\n\n    return _this;\n  }\n\n  OnePoleFilter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      frequency: 880,\n      type: \"lowpass\"\n    });\n  };\n  /**\n   * Create a filter and dispose the old one\n   */\n\n\n  OnePoleFilter.prototype._createFilter = function () {\n    var _this = this;\n\n    var oldFilter = this._filter;\n    var freq = this.toFrequency(this._frequency);\n    var t = 1 / (2 * Math.PI * freq);\n\n    if (this._type === \"lowpass\") {\n      var a0 = 1 / (t * this.context.sampleRate);\n      var b1 = a0 - 1;\n      this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n    } else {\n      var b1 = 1 / (t * this.context.sampleRate) - 1;\n      this._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n    }\n\n    this.input.chain(this._filter, this.output);\n\n    if (oldFilter) {\n      // dispose it on the next block\n      this.context.setTimeout(function () {\n        if (!_this.disposed) {\n          _this.input.disconnect(oldFilter);\n\n          oldFilter.disconnect();\n        }\n      }, this.blockTime);\n    }\n  };\n\n  Object.defineProperty(OnePoleFilter.prototype, \"frequency\", {\n    /**\n     * The frequency value.\n     */\n    get: function () {\n      return this._frequency;\n    },\n    set: function (fq) {\n      this._frequency = fq;\n\n      this._createFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OnePoleFilter.prototype, \"type\", {\n    /**\n     * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (t) {\n      this._type = t;\n\n      this._createFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the frequency response curve. This curve represents how the filter\n   * responses to frequencies between 20hz-20khz.\n   * @param  len The number of values to return\n   * @return The frequency response curve between 20-20kHz\n   */\n\n  OnePoleFilter.prototype.getFrequencyResponse = function (len) {\n    if (len === void 0) {\n      len = 128;\n    }\n\n    var freqValues = new Float32Array(len);\n\n    for (var i = 0; i < len; i++) {\n      var norm = Math.pow(i / len, 2);\n      var freq = norm * (20000 - 20) + 20;\n      freqValues[i] = freq;\n    }\n\n    var magValues = new Float32Array(len);\n    var phaseValues = new Float32Array(len);\n\n    this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n\n    return magValues;\n  };\n\n  OnePoleFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n\n    this._filter.disconnect();\n\n    return this;\n  };\n\n  return OnePoleFilter;\n}(ToneAudioNode);\n\nexport { OnePoleFilter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\n\nvar LowpassCombFilter =\n/** @class */\nfunction (_super) {\n  __extends(LowpassCombFilter, _super);\n\n  function LowpassCombFilter() {\n    var _this = _super.call(this, optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"])) || this;\n\n    _this.name = \"LowpassCombFilter\";\n    var options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n    _this._combFilter = _this.output = new FeedbackCombFilter({\n      context: _this.context,\n      delayTime: options.delayTime,\n      resonance: options.resonance\n    });\n    _this.delayTime = _this._combFilter.delayTime;\n    _this.resonance = _this._combFilter.resonance;\n    _this._lowpass = _this.input = new OnePoleFilter({\n      context: _this.context,\n      frequency: options.dampening,\n      type: \"lowpass\"\n    }); // connections\n\n    _this._lowpass.connect(_this._combFilter);\n\n    return _this;\n  }\n\n  LowpassCombFilter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      dampening: 3000,\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  };\n\n  Object.defineProperty(LowpassCombFilter.prototype, \"dampening\", {\n    /**\n     * The dampening control of the feedback\n     */\n    get: function () {\n      return this._lowpass.frequency;\n    },\n    set: function (fq) {\n      this._lowpass.frequency = fq;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LowpassCombFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._combFilter.dispose();\n\n    this._lowpass.dispose();\n\n    return this;\n  };\n\n  return LowpassCombFilter;\n}(ToneAudioNode);\n\nexport { LowpassCombFilter };","import { __extends } from \"tslib\";\nimport \"../core/clock/Transport\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * const chordEvent = new Tone.ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\n\nvar ToneEvent =\n/** @class */\nfunction (_super) {\n  __extends(ToneEvent, _super);\n\n  function ToneEvent() {\n    var _this = _super.call(this, optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"])) || this;\n\n    _this.name = \"ToneEvent\";\n    /**\n     * Tracks the scheduled events\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * A delay time from when the event is scheduled to start\n     */\n\n    _this._startOffset = 0;\n    var options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n    _this._loop = options.loop;\n    _this.callback = options.callback;\n    _this.value = options.value;\n    _this._loopStart = _this.toTicks(options.loopStart);\n    _this._loopEnd = _this.toTicks(options.loopEnd);\n    _this._playbackRate = options.playbackRate;\n    _this._probability = options.probability;\n    _this._humanize = options.humanize;\n    _this.mute = options.mute;\n    _this._playbackRate = options.playbackRate;\n    _this._state.increasing = true; // schedule the events for the first time\n\n    _this._rescheduleEvents();\n\n    return _this;\n  }\n\n  ToneEvent.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      callback: noOp,\n      humanize: false,\n      loop: false,\n      loopEnd: \"1m\",\n      loopStart: 0,\n      mute: false,\n      playbackRate: 1,\n      probability: 1,\n      value: null\n    });\n  };\n  /**\n   * Reschedule all of the events along the timeline\n   * with the updated values.\n   * @param after Only reschedules events after the given time.\n   */\n\n\n  ToneEvent.prototype._rescheduleEvents = function (after) {\n    var _this = this;\n\n    if (after === void 0) {\n      after = -1;\n    } // if no argument is given, schedules all of the events\n\n\n    this._state.forEachFrom(after, function (event) {\n      var duration;\n\n      if (event.state === \"started\") {\n        if (event.id !== -1) {\n          _this.context.transport.clear(event.id);\n        }\n\n        var startTick = event.time + Math.round(_this.startOffset / _this._playbackRate);\n\n        if (_this._loop === true || isNumber(_this._loop) && _this._loop > 1) {\n          duration = Infinity;\n\n          if (isNumber(_this._loop)) {\n            duration = _this._loop * _this._getLoopDuration();\n          }\n\n          var nextEvent = _this._state.getAfter(startTick);\n\n          if (nextEvent !== null) {\n            duration = Math.min(duration, nextEvent.time - startTick);\n          }\n\n          if (duration !== Infinity) {\n            // schedule a stop since it's finite duration\n            _this._state.setStateAtTime(\"stopped\", startTick + duration + 1, {\n              id: -1\n            });\n\n            duration = new TicksClass(_this.context, duration);\n          }\n\n          var interval = new TicksClass(_this.context, _this._getLoopDuration());\n          event.id = _this.context.transport.scheduleRepeat(_this._tick.bind(_this), interval, new TicksClass(_this.context, startTick), duration);\n        } else {\n          event.id = _this.context.transport.schedule(_this._tick.bind(_this), new TicksClass(_this.context, startTick));\n        }\n      }\n    });\n  };\n\n  Object.defineProperty(ToneEvent.prototype, \"state\", {\n    /**\n     * Returns the playback state of the note, either \"started\" or \"stopped\".\n     */\n    get: function () {\n      return this._state.getValueAtTime(this.context.transport.ticks);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"startOffset\", {\n    /**\n     * The start from the scheduled start time.\n     */\n    get: function () {\n      return this._startOffset;\n    },\n    set: function (offset) {\n      this._startOffset = offset;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"probability\", {\n    /**\n     * The probability of the notes being triggered.\n     */\n    get: function () {\n      return this._probability;\n    },\n    set: function (prob) {\n      this._probability = prob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"humanize\", {\n    /**\n     * If set to true, will apply small random variation\n     * to the callback time. If the value is given as a time, it will randomize\n     * by that amount.\n     * @example\n     * const event = new Tone.ToneEvent();\n     * event.humanize = true;\n     */\n    get: function () {\n      return this._humanize;\n    },\n    set: function (variation) {\n      this._humanize = variation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the note at the given time.\n   * @param  time  When the event should start.\n   */\n\n  ToneEvent.prototype.start = function (time) {\n    var ticks = this.toTicks(time);\n\n    if (this._state.getValueAtTime(ticks) === \"stopped\") {\n      this._state.add({\n        id: -1,\n        state: \"started\",\n        time: ticks\n      });\n\n      this._rescheduleEvents(ticks);\n    }\n\n    return this;\n  };\n  /**\n   * Stop the Event at the given time.\n   * @param  time  When the event should stop.\n   */\n\n\n  ToneEvent.prototype.stop = function (time) {\n    this.cancel(time);\n    var ticks = this.toTicks(time);\n\n    if (this._state.getValueAtTime(ticks) === \"started\") {\n      this._state.setStateAtTime(\"stopped\", ticks, {\n        id: -1\n      });\n\n      var previousEvent = this._state.getBefore(ticks);\n\n      var reschedulTime = ticks;\n\n      if (previousEvent !== null) {\n        reschedulTime = previousEvent.time;\n      }\n\n      this._rescheduleEvents(reschedulTime);\n    }\n\n    return this;\n  };\n  /**\n   * Cancel all scheduled events greater than or equal to the given time\n   * @param  time  The time after which events will be cancel.\n   */\n\n\n  ToneEvent.prototype.cancel = function (time) {\n    var _this = this;\n\n    time = defaultArg(time, -Infinity);\n    var ticks = this.toTicks(time);\n\n    this._state.forEachFrom(ticks, function (event) {\n      _this.context.transport.clear(event.id);\n    });\n\n    this._state.cancel(ticks);\n\n    return this;\n  };\n  /**\n   * The callback function invoker. Also\n   * checks if the Event is done playing\n   * @param  time  The time of the event in seconds\n   */\n\n\n  ToneEvent.prototype._tick = function (time) {\n    var ticks = this.context.transport.getTicksAtTime(time);\n\n    if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n      if (this.probability < 1 && Math.random() > this.probability) {\n        return;\n      }\n\n      if (this.humanize) {\n        var variation = 0.02;\n\n        if (!isBoolean(this.humanize)) {\n          variation = this.toSeconds(this.humanize);\n        }\n\n        time += (Math.random() * 2 - 1) * variation;\n      }\n\n      this.callback(time, this.value);\n    }\n  };\n  /**\n   * Get the duration of the loop.\n   */\n\n\n  ToneEvent.prototype._getLoopDuration = function () {\n    return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n  };\n\n  Object.defineProperty(ToneEvent.prototype, \"loop\", {\n    /**\n     * If the note should loop or not\n     * between ToneEvent.loopStart and\n     * ToneEvent.loopEnd. If set to true,\n     * the event will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     */\n    get: function () {\n      return this._loop;\n    },\n    set: function (loop) {\n      this._loop = loop;\n\n      this._rescheduleEvents();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the note. Defaults to 1.\n     * @example\n     * const note = new Tone.ToneEvent();\n     * note.loop = true;\n     * // repeat the note twice as fast\n     * note.playbackRate = 2;\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n\n      this._rescheduleEvents();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"loopEnd\", {\n    /**\n     * The loopEnd point is the time the event will loop\n     * if ToneEvent.loop is true.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopEnd).toSeconds();\n    },\n    set: function (loopEnd) {\n      this._loopEnd = this.toTicks(loopEnd);\n\n      if (this._loop) {\n        this._rescheduleEvents();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"loopStart\", {\n    /**\n     * The time when the loop should start.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopStart).toSeconds();\n    },\n    set: function (loopStart) {\n      this._loopStart = this.toTicks(loopStart);\n\n      if (this._loop) {\n        this._rescheduleEvents();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"progress\", {\n    /**\n     * The current progress of the loop interval.\n     * Returns 0 if the event is not started yet or\n     * it is not set to loop.\n     */\n    get: function () {\n      if (this._loop) {\n        var ticks = this.context.transport.ticks;\n\n        var lastEvent = this._state.get(ticks);\n\n        if (lastEvent !== null && lastEvent.state === \"started\") {\n          var loopDuration = this._getLoopDuration();\n\n          var progress = (ticks - lastEvent.time) % loopDuration;\n          return progress / loopDuration;\n        } else {\n          return 0;\n        }\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ToneEvent.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.cancel();\n\n    this._state.dispose();\n\n    return this;\n  };\n\n  return ToneEvent;\n}(ToneWithContext);\n\nexport { ToneEvent };","import { __extends } from \"tslib\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\n/**\n * Karplus-String string synthesis.\n * @example\n * const plucky = new Tone.PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\n\nvar PluckSynth =\n/** @class */\nfunction (_super) {\n  __extends(PluckSynth, _super);\n\n  function PluckSynth() {\n    var _this = _super.call(this, optionsFromArguments(PluckSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"PluckSynth\";\n    var options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n    _this._noise = new Noise({\n      context: _this.context,\n      type: \"pink\"\n    });\n    _this.attackNoise = options.attackNoise;\n    _this._lfcf = new LowpassCombFilter({\n      context: _this.context,\n      dampening: options.dampening,\n      resonance: options.resonance\n    });\n    _this.resonance = options.resonance;\n    _this.release = options.release;\n\n    _this._noise.connect(_this._lfcf);\n\n    _this._lfcf.connect(_this.output);\n\n    return _this;\n  }\n\n  PluckSynth.getDefaults = function () {\n    return deepMerge(Instrument.getDefaults(), {\n      attackNoise: 1,\n      dampening: 4000,\n      resonance: 0.7,\n      release: 1\n    });\n  };\n\n  Object.defineProperty(PluckSynth.prototype, \"dampening\", {\n    /**\n     * The dampening control. i.e. the lowpass filter frequency of the comb filter\n     * @min 0\n     * @max 7000\n     */\n    get: function () {\n      return this._lfcf.dampening;\n    },\n    set: function (fq) {\n      this._lfcf.dampening = fq;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PluckSynth.prototype.triggerAttack = function (note, time) {\n    var freq = this.toFrequency(note);\n    time = this.toSeconds(time);\n    var delayAmount = 1 / freq;\n\n    this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\n    this._noise.start(time);\n\n    this._noise.stop(time + delayAmount * this.attackNoise);\n\n    this._lfcf.resonance.cancelScheduledValues(time);\n\n    this._lfcf.resonance.setValueAtTime(this.resonance, time);\n\n    return this;\n  };\n  /**\n   * Ramp down the [[resonance]] to 0 over the duration of the release time.\n   */\n\n\n  PluckSynth.prototype.triggerRelease = function (time) {\n    this._lfcf.resonance.linearRampTo(0, this.release, time);\n\n    return this;\n  };\n\n  PluckSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._noise.dispose();\n\n    this._lfcf.dispose();\n\n    return this;\n  };\n\n  return PluckSynth;\n}(Instrument);\n\nexport { PluckSynth };","import { __extends } from \"tslib\";\nimport { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\n\nvar PolySynth =\n/** @class */\nfunction (_super) {\n  __extends(PolySynth, _super);\n\n  function PolySynth() {\n    var _this = _super.call(this, optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"])) || this;\n\n    _this.name = \"PolySynth\";\n    /**\n     * The voices which are not currently in use\n     */\n\n    _this._availableVoices = [];\n    /**\n     * The currently active voices\n     */\n\n    _this._activeVoices = [];\n    /**\n     * All of the allocated voices for this synth.\n     */\n\n    _this._voices = [];\n    /**\n     * The GC timeout. Held so that it could be cancelled when the node is disposed.\n     */\n\n    _this._gcTimeout = -1;\n    /**\n     * A moving average of the number of active voices\n     */\n\n    _this._averageActiveVoices = 0;\n    var options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]); // check against the old API (pre 14.3.0)\n\n    assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n    var defaults = options.voice.getDefaults();\n    _this.options = Object.assign(defaults, options.options);\n    _this.voice = options.voice;\n    _this.maxPolyphony = options.maxPolyphony; // create the first voice\n\n    _this._dummyVoice = _this._getNextAvailableVoice(); // remove it from the voices list\n\n    var index = _this._voices.indexOf(_this._dummyVoice);\n\n    _this._voices.splice(index, 1); // kick off the GC interval\n\n\n    _this._gcTimeout = _this.context.setInterval(_this._collectGarbage.bind(_this), 1);\n    return _this;\n  }\n\n  PolySynth.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      maxPolyphony: 32,\n      options: {},\n      voice: Synth\n    });\n  };\n\n  Object.defineProperty(PolySynth.prototype, \"activeVoices\", {\n    /**\n     * The number of active voices.\n     */\n    get: function () {\n      return this._activeVoices.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Invoked when the source is done making sound, so that it can be\n   * readded to the pool of available voices\n   */\n\n  PolySynth.prototype._makeVoiceAvailable = function (voice) {\n    this._availableVoices.push(voice); // remove the midi note from 'active voices'\n\n\n    var activeVoiceIndex = this._activeVoices.findIndex(function (e) {\n      return e.voice === voice;\n    });\n\n    this._activeVoices.splice(activeVoiceIndex, 1);\n  };\n  /**\n   * Get an available voice from the pool of available voices.\n   * If one is not available and the maxPolyphony limit is reached,\n   * steal a voice, otherwise return null.\n   */\n\n\n  PolySynth.prototype._getNextAvailableVoice = function () {\n    // if there are available voices, return the first one\n    if (this._availableVoices.length) {\n      return this._availableVoices.shift();\n    } else if (this._voices.length < this.maxPolyphony) {\n      // otherwise if there is still more maxPolyphony, make a new voice\n      var voice = new this.voice(Object.assign(this.options, {\n        context: this.context,\n        onsilence: this._makeVoiceAvailable.bind(this)\n      }));\n      voice.connect(this.output);\n\n      this._voices.push(voice);\n\n      return voice;\n    } else {\n      warn(\"Max polyphony exceeded. Note dropped.\");\n    }\n  };\n  /**\n   * Occasionally check if there are any allocated voices which can be cleaned up.\n   */\n\n\n  PolySynth.prototype._collectGarbage = function () {\n    this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n\n    if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n      // take off an available note\n      var firstAvail = this._availableVoices.shift();\n\n      var index = this._voices.indexOf(firstAvail);\n\n      this._voices.splice(index, 1);\n\n      if (!this.context.isOffline) {\n        firstAvail.dispose();\n      }\n    }\n  };\n  /**\n   * Internal method which triggers the attack\n   */\n\n\n  PolySynth.prototype._triggerAttack = function (notes, time, velocity) {\n    var _this = this;\n\n    notes.forEach(function (note) {\n      var midiNote = new MidiClass(_this.context, note).toMidi();\n\n      var voice = _this._getNextAvailableVoice();\n\n      if (voice) {\n        voice.triggerAttack(note, time, velocity);\n\n        _this._activeVoices.push({\n          midi: midiNote,\n          voice: voice,\n          released: false\n        });\n\n        _this.log(\"triggerAttack\", note, time);\n      }\n    });\n  };\n  /**\n   * Internal method which triggers the release\n   */\n\n\n  PolySynth.prototype._triggerRelease = function (notes, time) {\n    var _this = this;\n\n    notes.forEach(function (note) {\n      var midiNote = new MidiClass(_this.context, note).toMidi();\n\n      var event = _this._activeVoices.find(function (_a) {\n        var midi = _a.midi,\n            released = _a.released;\n        return midi === midiNote && !released;\n      });\n\n      if (event) {\n        // trigger release on that note\n        event.voice.triggerRelease(time); // mark it as released\n\n        event.released = true;\n\n        _this.log(\"triggerRelease\", note, time);\n      }\n    });\n  };\n  /**\n   * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n   * to wait for just-in-time scheduling\n   */\n\n\n  PolySynth.prototype._scheduleEvent = function (type, notes, time, velocity) {\n    var _this = this;\n\n    assert(!this.disposed, \"Synth was already disposed\"); // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n\n    if (time <= this.now()) {\n      // do it immediately\n      if (type === \"attack\") {\n        this._triggerAttack(notes, time, velocity);\n      } else {\n        this._triggerRelease(notes, time);\n      }\n    } else {\n      // schedule it to start in the future\n      this.context.setTimeout(function () {\n        _this._scheduleEvent(type, notes, time, velocity);\n      }, time - this.now());\n    }\n  };\n  /**\n   * Trigger the attack portion of the note\n   * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n   * @param  time  The start time of the note.\n   * @param velocity The velocity of the note.\n   * @example\n   * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n   * // trigger a chord immediately with a velocity of 0.2\n   * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n   */\n\n\n  PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    var computedTime = this.toSeconds(time);\n\n    this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n\n    return this;\n  };\n  /**\n   * Trigger the release of the note. Unlike monophonic instruments,\n   * a note (or array of notes) needs to be passed in as the first argument.\n   * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n   * @param  time  When the release will be triggered.\n   * @example\n   * @example\n   * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n   * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n   * // trigger the release of the given notes.\n   * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n   * poly.triggerRelease(\"F5\", \"+3\");\n   */\n\n\n  PolySynth.prototype.triggerRelease = function (notes, time) {\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    var computedTime = this.toSeconds(time);\n\n    this._scheduleEvent(\"release\", notes, computedTime);\n\n    return this;\n  };\n  /**\n   * Trigger the attack and release after the specified duration\n   * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n   * @param  duration the duration of the note\n   * @param  time  if no time is given, defaults to now\n   * @param  velocity the velocity of the attack (0-1)\n   * @example\n   * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n   * // can pass in an array of durations as well\n   * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n   */\n\n\n  PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n    var computedTime = this.toSeconds(time);\n    this.triggerAttack(notes, computedTime, velocity);\n\n    if (isArray(duration)) {\n      assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n      notes = notes;\n\n      for (var i = 0; i < notes.length; i++) {\n        var d = duration[Math.min(i, duration.length - 1)];\n        var durationSeconds = this.toSeconds(d);\n        assert(durationSeconds > 0, \"The duration must be greater than 0\");\n        this.triggerRelease(notes[i], computedTime + durationSeconds);\n      }\n    } else {\n      var durationSeconds = this.toSeconds(duration);\n      assert(durationSeconds > 0, \"The duration must be greater than 0\");\n      this.triggerRelease(notes, computedTime + durationSeconds);\n    }\n\n    return this;\n  };\n\n  PolySynth.prototype.sync = function () {\n    this._syncMethod(\"triggerAttack\", 1);\n\n    this._syncMethod(\"triggerRelease\", 1);\n\n    return this;\n  };\n  /**\n   * Set a member/attribute of the voices\n   * @example\n   * const poly = new Tone.PolySynth().toDestination();\n   * // set all of the voices using an options object for the synth type\n   * poly.set({\n   * \tenvelope: {\n   * \t\tattack: 0.25\n   * \t}\n   * });\n   * poly.triggerAttackRelease(\"Bb3\", 0.2);\n   */\n\n\n  PolySynth.prototype.set = function (options) {\n    // remove options which are controlled by the PolySynth\n    var sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]); // store all of the options\n\n    this.options = deepMerge(this.options, sanitizedOptions);\n\n    this._voices.forEach(function (voice) {\n      return voice.set(sanitizedOptions);\n    });\n\n    this._dummyVoice.set(sanitizedOptions);\n\n    return this;\n  };\n\n  PolySynth.prototype.get = function () {\n    return this._dummyVoice.get();\n  };\n  /**\n   * Trigger the release portion of all the currently active voices immediately.\n   * Useful for silencing the synth.\n   */\n\n\n  PolySynth.prototype.releaseAll = function () {\n    var now = this.now();\n\n    this._activeVoices.forEach(function (_a) {\n      var voice = _a.voice;\n      voice.triggerRelease(now);\n    });\n\n    this._activeVoices = [];\n    return this;\n  };\n\n  PolySynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dummyVoice.dispose();\n\n    this._voices.forEach(function (v) {\n      return v.dispose();\n    });\n\n    this._activeVoices = [];\n    this._availableVoices = [];\n    this.context.clearInterval(this._gcTimeout);\n    return this;\n  };\n\n  return PolySynth;\n}(Instrument);\n\nexport { PolySynth };","import { __decorate, __extends } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tC1: \"C1.mp3\",\n * \t\tC2: \"C2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/examples/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t},\n * });\n * @category Instrument\n */\n\nvar Sampler =\n/** @class */\nfunction (_super) {\n  __extends(Sampler, _super);\n\n  function Sampler() {\n    var _this = _super.call(this, optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\")) || this;\n\n    _this.name = \"Sampler\";\n    /**\n     * The object of all currently playing BufferSources\n     */\n\n    _this._activeSources = new Map();\n    var options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    var urlMap = {};\n    Object.keys(options.urls).forEach(function (note) {\n      var noteNumber = parseInt(note, 10);\n      assert(isNote(note) || isNumber(noteNumber) && isFinite(noteNumber), \"url key is neither a note or midi pitch: \" + note);\n\n      if (isNote(note)) {\n        // convert the note name to MIDI\n        var mid = new FrequencyClass(_this.context, note).toMidi();\n        urlMap[mid] = options.urls[note];\n      } else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n        // otherwise if it's numbers assume it's midi\n        urlMap[noteNumber] = options.urls[noteNumber];\n      }\n    });\n    _this._buffers = new ToneAudioBuffers({\n      urls: urlMap,\n      onload: options.onload,\n      baseUrl: options.baseUrl,\n      onerror: options.onerror\n    });\n    _this.attack = options.attack;\n    _this.release = options.release;\n    _this.curve = options.curve; // invoke the callback if it's already loaded\n\n    if (_this._buffers.loaded) {\n      // invoke onload deferred\n      Promise.resolve().then(options.onload);\n    }\n\n    return _this;\n  }\n\n  Sampler.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      attack: 0,\n      baseUrl: \"\",\n      curve: \"exponential\",\n      onload: noOp,\n      onerror: noOp,\n      release: 0.1,\n      urls: {}\n    });\n  };\n  /**\n   * Returns the difference in steps between the given midi note at the closets sample.\n   */\n\n\n  Sampler.prototype._findClosest = function (midi) {\n    // searches within 8 octaves of the given midi note\n    var MAX_INTERVAL = 96;\n    var interval = 0;\n\n    while (interval < MAX_INTERVAL) {\n      // check above and below\n      if (this._buffers.has(midi + interval)) {\n        return -interval;\n      } else if (this._buffers.has(midi - interval)) {\n        return interval;\n      }\n\n      interval++;\n    }\n\n    throw new Error(\"No available buffers for note: \" + midi);\n  };\n  /**\n   * @param  notes\tThe note to play, or an array of notes.\n   * @param  time     When to play the note\n   * @param  velocity The velocity to play the sample back.\n   */\n\n\n  Sampler.prototype.triggerAttack = function (notes, time, velocity) {\n    var _this = this;\n\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.log(\"triggerAttack\", notes, time, velocity);\n\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    notes.forEach(function (note) {\n      var midi = new FrequencyClass(_this.context, note).toMidi(); // find the closest note pitch\n\n      var difference = _this._findClosest(midi);\n\n      var closestNote = midi - difference;\n\n      var buffer = _this._buffers.get(closestNote);\n\n      var playbackRate = intervalToFrequencyRatio(difference); // play that note\n\n      var source = new ToneBufferSource({\n        url: buffer,\n        context: _this.context,\n        curve: _this.curve,\n        fadeIn: _this.attack,\n        fadeOut: _this.release,\n        playbackRate: playbackRate\n      }).connect(_this.output);\n      source.start(time, 0, buffer.duration / playbackRate, velocity); // add it to the active sources\n\n      if (!isArray(_this._activeSources.get(midi))) {\n        _this._activeSources.set(midi, []);\n      }\n\n      _this._activeSources.get(midi).push(source); // remove it when it's done\n\n\n      source.onended = function () {\n        if (_this._activeSources && _this._activeSources.has(midi)) {\n          var sources = _this._activeSources.get(midi);\n\n          var index = sources.indexOf(source);\n\n          if (index !== -1) {\n            sources.splice(index, 1);\n          }\n        }\n      };\n    });\n    return this;\n  };\n  /**\n   * @param  notes\tThe note to release, or an array of notes.\n   * @param  time     \tWhen to release the note.\n   */\n\n\n  Sampler.prototype.triggerRelease = function (notes, time) {\n    var _this = this;\n\n    this.log(\"triggerRelease\", notes, time);\n\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    notes.forEach(function (note) {\n      var midi = new FrequencyClass(_this.context, note).toMidi(); // find the note\n\n      if (_this._activeSources.has(midi) && _this._activeSources.get(midi).length) {\n        var sources = _this._activeSources.get(midi);\n\n        time = _this.toSeconds(time);\n        sources.forEach(function (source) {\n          source.stop(time);\n        });\n\n        _this._activeSources.set(midi, []);\n      }\n    });\n    return this;\n  };\n  /**\n   * Release all currently active notes.\n   * @param  time     \tWhen to release the notes.\n   */\n\n\n  Sampler.prototype.releaseAll = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    this._activeSources.forEach(function (sources) {\n      while (sources.length) {\n        var source = sources.shift();\n        source.stop(computedTime);\n      }\n    });\n\n    return this;\n  };\n\n  Sampler.prototype.sync = function () {\n    this._syncMethod(\"triggerAttack\", 1);\n\n    this._syncMethod(\"triggerRelease\", 1);\n\n    return this;\n  };\n  /**\n   * Invoke the attack phase, then after the duration, invoke the release.\n   * @param  notes\tThe note to play and release, or an array of notes.\n   * @param  duration The time the note should be held\n   * @param  time     When to start the attack\n   * @param  velocity The velocity of the attack\n   */\n\n\n  Sampler.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n    var _this = this;\n\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    var computedTime = this.toSeconds(time);\n    this.triggerAttack(notes, computedTime, velocity);\n\n    if (isArray(duration)) {\n      assert(isArray(notes), \"notes must be an array when duration is array\");\n      notes.forEach(function (note, index) {\n        var d = duration[Math.min(index, duration.length - 1)];\n\n        _this.triggerRelease(note, computedTime + _this.toSeconds(d));\n      });\n    } else {\n      this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n    }\n\n    return this;\n  };\n  /**\n   * Add a note to the sampler.\n   * @param  note      The buffer's pitch.\n   * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n   * @param  callback  The callback to invoke when the url is loaded.\n   */\n\n\n  Sampler.prototype.add = function (note, url, callback) {\n    assert(isNote(note) || isFinite(note), \"note must be a pitch or midi: \" + note);\n\n    if (isNote(note)) {\n      // convert the note name to MIDI\n      var mid = new FrequencyClass(this.context, note).toMidi();\n\n      this._buffers.add(mid, url, callback);\n    } else {\n      // otherwise if it's numbers assume it's midi\n      this._buffers.add(note, url, callback);\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(Sampler.prototype, \"loaded\", {\n    /**\n     * If the buffers are loaded or not\n     */\n    get: function () {\n      return this._buffers.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  Sampler.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffers.dispose();\n\n    this._activeSources.forEach(function (sources) {\n      sources.forEach(function (source) {\n        return source.dispose();\n      });\n    });\n\n    this._activeSources.clear();\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Sampler.prototype, \"attack\", void 0);\n\n  __decorate([timeRange(0)], Sampler.prototype, \"release\", void 0);\n\n  return Sampler;\n}(Instrument);\n\nexport { Sampler };","import { __extends } from \"tslib\";\nimport { ToneEvent } from \"./ToneEvent\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Loop creates a looped callback at the\n * specified interval. The callback can be\n * started, stopped and scheduled along\n * the Transport's timeline.\n * @example\n * const loop = new Tone.Loop((time) => {\n * \t// triggered every eighth note.\n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n * @category Event\n */\n\nvar Loop =\n/** @class */\nfunction (_super) {\n  __extends(Loop, _super);\n\n  function Loop() {\n    var _this = _super.call(this, optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"])) || this;\n\n    _this.name = \"Loop\";\n    var options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n    _this._event = new ToneEvent({\n      context: _this.context,\n      callback: _this._tick.bind(_this),\n      loop: true,\n      loopEnd: options.interval,\n      playbackRate: options.playbackRate,\n      probability: options.probability\n    });\n    _this.callback = options.callback; // set the iterations\n\n    _this.iterations = options.iterations;\n    return _this;\n  }\n\n  Loop.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      interval: \"4n\",\n      callback: noOp,\n      playbackRate: 1,\n      iterations: Infinity,\n      probability: 1,\n      mute: false,\n      humanize: false\n    });\n  };\n  /**\n   * Start the loop at the specified time along the Transport's timeline.\n   * @param  time  When to start the Loop.\n   */\n\n\n  Loop.prototype.start = function (time) {\n    this._event.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the loop at the given time.\n   * @param  time  When to stop the Loop.\n   */\n\n\n  Loop.prototype.stop = function (time) {\n    this._event.stop(time);\n\n    return this;\n  };\n  /**\n   * Cancel all scheduled events greater than or equal to the given time\n   * @param  time  The time after which events will be cancel.\n   */\n\n\n  Loop.prototype.cancel = function (time) {\n    this._event.cancel(time);\n\n    return this;\n  };\n  /**\n   * Internal function called when the notes should be called\n   * @param time  The time the event occurs\n   */\n\n\n  Loop.prototype._tick = function (time) {\n    this.callback(time);\n  };\n\n  Object.defineProperty(Loop.prototype, \"state\", {\n    /**\n     * The state of the Loop, either started or stopped.\n     */\n    get: function () {\n      return this._event.state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"progress\", {\n    /**\n     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.\n     */\n    get: function () {\n      return this._event.progress;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"interval\", {\n    /**\n     * The time between successive callbacks.\n     * @example\n     * const loop = new Tone.Loop();\n     * loop.interval = \"8n\"; // loop every 8n\n     */\n    get: function () {\n      return this._event.loopEnd;\n    },\n    set: function (interval) {\n      this._event.loopEnd = interval;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the loop. The normal playback rate is 1 (no change).\n     * A `playbackRate` of 2 would be twice as fast.\n     */\n    get: function () {\n      return this._event.playbackRate;\n    },\n    set: function (rate) {\n      this._event.playbackRate = rate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"humanize\", {\n    /**\n     * Random variation +/-0.01s to the scheduled time.\n     * Or give it a time value which it will randomize by.\n     */\n    get: function () {\n      return this._event.humanize;\n    },\n    set: function (variation) {\n      this._event.humanize = variation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"probability\", {\n    /**\n     * The probably of the callback being invoked.\n     */\n    get: function () {\n      return this._event.probability;\n    },\n    set: function (prob) {\n      this._event.probability = prob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"mute\", {\n    /**\n     * Muting the Loop means that no callbacks are invoked.\n     */\n    get: function () {\n      return this._event.mute;\n    },\n    set: function (mute) {\n      this._event.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"iterations\", {\n    /**\n     * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n     */\n    get: function () {\n      if (this._event.loop === true) {\n        return Infinity;\n      } else {\n        return this._event.loop;\n      }\n    },\n    set: function (iters) {\n      if (iters === Infinity) {\n        this._event.loop = true;\n      } else {\n        this._event.loop = iters;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Loop.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._event.dispose();\n\n    return this;\n  };\n\n  return Loop;\n}(ToneWithContext);\n\nexport { Loop };","import { __extends } from \"tslib\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const part = new Tone.Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n * @example\n * const synth = new Tone.Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Tone.Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * @category Event\n */\n\nvar Part =\n/** @class */\nfunction (_super) {\n  __extends(Part, _super);\n\n  function Part() {\n    var _this = _super.call(this, optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"])) || this;\n\n    _this.name = \"Part\";\n    /**\n     * Tracks the scheduled events\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * The events that belong to this part\n     */\n\n    _this._events = new Set();\n    var options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]); // make sure things are assigned in the right order\n\n    _this._state.increasing = true; // add the events\n\n    options.events.forEach(function (event) {\n      if (isArray(event)) {\n        _this.add(event[0], event[1]);\n      } else {\n        _this.add(event);\n      }\n    });\n    return _this;\n  }\n\n  Part.getDefaults = function () {\n    return Object.assign(ToneEvent.getDefaults(), {\n      events: []\n    });\n  };\n  /**\n   * Start the part at the given time.\n   * @param  time    When to start the part.\n   * @param  offset  The offset from the start of the part to begin playing at.\n   */\n\n\n  Part.prototype.start = function (time, offset) {\n    var _this = this;\n\n    var ticks = this.toTicks(time);\n\n    if (this._state.getValueAtTime(ticks) !== \"started\") {\n      offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n\n      if (this._loop) {\n        offset = defaultArg(offset, this._loopStart);\n      } else {\n        offset = defaultArg(offset, 0);\n      }\n\n      var computedOffset_1 = this.toTicks(offset);\n\n      this._state.add({\n        id: -1,\n        offset: computedOffset_1,\n        state: \"started\",\n        time: ticks\n      });\n\n      this._forEach(function (event) {\n        _this._startNote(event, ticks, computedOffset_1);\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Start the event in the given event at the correct time given\n   * the ticks and offset and looping.\n   * @param  event\n   * @param  ticks\n   * @param  offset\n   */\n\n\n  Part.prototype._startNote = function (event, ticks, offset) {\n    ticks -= offset;\n\n    if (this._loop) {\n      if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n        if (event.startOffset < offset) {\n          // start it on the next loop\n          ticks += this._getLoopDuration();\n        }\n\n        event.start(new TicksClass(this.context, ticks));\n      } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n        event.loop = false;\n        event.start(new TicksClass(this.context, ticks));\n      }\n    } else if (event.startOffset >= offset) {\n      event.start(new TicksClass(this.context, ticks));\n    }\n  };\n\n  Object.defineProperty(Part.prototype, \"startOffset\", {\n    get: function () {\n      return this._startOffset;\n    },\n    set: function (offset) {\n      var _this = this;\n\n      this._startOffset = offset;\n\n      this._forEach(function (event) {\n        event.startOffset += _this._startOffset;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Stop the part at the given time.\n   * @param  time  When to stop the part.\n   */\n\n  Part.prototype.stop = function (time) {\n    var ticks = this.toTicks(time);\n\n    this._state.cancel(ticks);\n\n    this._state.setStateAtTime(\"stopped\", ticks);\n\n    this._forEach(function (event) {\n      event.stop(time);\n    });\n\n    return this;\n  };\n  /**\n   * Get/Set an Event's value at the given time.\n   * If a value is passed in and no event exists at\n   * the given time, one will be created with that value.\n   * If two events are at the same time, the first one will\n   * be returned.\n   * @example\n   * const part = new Tone.Part();\n   * part.at(\"1m\"); // returns the part at the first measure\n   * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n   * // if an event didn't exist at that time, it will be created.\n   * @param time The time of the event to get or set.\n   * @param value If a value is passed in, the value of the event at the given time will be set to it.\n   */\n\n\n  Part.prototype.at = function (time, value) {\n    var timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n    var tickTime = new TicksClass(this.context, 1).toSeconds();\n\n    var iterator = this._events.values();\n\n    var result = iterator.next();\n\n    while (!result.done) {\n      var event_1 = result.value;\n\n      if (Math.abs(timeInTicks - event_1.startOffset) < tickTime) {\n        if (isDefined(value)) {\n          event_1.value = value;\n        }\n\n        return event_1;\n      }\n\n      result = iterator.next();\n    } // if there was no event at that time, create one\n\n\n    if (isDefined(value)) {\n      this.add(time, value); // return the new event\n\n      return this.at(time);\n    } else {\n      return null;\n    }\n  };\n\n  Part.prototype.add = function (time, value) {\n    // extract the parameters\n    if (time instanceof Object && Reflect.has(time, \"time\")) {\n      value = time;\n      time = value.time;\n    }\n\n    var ticks = this.toTicks(time);\n    var event;\n\n    if (value instanceof ToneEvent) {\n      event = value;\n      event.callback = this._tick.bind(this);\n    } else {\n      event = new ToneEvent({\n        callback: this._tick.bind(this),\n        context: this.context,\n        value: value\n      });\n    } // the start offset\n\n\n    event.startOffset = ticks; // initialize the values\n\n    event.set({\n      humanize: this.humanize,\n      loop: this.loop,\n      loopEnd: this.loopEnd,\n      loopStart: this.loopStart,\n      playbackRate: this.playbackRate,\n      probability: this.probability\n    });\n\n    this._events.add(event); // start the note if it should be played right now\n\n\n    this._restartEvent(event);\n\n    return this;\n  };\n  /**\n   * Restart the given event\n   */\n\n\n  Part.prototype._restartEvent = function (event) {\n    var _this = this;\n\n    this._state.forEach(function (stateEvent) {\n      if (stateEvent.state === \"started\") {\n        _this._startNote(event, stateEvent.time, stateEvent.offset);\n      } else {\n        // stop the note\n        event.stop(new TicksClass(_this.context, stateEvent.time));\n      }\n    });\n  };\n\n  Part.prototype.remove = function (time, value) {\n    var _this = this; // extract the parameters\n\n\n    if (isObject(time) && time.hasOwnProperty(\"time\")) {\n      value = time;\n      time = value.time;\n    }\n\n    time = this.toTicks(time);\n\n    this._events.forEach(function (event) {\n      if (event.startOffset === time) {\n        if (isUndef(value) || isDefined(value) && event.value === value) {\n          _this._events.delete(event);\n\n          event.dispose();\n        }\n      }\n    });\n\n    return this;\n  };\n  /**\n   * Remove all of the notes from the group.\n   */\n\n\n  Part.prototype.clear = function () {\n    this._forEach(function (event) {\n      return event.dispose();\n    });\n\n    this._events.clear();\n\n    return this;\n  };\n  /**\n   * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n   * @param after The time after which to cancel the scheduled events.\n   */\n\n\n  Part.prototype.cancel = function (after) {\n    this._forEach(function (event) {\n      return event.cancel(after);\n    });\n\n    this._state.cancel(this.toTicks(after));\n\n    return this;\n  };\n  /**\n   * Iterate over all of the events\n   */\n\n\n  Part.prototype._forEach = function (callback) {\n    if (this._events) {\n      this._events.forEach(function (event) {\n        if (event instanceof Part) {\n          event._forEach(callback);\n        } else {\n          callback(event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Set the attribute of all of the events\n   * @param  attr  the attribute to set\n   * @param  value      The value to set it to\n   */\n\n\n  Part.prototype._setAll = function (attr, value) {\n    this._forEach(function (event) {\n      event[attr] = value;\n    });\n  };\n  /**\n   * Internal tick method\n   * @param  time  The time of the event in seconds\n   */\n\n\n  Part.prototype._tick = function (time, value) {\n    if (!this.mute) {\n      this.callback(time, value);\n    }\n  };\n  /**\n   * Determine if the event should be currently looping\n   * given the loop boundries of this Part.\n   * @param  event  The event to test\n   */\n\n\n  Part.prototype._testLoopBoundries = function (event) {\n    if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n      event.cancel(0);\n    } else if (event.state === \"stopped\") {\n      // reschedule it if it's stopped\n      this._restartEvent(event);\n    }\n  };\n\n  Object.defineProperty(Part.prototype, \"probability\", {\n    get: function () {\n      return this._probability;\n    },\n    set: function (prob) {\n      this._probability = prob;\n\n      this._setAll(\"probability\", prob);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"humanize\", {\n    get: function () {\n      return this._humanize;\n    },\n    set: function (variation) {\n      this._humanize = variation;\n\n      this._setAll(\"humanize\", variation);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"loop\", {\n    /**\n     * If the part should loop or not\n     * between Part.loopStart and\n     * Part.loopEnd. If set to true,\n     * the part will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     * @example\n     * const part = new Tone.Part();\n     * // loop the part 8 times\n     * part.loop = 8;\n     */\n    get: function () {\n      return this._loop;\n    },\n    set: function (loop) {\n      var _this = this;\n\n      this._loop = loop;\n\n      this._forEach(function (event) {\n        event.loopStart = _this.loopStart;\n        event.loopEnd = _this.loopEnd;\n        event.loop = loop;\n\n        _this._testLoopBoundries(event);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"loopEnd\", {\n    /**\n     * The loopEnd point determines when it will\n     * loop if Part.loop is true.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopEnd).toSeconds();\n    },\n    set: function (loopEnd) {\n      var _this = this;\n\n      this._loopEnd = this.toTicks(loopEnd);\n\n      if (this._loop) {\n        this._forEach(function (event) {\n          event.loopEnd = loopEnd;\n\n          _this._testLoopBoundries(event);\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"loopStart\", {\n    /**\n     * The loopStart point determines when it will\n     * loop if Part.loop is true.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopStart).toSeconds();\n    },\n    set: function (loopStart) {\n      var _this = this;\n\n      this._loopStart = this.toTicks(loopStart);\n\n      if (this._loop) {\n        this._forEach(function (event) {\n          event.loopStart = _this.loopStart;\n\n          _this._testLoopBoundries(event);\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the part\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n\n      this._setAll(\"playbackRate\", rate);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"length\", {\n    /**\n     * The number of scheduled notes in the part.\n     */\n    get: function () {\n      return this._events.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Part.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.clear();\n    return this;\n  };\n\n  return Part;\n}(ToneEvent);\n\nexport { Part };","import { __generator, __values } from \"tslib\";\nimport { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n/**\n * Start at the first value and go up to the last\n */\n\nfunction upPatternGen(values) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!(index < values.length)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        index++;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Start at the last value and go down to 0\n */\n\n\nfunction downPatternGen(values) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = values.length - 1;\n        _a.label = 1;\n\n      case 1:\n        if (!(index >= 0)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        index--;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Infinitely yield the generator\n */\n\n\nfunction infiniteGen(values, gen) {\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        if (!true) return [3\n        /*break*/\n        , 2];\n        return [5\n        /*yield**/\n        , __values(gen(values))];\n\n      case 1:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 0];\n\n      case 2:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Make sure that the index is in the given range\n */\n\n\nfunction clampToArraySize(index, values) {\n  return clamp(index, 0, values.length - 1);\n}\n/**\n * Alternate between two generators\n */\n\n\nfunction alternatingGenerator(values, directionUp) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = directionUp ? 0 : values.length - 1;\n        _a.label = 1;\n\n      case 1:\n        if (!true) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        if (directionUp) {\n          index++;\n\n          if (index >= values.length - 1) {\n            directionUp = false;\n          }\n        } else {\n          index--;\n\n          if (index <= 0) {\n            directionUp = true;\n          }\n        }\n\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Starting from the bottom move up 2, down 1\n */\n\n\nfunction jumpUp(values) {\n  var index, stepIndex;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = 0;\n        stepIndex = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!(index < values.length)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        stepIndex++;\n        index += stepIndex % 2 ? 2 : -1;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Starting from the top move down 2, up 1\n */\n\n\nfunction jumpDown(values) {\n  var index, stepIndex;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = values.length - 1;\n        stepIndex = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!(index >= 0)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        stepIndex++;\n        index += stepIndex % 2 ? -2 : 1;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Choose a random index each time\n */\n\n\nfunction randomGen(values) {\n  var randomIndex;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        if (!true) return [3\n        /*break*/\n        , 2];\n        randomIndex = Math.floor(Math.random() * values.length);\n        return [4\n        /*yield*/\n        , values[randomIndex]];\n\n      case 1:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 0];\n\n      case 2:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\n\n\nfunction randomOnce(values) {\n  var copy, i, randVal, index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        copy = [];\n\n        for (i = 0; i < values.length; i++) {\n          copy.push(i);\n        }\n\n        _a.label = 1;\n\n      case 1:\n        if (!(copy.length > 0)) return [3\n        /*break*/\n        , 3];\n        randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n        index = clampToArraySize(randVal[0], values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Randomly choose to walk up or down 1 index in the values array\n */\n\n\nfunction randomWalk(values) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = Math.floor(Math.random() * values.length);\n        _a.label = 1;\n\n      case 1:\n        if (!true) return [3\n        /*break*/\n        , 3];\n\n        if (index === 0) {\n          index++; // at bottom of array, so force upward step\n        } else if (index === values.length - 1) {\n          index--; // at top of array, so force downward step\n        } else if (Math.random() < 0.5) {\n          // else choose random downward or upward step\n          index--;\n        } else {\n          index++;\n        }\n\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * PatternGenerator returns a generator which will iterate over the given array\n * of values and yield the items according to the passed in pattern\n * @param values An array of values to iterate over\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\n\n\nexport function PatternGenerator(values, pattern, index) {\n  var _a;\n\n  if (pattern === void 0) {\n    pattern = \"up\";\n  }\n\n  if (index === void 0) {\n    index = 0;\n  }\n\n  return __generator(this, function (_b) {\n    switch (_b.label) {\n      case 0:\n        // safeguards\n        assert(values.length > 0, \"The array must have more than one value in it\");\n        _a = pattern;\n\n        switch (_a) {\n          case \"up\":\n            return [3\n            /*break*/\n            , 1];\n\n          case \"down\":\n            return [3\n            /*break*/\n            , 3];\n\n          case \"upDown\":\n            return [3\n            /*break*/\n            , 5];\n\n          case \"downUp\":\n            return [3\n            /*break*/\n            , 7];\n\n          case \"alternateUp\":\n            return [3\n            /*break*/\n            , 9];\n\n          case \"alternateDown\":\n            return [3\n            /*break*/\n            , 11];\n\n          case \"random\":\n            return [3\n            /*break*/\n            , 13];\n\n          case \"randomOnce\":\n            return [3\n            /*break*/\n            , 15];\n\n          case \"randomWalk\":\n            return [3\n            /*break*/\n            , 17];\n        }\n\n        return [3\n        /*break*/\n        , 19];\n\n      case 1:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, upPatternGen))];\n\n      case 2:\n        _b.sent();\n\n        _b.label = 3;\n\n      case 3:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, downPatternGen))];\n\n      case 4:\n        _b.sent();\n\n        _b.label = 5;\n\n      case 5:\n        return [5\n        /*yield**/\n        , __values(alternatingGenerator(values, true))];\n\n      case 6:\n        _b.sent();\n\n        _b.label = 7;\n\n      case 7:\n        return [5\n        /*yield**/\n        , __values(alternatingGenerator(values, false))];\n\n      case 8:\n        _b.sent();\n\n        _b.label = 9;\n\n      case 9:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, jumpUp))];\n\n      case 10:\n        _b.sent();\n\n        _b.label = 11;\n\n      case 11:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, jumpDown))];\n\n      case 12:\n        _b.sent();\n\n        _b.label = 13;\n\n      case 13:\n        return [5\n        /*yield**/\n        , __values(randomGen(values))];\n\n      case 14:\n        _b.sent();\n\n        _b.label = 15;\n\n      case 15:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, randomOnce))];\n\n      case 16:\n        _b.sent();\n\n        _b.label = 17;\n\n      case 17:\n        return [5\n        /*yield**/\n        , __values(randomWalk(values))];\n\n      case 18:\n        _b.sent();\n\n        _b.label = 19;\n\n      case 19:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}","import { __extends } from \"tslib\";\nimport { Loop } from \"./Loop\";\nimport { PatternGenerator } from \"./PatternGenerator\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns.\n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\n\nvar Pattern =\n/** @class */\nfunction (_super) {\n  __extends(Pattern, _super);\n\n  function Pattern() {\n    var _this = _super.call(this, optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"])) || this;\n\n    _this.name = \"Pattern\";\n    var options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n    _this.callback = options.callback;\n    _this._values = options.values;\n    _this._pattern = PatternGenerator(options.values, options.pattern);\n    _this._type = options.pattern;\n    return _this;\n  }\n\n  Pattern.getDefaults = function () {\n    return Object.assign(Loop.getDefaults(), {\n      pattern: \"up\",\n      values: [],\n      callback: noOp\n    });\n  };\n  /**\n   * Internal function called when the notes should be called\n   */\n\n\n  Pattern.prototype._tick = function (time) {\n    var value = this._pattern.next();\n\n    this._value = value.value;\n    this.callback(time, this._value);\n  };\n\n  Object.defineProperty(Pattern.prototype, \"values\", {\n    /**\n     * The array of events.\n     */\n    get: function () {\n      return this._values;\n    },\n    set: function (val) {\n      this._values = val; // reset the pattern\n\n      this.pattern = this._type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"value\", {\n    /**\n     * The current value of the pattern.\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"pattern\", {\n    /**\n     * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (pattern) {\n      this._type = pattern;\n      this._pattern = PatternGenerator(this._values, this._type);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Pattern;\n}(Loop);\n\nexport { Pattern };","import { __extends } from \"tslib\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\n\nvar Sequence =\n/** @class */\nfunction (_super) {\n  __extends(Sequence, _super);\n\n  function Sequence() {\n    var _this = _super.call(this, optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"])) || this;\n\n    _this.name = \"Sequence\";\n    /**\n     * The object responsible for scheduling all of the events\n     */\n\n    _this._part = new Part({\n      callback: _this._seqCallback.bind(_this),\n      context: _this.context\n    });\n    /**\n     * private reference to all of the sequence proxies\n     */\n\n    _this._events = [];\n    /**\n     * The proxied array\n     */\n\n    _this._eventsArray = [];\n    var options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n    _this._subdivision = _this.toTicks(options.subdivision);\n    _this.events = options.events; // set all of the values\n\n    _this.loop = options.loop;\n    _this.loopStart = options.loopStart;\n    _this.loopEnd = options.loopEnd;\n    _this.playbackRate = options.playbackRate;\n    _this.probability = options.probability;\n    _this.humanize = options.humanize;\n    _this.mute = options.mute;\n    _this.playbackRate = options.playbackRate;\n    return _this;\n  }\n\n  Sequence.getDefaults = function () {\n    return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n      events: [],\n      loop: true,\n      loopEnd: 0,\n      loopStart: 0,\n      subdivision: \"8n\"\n    });\n  };\n  /**\n   * The internal callback for when an event is invoked\n   */\n\n\n  Sequence.prototype._seqCallback = function (time, value) {\n    if (value !== null) {\n      this.callback(time, value);\n    }\n  };\n\n  Object.defineProperty(Sequence.prototype, \"events\", {\n    /**\n     * The sequence\n     */\n    get: function () {\n      return this._events;\n    },\n    set: function (s) {\n      this.clear();\n      this._eventsArray = s;\n      this._events = this._createSequence(this._eventsArray);\n\n      this._eventsUpdated();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the part at the given time.\n   * @param  time    When to start the part.\n   * @param  offset  The offset index to start at\n   */\n\n  Sequence.prototype.start = function (time, offset) {\n    this._part.start(time, offset ? this._indexTime(offset) : offset);\n\n    return this;\n  };\n  /**\n   * Stop the part at the given time.\n   * @param  time  When to stop the part.\n   */\n\n\n  Sequence.prototype.stop = function (time) {\n    this._part.stop(time);\n\n    return this;\n  };\n\n  Object.defineProperty(Sequence.prototype, \"subdivision\", {\n    /**\n     * The subdivision of the sequence. This can only be\n     * set in the constructor. The subdivision is the\n     * interval between successive steps.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._subdivision).toSeconds();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Create a sequence proxy which can be monitored to create subsequences\n   */\n\n  Sequence.prototype._createSequence = function (array) {\n    var _this = this;\n\n    return new Proxy(array, {\n      get: function (target, property) {\n        // property is index in this case\n        return target[property];\n      },\n      set: function (target, property, value) {\n        if (isString(property) && isFinite(parseInt(property, 10))) {\n          if (isArray(value)) {\n            target[property] = _this._createSequence(value);\n          } else {\n            target[property] = value;\n          }\n        } else {\n          target[property] = value;\n        }\n\n        _this._eventsUpdated(); // return true to accept the changes\n\n\n        return true;\n      }\n    });\n  };\n  /**\n   * When the sequence has changed, all of the events need to be recreated\n   */\n\n\n  Sequence.prototype._eventsUpdated = function () {\n    this._part.clear();\n\n    this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset); // update the loopEnd\n\n\n    this.loopEnd = this.loopEnd;\n  };\n  /**\n   * reschedule all of the events that need to be rescheduled\n   */\n\n\n  Sequence.prototype._rescheduleSequence = function (sequence, subdivision, startOffset) {\n    var _this = this;\n\n    sequence.forEach(function (value, index) {\n      var eventOffset = index * subdivision + startOffset;\n\n      if (isArray(value)) {\n        _this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n      } else {\n        var startTime = new TicksClass(_this.context, eventOffset, \"i\").toSeconds();\n\n        _this._part.add(startTime, value);\n      }\n    });\n  };\n  /**\n   * Get the time of the index given the Sequence's subdivision\n   * @param  index\n   * @return The time of that index\n   */\n\n\n  Sequence.prototype._indexTime = function (index) {\n    return new TicksClass(this.context, index * this._subdivision + this.startOffset).toSeconds();\n  };\n  /**\n   * Clear all of the events\n   */\n\n\n  Sequence.prototype.clear = function () {\n    this._part.clear();\n\n    return this;\n  };\n\n  Sequence.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._part.dispose();\n\n    return this;\n  };\n\n  Object.defineProperty(Sequence.prototype, \"loop\", {\n    //-------------------------------------\n    // PROXY CALLS\n    //-------------------------------------\n    get: function () {\n      return this._part.loop;\n    },\n    set: function (l) {\n      this._part.loop = l;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"loopStart\", {\n    /**\n     * The index at which the sequence should start looping\n     */\n    get: function () {\n      return this._loopStart;\n    },\n    set: function (index) {\n      this._loopStart = index;\n      this._part.loopStart = this._indexTime(index);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"loopEnd\", {\n    /**\n     * The index at which the sequence should end looping\n     */\n    get: function () {\n      return this._loopEnd;\n    },\n    set: function (index) {\n      this._loopEnd = index;\n\n      if (index === 0) {\n        this._part.loopEnd = this._indexTime(this._eventsArray.length);\n      } else {\n        this._part.loopEnd = this._indexTime(index);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"startOffset\", {\n    get: function () {\n      return this._part.startOffset;\n    },\n    set: function (start) {\n      this._part.startOffset = start;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"playbackRate\", {\n    get: function () {\n      return this._part.playbackRate;\n    },\n    set: function (rate) {\n      this._part.playbackRate = rate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"probability\", {\n    get: function () {\n      return this._part.probability;\n    },\n    set: function (prob) {\n      this._part.probability = prob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"progress\", {\n    get: function () {\n      return this._part.progress;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"humanize\", {\n    get: function () {\n      return this._part.humanize;\n    },\n    set: function (variation) {\n      this._part.humanize = variation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"length\", {\n    /**\n     * The number of scheduled events\n     */\n    get: function () {\n      return this._part.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Sequence;\n}(ToneEvent);\n\nexport { Sequence };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\n\nvar CrossFade =\n/** @class */\nfunction (_super) {\n  __extends(CrossFade, _super);\n\n  function CrossFade() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]))) || this;\n\n    _this.name = \"CrossFade\";\n    /**\n     * The crossfading is done by a StereoPannerNode\n     */\n\n    _this._panner = _this.context.createStereoPanner();\n    /**\n     * Split the output of the panner node into two values used to control the gains.\n     */\n\n    _this._split = _this.context.createChannelSplitter(2);\n    /**\n     * Convert the fade value into an audio range value so it can be connected\n     * to the panner.pan AudioParam\n     */\n\n    _this._g2a = new GainToAudio({\n      context: _this.context\n    });\n    /**\n     * The input which is at full level when fade = 0\n     */\n\n    _this.a = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * The input which is at full level when fade = 1\n     */\n\n    _this.b = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * The output is a mix between `a` and `b` at the ratio of `fade`\n     */\n\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this._internalChannels = [_this.a, _this.b];\n    var options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n    _this.fade = new Signal({\n      context: _this.context,\n      units: \"normalRange\",\n      value: options.fade\n    });\n    readOnly(_this, \"fade\");\n\n    _this.context.getConstant(1).connect(_this._panner);\n\n    _this._panner.connect(_this._split); // this is necessary for standardized-audio-context\n    // doesn't make any difference for the native AudioContext\n    // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\n\n    _this._panner.channelCount = 1;\n    _this._panner.channelCountMode = \"explicit\";\n    connect(_this._split, _this.a.gain, 0);\n    connect(_this._split, _this.b.gain, 1);\n\n    _this.fade.chain(_this._g2a, _this._panner.pan);\n\n    _this.a.connect(_this.output);\n\n    _this.b.connect(_this.output);\n\n    return _this;\n  }\n\n  CrossFade.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      fade: 0.5\n    });\n  };\n\n  CrossFade.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.a.dispose();\n    this.b.dispose();\n    this.output.dispose();\n    this.fade.dispose();\n\n    this._g2a.dispose();\n\n    this._panner.disconnect();\n\n    this._split.disconnect();\n\n    return this;\n  };\n\n  return CrossFade;\n}(ToneAudioNode);\n\nexport { CrossFade };","import { __extends } from \"tslib\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\n\nvar Effect =\n/** @class */\nfunction (_super) {\n  __extends(Effect, _super);\n\n  function Effect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"Effect\";\n    /**\n     * the drywet knob to control the amount of effect\n     */\n\n    _this._dryWet = new CrossFade({\n      context: _this.context\n    });\n    /**\n     * The wet control is how much of the effected\n     * will pass through to the output. 1 = 100% effected\n     * signal, 0 = 100% dry signal.\n     */\n\n    _this.wet = _this._dryWet.fade;\n    /**\n     * connect the effectSend to the input of hte effect\n     */\n\n    _this.effectSend = new Gain({\n      context: _this.context\n    });\n    /**\n     * connect the output of the effect to the effectReturn\n     */\n\n    _this.effectReturn = new Gain({\n      context: _this.context\n    });\n    /**\n     * The effect input node\n     */\n\n    _this.input = new Gain({\n      context: _this.context\n    });\n    /**\n     * The effect output\n     */\n\n    _this.output = _this._dryWet; // connections\n\n    _this.input.fan(_this._dryWet.a, _this.effectSend);\n\n    _this.effectReturn.connect(_this._dryWet.b);\n\n    _this.wet.setValueAtTime(options.wet, 0);\n\n    _this._internalChannels = [_this.effectReturn, _this.effectSend];\n    readOnly(_this, \"wet\");\n    return _this;\n  }\n\n  Effect.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  };\n  /**\n   * chains the effect in between the effectSend and effectReturn\n   */\n\n\n  Effect.prototype.connectEffect = function (effect) {\n    // add it to the internal channels\n    this._internalChannels.push(effect);\n\n    this.effectSend.chain(effect, this.effectReturn);\n    return this;\n  };\n\n  Effect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dryWet.dispose();\n\n    this.effectSend.dispose();\n    this.effectReturn.dispose();\n    this.wet.dispose();\n    return this;\n  };\n\n  return Effect;\n}(ToneAudioNode);\n\nexport { Effect };","import { __extends } from \"tslib\";\nimport { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\n\nvar LFOEffect =\n/** @class */\nfunction (_super) {\n  __extends(LFOEffect, _super);\n\n  function LFOEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"LFOEffect\";\n    _this._lfo = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      amplitude: options.depth\n    });\n    _this.depth = _this._lfo.amplitude;\n    _this.frequency = _this._lfo.frequency;\n    _this.type = options.type;\n    readOnly(_this, [\"frequency\", \"depth\"]);\n    return _this;\n  }\n\n  LFOEffect.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n  };\n  /**\n   * Start the effect.\n   */\n\n\n  LFOEffect.prototype.start = function (time) {\n    this._lfo.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the lfo\n   */\n\n\n  LFOEffect.prototype.stop = function (time) {\n    this._lfo.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the filter to the transport. See [[LFO.sync]]\n   */\n\n\n  LFOEffect.prototype.sync = function () {\n    this._lfo.sync();\n\n    return this;\n  };\n  /**\n   * Unsync the filter from the transport.\n   */\n\n\n  LFOEffect.prototype.unsync = function () {\n    this._lfo.unsync();\n\n    return this;\n  };\n\n  Object.defineProperty(LFOEffect.prototype, \"type\", {\n    /**\n     * The type of the LFO's oscillator: See [[Oscillator.type]]\n     * @example\n     * const autoFilter = new Tone.AutoFilter().start().toDestination();\n     * const noise = new Tone.Noise().start().connect(autoFilter);\n     * autoFilter.type = \"square\";\n     */\n    get: function () {\n      return this._lfo.type;\n    },\n    set: function (type) {\n      this._lfo.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LFOEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._lfo.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  };\n\n  return LFOEffect;\n}(Effect);\n\nexport { LFOEffect };","import { __extends } from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @offline 0.5 2\n * @example\n * // move the input signal from right to left\n * const panner = new Tone.Panner(1).toDestination();\n * panner.pan.rampTo(-1, 0.5);\n * const osc = new Tone.Oscillator(100).connect(panner).start();\n * @category Component\n */\n\nvar Panner =\n/** @class */\nfunction (_super) {\n  __extends(Panner, _super);\n\n  function Panner() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]))) || this;\n\n    _this.name = \"Panner\";\n    /**\n     * the panner node\n     */\n\n    _this._panner = _this.context.createStereoPanner();\n    _this.input = _this._panner;\n    _this.output = _this._panner;\n    var options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n    _this.pan = new Param({\n      context: _this.context,\n      param: _this._panner.pan,\n      value: options.pan,\n      minValue: -1,\n      maxValue: 1\n    }); // this is necessary for standardized-audio-context\n    // doesn't make any difference for the native AudioContext\n    // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\n    _this._panner.channelCount = options.channelCount;\n    _this._panner.channelCountMode = \"explicit\"; // initial value\n\n    readOnly(_this, \"pan\");\n    return _this;\n  }\n\n  Panner.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      pan: 0,\n      channelCount: 1\n    });\n  };\n\n  Panner.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.disconnect();\n\n    this.pan.dispose();\n    return this;\n  };\n\n  return Panner;\n}(ToneAudioNode);\n\nexport { Panner };","import { __extends } from \"tslib\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate\n * and depth.\n *\n * @example\n * // create an autofilter and start it's LFO\n * const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Tone.Oscillator().connect(autoFilter).start();\n * @category Effect\n */\n\nvar AutoFilter =\n/** @class */\nfunction (_super) {\n  __extends(AutoFilter, _super);\n\n  function AutoFilter() {\n    var _this = _super.call(this, optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"])) || this;\n\n    _this.name = \"AutoFilter\";\n    var options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n    _this.filter = new Filter(Object.assign(options.filter, {\n      context: _this.context\n    })); // connections\n\n    _this.connectEffect(_this.filter);\n\n    _this._lfo.connect(_this.filter.frequency);\n\n    _this.octaves = options.octaves;\n    _this.baseFrequency = options.baseFrequency;\n    return _this;\n  }\n\n  AutoFilter.getDefaults = function () {\n    return Object.assign(LFOEffect.getDefaults(), {\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n  };\n\n  Object.defineProperty(AutoFilter.prototype, \"baseFrequency\", {\n    /**\n     * The minimum value of the filter's cutoff frequency.\n     */\n    get: function () {\n      return this._lfo.min;\n    },\n    set: function (freq) {\n      this._lfo.min = this.toFrequency(freq); // and set the max\n\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoFilter.prototype, \"octaves\", {\n    /**\n     * The maximum value of the filter's cutoff frequency.\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (oct) {\n      this._octaves = oct;\n      this._lfo.max = this._lfo.min * Math.pow(2, oct);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AutoFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.filter.dispose();\n    return this;\n  };\n\n  return AutoFilter;\n}(LFOEffect);\n\nexport { AutoFilter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n/**\n * Follower is a simple envelope follower.\n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.\n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\n\nvar Follower =\n/** @class */\nfunction (_super) {\n  __extends(Follower, _super);\n\n  function Follower() {\n    var _this = _super.call(this, optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"])) || this;\n\n    _this.name = \"Follower\";\n    var options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n    _this._abs = _this.input = new Abs({\n      context: _this.context\n    });\n    _this._lowpass = _this.output = new OnePoleFilter({\n      context: _this.context,\n      frequency: 1 / _this.toSeconds(options.smoothing),\n      type: \"lowpass\"\n    });\n\n    _this._abs.connect(_this._lowpass);\n\n    _this._smoothing = options.smoothing;\n    return _this;\n  }\n\n  Follower.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.05\n    });\n  };\n\n  Object.defineProperty(Follower.prototype, \"smoothing\", {\n    /**\n     * The amount of time it takes a value change to arrive at the updated value.\n     */\n    get: function () {\n      return this._smoothing;\n    },\n    set: function (smoothing) {\n      this._smoothing = smoothing;\n      this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Follower.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._abs.dispose();\n\n    this._lowpass.dispose();\n\n    return this;\n  };\n\n  return Follower;\n}(ToneAudioNode);\n\nexport { Follower };","import { __extends } from \"tslib\";\nimport { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\n\nvar AutoPanner =\n/** @class */\nfunction (_super) {\n  __extends(AutoPanner, _super);\n\n  function AutoPanner() {\n    var _this = _super.call(this, optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"AutoPanner\";\n    var options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n    _this._panner = new Panner({\n      context: _this.context,\n      channelCount: options.channelCount\n    }); // connections\n\n    _this.connectEffect(_this._panner);\n\n    _this._lfo.connect(_this._panner.pan);\n\n    _this._lfo.min = -1;\n    _this._lfo.max = 1;\n    return _this;\n  }\n\n  AutoPanner.getDefaults = function () {\n    return Object.assign(LFOEffect.getDefaults(), {\n      channelCount: 1\n    });\n  };\n\n  AutoPanner.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.dispose();\n\n    return this;\n  };\n\n  return AutoPanner;\n}(LFOEffect);\n\nexport { AutoPanner };","import { __extends } from \"tslib\";\nimport { ToneAudioWorklet } from \"../core/context/ToneAudioWorklet\";\nimport { Effect } from \"./Effect\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n *\n * @category Effect\n */\n\nvar BitCrusher =\n/** @class */\nfunction (_super) {\n  __extends(BitCrusher, _super);\n\n  function BitCrusher() {\n    var _this = _super.call(this, optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"])) || this;\n\n    _this.name = \"BitCrusher\";\n    var options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n    _this._bitCrusherWorklet = new BitCrusherWorklet({\n      context: _this.context,\n      bits: options.bits\n    }); // connect it up\n\n    _this.connectEffect(_this._bitCrusherWorklet);\n\n    _this.bits = _this._bitCrusherWorklet.bits;\n    return _this;\n  }\n\n  BitCrusher.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      bits: 4,\n      frequencyReduction: 0.5\n    });\n  };\n\n  BitCrusher.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._bitCrusherWorklet.dispose();\n\n    return this;\n  };\n\n  return BitCrusher;\n}(Effect);\n\nexport { BitCrusher };\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\n\nvar BitCrusherWorklet =\n/** @class */\nfunction (_super) {\n  __extends(BitCrusherWorklet, _super);\n\n  function BitCrusherWorklet() {\n    var _this = _super.call(this, optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments)) || this;\n\n    _this.name = \"BitCrusherWorklet\";\n    _this.workletOptions = {\n      numberOfInputs: 1,\n      numberOfOutputs: 1\n    };\n    var options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n\n    var dummyGain = _this.context.createGain();\n\n    _this.bits = new Param({\n      context: _this.context,\n      value: options.bits,\n      units: \"positive\",\n      minValue: 1,\n      maxValue: 16,\n      param: dummyGain.gain,\n      swappable: true\n    });\n    return _this;\n  }\n\n  BitCrusherWorklet.getDefaults = function () {\n    return Object.assign(ToneAudioWorklet.getDefaults(), {\n      bits: 12\n    });\n  };\n\n  BitCrusherWorklet.prototype._audioWorkletName = function () {\n    return \"bit-crusher\";\n  };\n\n  BitCrusherWorklet.prototype._audioWorklet = function () {\n    return (\n      /* javascript */\n      \" \\n\\t\\tregisterProcessor(\\\"\" + this._audioWorkletName() + \"\\\", class extends AudioWorkletProcessor {\\n\\t\\t\\tstatic get parameterDescriptors () {\\n\\t\\t\\t\\treturn [{\\n\\t\\t\\t\\t\\tname: 'bits',\\n\\t\\t\\t\\t\\tdefaultValue: 12,\\n\\t\\t\\t\\t\\tminValue: 1,\\n\\t\\t\\t\\t\\tmaxValue: 16\\n\\t\\t\\t\\t}];\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tprocess (inputs, outputs, parameters) {\\n\\t\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t\\tif (input && output && input.length === output.length) {\\n\\t\\t\\t\\t\\tconst bits = parameters.bits;\\n\\t\\t\\t\\t\\tfor (let channelNum = 0; channelNum < input.length; channelNum++) {\\n\\t\\t\\t\\t\\t\\tconst inputChannel = input[channelNum];\\n\\t\\t\\t\\t\\t\\tfor (let index = 0; index < inputChannel.length; index++) {\\n\\t\\t\\t\\t\\t\\t\\tconst value = inputChannel[index];\\n\\t\\t\\t\\t\\t\\t\\tconst step = bits.length > 1 ? Math.pow(0.5, bits[index]) : Math.pow(0.5, bits[0]);\\n\\t\\t\\t\\t\\t\\t\\tconst val = step * Math.floor(value / step + 0.5);\\n\\t\\t\\t\\t\\t\\t\\toutput[channelNum][index] = val;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\"\n    );\n  };\n\n  BitCrusherWorklet.prototype.onReady = function (node) {\n    connectSeries(this.input, node, this.output); // @ts-ignore\n\n    var bits = node.parameters.get(\"bits\");\n    this.bits.setParam(bits);\n  };\n\n  BitCrusherWorklet.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n    this.bits.dispose();\n    return this;\n  };\n\n  return BitCrusherWorklet;\n}(ToneAudioWorklet);","import { __extends } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]].\n * The frequency of the filter, follows the input amplitude curve.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n * @example\n * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Tone.Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\n\nvar AutoWah =\n/** @class */\nfunction (_super) {\n  __extends(AutoWah, _super);\n\n  function AutoWah() {\n    var _this = _super.call(this, optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"])) || this;\n\n    _this.name = \"AutoWah\";\n    var options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n    _this._follower = new Follower({\n      context: _this.context,\n      smoothing: options.follower\n    });\n    _this._sweepRange = new ScaleExp({\n      context: _this.context,\n      min: 0,\n      max: 1,\n      exponent: 0.5\n    });\n    _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n    _this._octaves = options.octaves;\n    _this._inputBoost = new Gain({\n      context: _this.context\n    });\n    _this._bandpass = new Filter({\n      context: _this.context,\n      rolloff: -48,\n      frequency: 0,\n      Q: options.Q\n    });\n    _this._peaking = new Filter({\n      context: _this.context,\n      type: \"peaking\"\n    });\n    _this._peaking.gain.value = options.gain;\n    _this.gain = _this._peaking.gain;\n    _this.Q = _this._bandpass.Q; // the control signal path\n\n    _this.effectSend.chain(_this._inputBoost, _this._follower, _this._sweepRange);\n\n    _this._sweepRange.connect(_this._bandpass.frequency);\n\n    _this._sweepRange.connect(_this._peaking.frequency); // the filtered path\n\n\n    _this.effectSend.chain(_this._bandpass, _this._peaking, _this.effectReturn); // set the initial value\n\n\n    _this._setSweepRange();\n\n    _this.sensitivity = options.sensitivity;\n    readOnly(_this, [\"gain\", \"Q\"]);\n    return _this;\n  }\n\n  AutoWah.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: 0.2\n    });\n  };\n\n  Object.defineProperty(AutoWah.prototype, \"octaves\", {\n    /**\n     * The number of octaves that the filter will sweep above the baseFrequency.\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (octaves) {\n      this._octaves = octaves;\n\n      this._setSweepRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoWah.prototype, \"follower\", {\n    /**\n     * The follower's smoothing time\n     */\n    get: function () {\n      return this._follower.smoothing;\n    },\n    set: function (follower) {\n      this._follower.smoothing = follower;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoWah.prototype, \"baseFrequency\", {\n    /**\n     * The base frequency from which the sweep will start from.\n     */\n    get: function () {\n      return this._baseFrequency;\n    },\n    set: function (baseFreq) {\n      this._baseFrequency = this.toFrequency(baseFreq);\n\n      this._setSweepRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoWah.prototype, \"sensitivity\", {\n    /**\n     * The sensitivity to control how responsive to the input signal the filter is.\n     */\n    get: function () {\n      return gainToDb(1 / this._inputBoost.gain.value);\n    },\n    set: function (sensitivity) {\n      this._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * sets the sweep range of the scaler\n   */\n\n  AutoWah.prototype._setSweepRange = function () {\n    this._sweepRange.min = this._baseFrequency;\n    this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n  };\n\n  AutoWah.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._follower.dispose();\n\n    this._sweepRange.dispose();\n\n    this._bandpass.dispose();\n\n    this._peaking.dispose();\n\n    this._inputBoost.dispose();\n\n    return this;\n  };\n\n  return AutoWah;\n}(Effect);\n\nexport { AutoWah };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\n\nvar Split =\n/** @class */\nfunction (_super) {\n  __extends(Split, _super);\n\n  function Split() {\n    var _this = _super.call(this, optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"])) || this;\n\n    _this.name = \"Split\";\n    var options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n    _this._splitter = _this.input = _this.output = _this.context.createChannelSplitter(options.channels);\n    _this._internalChannels = [_this._splitter];\n    return _this;\n  }\n\n  Split.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      channels: 2\n    });\n  };\n\n  Split.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._splitter.disconnect();\n\n    return this;\n  };\n\n  return Split;\n}(ToneAudioNode);\n\nexport { Split };","import { __extends } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\n/**\n * Chebyshev is a waveshaper which is good\n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones,\n * and order = 1 is no change.\n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * // create a new cheby\n * const cheby = new Tone.Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new Tone.MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\n\nvar Chebyshev =\n/** @class */\nfunction (_super) {\n  __extends(Chebyshev, _super);\n\n  function Chebyshev() {\n    var _this = _super.call(this, optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"])) || this;\n\n    _this.name = \"Chebyshev\";\n    var options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n    _this._shaper = new WaveShaper({\n      context: _this.context,\n      length: 4096\n    });\n    _this._order = options.order;\n\n    _this.connectEffect(_this._shaper);\n\n    _this.order = options.order;\n    _this.oversample = options.oversample;\n    return _this;\n  }\n\n  Chebyshev.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      order: 1,\n      oversample: \"none\"\n    });\n  };\n  /**\n   * get the coefficient for that degree\n   * @param  x the x value\n   * @param  degree\n   * @param  memo memoize the computed value. this speeds up computation greatly.\n   */\n\n\n  Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n    if (memo.has(degree)) {\n      return memo.get(degree);\n    } else if (degree === 0) {\n      memo.set(degree, 0);\n    } else if (degree === 1) {\n      memo.set(degree, x);\n    } else {\n      memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n    }\n\n    return memo.get(degree);\n  };\n\n  Object.defineProperty(Chebyshev.prototype, \"order\", {\n    /**\n     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming\n     * signal through a Tone.WaveShaper. The equations are in the form:\n     * ```\n     * order 2: 2x^2 + 1\n     * order 3: 4x^3 + 3x\n     * ```\n     * @min 1\n     * @max 100\n     */\n    get: function () {\n      return this._order;\n    },\n    set: function (order) {\n      var _this = this;\n\n      this._order = order;\n\n      this._shaper.setMap(function (x) {\n        return _this._getCoefficient(x, order, new Map());\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chebyshev.prototype, \"oversample\", {\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get: function () {\n      return this._shaper.oversample;\n    },\n    set: function (oversampling) {\n      this._shaper.oversample = oversampling;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Chebyshev.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._shaper.dispose();\n\n    return this;\n  };\n\n  return Chebyshev;\n}(Effect);\n\nexport { Chebyshev };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\n\nvar Merge =\n/** @class */\nfunction (_super) {\n  __extends(Merge, _super);\n\n  function Merge() {\n    var _this = _super.call(this, optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"])) || this;\n\n    _this.name = \"Merge\";\n    var options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n    _this._merger = _this.output = _this.input = _this.context.createChannelMerger(options.channels);\n    return _this;\n  }\n\n  Merge.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      channels: 2\n    });\n  };\n\n  Merge.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._merger.disconnect();\n\n    return this;\n  };\n\n  return Merge;\n}(ToneAudioNode);\n\nexport { Merge };","import { __extends, __read, __spread } from \"tslib\";\nimport { connect, connectSeries, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for Stereo effects.\n */\n\nvar StereoEffect =\n/** @class */\nfunction (_super) {\n  __extends(StereoEffect, _super);\n\n  function StereoEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"StereoEffect\";\n    _this.input = new Gain({\n      context: _this.context\n    }); // force mono sources to be stereo\n\n    _this.input.channelCount = 2;\n    _this.input.channelCountMode = \"explicit\";\n    _this._dryWet = _this.output = new CrossFade({\n      context: _this.context,\n      fade: options.wet\n    });\n    _this.wet = _this._dryWet.fade;\n    _this._split = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._merge = new Merge({\n      context: _this.context,\n      channels: 2\n    }); // connections\n\n    _this.input.connect(_this._split); // dry wet connections\n\n\n    _this.input.connect(_this._dryWet.a);\n\n    _this._merge.connect(_this._dryWet.b);\n\n    readOnly(_this, [\"wet\"]);\n    return _this;\n  }\n  /**\n   * Connect the left part of the effect\n   */\n\n\n  StereoEffect.prototype.connectEffectLeft = function () {\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    this._split.connect(nodes[0], 0, 0);\n\n    connectSeries.apply(void 0, __spread(nodes));\n    connect(nodes[nodes.length - 1], this._merge, 0, 0);\n  };\n  /**\n   * Connect the right part of the effect\n   */\n\n\n  StereoEffect.prototype.connectEffectRight = function () {\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    this._split.connect(nodes[0], 1, 0);\n\n    connectSeries.apply(void 0, __spread(nodes));\n    connect(nodes[nodes.length - 1], this._merge, 0, 1);\n  };\n\n  StereoEffect.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  };\n\n  StereoEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dryWet.dispose();\n\n    this._split.dispose();\n\n    this._merge.dispose();\n\n    return this;\n  };\n\n  return StereoEffect;\n}(ToneAudioNode);\n\nexport { StereoEffect };","import { __extends } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Just like a stereo feedback effect, but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +---+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit\n * +-->                          +----->        +---->                          +---+\n * |                                                                                |\n * +--------------------------------+ feedbackR <-----------------------------------+\n * ```\n */\n\nvar StereoFeedbackEffect =\n/** @class */\nfunction (_super) {\n  __extends(StereoFeedbackEffect, _super);\n\n  function StereoFeedbackEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.feedback = new Signal({\n      context: _this.context,\n      value: options.feedback,\n      units: \"normalRange\"\n    });\n    _this._feedbackL = new Gain({\n      context: _this.context\n    });\n    _this._feedbackR = new Gain({\n      context: _this.context\n    });\n    _this._feedbackSplit = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._feedbackMerge = new Merge({\n      context: _this.context,\n      channels: 2\n    });\n\n    _this._merge.connect(_this._feedbackSplit);\n\n    _this._feedbackMerge.connect(_this._split); // the left output connected to the left input\n\n\n    _this._feedbackSplit.connect(_this._feedbackL, 0, 0);\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 0); // the right output connected to the right input\n\n\n    _this._feedbackSplit.connect(_this._feedbackR, 1, 0);\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 1); // the feedback control\n\n\n    _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);\n\n    readOnly(_this, [\"feedback\"]);\n    return _this;\n  }\n\n  StereoFeedbackEffect.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      feedback: 0.5\n    });\n  };\n\n  StereoFeedbackEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.feedback.dispose();\n\n    this._feedbackL.dispose();\n\n    this._feedbackR.dispose();\n\n    this._feedbackSplit.dispose();\n\n    this._feedbackMerge.dispose();\n\n    return this;\n  };\n\n  return StereoFeedbackEffect;\n}(StereoEffect);\n\nexport { StereoFeedbackEffect };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\n\nvar FeedbackEffect =\n/** @class */\nfunction (_super) {\n  __extends(FeedbackEffect, _super);\n\n  function FeedbackEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"FeedbackEffect\";\n    _this._feedbackGain = new Gain({\n      context: _this.context,\n      gain: options.feedback,\n      units: \"normalRange\"\n    });\n    _this.feedback = _this._feedbackGain.gain;\n    readOnly(_this, \"feedback\"); // the feedback loop\n\n    _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n\n    return _this;\n  }\n\n  FeedbackEffect.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      feedback: 0.125\n    });\n  };\n\n  FeedbackEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._feedbackGain.dispose();\n\n    this.feedback.dispose();\n    return this;\n  };\n\n  return FeedbackEffect;\n}(Effect);\n\nexport { FeedbackEffect };","import { __extends } from \"tslib\";\nimport { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5);\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\n\nvar Chorus =\n/** @class */\nfunction (_super) {\n  __extends(Chorus, _super);\n\n  function Chorus() {\n    var _this = _super.call(this, optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"])) || this;\n\n    _this.name = \"Chorus\";\n    var options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n    _this._depth = options.depth;\n    _this._delayTime = options.delayTime / 1000;\n    _this._lfoL = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1,\n      phase: 180\n    });\n    _this._delayNodeL = new Delay({\n      context: _this.context\n    });\n    _this._delayNodeR = new Delay({\n      context: _this.context\n    });\n    _this.frequency = _this._lfoL.frequency;\n    readOnly(_this, [\"frequency\"]); // have one LFO frequency control the other\n\n    _this._lfoL.frequency.connect(_this._lfoR.frequency); // connections\n\n\n    _this.connectEffectLeft(_this._delayNodeL);\n\n    _this.connectEffectRight(_this._delayNodeR); // lfo setup\n\n\n    _this._lfoL.connect(_this._delayNodeL.delayTime);\n\n    _this._lfoR.connect(_this._delayNodeR.delayTime); // set the initial values\n\n\n    _this.depth = _this._depth;\n    _this.type = options.type;\n    _this.spread = options.spread;\n    return _this;\n  }\n\n  Chorus.getDefaults = function () {\n    return Object.assign(StereoFeedbackEffect.getDefaults(), {\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180,\n      feedback: 0,\n      wet: 0.5\n    });\n  };\n\n  Object.defineProperty(Chorus.prototype, \"depth\", {\n    /**\n     * The depth of the effect. A depth of 1 makes the delayTime\n     * modulate between 0 and 2*delayTime (centered around the delayTime).\n     */\n    get: function () {\n      return this._depth;\n    },\n    set: function (depth) {\n      this._depth = depth;\n      var deviation = this._delayTime * depth;\n      this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n      this._lfoL.max = this._delayTime + deviation;\n      this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n      this._lfoR.max = this._delayTime + deviation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chorus.prototype, \"delayTime\", {\n    /**\n     * The delayTime in milliseconds of the chorus. A larger delayTime\n     * will give a more pronounced effect. Nominal range a delayTime\n     * is between 2 and 20ms.\n     */\n    get: function () {\n      return this._delayTime * 1000;\n    },\n    set: function (delayTime) {\n      this._delayTime = delayTime / 1000;\n      this.depth = this._depth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chorus.prototype, \"type\", {\n    /**\n     * The oscillator type of the LFO.\n     */\n    get: function () {\n      return this._lfoL.type;\n    },\n    set: function (type) {\n      this._lfoL.type = type;\n      this._lfoR.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chorus.prototype, \"spread\", {\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get: function () {\n      return this._lfoR.phase - this._lfoL.phase;\n    },\n    set: function (spread) {\n      this._lfoL.phase = 90 - spread / 2;\n      this._lfoR.phase = spread / 2 + 90;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the effect.\n   */\n\n  Chorus.prototype.start = function (time) {\n    this._lfoL.start(time);\n\n    this._lfoR.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the lfo\n   */\n\n\n  Chorus.prototype.stop = function (time) {\n    this._lfoL.stop(time);\n\n    this._lfoR.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the filter to the transport. See [[LFO.sync]]\n   */\n\n\n  Chorus.prototype.sync = function () {\n    this._lfoL.sync();\n\n    this._lfoR.sync();\n\n    return this;\n  };\n  /**\n   * Unsync the filter from the transport.\n   */\n\n\n  Chorus.prototype.unsync = function () {\n    this._lfoL.unsync();\n\n    this._lfoR.unsync();\n\n    return this;\n  };\n\n  Chorus.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._delayNodeL.dispose();\n\n    this._delayNodeR.dispose();\n\n    this.frequency.dispose();\n    return this;\n  };\n\n  return Chorus;\n}(StereoFeedbackEffect);\n\nexport { Chorus };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect } from \"./Effect\";\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\n\nvar Distortion =\n/** @class */\nfunction (_super) {\n  __extends(Distortion, _super);\n\n  function Distortion() {\n    var _this = _super.call(this, optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"])) || this;\n\n    _this.name = \"Distortion\";\n    var options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n    _this._shaper = new WaveShaper({\n      context: _this.context,\n      length: 4096\n    });\n    _this._distortion = options.distortion;\n\n    _this.connectEffect(_this._shaper);\n\n    _this.distortion = options.distortion;\n    _this.oversample = options.oversample;\n    return _this;\n  }\n\n  Distortion.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      distortion: 0.4,\n      oversample: \"none\"\n    });\n  };\n\n  Object.defineProperty(Distortion.prototype, \"distortion\", {\n    /**\n     * The amount of distortion. Nominal range is between 0 and 1.\n     */\n    get: function () {\n      return this._distortion;\n    },\n    set: function (amount) {\n      this._distortion = amount;\n      var k = amount * 100;\n      var deg = Math.PI / 180;\n\n      this._shaper.setMap(function (x) {\n        if (Math.abs(x) < 0.001) {\n          // should output 0 when input is 0\n          return 0;\n        } else {\n          return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n        }\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Distortion.prototype, \"oversample\", {\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get: function () {\n      return this._shaper.oversample;\n    },\n    set: function (oversampling) {\n      this._shaper.oversample = oversampling;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Distortion.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._shaper.dispose();\n\n    return this;\n  };\n\n  return Distortion;\n}(Effect);\n\nexport { Distortion };","import { __extends, __read, __spread } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\n\nvar PhaseShiftAllpass =\n/** @class */\nfunction (_super) {\n  __extends(PhaseShiftAllpass, _super);\n\n  function PhaseShiftAllpass(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"PhaseShiftAllpass\";\n    _this.input = new Gain({\n      context: _this.context\n    });\n    /**\n     * The phase shifted output\n     */\n\n    _this.output = new Gain({\n      context: _this.context\n    });\n    /**\n     * The PhaseShifted allpass output\n     */\n\n    _this.offset90 = new Gain({\n      context: _this.context\n    });\n    var allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n    var allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n    _this._bank0 = _this._createAllPassFilterBank(allpassBank1Values);\n    _this._bank1 = _this._createAllPassFilterBank(allpassBank2Values);\n    _this._oneSampleDelay = _this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]); // connect Allpass filter banks\n\n    connectSeries.apply(void 0, __spread([_this.input], _this._bank0, [_this._oneSampleDelay, _this.output]));\n    connectSeries.apply(void 0, __spread([_this.input], _this._bank1, [_this.offset90]));\n    return _this;\n  }\n  /**\n   * Create all of the IIR filters from an array of values using the coefficient calculation.\n   */\n\n\n  PhaseShiftAllpass.prototype._createAllPassFilterBank = function (bankValues) {\n    var _this = this;\n\n    var nodes = bankValues.map(function (value) {\n      var coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n      return _this.context.createIIRFilter(coefficients[0], coefficients[1]);\n    });\n    return nodes;\n  };\n\n  PhaseShiftAllpass.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n    this.offset90.dispose();\n\n    this._bank0.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this._bank1.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this._oneSampleDelay.disconnect();\n\n    return this;\n  };\n\n  return PhaseShiftAllpass;\n}(ToneAudioNode);\n\nexport { PhaseShiftAllpass };","import { __extends } from \"tslib\";\nimport { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\n\nvar FeedbackDelay =\n/** @class */\nfunction (_super) {\n  __extends(FeedbackDelay, _super);\n\n  function FeedbackDelay() {\n    var _this = _super.call(this, optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n\n    _this.name = \"FeedbackDelay\";\n    var options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: options.delayTime,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = _this._delayNode.delayTime; // connect it up\n\n    _this.connectEffect(_this._delayNode);\n\n    readOnly(_this, \"delayTime\");\n    return _this;\n  }\n\n  FeedbackDelay.getDefaults = function () {\n    return Object.assign(FeedbackEffect.getDefaults(), {\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n  };\n\n  FeedbackDelay.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._delayNode.dispose();\n\n    this.delayTime.dispose();\n    return this;\n  };\n\n  return FeedbackDelay;\n}(FeedbackEffect);\n\nexport { FeedbackDelay };","import { __extends, __read, __spread } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\n\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\n\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n * @example\n * const freeverb = new Tone.Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new Tone.NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\n\nvar Freeverb =\n/** @class */\nfunction (_super) {\n  __extends(Freeverb, _super);\n\n  function Freeverb() {\n    var _this = _super.call(this, optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"])) || this;\n\n    _this.name = \"Freeverb\";\n    /**\n     * the comb filters\n     */\n\n    _this._combFilters = [];\n    /**\n     * the allpass filters on the left\n     */\n\n    _this._allpassFiltersL = [];\n    /**\n     * the allpass filters on the right\n     */\n\n    _this._allpassFiltersR = [];\n    var options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n    _this.roomSize = new Signal({\n      context: _this.context,\n      value: options.roomSize,\n      units: \"normalRange\"\n    }); // make the allpass filters on the right\n\n    _this._allpassFiltersL = allpassFilterFrequencies.map(function (freq) {\n      var allpassL = _this.context.createBiquadFilter();\n\n      allpassL.type = \"allpass\";\n      allpassL.frequency.value = freq;\n      return allpassL;\n    }); // make the allpass filters on the left\n\n    _this._allpassFiltersR = allpassFilterFrequencies.map(function (freq) {\n      var allpassR = _this.context.createBiquadFilter();\n\n      allpassR.type = \"allpass\";\n      allpassR.frequency.value = freq;\n      return allpassR;\n    }); // make the comb filters\n\n    _this._combFilters = combFilterTunings.map(function (delayTime, index) {\n      var lfpf = new LowpassCombFilter({\n        context: _this.context,\n        dampening: options.dampening,\n        delayTime: delayTime\n      });\n\n      if (index < combFilterTunings.length / 2) {\n        _this.connectEffectLeft.apply(_this, __spread([lfpf], _this._allpassFiltersL));\n      } else {\n        _this.connectEffectRight.apply(_this, __spread([lfpf], _this._allpassFiltersR));\n      }\n\n      _this.roomSize.connect(lfpf.resonance);\n\n      return lfpf;\n    });\n    readOnly(_this, [\"roomSize\"]);\n    return _this;\n  }\n\n  Freeverb.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      roomSize: 0.7,\n      dampening: 3000\n    });\n  };\n\n  Object.defineProperty(Freeverb.prototype, \"dampening\", {\n    /**\n     * The amount of dampening of the reverberant signal.\n     */\n    get: function () {\n      return this._combFilters[0].dampening;\n    },\n    set: function (d) {\n      this._combFilters.forEach(function (c) {\n        return c.dampening = d;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Freeverb.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._allpassFiltersL.forEach(function (al) {\n      return al.disconnect();\n    });\n\n    this._allpassFiltersR.forEach(function (ar) {\n      return ar.disconnect();\n    });\n\n    this._combFilters.forEach(function (cf) {\n      return cf.dispose();\n    });\n\n    this.roomSize.dispose();\n    return this;\n  };\n\n  return Freeverb;\n}(StereoEffect);\n\nexport { Freeverb };","import { __extends } from \"tslib\";\nimport { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * const input = new Tone.Oscillator(230, \"sawtooth\").start();\n * const shift = new Tone.FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\n\nvar FrequencyShifter =\n/** @class */\nfunction (_super) {\n  __extends(FrequencyShifter, _super);\n\n  function FrequencyShifter() {\n    var _this = _super.call(this, optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"FrequencyShifter\";\n    var options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency,\n      minValue: -_this.context.sampleRate / 2,\n      maxValue: _this.context.sampleRate / 2\n    });\n    _this._sine = new ToneOscillatorNode({\n      context: _this.context,\n      type: \"sine\"\n    });\n    _this._cosine = new Oscillator({\n      context: _this.context,\n      phase: -90,\n      type: \"sine\"\n    });\n    _this._sineMultiply = new Multiply({\n      context: _this.context\n    });\n    _this._cosineMultiply = new Multiply({\n      context: _this.context\n    });\n    _this._negate = new Negate({\n      context: _this.context\n    });\n    _this._add = new Add({\n      context: _this.context\n    });\n    _this._phaseShifter = new PhaseShiftAllpass({\n      context: _this.context\n    });\n\n    _this.effectSend.connect(_this._phaseShifter); // connect the carrier frequency signal to the two oscillators\n\n\n    _this.frequency.fan(_this._sine.frequency, _this._cosine.frequency);\n\n    _this._phaseShifter.offset90.connect(_this._cosineMultiply);\n\n    _this._cosine.connect(_this._cosineMultiply.factor);\n\n    _this._phaseShifter.connect(_this._sineMultiply);\n\n    _this._sine.connect(_this._sineMultiply.factor);\n\n    _this._sineMultiply.connect(_this._negate);\n\n    _this._cosineMultiply.connect(_this._add);\n\n    _this._negate.connect(_this._add.addend);\n\n    _this._add.connect(_this.effectReturn); // start the oscillators at the same time\n\n\n    var now = _this.immediate();\n\n    _this._sine.start(now);\n\n    _this._cosine.start(now);\n\n    return _this;\n  }\n\n  FrequencyShifter.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      frequency: 0\n    });\n  };\n\n  FrequencyShifter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n\n    this._add.dispose();\n\n    this._cosine.dispose();\n\n    this._cosineMultiply.dispose();\n\n    this._negate.dispose();\n\n    this._phaseShifter.dispose();\n\n    this._sine.dispose();\n\n    this._sineMultiply.dispose();\n\n    return this;\n  };\n\n  return FrequencyShifter;\n}(Effect);\n\nexport { FrequencyShifter };","import { __extends, __read, __spread } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * an array of the comb filter delay time values\n */\n\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n/**\n * the resonances of each of the comb filters\n */\n\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n/**\n * the allpass filter frequencies\n */\n\nvar allpassFilterFreqs = [347, 113, 37];\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n *\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\n\nvar JCReverb =\n/** @class */\nfunction (_super) {\n  __extends(JCReverb, _super);\n\n  function JCReverb() {\n    var _this = _super.call(this, optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"])) || this;\n\n    _this.name = \"JCReverb\";\n    /**\n     * a series of allpass filters\n     */\n\n    _this._allpassFilters = [];\n    /**\n     * parallel feedback comb filters\n     */\n\n    _this._feedbackCombFilters = [];\n    var options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n    _this.roomSize = new Signal({\n      context: _this.context,\n      value: options.roomSize,\n      units: \"normalRange\"\n    });\n    _this._scaleRoomSize = new Scale({\n      context: _this.context,\n      min: -0.733,\n      max: 0.197\n    }); // make the allpass filters\n\n    _this._allpassFilters = allpassFilterFreqs.map(function (freq) {\n      var allpass = _this.context.createBiquadFilter();\n\n      allpass.type = \"allpass\";\n      allpass.frequency.value = freq;\n      return allpass;\n    }); // and the comb filters\n\n    _this._feedbackCombFilters = combFilterDelayTimes.map(function (delayTime, index) {\n      var fbcf = new FeedbackCombFilter({\n        context: _this.context,\n        delayTime: delayTime\n      });\n\n      _this._scaleRoomSize.connect(fbcf.resonance);\n\n      fbcf.resonance.value = combFilterResonances[index];\n\n      if (index < combFilterDelayTimes.length / 2) {\n        _this.connectEffectLeft.apply(_this, __spread(_this._allpassFilters, [fbcf]));\n      } else {\n        _this.connectEffectRight.apply(_this, __spread(_this._allpassFilters, [fbcf]));\n      }\n\n      return fbcf;\n    }); // chain the allpass filters together\n\n    _this.roomSize.connect(_this._scaleRoomSize);\n\n    readOnly(_this, [\"roomSize\"]);\n    return _this;\n  }\n\n  JCReverb.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      roomSize: 0.5\n    });\n  };\n\n  JCReverb.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._allpassFilters.forEach(function (apf) {\n      return apf.disconnect();\n    });\n\n    this._feedbackCombFilters.forEach(function (fbcf) {\n      return fbcf.dispose();\n    });\n\n    this.roomSize.dispose();\n\n    this._scaleRoomSize.dispose();\n\n    return this;\n  };\n\n  return JCReverb;\n}(StereoEffect);\n\nexport { JCReverb };","import { __extends } from \"tslib\";\nimport { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\n\nvar StereoXFeedbackEffect =\n/** @class */\nfunction (_super) {\n  __extends(StereoXFeedbackEffect, _super);\n\n  function StereoXFeedbackEffect(options) {\n    var _this = _super.call(this, options) || this; // the left output connected to the right input\n\n\n    _this._feedbackL.disconnect();\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 1); // the left output connected to the right input\n\n\n    _this._feedbackR.disconnect();\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 0);\n\n    readOnly(_this, [\"feedback\"]);\n    return _this;\n  }\n\n  return StereoXFeedbackEffect;\n}(StereoFeedbackEffect);\n\nexport { StereoXFeedbackEffect };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n */\n\nvar MidSideSplit =\n/** @class */\nfunction (_super) {\n  __extends(MidSideSplit, _super);\n\n  function MidSideSplit() {\n    var _this = _super.call(this, optionsFromArguments(MidSideSplit.getDefaults(), arguments)) || this;\n\n    _this.name = \"MidSideSplit\";\n    _this._split = _this.input = new Split({\n      channels: 2,\n      context: _this.context\n    });\n    _this._midAdd = new Add({\n      context: _this.context\n    });\n    _this.mid = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._sideSubtract = new Subtract({\n      context: _this.context\n    });\n    _this.side = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n\n    _this._split.connect(_this._midAdd, 0);\n\n    _this._split.connect(_this._midAdd.addend, 1);\n\n    _this._split.connect(_this._sideSubtract, 0);\n\n    _this._split.connect(_this._sideSubtract.subtrahend, 1);\n\n    _this._midAdd.connect(_this.mid);\n\n    _this._sideSubtract.connect(_this.side);\n\n    return _this;\n  }\n\n  MidSideSplit.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._midAdd.dispose();\n\n    this._sideSubtract.dispose();\n\n    this._split.dispose();\n\n    return this;\n  };\n\n  return MidSideSplit;\n}(ToneAudioNode);\n\nexport { MidSideSplit };","import { __extends } from \"tslib\";\nimport { StereoXFeedbackEffect } from \"./StereoXFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\n\nvar PingPongDelay =\n/** @class */\nfunction (_super) {\n  __extends(PingPongDelay, _super);\n\n  function PingPongDelay() {\n    var _this = _super.call(this, optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n\n    _this.name = \"PingPongDelay\";\n    var options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._leftDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this._rightDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this._rightPreDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = new Signal({\n      context: _this.context,\n      units: \"time\",\n      value: options.delayTime\n    }); // connect it up\n\n    _this.connectEffectLeft(_this._leftDelay);\n\n    _this.connectEffectRight(_this._rightPreDelay, _this._rightDelay);\n\n    _this.delayTime.fan(_this._leftDelay.delayTime, _this._rightDelay.delayTime, _this._rightPreDelay.delayTime); // rearranged the feedback to be after the rightPreDelay\n\n\n    _this._feedbackL.disconnect();\n\n    _this._feedbackL.connect(_this._rightDelay);\n\n    readOnly(_this, [\"delayTime\"]);\n    return _this;\n  }\n\n  PingPongDelay.getDefaults = function () {\n    return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n  };\n\n  PingPongDelay.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._leftDelay.dispose();\n\n    this._rightDelay.dispose();\n\n    this._rightPreDelay.dispose();\n\n    this.delayTime.dispose();\n    return this;\n  };\n\n  return PingPongDelay;\n}(StereoXFeedbackEffect);\n\nexport { PingPongDelay };","import { __extends } from \"tslib\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\n\nvar PitchShift =\n/** @class */\nfunction (_super) {\n  __extends(PitchShift, _super);\n\n  function PitchShift() {\n    var _this = _super.call(this, optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"])) || this;\n\n    _this.name = \"PitchShift\";\n    var options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n    _this._frequency = new Signal({\n      context: _this.context\n    });\n    _this._delayA = new Delay({\n      maxDelay: 1,\n      context: _this.context\n    });\n    _this._lfoA = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 0.1,\n      type: \"sawtooth\"\n    }).connect(_this._delayA.delayTime);\n    _this._delayB = new Delay({\n      maxDelay: 1,\n      context: _this.context\n    });\n    _this._lfoB = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 0.1,\n      type: \"sawtooth\",\n      phase: 180\n    }).connect(_this._delayB.delayTime);\n    _this._crossFade = new CrossFade({\n      context: _this.context\n    });\n    _this._crossFadeLFO = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 1,\n      type: \"triangle\",\n      phase: 90\n    }).connect(_this._crossFade.fade);\n    _this._feedbackDelay = new Delay({\n      delayTime: options.delayTime,\n      context: _this.context\n    });\n    _this.delayTime = _this._feedbackDelay.delayTime;\n    readOnly(_this, \"delayTime\");\n    _this._pitch = options.pitch;\n    _this._windowSize = options.windowSize; // connect the two delay lines up\n\n    _this._delayA.connect(_this._crossFade.a);\n\n    _this._delayB.connect(_this._crossFade.b); // connect the frequency\n\n\n    _this._frequency.fan(_this._lfoA.frequency, _this._lfoB.frequency, _this._crossFadeLFO.frequency); // route the input\n\n\n    _this.effectSend.fan(_this._delayA, _this._delayB);\n\n    _this._crossFade.chain(_this._feedbackDelay, _this.effectReturn); // start the LFOs at the same time\n\n\n    var now = _this.now();\n\n    _this._lfoA.start(now);\n\n    _this._lfoB.start(now);\n\n    _this._crossFadeLFO.start(now); // set the initial value\n\n\n    _this.windowSize = _this._windowSize;\n    return _this;\n  }\n\n  PitchShift.getDefaults = function () {\n    return Object.assign(FeedbackEffect.getDefaults(), {\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n  };\n\n  Object.defineProperty(PitchShift.prototype, \"pitch\", {\n    /**\n     * Repitch the incoming signal by some interval (measured in semi-tones).\n     * @example\n     * const pitchShift = new Tone.PitchShift().toDestination();\n     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n     * pitchShift.pitch = -12; // down one octave\n     * pitchShift.pitch = 7; // up a fifth\n     */\n    get: function () {\n      return this._pitch;\n    },\n    set: function (interval) {\n      this._pitch = interval;\n      var factor = 0;\n\n      if (interval < 0) {\n        this._lfoA.min = 0;\n        this._lfoA.max = this._windowSize;\n        this._lfoB.min = 0;\n        this._lfoB.max = this._windowSize;\n        factor = intervalToFrequencyRatio(interval - 1) + 1;\n      } else {\n        this._lfoA.min = this._windowSize;\n        this._lfoA.max = 0;\n        this._lfoB.min = this._windowSize;\n        this._lfoB.max = 0;\n        factor = intervalToFrequencyRatio(interval) - 1;\n      }\n\n      this._frequency.value = factor * (1.2 / this._windowSize);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PitchShift.prototype, \"windowSize\", {\n    /**\n     * The window size corresponds roughly to the sample length in a looping sampler.\n     * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n     * signal, but larger values will result in smoother pitch shifting for larger intervals.\n     * A nominal range of 0.03 to 0.1 is recommended.\n     */\n    get: function () {\n      return this._windowSize;\n    },\n    set: function (size) {\n      this._windowSize = this.toSeconds(size);\n      this.pitch = this._pitch;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PitchShift.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._frequency.dispose();\n\n    this._delayA.dispose();\n\n    this._delayB.dispose();\n\n    this._lfoA.dispose();\n\n    this._lfoB.dispose();\n\n    this._crossFade.dispose();\n\n    this._crossFadeLFO.dispose();\n\n    this._feedbackDelay.dispose();\n\n    return this;\n  };\n\n  return PitchShift;\n}(FeedbackEffect);\n\nexport { PitchShift };","import { __extends, __read, __spread } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\n\nvar Phaser =\n/** @class */\nfunction (_super) {\n  __extends(Phaser, _super);\n\n  function Phaser() {\n    var _this = _super.call(this, optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"])) || this;\n\n    _this.name = \"Phaser\";\n    var options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n    _this._lfoL = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1,\n      phase: 180\n    });\n    _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n    _this._octaves = options.octaves;\n    _this.Q = new Signal({\n      context: _this.context,\n      value: options.Q,\n      units: \"positive\"\n    });\n    _this._filtersL = _this._makeFilters(options.stages, _this._lfoL);\n    _this._filtersR = _this._makeFilters(options.stages, _this._lfoR);\n    _this.frequency = _this._lfoL.frequency;\n    _this.frequency.value = options.frequency; // connect them up\n\n    _this.connectEffectLeft.apply(_this, __spread(_this._filtersL));\n\n    _this.connectEffectRight.apply(_this, __spread(_this._filtersR)); // control the frequency with one LFO\n\n\n    _this._lfoL.frequency.connect(_this._lfoR.frequency); // set the options\n\n\n    _this.baseFrequency = options.baseFrequency;\n    _this.octaves = options.octaves; // start the lfo\n\n    _this._lfoL.start();\n\n    _this._lfoR.start();\n\n    readOnly(_this, [\"frequency\", \"Q\"]);\n    return _this;\n  }\n\n  Phaser.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n  };\n\n  Phaser.prototype._makeFilters = function (stages, connectToFreq) {\n    var filters = []; // make all the filters\n\n    for (var i = 0; i < stages; i++) {\n      var filter = this.context.createBiquadFilter();\n      filter.type = \"allpass\";\n      this.Q.connect(filter.Q);\n      connectToFreq.connect(filter.frequency);\n      filters.push(filter);\n    }\n\n    return filters;\n  };\n\n  Object.defineProperty(Phaser.prototype, \"octaves\", {\n    /**\n     * The number of octaves the phase goes above the baseFrequency\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (octaves) {\n      this._octaves = octaves;\n      var max = this._baseFrequency * Math.pow(2, octaves);\n      this._lfoL.max = max;\n      this._lfoR.max = max;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Phaser.prototype, \"baseFrequency\", {\n    /**\n     * The the base frequency of the filters.\n     */\n    get: function () {\n      return this._baseFrequency;\n    },\n    set: function (freq) {\n      this._baseFrequency = this.toFrequency(freq);\n      this._lfoL.min = this._baseFrequency;\n      this._lfoR.min = this._baseFrequency;\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Phaser.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.Q.dispose();\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._filtersL.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this._filtersR.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this.frequency.dispose();\n    return this;\n  };\n\n  return Phaser;\n}(StereoEffect);\n\nexport { Phaser };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound.\n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n * @category Effect\n */\n\nvar Reverb =\n/** @class */\nfunction (_super) {\n  __extends(Reverb, _super);\n\n  function Reverb() {\n    var _this = _super.call(this, optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"])) || this;\n\n    _this.name = \"Reverb\";\n    /**\n     * Convolver node\n     */\n\n    _this._convolver = _this.context.createConvolver();\n    /**\n     * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n     * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n     * before the IR is generated with the latest values.\n     */\n\n    _this.ready = Promise.resolve();\n    var options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n    _this._decay = options.decay;\n    _this._preDelay = options.preDelay;\n\n    _this.generate();\n\n    _this.connectEffect(_this._convolver);\n\n    return _this;\n  }\n\n  Reverb.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      decay: 1.5,\n      preDelay: 0.01\n    });\n  };\n\n  Object.defineProperty(Reverb.prototype, \"decay\", {\n    /**\n     * The duration of the reverb.\n     */\n    get: function () {\n      return this._decay;\n    },\n    set: function (time) {\n      time = this.toSeconds(time);\n      assertRange(time, 0.001);\n      this._decay = time;\n      this.generate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reverb.prototype, \"preDelay\", {\n    /**\n     * The amount of time before the reverb is fully ramped in.\n     */\n    get: function () {\n      return this._preDelay;\n    },\n    set: function (time) {\n      time = this.toSeconds(time);\n      assertRange(time, 0);\n      this._preDelay = time;\n      this.generate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Generate the Impulse Response. Returns a promise while the IR is being generated.\n   * @return Promise which returns this object.\n   */\n\n  Reverb.prototype.generate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var previousReady, context, noiseL, noiseR, merge, gainNode, renderPromise, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            previousReady = this.ready;\n            context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n            noiseL = new Noise({\n              context: context\n            });\n            noiseR = new Noise({\n              context: context\n            });\n            merge = new Merge({\n              context: context\n            });\n            noiseL.connect(merge, 0, 0);\n            noiseR.connect(merge, 0, 1);\n            gainNode = new Gain({\n              context: context\n            }).toDestination();\n            merge.connect(gainNode);\n            noiseL.start(0);\n            noiseR.start(0); // predelay\n\n            gainNode.gain.setValueAtTime(0, 0);\n            gainNode.gain.setValueAtTime(1, this._preDelay); // decay\n\n            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n            renderPromise = context.render();\n            this.ready = renderPromise.then(noOp); // wait for the previous `ready` to resolve\n\n            return [4\n            /*yield*/\n            , previousReady];\n\n          case 1:\n            // wait for the previous `ready` to resolve\n            _b.sent(); // set the buffer\n\n\n            _a = this._convolver;\n            return [4\n            /*yield*/\n            , renderPromise];\n\n          case 2:\n            // set the buffer\n            _a.buffer = _b.sent().get();\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  Reverb.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._convolver.disconnect();\n\n    return this;\n  };\n\n  return Reverb;\n}(Effect);\n\nexport { Reverb };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideMerge]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ\n * ```\n */\n\nvar MidSideMerge =\n/** @class */\nfunction (_super) {\n  __extends(MidSideMerge, _super);\n\n  function MidSideMerge() {\n    var _this = _super.call(this, optionsFromArguments(MidSideMerge.getDefaults(), arguments)) || this;\n\n    _this.name = \"MidSideMerge\";\n    _this.mid = new Gain({\n      context: _this.context\n    });\n    _this.side = new Gain({\n      context: _this.context\n    });\n    _this._left = new Add({\n      context: _this.context\n    });\n    _this._leftMult = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._right = new Subtract({\n      context: _this.context\n    });\n    _this._rightMult = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._merge = _this.output = new Merge({\n      context: _this.context\n    });\n\n    _this.mid.fan(_this._left);\n\n    _this.side.connect(_this._left.addend);\n\n    _this.mid.connect(_this._right);\n\n    _this.side.connect(_this._right.subtrahend);\n\n    _this._left.connect(_this._leftMult);\n\n    _this._right.connect(_this._rightMult);\n\n    _this._leftMult.connect(_this._merge, 0, 0);\n\n    _this._rightMult.connect(_this._merge, 0, 1);\n\n    return _this;\n  }\n\n  MidSideMerge.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._leftMult.dispose();\n\n    this._rightMult.dispose();\n\n    this._left.dispose();\n\n    this._right.dispose();\n\n    return this;\n  };\n\n  return MidSideMerge;\n}(ToneAudioNode);\n\nexport { MidSideMerge };","import { __extends, __read, __spread } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n */\n\nvar MidSideEffect =\n/** @class */\nfunction (_super) {\n  __extends(MidSideEffect, _super);\n\n  function MidSideEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"MidSideEffect\";\n    _this._midSideMerge = new MidSideMerge({\n      context: _this.context\n    });\n    _this._midSideSplit = new MidSideSplit({\n      context: _this.context\n    });\n    _this._midSend = _this._midSideSplit.mid;\n    _this._sideSend = _this._midSideSplit.side;\n    _this._midReturn = _this._midSideMerge.mid;\n    _this._sideReturn = _this._midSideMerge.side; // the connections\n\n    _this.effectSend.connect(_this._midSideSplit);\n\n    _this._midSideMerge.connect(_this.effectReturn);\n\n    return _this;\n  }\n  /**\n   * Connect the mid chain of the effect\n   */\n\n\n  MidSideEffect.prototype.connectEffectMid = function () {\n    var _a;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    (_a = this._midSend).chain.apply(_a, __spread(nodes, [this._midReturn]));\n  };\n  /**\n   * Connect the side chain of the effect\n   */\n\n\n  MidSideEffect.prototype.connectEffectSide = function () {\n    var _a;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    (_a = this._sideSend).chain.apply(_a, __spread(nodes, [this._sideReturn]));\n  };\n\n  MidSideEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._midSideSplit.dispose();\n\n    this._midSideMerge.dispose();\n\n    this._midSend.dispose();\n\n    this._sideSend.dispose();\n\n    this._midReturn.dispose();\n\n    this._sideReturn.dispose();\n\n    return this;\n  };\n\n  return MidSideEffect;\n}(Effect);\n\nexport { MidSideEffect };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\n\nvar Analyser =\n/** @class */\nfunction (_super) {\n  __extends(Analyser, _super);\n\n  function Analyser() {\n    var _this = _super.call(this, optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"])) || this;\n\n    _this.name = \"Analyser\";\n    /**\n     * The analyser node.\n     */\n\n    _this._analysers = [];\n    /**\n     * The buffer that the FFT data is written to\n     */\n\n    _this._buffers = [];\n    var options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n    _this.input = _this.output = _this._gain = new Gain({\n      context: _this.context\n    });\n    _this._split = new Split({\n      context: _this.context,\n      channels: options.channels\n    });\n\n    _this.input.connect(_this._split);\n\n    assertRange(options.channels, 1); // create the analysers\n\n    for (var channel = 0; channel < options.channels; channel++) {\n      _this._analysers[channel] = _this.context.createAnalyser();\n\n      _this._split.connect(_this._analysers[channel], channel, 0);\n    } // set the values initially\n\n\n    _this.size = options.size;\n    _this.type = options.type;\n    return _this;\n  }\n\n  Analyser.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      size: 1024,\n      smoothing: 0.8,\n      type: \"fft\",\n      channels: 1\n    });\n  };\n  /**\n   * Run the analysis given the current settings. If [[channels]] = 1,\n   * it will return a Float32Array. If [[channels]] > 1, it will\n   * return an array of Float32Arrays where each index in the array\n   * represents the analysis done on a channel.\n   */\n\n\n  Analyser.prototype.getValue = function () {\n    var _this = this;\n\n    this._analysers.forEach(function (analyser, index) {\n      var buffer = _this._buffers[index];\n\n      if (_this._type === \"fft\") {\n        analyser.getFloatFrequencyData(buffer);\n      } else if (_this._type === \"waveform\") {\n        analyser.getFloatTimeDomainData(buffer);\n      }\n    });\n\n    if (this.channels === 1) {\n      return this._buffers[0];\n    } else {\n      return this._buffers;\n    }\n  };\n\n  Object.defineProperty(Analyser.prototype, \"size\", {\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     */\n    get: function () {\n      return this._analysers[0].frequencyBinCount;\n    },\n    set: function (size) {\n      var _this = this;\n\n      this._analysers.forEach(function (analyser, index) {\n        analyser.fftSize = size * 2;\n        _this._buffers[index] = new Float32Array(size);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Analyser.prototype, \"channels\", {\n    /**\n     * The number of channels the analyser does the analysis on. Channel\n     * separation is done using [[Split]]\n     */\n    get: function () {\n      return this._analysers.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Analyser.prototype, \"type\", {\n    /**\n     * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      assert(type === \"waveform\" || type === \"fft\", \"Analyser: invalid type: \" + type);\n      this._type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Analyser.prototype, \"smoothing\", {\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get: function () {\n      return this._analysers[0].smoothingTimeConstant;\n    },\n    set: function (val) {\n      this._analysers.forEach(function (a) {\n        return a.smoothingTimeConstant = val;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  Analyser.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analysers.forEach(function (a) {\n      return a.disconnect();\n    });\n\n    this._split.dispose();\n\n    this._gain.dispose();\n\n    return this;\n  };\n\n  return Analyser;\n}(ToneAudioNode);\n\nexport { Analyser };","import { __extends } from \"tslib\";\nimport { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\n\nvar StereoWidener =\n/** @class */\nfunction (_super) {\n  __extends(StereoWidener, _super);\n\n  function StereoWidener() {\n    var _this = _super.call(this, optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"])) || this;\n\n    _this.name = \"StereoWidener\";\n    var options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n    _this.width = new Signal({\n      context: _this.context,\n      value: options.width,\n      units: \"normalRange\"\n    });\n    readOnly(_this, [\"width\"]);\n    _this._twoTimesWidthMid = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._twoTimesWidthSide = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._midMult = new Multiply({\n      context: _this.context\n    });\n\n    _this._twoTimesWidthMid.connect(_this._midMult.factor);\n\n    _this.connectEffectMid(_this._midMult);\n\n    _this._oneMinusWidth = new Subtract({\n      context: _this.context\n    });\n\n    _this._oneMinusWidth.connect(_this._twoTimesWidthMid);\n\n    connect(_this.context.getConstant(1), _this._oneMinusWidth);\n\n    _this.width.connect(_this._oneMinusWidth.subtrahend);\n\n    _this._sideMult = new Multiply({\n      context: _this.context\n    });\n\n    _this.width.connect(_this._twoTimesWidthSide);\n\n    _this._twoTimesWidthSide.connect(_this._sideMult.factor);\n\n    _this.connectEffectSide(_this._sideMult);\n\n    return _this;\n  }\n\n  StereoWidener.getDefaults = function () {\n    return Object.assign(MidSideEffect.getDefaults(), {\n      width: 0.5\n    });\n  };\n\n  StereoWidener.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.width.dispose();\n\n    this._midMult.dispose();\n\n    this._sideMult.dispose();\n\n    this._twoTimesWidthMid.dispose();\n\n    this._twoTimesWidthSide.dispose();\n\n    this._oneMinusWidth.dispose();\n\n    return this;\n  };\n\n  return StereoWidener;\n}(MidSideEffect);\n\nexport { StereoWidener };","import { __extends } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * // create a tremolo and start it's LFO\n * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Tone.Oscillator().connect(tremolo).start();\n *\n * @category Effect\n */\n\nvar Tremolo =\n/** @class */\nfunction (_super) {\n  __extends(Tremolo, _super);\n\n  function Tremolo() {\n    var _this = _super.call(this, optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"])) || this;\n\n    _this.name = \"Tremolo\";\n    var options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    _this._lfoL = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 1,\n      max: 0\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 1,\n      max: 0\n    });\n    _this._amplitudeL = new Gain({\n      context: _this.context\n    });\n    _this._amplitudeR = new Gain({\n      context: _this.context\n    });\n    _this.frequency = new Signal({\n      context: _this.context,\n      value: options.frequency,\n      units: \"frequency\"\n    });\n    _this.depth = new Signal({\n      context: _this.context,\n      value: options.depth,\n      units: \"normalRange\"\n    });\n    readOnly(_this, [\"frequency\", \"depth\"]);\n\n    _this.connectEffectLeft(_this._amplitudeL);\n\n    _this.connectEffectRight(_this._amplitudeR);\n\n    _this._lfoL.connect(_this._amplitudeL.gain);\n\n    _this._lfoR.connect(_this._amplitudeR.gain);\n\n    _this.frequency.fan(_this._lfoL.frequency, _this._lfoR.frequency);\n\n    _this.depth.fan(_this._lfoR.amplitude, _this._lfoL.amplitude);\n\n    _this.spread = options.spread;\n    return _this;\n  }\n\n  Tremolo.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n  };\n  /**\n   * Start the tremolo.\n   */\n\n\n  Tremolo.prototype.start = function (time) {\n    this._lfoL.start(time);\n\n    this._lfoR.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the tremolo.\n   */\n\n\n  Tremolo.prototype.stop = function (time) {\n    this._lfoL.stop(time);\n\n    this._lfoR.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the effect to the transport.\n   */\n\n\n  Tremolo.prototype.sync = function () {\n    this._lfoL.sync();\n\n    this._lfoR.sync();\n\n    this.context.transport.syncSignal(this.frequency);\n    return this;\n  };\n  /**\n   * Unsync the filter from the transport\n   */\n\n\n  Tremolo.prototype.unsync = function () {\n    this._lfoL.unsync();\n\n    this._lfoR.unsync();\n\n    this.context.transport.unsyncSignal(this.frequency);\n    return this;\n  };\n\n  Object.defineProperty(Tremolo.prototype, \"type\", {\n    /**\n     * The oscillator type.\n     */\n    get: function () {\n      return this._lfoL.type;\n    },\n    set: function (type) {\n      this._lfoL.type = type;\n      this._lfoR.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Tremolo.prototype, \"spread\", {\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get: function () {\n      return this._lfoR.phase - this._lfoL.phase; // 180\n    },\n    set: function (spread) {\n      this._lfoL.phase = 90 - spread / 2;\n      this._lfoR.phase = spread / 2 + 90;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Tremolo.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._amplitudeL.dispose();\n\n    this._amplitudeR.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  };\n\n  return Tremolo;\n}(StereoEffect);\n\nexport { Tremolo };","import { __extends } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\n\nvar Vibrato =\n/** @class */\nfunction (_super) {\n  __extends(Vibrato, _super);\n\n  function Vibrato() {\n    var _this = _super.call(this, optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"])) || this;\n\n    _this.name = \"Vibrato\";\n    var options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    _this._lfo = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n\n    }).start().connect(_this._delayNode.delayTime);\n    _this.frequency = _this._lfo.frequency;\n    _this.depth = _this._lfo.amplitude;\n    _this.depth.value = options.depth;\n    readOnly(_this, [\"frequency\", \"depth\"]);\n\n    _this.effectSend.chain(_this._delayNode, _this.effectReturn);\n\n    return _this;\n  }\n\n  Vibrato.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n  };\n\n  Object.defineProperty(Vibrato.prototype, \"type\", {\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    get: function () {\n      return this._lfo.type;\n    },\n    set: function (type) {\n      this._lfo.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Vibrato.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._delayNode.dispose();\n\n    this._lfo.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  };\n\n  return Vibrato;\n}(Effect);\n\nexport { Vibrato };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\n\nvar MeterBase =\n/** @class */\nfunction (_super) {\n  __extends(MeterBase, _super);\n\n  function MeterBase() {\n    var _this = _super.call(this, optionsFromArguments(MeterBase.getDefaults(), arguments)) || this;\n\n    _this.name = \"MeterBase\";\n    _this.input = _this.output = _this._analyser = new Analyser({\n      context: _this.context,\n      size: 256,\n      type: \"waveform\"\n    });\n    return _this;\n  }\n\n  MeterBase.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analyser.dispose();\n\n    return this;\n  };\n\n  return MeterBase;\n}(ToneAudioNode);\n\nexport { MeterBase };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\n\nvar Solo =\n/** @class */\nfunction (_super) {\n  __extends(Solo, _super);\n\n  function Solo() {\n    var _this = _super.call(this, optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"])) || this;\n\n    _this.name = \"Solo\";\n    var options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n    _this.input = _this.output = new Gain({\n      context: _this.context\n    });\n\n    if (!Solo._allSolos.has(_this.context)) {\n      Solo._allSolos.set(_this.context, new Set());\n    }\n\n    Solo._allSolos.get(_this.context).add(_this); // set initially\n\n\n    _this.solo = options.solo;\n    return _this;\n  }\n\n  Solo.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      solo: false\n    });\n  };\n\n  Object.defineProperty(Solo.prototype, \"solo\", {\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get: function () {\n      return this._isSoloed();\n    },\n    set: function (solo) {\n      if (solo) {\n        this._addSolo();\n      } else {\n        this._removeSolo();\n      }\n\n      Solo._allSolos.get(this.context).forEach(function (instance) {\n        return instance._updateSolo();\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Solo.prototype, \"muted\", {\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get: function () {\n      return this.input.gain.value === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add this to the soloed array\n   */\n\n  Solo.prototype._addSolo = function () {\n    if (!Solo._soloed.has(this.context)) {\n      Solo._soloed.set(this.context, new Set());\n    }\n\n    Solo._soloed.get(this.context).add(this);\n  };\n  /**\n   * Remove this from the soloed array\n   */\n\n\n  Solo.prototype._removeSolo = function () {\n    if (Solo._soloed.has(this.context)) {\n      Solo._soloed.get(this.context).delete(this);\n    }\n  };\n  /**\n   * Is this on the soloed array\n   */\n\n\n  Solo.prototype._isSoloed = function () {\n    return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n  };\n  /**\n   * Returns true if no one is soloed\n   */\n\n\n  Solo.prototype._noSolos = function () {\n    // either does not have any soloed added\n    return !Solo._soloed.has(this.context) || // or has a solo set but doesn't include any items\n    Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;\n  };\n  /**\n   * Solo the current instance and unsolo all other instances.\n   */\n\n\n  Solo.prototype._updateSolo = function () {\n    if (this._isSoloed()) {\n      this.input.gain.value = 1;\n    } else if (this._noSolos()) {\n      // no one is soloed\n      this.input.gain.value = 1;\n    } else {\n      this.input.gain.value = 0;\n    }\n  };\n\n  Solo.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    Solo._allSolos.get(this.context).delete(this);\n\n    this._removeSolo();\n\n    return this;\n  };\n  /**\n   * Hold all of the solo'ed tracks belonging to a specific context\n   */\n\n\n  Solo._allSolos = new Map();\n  /**\n   * Hold the currently solo'ed instance(s)\n   */\n\n  Solo._soloed = new Map();\n  return Solo;\n}(ToneAudioNode);\n\nexport { Solo };","import { __extends } from \"tslib\";\nimport { gainToDb } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\n\nvar Meter =\n/** @class */\nfunction (_super) {\n  __extends(Meter, _super);\n\n  function Meter() {\n    var _this = _super.call(this, optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"])) || this;\n\n    _this.name = \"Meter\";\n    /**\n     * The previous frame's value\n     */\n\n    _this._rms = 0;\n    var options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n    _this.input = _this.output = _this._analyser = new Analyser({\n      context: _this.context,\n      size: 256,\n      type: \"waveform\",\n      channels: options.channels\n    });\n    _this.smoothing = options.smoothing, _this.normalRange = options.normalRange;\n    return _this;\n  }\n\n  Meter.getDefaults = function () {\n    return Object.assign(MeterBase.getDefaults(), {\n      smoothing: 0.8,\n      normalRange: false,\n      channels: 1\n    });\n  };\n  /**\n   * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n   * @deprecated\n   */\n\n\n  Meter.prototype.getLevel = function () {\n    warn(\"'getLevel' has been changed to 'getValue'\");\n    return this.getValue();\n  };\n  /**\n   * Get the current value of the incoming signal.\n   * Output is in decibels when [[normalRange]] is `false`.\n   * If [[channels]] = 1, then the output is a single number\n   * representing the value of the input signal. When [[channels]] > 1,\n   * then each channel is returned as a value in a number array.\n   */\n\n\n  Meter.prototype.getValue = function () {\n    var _this = this;\n\n    var aValues = this._analyser.getValue();\n\n    var channelValues = this.channels === 1 ? [aValues] : aValues;\n    var vals = channelValues.map(function (values) {\n      var totalSquared = values.reduce(function (total, current) {\n        return total + current * current;\n      }, 0);\n      var rms = Math.sqrt(totalSquared / values.length); // the rms can only fall at the rate of the smoothing\n      // but can jump up instantly\n\n      _this._rms = Math.max(rms, _this._rms * _this.smoothing);\n      return _this.normalRange ? _this._rms : gainToDb(_this._rms);\n    });\n\n    if (this.channels === 1) {\n      return vals[0];\n    } else {\n      return vals;\n    }\n  };\n\n  Object.defineProperty(Meter.prototype, \"channels\", {\n    /**\n     * The number of channels of analysis.\n     */\n    get: function () {\n      return this._analyser.channels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Meter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analyser.dispose();\n\n    return this;\n  };\n\n  return Meter;\n}(MeterBase);\n\nexport { Meter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\n\nvar FFT =\n/** @class */\nfunction (_super) {\n  __extends(FFT, _super);\n\n  function FFT() {\n    var _this = _super.call(this, optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"])) || this;\n\n    _this.name = \"FFT\";\n    var options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n    _this.normalRange = options.normalRange;\n    _this._analyser.type = \"fft\";\n    _this.size = options.size;\n    return _this;\n  }\n\n  FFT.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      normalRange: false,\n      size: 1024,\n      smoothing: 0.8\n    });\n  };\n  /**\n   * Gets the current frequency data from the connected audio source.\n   * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n   */\n\n\n  FFT.prototype.getValue = function () {\n    var _this = this;\n\n    var values = this._analyser.getValue();\n\n    return values.map(function (v) {\n      return _this.normalRange ? dbToGain(v) : v;\n    });\n  };\n\n  Object.defineProperty(FFT.prototype, \"size\", {\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]] (i.e. the number of\n     * frequency bins). Large FFT sizes may be costly to compute.\n     */\n    get: function () {\n      return this._analyser.size;\n    },\n    set: function (size) {\n      this._analyser.size = size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FFT.prototype, \"smoothing\", {\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get: function () {\n      return this._analyser.smoothing;\n    },\n    set: function (val) {\n      this._analyser.smoothing = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FFT;\n}(MeterBase);\n\nexport { FFT };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\n\nvar DCMeter =\n/** @class */\nfunction (_super) {\n  __extends(DCMeter, _super);\n\n  function DCMeter() {\n    var _this = _super.call(this, optionsFromArguments(DCMeter.getDefaults(), arguments)) || this;\n\n    _this.name = \"DCMeter\";\n    _this._analyser.type = \"waveform\";\n    _this._analyser.size = 256;\n    return _this;\n  }\n  /**\n   * Get the signal value of the incoming signal\n   */\n\n\n  DCMeter.prototype.getValue = function () {\n    var value = this._analyser.getValue();\n\n    return value[0];\n  };\n\n  return DCMeter;\n}(MeterBase);\n\nexport { DCMeter };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\n\nvar Waveform =\n/** @class */\nfunction (_super) {\n  __extends(Waveform, _super);\n\n  function Waveform() {\n    var _this = _super.call(this, optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"])) || this;\n\n    _this.name = \"Waveform\";\n    var options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n    _this._analyser.type = \"waveform\";\n    _this.size = options.size;\n    return _this;\n  }\n\n  Waveform.getDefaults = function () {\n    return Object.assign(MeterBase.getDefaults(), {\n      size: 1024\n    });\n  };\n  /**\n   * Return the waveform for the current time as a Float32Array where each value in the array\n   * represents a sample in the waveform.\n   */\n\n\n  Waveform.prototype.getValue = function () {\n    return this._analyser.getValue();\n  };\n\n  Object.defineProperty(Waveform.prototype, \"size\", {\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]].\n     */\n    get: function () {\n      return this._analyser.size;\n    },\n    set: function (size) {\n      this._analyser.size = size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Waveform;\n}(MeterBase);\n\nexport { Waveform };","import { __extends } from \"tslib\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\n\nvar PanVol =\n/** @class */\nfunction (_super) {\n  __extends(PanVol, _super);\n\n  function PanVol() {\n    var _this = _super.call(this, optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"])) || this;\n\n    _this.name = \"PanVol\";\n    var options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    _this._panner = _this.input = new Panner({\n      context: _this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    _this.pan = _this._panner.pan;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume; // connections\n\n    _this._panner.connect(_this._volume);\n\n    _this.mute = options.mute;\n    readOnly(_this, [\"pan\", \"volume\"]);\n    return _this;\n  }\n\n  PanVol.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      pan: 0,\n      volume: 0,\n      channelCount: 1\n    });\n  };\n\n  Object.defineProperty(PanVol.prototype, \"mute\", {\n    /**\n     * Mute/unmute the volume\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PanVol.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.dispose();\n\n    this.pan.dispose();\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n    return this;\n  };\n\n  return PanVol;\n}(ToneAudioNode);\n\nexport { PanVol };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\n\nvar MultibandSplit =\n/** @class */\nfunction (_super) {\n  __extends(MultibandSplit, _super);\n\n  function MultibandSplit() {\n    var _this = _super.call(this, optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"])) || this;\n\n    _this.name = \"MultibandSplit\";\n    /**\n     * the input\n     */\n\n    _this.input = new Gain({\n      context: _this.context\n    });\n    /**\n     * no output node, use either low, mid or high outputs\n     */\n\n    _this.output = undefined;\n    /**\n     * The low band.\n     */\n\n    _this.low = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"lowpass\"\n    });\n    /**\n     * the lower filter of the mid band\n     */\n\n    _this._lowMidFilter = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"highpass\"\n    });\n    /**\n     * The mid band output.\n     */\n\n    _this.mid = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"lowpass\"\n    });\n    /**\n     * The high band output.\n     */\n\n    _this.high = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"highpass\"\n    });\n    _this._internalChannels = [_this.low, _this.mid, _this.high];\n    var options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n    _this.lowFrequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.lowFrequency\n    });\n    _this.highFrequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.highFrequency\n    });\n    _this.Q = new Signal({\n      context: _this.context,\n      units: \"positive\",\n      value: options.Q\n    });\n\n    _this.input.fan(_this.low, _this.high);\n\n    _this.input.chain(_this._lowMidFilter, _this.mid); // the frequency control signal\n\n\n    _this.lowFrequency.fan(_this.low.frequency, _this._lowMidFilter.frequency);\n\n    _this.highFrequency.fan(_this.mid.frequency, _this.high.frequency); // the Q value\n\n\n    _this.Q.connect(_this.low.Q);\n\n    _this.Q.connect(_this._lowMidFilter.Q);\n\n    _this.Q.connect(_this.mid.Q);\n\n    _this.Q.connect(_this.high.Q);\n\n    readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    return _this;\n  }\n\n  MultibandSplit.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      highFrequency: 2500,\n      lowFrequency: 400\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  MultibandSplit.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    writable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    this.low.dispose();\n\n    this._lowMidFilter.dispose();\n\n    this.mid.dispose();\n    this.high.dispose();\n    this.lowFrequency.dispose();\n    this.highFrequency.dispose();\n    this.Q.dispose();\n    return this;\n  };\n\n  return MultibandSplit;\n}(ToneAudioNode);\n\nexport { MultibandSplit };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\n\nvar Channel =\n/** @class */\nfunction (_super) {\n  __extends(Channel, _super);\n\n  function Channel() {\n    var _this = _super.call(this, optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"])) || this;\n\n    _this.name = \"Channel\";\n    var options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n    _this._solo = _this.input = new Solo({\n      solo: options.solo,\n      context: _this.context\n    });\n    _this._panVol = _this.output = new PanVol({\n      context: _this.context,\n      pan: options.pan,\n      volume: options.volume,\n      mute: options.mute\n    });\n    _this.pan = _this._panVol.pan;\n    _this.volume = _this._panVol.volume;\n\n    _this._solo.connect(_this._panVol);\n\n    readOnly(_this, [\"pan\", \"volume\"]);\n    return _this;\n  }\n\n  Channel.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      pan: 0,\n      volume: 0,\n      mute: false,\n      solo: false\n    });\n  };\n\n  Object.defineProperty(Channel.prototype, \"solo\", {\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get: function () {\n      return this._solo.solo;\n    },\n    set: function (solo) {\n      this._solo.solo = solo;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Channel.prototype, \"muted\", {\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get: function () {\n      return this._solo.muted || this.mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Channel.prototype, \"mute\", {\n    /**\n     * Mute/unmute the volume\n     */\n    get: function () {\n      return this._panVol.mute;\n    },\n    set: function (mute) {\n      this._panVol.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the gain node belonging to the bus name. Create it if\n   * it doesn't exist\n   * @param name The bus name\n   */\n\n  Channel.prototype._getBus = function (name) {\n    if (!Channel.buses.has(name)) {\n      Channel.buses.set(name, new Gain({\n        context: this.context\n      }));\n    }\n\n    return Channel.buses.get(name);\n  };\n  /**\n   * Send audio to another channel using a string. `send` is a lot like\n   * [[connect]], except it uses a string instead of an object. This can\n   * be useful in large applications to decouple sections since [[send]]\n   * and [[receive]] can be invoked separately in order to connect an object\n   * @param name The channel name to send the audio\n   * @param volume The amount of the signal to send.\n   * \tDefaults to 0db, i.e. send the entire signal\n   * @returns Returns the gain node of this connection.\n   */\n\n\n  Channel.prototype.send = function (name, volume) {\n    if (volume === void 0) {\n      volume = 0;\n    }\n\n    var bus = this._getBus(name);\n\n    var sendKnob = new Gain({\n      context: this.context,\n      units: \"decibels\",\n      gain: volume\n    });\n    this.connect(sendKnob);\n    sendKnob.connect(bus);\n    return sendKnob;\n  };\n  /**\n   * Receive audio from a channel which was connected with [[send]].\n   * @param name The channel name to receive audio from.\n   */\n\n\n  Channel.prototype.receive = function (name) {\n    var bus = this._getBus(name);\n\n    bus.connect(this);\n    return this;\n  };\n\n  Channel.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panVol.dispose();\n\n    this.pan.dispose();\n    this.volume.dispose();\n\n    this._solo.dispose();\n\n    return this;\n  };\n  /**\n   * Store the send/receive channels by name.\n   */\n\n\n  Channel.buses = new Map();\n  return Channel;\n}(ToneAudioNode);\n\nexport { Channel };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\n\nvar Listener =\n/** @class */\nfunction (_super) {\n  __extends(Listener, _super);\n\n  function Listener() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Listener\";\n    _this.positionX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionX\n    });\n    _this.positionY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionY\n    });\n    _this.positionZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionZ\n    });\n    _this.forwardX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardX\n    });\n    _this.forwardY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardY\n    });\n    _this.forwardZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardZ\n    });\n    _this.upX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upX\n    });\n    _this.upY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upY\n    });\n    _this.upZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upZ\n    });\n    return _this;\n  }\n\n  Listener.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      positionX: 0,\n      positionY: 0,\n      positionZ: 0,\n      forwardX: 0,\n      forwardY: 0,\n      forwardZ: -1,\n      upX: 0,\n      upY: 1,\n      upZ: 0\n    });\n  };\n\n  Listener.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.positionX.dispose();\n    this.positionY.dispose();\n    this.positionZ.dispose();\n    this.forwardX.dispose();\n    this.forwardY.dispose();\n    this.forwardZ.dispose();\n    this.upX.dispose();\n    this.upY.dispose();\n    this.upZ.dispose();\n    return this;\n  };\n\n  return Listener;\n}(ToneAudioNode);\n\nexport { Listener }; //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.listener = new Listener({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.listener.dispose();\n});","import { __extends } from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\n\nvar Panner3D =\n/** @class */\nfunction (_super) {\n  __extends(Panner3D, _super);\n\n  function Panner3D() {\n    var _this = _super.call(this, optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"])) || this;\n\n    _this.name = \"Panner3D\";\n    var options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n    _this._panner = _this.input = _this.output = _this.context.createPanner(); // set some values\n\n    _this.panningModel = options.panningModel;\n    _this.maxDistance = options.maxDistance;\n    _this.distanceModel = options.distanceModel;\n    _this.coneOuterGain = options.coneOuterGain;\n    _this.coneOuterAngle = options.coneOuterAngle;\n    _this.coneInnerAngle = options.coneInnerAngle;\n    _this.refDistance = options.refDistance;\n    _this.rolloffFactor = options.rolloffFactor;\n    _this.positionX = new Param({\n      context: _this.context,\n      param: _this._panner.positionX,\n      value: options.positionX\n    });\n    _this.positionY = new Param({\n      context: _this.context,\n      param: _this._panner.positionY,\n      value: options.positionY\n    });\n    _this.positionZ = new Param({\n      context: _this.context,\n      param: _this._panner.positionZ,\n      value: options.positionZ\n    });\n    _this.orientationX = new Param({\n      context: _this.context,\n      param: _this._panner.orientationX,\n      value: options.orientationX\n    });\n    _this.orientationY = new Param({\n      context: _this.context,\n      param: _this._panner.orientationY,\n      value: options.orientationY\n    });\n    _this.orientationZ = new Param({\n      context: _this.context,\n      param: _this._panner.orientationZ,\n      value: options.orientationZ\n    });\n    return _this;\n  }\n\n  Panner3D.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      coneInnerAngle: 360,\n      coneOuterAngle: 360,\n      coneOuterGain: 0,\n      distanceModel: \"inverse\",\n      maxDistance: 10000,\n      orientationX: 0,\n      orientationY: 0,\n      orientationZ: 0,\n      panningModel: \"equalpower\",\n      positionX: 0,\n      positionY: 0,\n      positionZ: 0,\n      refDistance: 1,\n      rolloffFactor: 1\n    });\n  };\n  /**\n   * Sets the position of the source in 3d space.\n   */\n\n\n  Panner3D.prototype.setPosition = function (x, y, z) {\n    this.positionX.value = x;\n    this.positionY.value = y;\n    this.positionZ.value = z;\n    return this;\n  };\n  /**\n   * Sets the orientation of the source in 3d space.\n   */\n\n\n  Panner3D.prototype.setOrientation = function (x, y, z) {\n    this.orientationX.value = x;\n    this.orientationY.value = y;\n    this.orientationZ.value = z;\n    return this;\n  };\n\n  Object.defineProperty(Panner3D.prototype, \"panningModel\", {\n    /**\n     * The panning model. Either \"equalpower\" or \"HRTF\".\n     */\n    get: function () {\n      return this._panner.panningModel;\n    },\n    set: function (val) {\n      this._panner.panningModel = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"refDistance\", {\n    /**\n     * A reference distance for reducing volume as source move further from the listener\n     */\n    get: function () {\n      return this._panner.refDistance;\n    },\n    set: function (val) {\n      this._panner.refDistance = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"rolloffFactor\", {\n    /**\n     * Describes how quickly the volume is reduced as source moves away from listener.\n     */\n    get: function () {\n      return this._panner.rolloffFactor;\n    },\n    set: function (val) {\n      this._panner.rolloffFactor = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"distanceModel\", {\n    /**\n     * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n     */\n    get: function () {\n      return this._panner.distanceModel;\n    },\n    set: function (val) {\n      this._panner.distanceModel = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"coneInnerAngle\", {\n    /**\n     * The angle, in degrees, inside of which there will be no volume reduction\n     */\n    get: function () {\n      return this._panner.coneInnerAngle;\n    },\n    set: function (val) {\n      this._panner.coneInnerAngle = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"coneOuterAngle\", {\n    /**\n     * The angle, in degrees, outside of which the volume will be reduced\n     * to a constant value of coneOuterGain\n     */\n    get: function () {\n      return this._panner.coneOuterAngle;\n    },\n    set: function (val) {\n      this._panner.coneOuterAngle = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"coneOuterGain\", {\n    /**\n     * The gain outside of the coneOuterAngle\n     */\n    get: function () {\n      return this._panner.coneOuterGain;\n    },\n    set: function (val) {\n      this._panner.coneOuterGain = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"maxDistance\", {\n    /**\n     * The maximum distance between source and listener,\n     * after which the volume will not be reduced any further.\n     */\n    get: function () {\n      return this._panner.maxDistance;\n    },\n    set: function (val) {\n      this._panner.maxDistance = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Panner3D.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.disconnect();\n\n    this.orientationX.dispose();\n    this.orientationY.dispose();\n    this.orientationZ.dispose();\n    this.positionX.dispose();\n    this.positionY.dispose();\n    this.positionZ.dispose();\n    return this;\n  };\n\n  return Panner3D;\n}(ToneAudioNode);\n\nexport { Panner3D };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert } from \"../../core/util/Debug\";\nimport { theWindow } from \"../../core/context/AudioContext\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * This is only natively supported in Chrome and Firefox.\n * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n * @example\n * const recorder = new Tone.Recorder();\n * const synth = new Tone.Synth().connect(recorder);\n * // start recording\n * recorder.start();\n * // generate a few notes\n * synth.triggerAttackRelease(\"C3\", 0.5);\n * synth.triggerAttackRelease(\"C4\", 0.5, \"+1\");\n * synth.triggerAttackRelease(\"C5\", 0.5, \"+2\");\n * // wait for the notes to end and stop the recording\n * setTimeout(async () => {\n * \t// the recorded audio is returned as a blob\n * \tconst recording = await recorder.stop();\n * \t// download the recording by creating an anchor element and blob url\n * \tconst url = URL.createObjectURL(recording);\n * \tconst anchor = document.createElement(\"a\");\n * \tanchor.download = \"recording.webm\";\n * \tanchor.href = url;\n * \tanchor.click();\n * }, 4000);\n */\n\nvar Recorder =\n/** @class */\nfunction (_super) {\n  __extends(Recorder, _super);\n\n  function Recorder() {\n    var _this = _super.call(this, optionsFromArguments(Recorder.getDefaults(), arguments, [\"gain\", \"units\"])) || this;\n\n    _this.name = \"Recorder\";\n    var options = optionsFromArguments(Recorder.getDefaults(), arguments, [\"gain\", \"units\"]);\n    _this.input = new Gain({\n      context: _this.context\n    });\n    assert(Recorder.supported, \"Media Recorder API is not available\");\n    _this._stream = _this.context.createMediaStreamDestination();\n\n    _this.input.connect(_this._stream);\n\n    _this._recorder = new MediaRecorder(_this._stream.stream, {\n      mimeType: options.mimeType\n    });\n    return _this;\n  }\n\n  Recorder.getDefaults = function () {\n    return ToneAudioNode.getDefaults();\n  };\n\n  Object.defineProperty(Recorder.prototype, \"mimeType\", {\n    /**\n     * The mime type is the format that the audio is encoded in. For Chrome\n     * that is typically webm encoded as \"vorbis\".\n     */\n    get: function () {\n      return this._recorder.mimeType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Recorder, \"supported\", {\n    /**\n     * Test if your platform supports the Media Recorder API. If it's not available,\n     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n     */\n    get: function () {\n      return theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Recorder.prototype, \"state\", {\n    /**\n     * Get the playback state of the Recorder, either \"started\", \"stopped\" or \"paused\"\n     */\n    get: function () {\n      if (this._recorder.state === \"inactive\") {\n        return \"stopped\";\n      } else if (this._recorder.state === \"paused\") {\n        return \"paused\";\n      } else {\n        return \"started\";\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Recorder.prototype.start = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var startPromise;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(this.state !== \"started\", \"Recorder is already started\");\n            startPromise = new Promise(function (done) {\n              var handleStart = function () {\n                _this._recorder.removeEventListener(\"start\", handleStart, false);\n\n                done();\n              };\n\n              _this._recorder.addEventListener(\"start\", handleStart, false);\n            });\n\n            this._recorder.start();\n\n            return [4\n            /*yield*/\n            , startPromise];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Recorder.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var dataPromise;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(this.state !== \"stopped\", \"Recorder is not started\");\n            dataPromise = new Promise(function (done) {\n              var handleData = function (e) {\n                _this._recorder.removeEventListener(\"dataavailable\", handleData, false);\n\n                done(e.data);\n              };\n\n              _this._recorder.addEventListener(\"dataavailable\", handleData, false);\n            });\n\n            this._recorder.stop();\n\n            return [4\n            /*yield*/\n            , dataPromise];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Recorder.prototype.pause = function () {\n    assert(this.state === \"started\", \"Recorder must be started\");\n\n    this._recorder.pause();\n\n    return this;\n  };\n\n  Recorder.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n\n    this._stream.disconnect();\n\n    return this;\n  };\n\n  return Recorder;\n}(ToneAudioNode);\n\nexport { Recorder };","import { __extends } from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\n\nvar Compressor =\n/** @class */\nfunction (_super) {\n  __extends(Compressor, _super);\n\n  function Compressor() {\n    var _this = _super.call(this, optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"])) || this;\n\n    _this.name = \"Compressor\";\n    /**\n     * the compressor node\n     */\n\n    _this._compressor = _this.context.createDynamicsCompressor();\n    _this.input = _this._compressor;\n    _this.output = _this._compressor;\n    var options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n    _this.threshold = new Param({\n      minValue: _this._compressor.threshold.minValue,\n      maxValue: _this._compressor.threshold.maxValue,\n      context: _this.context,\n      convert: false,\n      param: _this._compressor.threshold,\n      units: \"decibels\",\n      value: options.threshold\n    });\n    _this.attack = new Param({\n      minValue: _this._compressor.attack.minValue,\n      maxValue: _this._compressor.attack.maxValue,\n      context: _this.context,\n      param: _this._compressor.attack,\n      units: \"time\",\n      value: options.attack\n    });\n    _this.release = new Param({\n      minValue: _this._compressor.release.minValue,\n      maxValue: _this._compressor.release.maxValue,\n      context: _this.context,\n      param: _this._compressor.release,\n      units: \"time\",\n      value: options.release\n    });\n    _this.knee = new Param({\n      minValue: _this._compressor.knee.minValue,\n      maxValue: _this._compressor.knee.maxValue,\n      context: _this.context,\n      convert: false,\n      param: _this._compressor.knee,\n      units: \"decibels\",\n      value: options.knee\n    });\n    _this.ratio = new Param({\n      minValue: _this._compressor.ratio.minValue,\n      maxValue: _this._compressor.ratio.maxValue,\n      context: _this.context,\n      convert: false,\n      param: _this._compressor.ratio,\n      units: \"positive\",\n      value: options.ratio\n    }); // set the defaults\n\n    readOnly(_this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n    return _this;\n  }\n\n  Compressor.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      attack: 0.003,\n      knee: 30,\n      ratio: 12,\n      release: 0.25,\n      threshold: -24\n    });\n  };\n\n  Object.defineProperty(Compressor.prototype, \"reduction\", {\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n     */\n    get: function () {\n      return this._compressor.reduction;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Compressor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._compressor.disconnect();\n\n    this.attack.dispose();\n    this.release.dispose();\n    this.threshold.dispose();\n    this.ratio.dispose();\n    this.knee.dispose();\n    return this;\n  };\n\n  return Compressor;\n}(ToneAudioNode);\n\nexport { Compressor };","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\n\nexport var now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\n\nexport var immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\n\nexport var Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\n\nexport var Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\n\nexport var Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\n\nexport var Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\n\nexport var context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\n\nexport var loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer); // this fills in name changes from 13.x to 14.x\n\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport var Buffer = ToneAudioBuffer;\nexport var Buffers = ToneAudioBuffers;\nexport var BufferSource = ToneBufferSource;","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n */\n\nvar Gate =\n/** @class */\nfunction (_super) {\n  __extends(Gate, _super);\n\n  function Gate() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]))) || this;\n\n    _this.name = \"Gate\";\n    var options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n    _this._follower = new Follower({\n      context: _this.context,\n      smoothing: options.smoothing\n    });\n    _this._gt = new GreaterThan({\n      context: _this.context,\n      value: dbToGain(options.threshold)\n    });\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this._gate = _this.output = new Gain({\n      context: _this.context\n    }); // connections\n\n    _this.input.connect(_this._gate); // the control signal\n\n\n    _this.input.chain(_this._follower, _this._gt, _this._gate.gain);\n\n    return _this;\n  }\n\n  Gate.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.1,\n      threshold: -40\n    });\n  };\n\n  Object.defineProperty(Gate.prototype, \"threshold\", {\n    /**\n     * The threshold of the gate in decibels\n     */\n    get: function () {\n      return gainToDb(this._gt.value);\n    },\n    set: function (thresh) {\n      this._gt.value = dbToGain(thresh);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Gate.prototype, \"smoothing\", {\n    /**\n     * The attack/decay speed of the gate. See [[Follower.smoothing]]\n     */\n    get: function () {\n      return this._follower.smoothing;\n    },\n    set: function (smoothingTime) {\n      this._follower.smoothing = smoothingTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Gate.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n\n    this._follower.dispose();\n\n    this._gt.dispose();\n\n    this._gate.dispose();\n\n    return this;\n  };\n\n  return Gate;\n}(ToneAudioNode);\n\nexport { Gate };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { readOnly } from \"../../core/util/Interface\";\n;\n/**\n * Limiter will limit the loudness of an incoming signal.\n * It is composed of a [[Compressor]] with a fast attack\n * and release and max ratio. Limiters are commonly used to safeguard against\n * signal clipping. Unlike a compressor, limiters do not provide\n * smooth gain reduction and almost completely prevent\n * additional gain above the threshold.\n *\n * @example\n * const limiter = new Tone.Limiter(-20).toDestination();\n * const oscillator = new Tone.Oscillator().connect(limiter);\n * oscillator.start();\n */\n\nvar Limiter =\n/** @class */\nfunction (_super) {\n  __extends(Limiter, _super);\n\n  function Limiter() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]))) || this;\n\n    _this.name = \"Limiter\";\n    var options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n    _this._compressor = _this.input = _this.output = new Compressor({\n      context: _this.context,\n      ratio: 20,\n      attack: 0,\n      release: 0,\n      threshold: options.threshold\n    });\n    _this.threshold = _this._compressor.threshold;\n    readOnly(_this, \"threshold\");\n    return _this;\n  }\n\n  Limiter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      threshold: -12\n    });\n  };\n\n  Object.defineProperty(Limiter.prototype, \"reduction\", {\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal.\n     */\n    get: function () {\n      return this._compressor.reduction;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Limiter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._compressor.dispose();\n\n    this.threshold.dispose();\n    return this;\n  };\n\n  return Limiter;\n}(ToneAudioNode);\n\nexport { Limiter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n */\n\nvar MidSideCompressor =\n/** @class */\nfunction (_super) {\n  __extends(MidSideCompressor, _super);\n\n  function MidSideCompressor() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments))) || this;\n\n    _this.name = \"MidSideCompressor\";\n    var options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n    _this._midSideSplit = _this.input = new MidSideSplit({\n      context: _this.context\n    });\n    _this._midSideMerge = _this.output = new MidSideMerge({\n      context: _this.context\n    });\n    _this.mid = new Compressor(Object.assign(options.mid, {\n      context: _this.context\n    }));\n    _this.side = new Compressor(Object.assign(options.side, {\n      context: _this.context\n    }));\n\n    _this._midSideSplit.mid.chain(_this.mid, _this._midSideMerge.mid);\n\n    _this._midSideSplit.side.chain(_this.side, _this._midSideMerge.side);\n\n    readOnly(_this, [\"mid\", \"side\"]);\n    return _this;\n  }\n\n  MidSideCompressor.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      side: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      }\n    });\n  };\n\n  MidSideCompressor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._midSideSplit.dispose();\n\n    this._midSideMerge.dispose();\n\n    return this;\n  };\n\n  return MidSideCompressor;\n}(ToneAudioNode);\n\nexport { MidSideCompressor };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n */\n\nvar MultibandCompressor =\n/** @class */\nfunction (_super) {\n  __extends(MultibandCompressor, _super);\n\n  function MultibandCompressor() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments))) || this;\n\n    _this.name = \"MultibandCompressor\";\n    var options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n    _this._splitter = _this.input = new MultibandSplit({\n      context: _this.context,\n      lowFrequency: options.lowFrequency,\n      highFrequency: options.highFrequency\n    });\n    _this.lowFrequency = _this._splitter.lowFrequency;\n    _this.highFrequency = _this._splitter.highFrequency;\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this.low = new Compressor(Object.assign(options.low, {\n      context: _this.context\n    }));\n    _this.mid = new Compressor(Object.assign(options.mid, {\n      context: _this.context\n    }));\n    _this.high = new Compressor(Object.assign(options.high, {\n      context: _this.context\n    })); // connect the compressor\n\n    _this._splitter.low.chain(_this.low, _this.output);\n\n    _this._splitter.mid.chain(_this.mid, _this.output);\n\n    _this._splitter.high.chain(_this.high, _this.output);\n\n    readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    return _this;\n  }\n\n  MultibandCompressor.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      lowFrequency: 250,\n      highFrequency: 2000,\n      low: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      },\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      high: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      }\n    });\n  };\n\n  MultibandCompressor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._splitter.dispose();\n\n    this.low.dispose();\n    this.mid.dispose();\n    this.high.dispose();\n    this.output.dispose();\n    return this;\n  };\n\n  return MultibandCompressor;\n}(ToneAudioNode);\n\nexport { MultibandCompressor };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High.\n * @category Component\n */\n\nvar EQ3 =\n/** @class */\nfunction (_super) {\n  __extends(EQ3, _super);\n\n  function EQ3() {\n    var _this = _super.call(this, optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"])) || this;\n\n    _this.name = \"EQ3\";\n    /**\n     * the output\n     */\n\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this._internalChannels = [];\n    var options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n    _this.input = _this._multibandSplit = new MultibandSplit({\n      context: _this.context,\n      highFrequency: options.highFrequency,\n      lowFrequency: options.lowFrequency\n    });\n    _this._lowGain = new Gain({\n      context: _this.context,\n      gain: options.low,\n      units: \"decibels\"\n    });\n    _this._midGain = new Gain({\n      context: _this.context,\n      gain: options.mid,\n      units: \"decibels\"\n    });\n    _this._highGain = new Gain({\n      context: _this.context,\n      gain: options.high,\n      units: \"decibels\"\n    });\n    _this.low = _this._lowGain.gain;\n    _this.mid = _this._midGain.gain;\n    _this.high = _this._highGain.gain;\n    _this.Q = _this._multibandSplit.Q;\n    _this.lowFrequency = _this._multibandSplit.lowFrequency;\n    _this.highFrequency = _this._multibandSplit.highFrequency; // the frequency bands\n\n    _this._multibandSplit.low.chain(_this._lowGain, _this.output);\n\n    _this._multibandSplit.mid.chain(_this._midGain, _this.output);\n\n    _this._multibandSplit.high.chain(_this._highGain, _this.output);\n\n    readOnly(_this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n    _this._internalChannels = [_this._multibandSplit];\n    return _this;\n  }\n\n  EQ3.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      high: 0,\n      highFrequency: 2500,\n      low: 0,\n      lowFrequency: 400,\n      mid: 0\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  EQ3.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    writable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\n    this._multibandSplit.dispose();\n\n    this.lowFrequency.dispose();\n    this.highFrequency.dispose();\n\n    this._lowGain.dispose();\n\n    this._midGain.dispose();\n\n    this._highGain.dispose();\n\n    this.low.dispose();\n    this.mid.dispose();\n    this.high.dispose();\n    this.Q.dispose();\n    return this;\n  };\n\n  return EQ3;\n}(ToneAudioNode);\n\nexport { EQ3 };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * // initializing the convolver with an impulse response\n * const convolver = new Tone.Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\n\nvar Convolver =\n/** @class */\nfunction (_super) {\n  __extends(Convolver, _super);\n\n  function Convolver() {\n    var _this = _super.call(this, optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"Convolver\";\n    /**\n     * The native ConvolverNode\n     */\n\n    _this._convolver = _this.context.createConvolver();\n    var options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n    _this._buffer = new ToneAudioBuffer(options.url, function (buffer) {\n      _this.buffer = buffer;\n      options.onload();\n    });\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    }); // set if it's already loaded, set it immediately\n\n    if (_this._buffer.loaded) {\n      _this.buffer = _this._buffer;\n    } // initially set normalization\n\n\n    _this.normalize = options.normalize; // connect it up\n\n    _this.input.chain(_this._convolver, _this.output);\n\n    return _this;\n  }\n\n  Convolver.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      normalize: true,\n      onload: noOp\n    });\n  };\n  /**\n   * Load an impulse response url as an audio buffer.\n   * Decodes the audio asynchronously and invokes\n   * the callback once the audio buffer loads.\n   * @param url The url of the buffer to load. filetype support depends on the browser.\n   */\n\n\n  Convolver.prototype.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , this._buffer.load(url)];\n\n          case 1:\n            _a.buffer = _b.sent();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Convolver.prototype, \"buffer\", {\n    /**\n     * The convolver's buffer\n     */\n    get: function () {\n      if (this._buffer.length) {\n        return this._buffer;\n      } else {\n        return null;\n      }\n    },\n    set: function (buffer) {\n      if (buffer) {\n        this._buffer.set(buffer);\n      } // if it's already got a buffer, create a new one\n\n\n      if (this._convolver.buffer) {\n        // disconnect the old one\n        this.input.disconnect();\n\n        this._convolver.disconnect(); // create and connect a new one\n\n\n        this._convolver = this.context.createConvolver();\n        this.input.chain(this._convolver, this.output);\n      }\n\n      var buff = this._buffer.get();\n\n      this._convolver.buffer = buff ? buff : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Convolver.prototype, \"normalize\", {\n    /**\n     * The normalize property of the ConvolverNode interface is a boolean that\n     * controls whether the impulse response from the buffer will be scaled by\n     * an equal-power normalization when the buffer attribute is set, or not.\n     */\n    get: function () {\n      return this._convolver.normalize;\n    },\n    set: function (norm) {\n      this._convolver.normalize = norm;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Convolver.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffer.dispose();\n\n    this._convolver.disconnect();\n\n    return this;\n  };\n\n  return Convolver;\n}(ToneAudioNode);\n\nexport { Convolver };","import * as Tone from 'tone';\nimport \"regenerator-runtime/runtime.js\";\n\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n        \n    document.documentElement.addEventListener('mousedown', () => {\n        if (Tone.context.state !== 'running') Tone.context.resume();\n    });\n\n    const synths = [\n        new Tone.Synth(),\n        new Tone.Synth(),\n        new Tone.Synth(),\n        new Tone.Synth(),\n        new Tone.Synth(),\n        new Tone.Synth(),\n        new Tone.Synth(),\n        new Tone.Synth()\n    ];\n            \n    // synths[0].oscillator.type = 'triangle';\n    // synths[1].oscillator.type = 'sine';\n    // synths[2].oscillator.type = 'sawtooth';\n    // synths[3].oscillator.type = 'sawtooth';\n    // synths[4].oscillator.type = 'sawtooth';\n    // synths[5].oscillator.type = 'sawtooth';\n    // synths[6].oscillator.type = 'sawtooth';\n    // synths[7].oscillator.type = 'sawtooth';\n\n    synths.forEach(synth => synth.toMaster());\n\n    // const rows = Array.from(document.getElementsByClassName('pad-row'));\n    \n    const rows = document.body.querySelectorAll('.pad-row')\n    const notes = ['C4', 'D4', 'E4', 'F4', 'G4', 'A4', 'B4', 'C5']\n    let index = 0;\n\n    // Tone.Transport.bpm.value = 240;\n    Tone.Transport.scheduleRepeat(repeat, '8n')\n    Tone.Transport.start();\n    \n    function repeat(time) {\n        let step = index % 8\n        for (let i = 0; i < rows.length; i++) {\n            let synth = synths[i],\n                note = notes[i],\n                row = rows[i],\n                input = row.querySelector(`label:nth-child(${step + 1})`),\n                checkbox = input.querySelector('input');\n            // debugger\n            \n            if (checkbox.checked) synth.triggerAttackRelease(note, '8n', time);\n        }\n\n        index++;\n    }\n\n})\n"],"sourceRoot":""}